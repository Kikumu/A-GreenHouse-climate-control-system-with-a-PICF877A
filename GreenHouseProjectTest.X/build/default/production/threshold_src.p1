Version 4.0 HI-TECH Software Intermediate Code
"14 ./LCD_driver.h
[; ;./LCD_driver.h: 14: void write_char(char x);
[v _write_char `(v ~T0 @X0 0 ef1`uc ]
"2704 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2704: extern volatile __bit RC0 __attribute__((address(0x38)));
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"2707
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2707: extern volatile __bit RC1 __attribute__((address(0x39)));
[v _RC1 `Vb ~T0 @X0 0 e@57 ]
"2710
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2710: extern volatile __bit RC2 __attribute__((address(0x3A)));
[v _RC2 `Vb ~T0 @X0 0 e@58 ]
"2713
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2713: extern volatile __bit RC3 __attribute__((address(0x3B)));
[v _RC3 `Vb ~T0 @X0 0 e@59 ]
"2716
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2716: extern volatile __bit RC4 __attribute__((address(0x3C)));
[v _RC4 `Vb ~T0 @X0 0 e@60 ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"13 ./Thermometer_driver.h
[; ;./Thermometer_driver.h: 13: unsigned char TLV=0 ;
[v _TLV `uc ~T0 @X0 1 e ]
[i _TLV
-> -> 0 `i `uc
]
"14
[; ;./Thermometer_driver.h: 14: unsigned char THV=0;
[v _THV `uc ~T0 @X0 1 e ]
[i _THV
-> -> 0 `i `uc
]
"15
[; ;./Thermometer_driver.h: 15: unsigned char TZ=0;
[v _TZ `uc ~T0 @X0 1 e ]
[i _TZ
-> -> 0 `i `uc
]
"16
[; ;./Thermometer_driver.h: 16: unsigned char TX=0;
[v _TX `uc ~T0 @X0 1 e ]
[i _TX
-> -> 0 `i `uc
]
"17
[; ;./Thermometer_driver.h: 17: unsigned int wd;
[v _wd `ui ~T0 @X0 1 e ]
"19
[; ;./Thermometer_driver.h: 19: unsigned char shi;
[v _shi `uc ~T0 @X0 1 e ]
"20
[; ;./Thermometer_driver.h: 20: unsigned char ge;
[v _ge `uc ~T0 @X0 1 e ]
"21
[; ;./Thermometer_driver.h: 21: unsigned char shifen;
[v _shifen `uc ~T0 @X0 1 e ]
"22
[; ;./Thermometer_driver.h: 22: unsigned char baifen;
[v _baifen `uc ~T0 @X0 1 e ]
"23
[; ;./Thermometer_driver.h: 23: unsigned char qianfen;
[v _qianfen `uc ~T0 @X0 1 e ]
"24
[; ;./Thermometer_driver.h: 24: unsigned char wanfen;
[v _wanfen `uc ~T0 @X0 1 e ]
"7 ./Threshold_driver.h
[; ;./Threshold_driver.h: 7: unsigned int heat_counter;
[v _heat_counter `ui ~T0 @X0 1 e ]
"8
[; ;./Threshold_driver.h: 8: unsigned int cold_counter;
[v _cold_counter `ui ~T0 @X0 1 e ]
"9
[; ;./Threshold_driver.h: 9: unsigned char upper_t;
[v _upper_t `uc ~T0 @X0 1 e ]
"10
[; ;./Threshold_driver.h: 10: unsigned char lower_t;
[v _lower_t `uc ~T0 @X0 1 e ]
"11
[; ;./Threshold_driver.h: 11: char buzzer_watcher;
[v _buzzer_watcher `uc ~T0 @X0 1 e ]
"12
[; ;./Threshold_driver.h: 12: char buzzer_watcher1;
[v _buzzer_watcher1 `uc ~T0 @X0 1 e ]
"13
[; ;./Threshold_driver.h: 13: int count;
[v _count `i ~T0 @X0 1 e ]
"14
[; ;./Threshold_driver.h: 14: unsigned char heater_state;
[v _heater_state `uc ~T0 @X0 1 e ]
"15
[; ;./Threshold_driver.h: 15: unsigned char cooler_state;
[v _cooler_state `uc ~T0 @X0 1 e ]
"4 threshold_src.c
[; ;threshold_src.c: 4: char set_upper_threshold(int upper_val,int lower_val){
[v _set_upper_threshold `(uc ~T0 @X0 1 ef2`i`i ]
{
[e :U _set_upper_threshold ]
[v _upper_val `i ~T0 @X0 1 r1 ]
[v _lower_val `i ~T0 @X0 1 r2 ]
[f ]
"5
[; ;threshold_src.c: 5:     if(shi >= upper_val && ge >= lower_val ){
[e $ ! && >= -> _shi `i _upper_val >= -> _ge `i _lower_val 96  ]
{
"6
[; ;threshold_src.c: 6:     heat_counter ++;
[e ++ _heat_counter -> -> 1 `i `ui ]
"7
[; ;threshold_src.c: 7:     heater_state = '0';
[e = _heater_state -> -> 48 `ui `uc ]
"8
[; ;threshold_src.c: 8:     cooler_state = '1';
[e = _cooler_state -> -> 49 `ui `uc ]
"9
[; ;threshold_src.c: 9:     write_char('W');
[e ( _write_char (1 -> -> 87 `ui `uc ]
"10
[; ;threshold_src.c: 10:     write_char('A');
[e ( _write_char (1 -> -> 65 `ui `uc ]
"11
[; ;threshold_src.c: 11:     write_char('R');
[e ( _write_char (1 -> -> 82 `ui `uc ]
"12
[; ;threshold_src.c: 12:     write_char('M');
[e ( _write_char (1 -> -> 77 `ui `uc ]
"13
[; ;threshold_src.c: 13:     if(heat_counter > 10000){
[e $ ! > _heat_counter -> -> 10000 `i `ui 97  ]
{
"14
[; ;threshold_src.c: 14:         cooler_state = '-';
[e = _cooler_state -> -> 45 `ui `uc ]
"17
[; ;threshold_src.c: 17:     }
}
[e :U 97 ]
"18
[; ;threshold_src.c: 18:     }
}
[e :U 96 ]
"19
[; ;threshold_src.c: 19:     return buzzer_watcher;
[e ) _buzzer_watcher ]
[e $UE 95  ]
"20
[; ;threshold_src.c: 20: }
[e :UE 95 ]
}
"22
[; ;threshold_src.c: 22: char cold_threshold(int upper_val,int lower_val){
[v _cold_threshold `(uc ~T0 @X0 1 ef2`i`i ]
{
[e :U _cold_threshold ]
[v _upper_val `i ~T0 @X0 1 r1 ]
[v _lower_val `i ~T0 @X0 1 r2 ]
[f ]
"23
[; ;threshold_src.c: 23:      if(shi <= upper_val && (ge <= lower_val || ge >= lower_val)){
[e $ ! && <= -> _shi `i _upper_val || <= -> _ge `i _lower_val >= -> _ge `i _lower_val 99  ]
{
"24
[; ;threshold_src.c: 24:     cold_counter ++;
[e ++ _cold_counter -> -> 1 `i `ui ]
"25
[; ;threshold_src.c: 25:     heater_state = '1';
[e = _heater_state -> -> 49 `ui `uc ]
"26
[; ;threshold_src.c: 26:     cooler_state = '0';
[e = _cooler_state -> -> 48 `ui `uc ]
"27
[; ;threshold_src.c: 27:     write_char('C');
[e ( _write_char (1 -> -> 67 `ui `uc ]
"28
[; ;threshold_src.c: 28:     write_char('O');
[e ( _write_char (1 -> -> 79 `ui `uc ]
"29
[; ;threshold_src.c: 29:     write_char('L');
[e ( _write_char (1 -> -> 76 `ui `uc ]
"30
[; ;threshold_src.c: 30:     write_char('D');
[e ( _write_char (1 -> -> 68 `ui `uc ]
"31
[; ;threshold_src.c: 31:     if(cold_counter > 100000){
[e $ ! > -> _cold_counter `l -> 100000 `l 100  ]
{
"32
[; ;threshold_src.c: 32:         heater_state = '-';
[e = _heater_state -> -> 45 `ui `uc ]
"35
[; ;threshold_src.c: 35:     }
}
[e :U 100 ]
"36
[; ;threshold_src.c: 36:     }
}
[e :U 99 ]
"37
[; ;threshold_src.c: 37:     return buzzer_watcher;
[e ) _buzzer_watcher ]
[e $UE 98  ]
"38
[; ;threshold_src.c: 38: }
[e :UE 98 ]
}
"41
[; ;threshold_src.c: 41: char set_lower_threshold(int upper_val,int lower_val){
[v _set_lower_threshold `(uc ~T0 @X0 1 ef2`i`i ]
{
[e :U _set_lower_threshold ]
[v _upper_val `i ~T0 @X0 1 r1 ]
[v _lower_val `i ~T0 @X0 1 r2 ]
[f ]
"42
[; ;threshold_src.c: 42:     if((shi <= upper_val && ge <= lower_val))
[e $ ! && <= -> _shi `i _upper_val <= -> _ge `i _lower_val 102  ]
"43
[; ;threshold_src.c: 43:     {
{
"44
[; ;threshold_src.c: 44:     count = 2;
[e = _count -> 2 `i ]
"45
[; ;threshold_src.c: 45:     buzzer_watcher = 'x';
[e = _buzzer_watcher -> -> 120 `ui `uc ]
"46
[; ;threshold_src.c: 46:     heater_state = '0';
[e = _heater_state -> -> 48 `ui `uc ]
"47
[; ;threshold_src.c: 47:     cooler_state = '0';
[e = _cooler_state -> -> 48 `ui `uc ]
"48
[; ;threshold_src.c: 48:     write_char('O');
[e ( _write_char (1 -> -> 79 `ui `uc ]
"49
[; ;threshold_src.c: 49:     write_char('K');
[e ( _write_char (1 -> -> 75 `ui `uc ]
"50
[; ;threshold_src.c: 50:     write_char(' ');
[e ( _write_char (1 -> -> 32 `ui `uc ]
"51
[; ;threshold_src.c: 51:     write_char(' ');
[e ( _write_char (1 -> -> 32 `ui `uc ]
"52
[; ;threshold_src.c: 52:     }
}
[e :U 102 ]
"53
[; ;threshold_src.c: 53:     return buzzer_watcher;
[e ) _buzzer_watcher ]
[e $UE 101  ]
"54
[; ;threshold_src.c: 54: }
[e :UE 101 ]
}
"56
[; ;threshold_src.c: 56: char reset_alarm(){
[v _reset_alarm `(uc ~T0 @X0 1 ef ]
{
[e :U _reset_alarm ]
[f ]
"57
[; ;threshold_src.c: 57:     RC0 = 1;
[e = _RC0 -> -> 1 `i `b ]
"58
[; ;threshold_src.c: 58:     RC1 = 1;
[e = _RC1 -> -> 1 `i `b ]
"59
[; ;threshold_src.c: 59:     RC2 = 1;
[e = _RC2 -> -> 1 `i `b ]
"60
[; ;threshold_src.c: 60:     RC3 = 0;
[e = _RC3 -> -> 0 `i `b ]
"61
[; ;threshold_src.c: 61:     if(RC4 == 0){
[e $ ! == -> _RC4 `i -> 0 `i 104  ]
{
"62
[; ;threshold_src.c: 62:         count = 0;
[e = _count -> 0 `i ]
"63
[; ;threshold_src.c: 63:         buzzer_watcher = 'x';
[e = _buzzer_watcher -> -> 120 `ui `uc ]
"64
[; ;threshold_src.c: 64:         heat_counter = 0;
[e = _heat_counter -> -> 0 `i `ui ]
"65
[; ;threshold_src.c: 65:         write_char('R');
[e ( _write_char (1 -> -> 82 `ui `uc ]
"66
[; ;threshold_src.c: 66:         write_char('E');
[e ( _write_char (1 -> -> 69 `ui `uc ]
"67
[; ;threshold_src.c: 67:         write_char('S');
[e ( _write_char (1 -> -> 83 `ui `uc ]
"68
[; ;threshold_src.c: 68:         write_char('E');
[e ( _write_char (1 -> -> 69 `ui `uc ]
"69
[; ;threshold_src.c: 69:         write_char('T');
[e ( _write_char (1 -> -> 84 `ui `uc ]
"70
[; ;threshold_src.c: 70:     }
}
[e :U 104 ]
"71
[; ;threshold_src.c: 71:     return buzzer_watcher;
[e ) _buzzer_watcher ]
[e $UE 103  ]
"72
[; ;threshold_src.c: 72: }
[e :UE 103 ]
}
