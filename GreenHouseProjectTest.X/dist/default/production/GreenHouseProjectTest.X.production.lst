

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 02 13:04:03 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0088                     	;# 
   484  0089                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0094                     	;# 
   492  0098                     	;# 
   493  0099                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010D                     	;# 
   500  010E                     	;# 
   501  010F                     	;# 
   502  018C                     	;# 
   503  018D                     	;# 
   504                           
   505                           	psect	idataBANK0
   506  1693                     __pidataBANK0:	
   507                           
   508                           ;initializer for _table
   509  1693  3400               	retlw	0
   510  1694  3400               	retlw	0
   511  1695  3440               	retlw	64
   512  1696  3424               	retlw	36
   513  1697  3411               	retlw	17
   514  1698  3406               	retlw	6
   515  1699  3422               	retlw	34
   516  169A  3400               	retlw	0
   517  0009                     _PORTE	set	9
   518  0008                     _PORTD	set	8
   519  003E                     _RC6	set	62
   520  003F                     _RC7	set	63
   521  003C                     _RC4	set	60
   522  003B                     _RC3	set	59
   523  003A                     _RC2	set	58
   524  0039                     _RC1	set	57
   525  0038                     _RC0	set	56
   526  0049                     _RE1	set	73
   527  0034                     _RB4	set	52
   528  0031                     _RB1	set	49
   529  0035                     _RB5	set	53
   530  0030                     _RB0	set	48
   531  0048                     _RE0	set	72
   532  002B                     _RA3	set	43
   533  002C                     _RA4	set	44
   534  002D                     _RA5	set	45
   535  002A                     _RA2	set	42
   536  0028                     _RA0	set	40
   537  0087                     _TRISC	set	135
   538  0085                     _TRISA	set	133
   539  0089                     _TRISE	set	137
   540  0081                     _OPTION_REG	set	129
   541  0088                     _TRISD	set	136
   542  009F                     _ADCON1	set	159
   543  0086                     _TRISB	set	134
   544  0434                     _TRISB4	set	1076
   545  0448                     _TRISE0	set	1096
   546  0428                     _TRISA0	set	1064
   547                           
   548                           ; #config settings
   549  0000                     
   550                           	psect	cinit
   551  07E6                     start_initialization:	
   552  07E6                     __initialization:	
   553                           
   554                           ; Initialize objects allocated to BANK0
   555  07E6  1383               	bcf	3,7	;select IRP bank0
   556  07E7  305D               	movlw	low (__pdataBANK0+8)
   557  07E8  00FD               	movwf	btemp+-1
   558  07E9  3016               	movlw	high __pidataBANK0
   559  07EA  00FE               	movwf	btemp
   560  07EB  3093               	movlw	low __pidataBANK0
   561  07EC  00FF               	movwf	btemp+1
   562  07ED  3055               	movlw	low __pdataBANK0
   563  07EE  0084               	movwf	4
   564  07EF  160A  118A  26EC  120A  118A  	fcall	init_ram0
   565                           
   566                           ; Clear objects allocated to BANK0
   567  07F4  3020               	movlw	low __pbssBANK0
   568  07F5  0084               	movwf	4
   569  07F6  304B               	movlw	low (__pbssBANK0+43)
   570  07F7  160A  118A  268B  120A  118A  	fcall	clear_ram0
   571  07FC                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574  07FC                     __end_of__initialization:	
   575  07FC  0183               	clrf	3
   576  07FD  120A  118A  2820   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssBANK0
   579  0020                     __pbssBANK0:	
   580  0020                     _table1:	
   581  0020                     	ds	7
   582  0027                     _day_of_week_var:	
   583  0027                     	ds	2
   584  0029                     _day_high:	
   585  0029                     	ds	2
   586  002B                     _day_low:	
   587  002B                     	ds	2
   588  002D                     _z:	
   589  002D                     	ds	2
   590  002F                     _y:	
   591  002F                     	ds	2
   592  0031                     _x:	
   593  0031                     	ds	2
   594  0033                     _w:	
   595  0033                     	ds	2
   596  0035                     _t:	
   597  0035                     	ds	2
   598  0037                     _wd:	
   599  0037                     	ds	2
   600  0039                     read_byte@j:	
   601  0039                     	ds	1
   602  003A                     _var2:	
   603  003A                     	ds	1
   604  003B                     _var1:	
   605  003B                     	ds	1
   606  003C                     _hrs_limiter:	
   607  003C                     	ds	1
   608  003D                     _day_hex:	
   609  003D                     	ds	1
   610  003E                     _c:	
   611  003E                     	ds	1
   612  003F                     _b:	
   613  003F                     	ds	1
   614  0040                     _a:	
   615  0040                     	ds	1
   616  0041                     _wanfen:	
   617  0041                     	ds	1
   618  0042                     _qianfen:	
   619  0042                     	ds	1
   620  0043                     _baifen:	
   621  0043                     	ds	1
   622  0044                     _shifen:	
   623  0044                     	ds	1
   624  0045                     _ge:	
   625  0045                     	ds	1
   626  0046                     _shi:	
   627  0046                     	ds	1
   628  0047                     _TX:	
   629  0047                     	ds	1
   630  0048                     _TZ:	
   631  0048                     	ds	1
   632  0049                     _THV:	
   633  0049                     	ds	1
   634  004A                     _TLV:	
   635  004A                     	ds	1
   636                           
   637                           	psect	dataBANK0
   638  0055                     __pdataBANK0:	
   639  0055                     _table:	
   640  0055                     	ds	8
   641                           
   642                           	psect	inittext
   643  16E8                     init_fetch0:	
   644                           ;	Called with low address in FSR and high address in W
   645                           
   646  16E8  087E               	movf	btemp,w
   647  16E9  008A               	movwf	10
   648  16EA  087F               	movf	btemp+1,w
   649  16EB  0082               	movwf	2
   650  16EC                     init_ram0:	
   651                           ;Called with:
   652                           ;	high address of idata address in btemp 
   653                           ;	low address of idata address in btemp+1 
   654                           ;	low address of data in FSR
   655                           ;	high address + 1 of data in btemp-1
   656                           
   657  16EC  160A  118A  26E8  160A  118A  	fcall	init_fetch0
   658  16F1  0080               	movwf	0
   659  16F2  0A84               	incf	4,f
   660  16F3  0804               	movf	4,w
   661  16F4  067D               	xorwf	btemp+-1,w
   662  16F5  1903               	btfsc	3,2
   663  16F6  3400               	retlw	0
   664  16F7  0AFF               	incf	btemp+1,f
   665  16F8  1903               	btfsc	3,2
   666  16F9  0AFE               	incf	btemp,f
   667  16FA  2EEC               	goto	init_ram0
   668                           
   669                           	psect	clrtext
   670  168B                     clear_ram0:	
   671                           ;	Called with FSR containing the base address, and
   672                           ;	W with the last address+1
   673                           
   674  168B  0064               	clrwdt	;clear the watchdog before getting into this loop
   675  168C                     clrloop0:	
   676  168C  0180               	clrf	0	;clear RAM location pointed to by FSR
   677  168D  0A84               	incf	4,f	;increment pointer
   678  168E  0604               	xorwf	4,w	;XOR with final address
   679  168F  1903               	btfsc	3,2	;have we reached the end yet?
   680  1690  3400               	retlw	0	;all done for this memory range, return
   681  1691  0604               	xorwf	4,w	;XOR again to restore value
   682  1692  2E8C               	goto	clrloop0	;do the next byte
   683                           
   684                           	psect	cstackCOMMON
   685  0070                     __pcstackCOMMON:	
   686  0070                     ?_init_temp:	
   687  0070                     ??_init_temp:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_set_time:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_ds1302_init:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_init:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_init:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_lcd_init:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_initialise_buttons:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ??_initialise_buttons:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_get_temp:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_get_time:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_write_cmd:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_write_char:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_display_temp:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_display_date:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_display_clock:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_thermometer_threshhold_settings:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_date_settings:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_time_settings:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_delay_screen:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ??_delay_screen:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_delay_temp:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_delay2:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ??_delay2:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_time_write_1:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ??_time_write_1:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_time_read_1:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ??_time_read_1:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_button_delay:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ??_button_delay:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_time_date_hex_terminator:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_time_date_delimiter:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_main:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_reset_temp:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_write_byte:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_read_byte:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_set_beep_threshhold:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?___awdiv:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?___awmod:	
   799                           ; 2 bytes @ 0x0
   800                           
   801  0070                     ?___lwmod:	
   802                           ; 2 bytes @ 0x0
   803                           
   804  0070                     delay_temp@y:	
   805                           ; 2 bytes @ 0x0
   806                           
   807  0070                     set_beep_threshhold@y:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     time_date_delimiter@hex:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     time_date_hex_terminator@limiter:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     delay_screen@i:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     delay2@i:	
   820                           ; 2 bytes @ 0x0
   821                           
   822  0070                     button_delay@i:	
   823                           ; 2 bytes @ 0x0
   824                           
   825  0070                     ___awdiv@divisor:	
   826                           ; 2 bytes @ 0x0
   827                           
   828  0070                     ___awmod@divisor:	
   829                           ; 2 bytes @ 0x0
   830                           
   831  0070                     ___lwmod@divisor:	
   832                           ; 2 bytes @ 0x0
   833                           
   834                           
   835                           ; 2 bytes @ 0x0
   836  0070                     	ds	1
   837  0071                     ??_delay_temp:	
   838  0071                     ??_time_date_hex_terminator:	
   839                           ; 1 bytes @ 0x1
   840                           
   841  0071                     ??_set_beep_threshhold:	
   842                           ; 1 bytes @ 0x1
   843                           
   844  0071                     time_date_delimiter@limiter:	
   845                           ; 1 bytes @ 0x1
   846                           
   847                           
   848                           ; 1 bytes @ 0x1
   849  0071                     	ds	1
   850  0072                     ??_write_cmd:	
   851  0072                     ??_write_char:	
   852                           ; 1 bytes @ 0x2
   853                           
   854  0072                     ??_time_date_delimiter:	
   855                           ; 1 bytes @ 0x2
   856                           
   857  0072                     write_char@x:	
   858                           ; 1 bytes @ 0x2
   859                           
   860  0072                     write_cmd@x:	
   861                           ; 1 bytes @ 0x2
   862                           
   863  0072                     delay_temp@x:	
   864                           ; 1 bytes @ 0x2
   865                           
   866  0072                     time_write_1@j:	
   867                           ; 1 bytes @ 0x2
   868                           
   869  0072                     time_read_1@j:	
   870                           ; 2 bytes @ 0x2
   871                           
   872  0072                     ___awdiv@dividend:	
   873                           ; 2 bytes @ 0x2
   874                           
   875  0072                     ___awmod@dividend:	
   876                           ; 2 bytes @ 0x2
   877                           
   878  0072                     ___lwmod@dividend:	
   879                           ; 2 bytes @ 0x2
   880                           
   881                           
   882                           ; 2 bytes @ 0x2
   883  0072                     	ds	1
   884  0073                     ??_lcd_init:	
   885  0073                     ??_display_temp:	
   886                           ; 1 bytes @ 0x3
   887                           
   888  0073                     ??_display_date:	
   889                           ; 1 bytes @ 0x3
   890                           
   891  0073                     ??_display_clock:	
   892                           ; 1 bytes @ 0x3
   893                           
   894  0073                     delay_temp@z:	
   895                           ; 1 bytes @ 0x3
   896                           
   897  0073                     set_beep_threshhold@x:	
   898                           ; 1 bytes @ 0x3
   899                           
   900  0073                     time_date_hex_terminator@val:	
   901                           ; 1 bytes @ 0x3
   902                           
   903                           
   904                           ; 1 bytes @ 0x3
   905  0073                     	ds	1
   906  0074                     ??_reset_temp:	
   907  0074                     ??_write_byte:	
   908                           ; 1 bytes @ 0x4
   909                           
   910  0074                     ??_read_byte:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0074                     ??___awdiv:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0074                     ??___awmod:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0074                     ??___lwmod:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0074                     time_write_1@time_tx:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     time_read_1@time_rx:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     time_date_delimiter@val:	
   929                           ; 1 bytes @ 0x4
   930                           
   931                           
   932                           ; 1 bytes @ 0x4
   933  0074                     	ds	1
   934  0075                     ??_set_time:	
   935  0075                     ??_ds1302_init:	
   936                           ; 1 bytes @ 0x5
   937                           
   938  0075                     ??_get_time:	
   939                           ; 1 bytes @ 0x5
   940                           
   941  0075                     reset_temp@presence:	
   942                           ; 1 bytes @ 0x5
   943                           
   944  0075                     read_byte@value:	
   945                           ; 1 bytes @ 0x5
   946                           
   947  0075                     ___awdiv@counter:	
   948                           ; 1 bytes @ 0x5
   949                           
   950  0075                     ___awmod@counter:	
   951                           ; 1 bytes @ 0x5
   952                           
   953  0075                     ___lwmod@counter:	
   954                           ; 1 bytes @ 0x5
   955                           
   956  0075                     set_time@i:	
   957                           ; 1 bytes @ 0x5
   958                           
   959  0075                     display_clock@i:	
   960                           ; 2 bytes @ 0x5
   961                           
   962  0075                     display_date@i:	
   963                           ; 2 bytes @ 0x5
   964                           
   965                           
   966                           ; 2 bytes @ 0x5
   967  0075                     	ds	1
   968  0076                     ?___lwdiv:	
   969  0076                     write_byte@temp:	
   970                           ; 2 bytes @ 0x6
   971                           
   972  0076                     read_byte@i:	
   973                           ; 1 bytes @ 0x6
   974                           
   975  0076                     ___awdiv@sign:	
   976                           ; 1 bytes @ 0x6
   977                           
   978  0076                     ___awmod@sign:	
   979                           ; 1 bytes @ 0x6
   980                           
   981  0076                     get_time@i:	
   982                           ; 1 bytes @ 0x6
   983                           
   984  0076                     ___lwdiv@divisor:	
   985                           ; 2 bytes @ 0x6
   986                           
   987                           
   988                           ; 2 bytes @ 0x6
   989  0076                     	ds	1
   990  0077                     ?_modulus_func:	
   991  0077                     write_byte@val:	
   992                           ; 2 bytes @ 0x7
   993                           
   994  0077                     modulus_func@x:	
   995                           ; 1 bytes @ 0x7
   996                           
   997  0077                     ___awdiv@quotient:	
   998                           ; 2 bytes @ 0x7
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x7
  1002  0077                     	ds	1
  1003  0078                     write_byte@i:	
  1004  0078                     ___lwdiv@dividend:	
  1005                           ; 1 bytes @ 0x8
  1006                           
  1007                           
  1008                           ; 2 bytes @ 0x8
  1009  0078                     	ds	1
  1010  0079                     modulus_func@y:	
  1011                           
  1012                           ; 2 bytes @ 0x9
  1013  0079                     	ds	1
  1014  007A                     ??___lwdiv:	
  1015                           
  1016                           ; 1 bytes @ 0xA
  1017  007A                     	ds	1
  1018  007B                     ??_modulus_func:	
  1019  007B                     ??_incrementor:	
  1020                           ; 1 bytes @ 0xB
  1021                           
  1022  007B                     ??_decrementor:	
  1023                           ; 1 bytes @ 0xB
  1024                           
  1025  007B                     ___lwdiv@quotient:	
  1026                           ; 1 bytes @ 0xB
  1027                           
  1028                           
  1029                           ; 2 bytes @ 0xB
  1030  007B                     	ds	2
  1031  007D                     ___lwdiv@counter:	
  1032                           
  1033                           ; 1 bytes @ 0xD
  1034  007D                     	ds	1
  1035  007E                     ??_main:	
  1036                           
  1037                           	psect	cstackBANK0
  1038  004B                     __pcstackBANK0:	
  1039                           ; 1 bytes @ 0xE
  1040                           
  1041  004B                     ??_get_temp:	
  1042  004B                     ?_incrementor:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  004B                     ?_decrementor:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  004B                     incrementor@upper_val:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051  004B                     decrementor@lower_val:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054                           
  1055                           ; 2 bytes @ 0x0
  1056  004B                     	ds	2
  1057  004D                     incrementor@lower_val:	
  1058  004D                     decrementor@upper_val:	
  1059                           ; 2 bytes @ 0x2
  1060                           
  1061                           
  1062                           ; 2 bytes @ 0x2
  1063  004D                     	ds	2
  1064  004F                     incrementor@z:	
  1065  004F                     decrementor@z:	
  1066                           ; 1 bytes @ 0x4
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x4
  1070  004F                     	ds	1
  1071  0050                     ??_thermometer_threshhold_settings:	
  1072  0050                     ??_date_settings:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075  0050                     ??_time_settings:	
  1076                           ; 1 bytes @ 0x5
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x5
  1080  0050                     	ds	3
  1081  0053                     thermometer_threshhold_settings@i:	
  1082                           
  1083                           ; 2 bytes @ 0x8
  1084  0053                     	ds	2
  1085                           
  1086                           	psect	maintext
  1087  0020                     __pmaintext:	
  1088 ;;
  1089 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1090 ;;
  1091 ;; *************** function _main *****************
  1092 ;; Defined at:
  1093 ;;		line 10 in file "mainLogic.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : B00/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels required when called:    4
  1113 ;; This function calls:
  1114 ;;		_date_settings
  1115 ;;		_display_clock
  1116 ;;		_display_date
  1117 ;;		_display_temp
  1118 ;;		_ds1302_init
  1119 ;;		_get_temp
  1120 ;;		_get_time
  1121 ;;		_init
  1122 ;;		_init_temp
  1123 ;;		_initialise_buttons
  1124 ;;		_lcd_init
  1125 ;;		_set_time
  1126 ;;		_thermometer_threshhold_settings
  1127 ;;		_time_settings
  1128 ;;		_write_char
  1129 ;;		_write_cmd
  1130 ;; This function is called by:
  1131 ;;		Startup code after reset
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           
  1136                           ;psect for function _main
  1137  0020                     _main:	
  1138  0020                     l3474:	
  1139                           ;incstack = 0
  1140                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1141                           
  1142                           
  1143                           ;mainLogic.c: 11:     TRISB=0X02;
  1144  0020  3002               	movlw	2
  1145  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0023  0086               	movwf	6	;volatile
  1148  0024                     l3476:	
  1149                           
  1150                           ;mainLogic.c: 12:     init_temp();
  1151  0024  160A  118A  2684  120A  118A  	fcall	_init_temp
  1152  0029                     l3478:	
  1153                           
  1154                           ;mainLogic.c: 13:     set_time();
  1155  0029  120A  158A  204F  120A  118A  	fcall	_set_time
  1156  002E                     l3480:	
  1157                           
  1158                           ;mainLogic.c: 14:     ds1302_init();
  1159  002E  160A  118A  26FB  120A  118A  	fcall	_ds1302_init
  1160  0033                     l3482:	
  1161                           
  1162                           ;mainLogic.c: 16:     init();
  1163  0033  160A  118A  269B  120A  118A  	fcall	_init
  1164  0038                     l3484:	
  1165                           
  1166                           ;mainLogic.c: 17:     lcd_init();
  1167  0038  160A  118A  2782  120A  118A  	fcall	_lcd_init
  1168  003D                     l3486:	
  1169                           
  1170                           ;mainLogic.c: 18:     init_temp();
  1171  003D  160A  118A  2684  120A  118A  	fcall	_init_temp
  1172  0042                     l3488:	
  1173                           
  1174                           ;mainLogic.c: 19:     initialise_buttons();
  1175  0042  160A  118A  26A4  120A  118A  	fcall	_initialise_buttons
  1176  0047                     l3490:	
  1177                           
  1178                           ;mainLogic.c: 22:     get_temp();
  1179  0047  120A  158A  2436  120A  118A  	fcall	_get_temp
  1180  004C                     l3492:	
  1181                           
  1182                           ;mainLogic.c: 23:     get_time();
  1183  004C  120A  158A  20A7  120A  118A  	fcall	_get_time
  1184  0051                     l3494:	
  1185                           
  1186                           ;mainLogic.c: 24:     write_cmd(0x80);
  1187  0051  3080               	movlw	128
  1188  0052  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1189  0057                     l3496:	
  1190                           
  1191                           ;mainLogic.c: 25:     write_char('T');
  1192  0057  3054               	movlw	84
  1193  0058  160A  118A  2769  120A  118A  	fcall	_write_char
  1194  005D                     l3498:	
  1195                           
  1196                           ;mainLogic.c: 26:     write_char('e');
  1197  005D  3065               	movlw	101
  1198  005E  160A  118A  2769  120A  118A  	fcall	_write_char
  1199  0063                     l3500:	
  1200                           
  1201                           ;mainLogic.c: 27:     write_char('m');
  1202  0063  306D               	movlw	109
  1203  0064  160A  118A  2769  120A  118A  	fcall	_write_char
  1204  0069                     l3502:	
  1205                           
  1206                           ;mainLogic.c: 28:     write_char('p');
  1207  0069  3070               	movlw	112
  1208  006A  160A  118A  2769  120A  118A  	fcall	_write_char
  1209  006F                     l3504:	
  1210                           
  1211                           ;mainLogic.c: 29:     write_char(':');
  1212  006F  303A               	movlw	58
  1213  0070  160A  118A  2769  120A  118A  	fcall	_write_char
  1214  0075                     l3506:	
  1215                           
  1216                           ;mainLogic.c: 30:     display_temp();
  1217  0075  160A  118A  27D5  120A  118A  	fcall	_display_temp
  1218  007A                     l3508:	
  1219                           
  1220                           ;mainLogic.c: 32:     write_cmd(0x90);
  1221  007A  3090               	movlw	144
  1222  007B  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1223  0080                     l3510:	
  1224                           
  1225                           ;mainLogic.c: 33:     write_char('D');
  1226  0080  3044               	movlw	68
  1227  0081  160A  118A  2769  120A  118A  	fcall	_write_char
  1228  0086                     l3512:	
  1229                           
  1230                           ;mainLogic.c: 34:     write_char('a');
  1231  0086  3061               	movlw	97
  1232  0087  160A  118A  2769  120A  118A  	fcall	_write_char
  1233  008C                     l3514:	
  1234                           
  1235                           ;mainLogic.c: 35:     write_char('t');
  1236  008C  3074               	movlw	116
  1237  008D  160A  118A  2769  120A  118A  	fcall	_write_char
  1238  0092                     l3516:	
  1239                           
  1240                           ;mainLogic.c: 36:     write_char('e');
  1241  0092  3065               	movlw	101
  1242  0093  160A  118A  2769  120A  118A  	fcall	_write_char
  1243  0098                     l3518:	
  1244                           
  1245                           ;mainLogic.c: 37:     write_char(':');
  1246  0098  303A               	movlw	58
  1247  0099  160A  118A  2769  120A  118A  	fcall	_write_char
  1248  009E                     l3520:	
  1249                           
  1250                           ;mainLogic.c: 38:     write_char(' ');
  1251  009E  3020               	movlw	32
  1252  009F  160A  118A  2769  120A  118A  	fcall	_write_char
  1253  00A4                     l3522:	
  1254                           
  1255                           ;mainLogic.c: 40:     display_date();
  1256  00A4  120A  158A  22F7  120A  118A  	fcall	_display_date
  1257  00A9                     l3524:	
  1258                           
  1259                           ;mainLogic.c: 42:     write_cmd(0x88);
  1260  00A9  3088               	movlw	136
  1261  00AA  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1262  00AF                     l3526:	
  1263                           
  1264                           ;mainLogic.c: 43:     write_char('T');
  1265  00AF  3054               	movlw	84
  1266  00B0  160A  118A  2769  120A  118A  	fcall	_write_char
  1267  00B5                     l3528:	
  1268                           
  1269                           ;mainLogic.c: 44:     write_char('i');
  1270  00B5  3069               	movlw	105
  1271  00B6  160A  118A  2769  120A  118A  	fcall	_write_char
  1272  00BB                     l3530:	
  1273                           
  1274                           ;mainLogic.c: 45:     write_char('m');
  1275  00BB  306D               	movlw	109
  1276  00BC  160A  118A  2769  120A  118A  	fcall	_write_char
  1277  00C1                     l3532:	
  1278                           
  1279                           ;mainLogic.c: 46:     write_char('e');
  1280  00C1  3065               	movlw	101
  1281  00C2  160A  118A  2769  120A  118A  	fcall	_write_char
  1282  00C7                     l3534:	
  1283                           
  1284                           ;mainLogic.c: 47:     write_char(':');
  1285  00C7  303A               	movlw	58
  1286  00C8  160A  118A  2769  120A  118A  	fcall	_write_char
  1287  00CD                     l3536:	
  1288                           
  1289                           ;mainLogic.c: 48:     display_clock();
  1290  00CD  120A  158A  2390  120A  118A  	fcall	_display_clock
  1291  00D2                     l3538:	
  1292                           
  1293                           ;mainLogic.c: 49:     thermometer_threshhold_settings();
  1294  00D2  120A  158A  2564  120A  118A  	fcall	_thermometer_threshhold_settings
  1295  00D7                     l3540:	
  1296                           
  1297                           ;mainLogic.c: 50:     date_settings();
  1298  00D7  120A  118A  23D3  120A  118A  	fcall	_date_settings
  1299  00DC                     l3542:	
  1300                           
  1301                           ;mainLogic.c: 51:     time_settings();
  1302  00DC  120A  118A  20E5  120A  118A  	fcall	_time_settings
  1303  00E1  2847               	goto	l3490
  1304  00E2  120A  118A  2800   	ljmp	start
  1305  00E5                     __end_of_main:	
  1306                           
  1307                           	psect	text1
  1308  00E5                     __ptext1:	
  1309 ;; *************** function _time_settings *****************
  1310 ;; Defined at:
  1311 ;;		line 163 in file "Button_src.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          0       3       0       0       0
  1328 ;;      Totals:         0       3       0       0       0
  1329 ;;Total ram usage:        3 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    3
  1332 ;; This function calls:
  1333 ;;		_button_delay
  1334 ;;		_incrementor
  1335 ;;		_modulus_func
  1336 ;;		_set_time
  1337 ;;		_time_date_delimiter
  1338 ;;		_time_date_hex_terminator
  1339 ;;		_write_char
  1340 ;;		_write_cmd
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _time_settings
  1348  00E5                     _time_settings:	
  1349  00E5                     l3306:	
  1350                           ;incstack = 0
  1351                           ; Regs used in _time_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1352                           
  1353                           
  1354                           ;Button_src.c: 164:  RC0 = 1;
  1355  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1356  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1357  00E7  1407               	bsf	7,0	;volatile
  1358                           
  1359                           ;Button_src.c: 165:  RC1 = 1;
  1360  00E8  1487               	bsf	7,1	;volatile
  1361                           
  1362                           ;Button_src.c: 166:  RC2 = 0;
  1363  00E9  1107               	bcf	7,2	;volatile
  1364                           
  1365                           ;Button_src.c: 167:  RC3 = 1;
  1366  00EA  1587               	bsf	7,3	;volatile
  1367                           
  1368                           ;Button_src.c: 168:   if (RC4 == 0){
  1369  00EB  1A07               	btfsc	7,4	;volatile
  1370  00EC  28EE               	goto	u2041
  1371  00ED  28EF               	goto	u2040
  1372  00EE                     u2041:	
  1373  00EE  2BD2               	goto	l476
  1374  00EF                     u2040:	
  1375  00EF                     l3308:	
  1376                           
  1377                           ;Button_src.c: 169:       write_cmd(0x1);
  1378  00EF  3001               	movlw	1
  1379  00F0  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1380  00F5                     l469:	
  1381                           ;Button_src.c: 170:       for(;;){
  1382                           
  1383                           
  1384                           ;Button_src.c: 171:             write_cmd(0x80);
  1385  00F5  3080               	movlw	128
  1386  00F6  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1387                           
  1388                           ;Button_src.c: 172:             write_char('T');
  1389  00FB  3054               	movlw	84
  1390  00FC  160A  118A  2769  120A  118A  	fcall	_write_char
  1391                           
  1392                           ;Button_src.c: 173:             write_char('i');
  1393  0101  3069               	movlw	105
  1394  0102  160A  118A  2769  120A  118A  	fcall	_write_char
  1395                           
  1396                           ;Button_src.c: 174:             write_char('m');
  1397  0107  306D               	movlw	109
  1398  0108  160A  118A  2769  120A  118A  	fcall	_write_char
  1399                           
  1400                           ;Button_src.c: 175:             write_char('e');
  1401  010D  3065               	movlw	101
  1402  010E  160A  118A  2769  120A  118A  	fcall	_write_char
  1403                           
  1404                           ;Button_src.c: 176:             write_char('_');
  1405  0113  305F               	movlw	95
  1406  0114  160A  118A  2769  120A  118A  	fcall	_write_char
  1407                           
  1408                           ;Button_src.c: 177:             write_char('S');
  1409  0119  3053               	movlw	83
  1410  011A  160A  118A  2769  120A  118A  	fcall	_write_char
  1411                           
  1412                           ;Button_src.c: 178:             write_char('e');
  1413  011F  3065               	movlw	101
  1414  0120  160A  118A  2769  120A  118A  	fcall	_write_char
  1415                           
  1416                           ;Button_src.c: 179:             write_char('t');
  1417  0125  3074               	movlw	116
  1418  0126  160A  118A  2769  120A  118A  	fcall	_write_char
  1419                           
  1420                           ;Button_src.c: 180:             write_char('t');
  1421  012B  3074               	movlw	116
  1422  012C  160A  118A  2769  120A  118A  	fcall	_write_char
  1423                           
  1424                           ;Button_src.c: 181:             write_char('i');
  1425  0131  3069               	movlw	105
  1426  0132  160A  118A  2769  120A  118A  	fcall	_write_char
  1427                           
  1428                           ;Button_src.c: 182:             write_char('n');
  1429  0137  306E               	movlw	110
  1430  0138  160A  118A  2769  120A  118A  	fcall	_write_char
  1431                           
  1432                           ;Button_src.c: 183:             write_char('g');
  1433  013D  3067               	movlw	103
  1434  013E  160A  118A  2769  120A  118A  	fcall	_write_char
  1435                           
  1436                           ;Button_src.c: 184:             write_char('s');
  1437  0143  3073               	movlw	115
  1438  0144  160A  118A  2769  120A  118A  	fcall	_write_char
  1439  0149                     l3310:	
  1440                           
  1441                           ;Button_src.c: 186:             RC0 = 1;
  1442  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1443  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1444  014B  1407               	bsf	7,0	;volatile
  1445  014C                     l3312:	
  1446                           
  1447                           ;Button_src.c: 187:             RC1 = 0;
  1448  014C  1087               	bcf	7,1	;volatile
  1449  014D                     l3314:	
  1450                           
  1451                           ;Button_src.c: 188:             RC2 = 1;
  1452  014D  1507               	bsf	7,2	;volatile
  1453  014E                     l3316:	
  1454                           
  1455                           ;Button_src.c: 189:             RC3 = 1;
  1456  014E  1587               	bsf	7,3	;volatile
  1457  014F                     l3318:	
  1458                           
  1459                           ;Button_src.c: 191:             if(RC7 == 0 && b =='x'){
  1460  014F  1B87               	btfsc	7,7	;volatile
  1461  0150  2952               	goto	u2051
  1462  0151  2953               	goto	u2050
  1463  0152                     u2051:	
  1464  0152  29B5               	goto	l3340
  1465  0153                     u2050:	
  1466  0153                     l3320:	
  1467  0153  3078               	movlw	120
  1468  0154  063F               	xorwf	_b,w
  1469  0155  1D03               	btfss	3,2
  1470  0156  2958               	goto	u2061
  1471  0157  2959               	goto	u2060
  1472  0158                     u2061:	
  1473  0158  29B5               	goto	l3340
  1474  0159                     u2060:	
  1475  0159                     l3322:	
  1476                           
  1477                           ;Button_src.c: 192:                     a++;
  1478  0159  3001               	movlw	1
  1479  015A  00D0               	movwf	??_time_settings
  1480  015B  0850               	movf	??_time_settings,w
  1481  015C  07C0               	addwf	_a,f
  1482  015D                     l3324:	
  1483                           
  1484                           ;Button_src.c: 193:                     x++ ;
  1485  015D  3001               	movlw	1
  1486  015E  07B1               	addwf	_x,f
  1487  015F  1803               	skipnc
  1488  0160  0AB2               	incf	_x+1,f
  1489  0161  3000               	movlw	0
  1490  0162  07B2               	addwf	_x+1,f
  1491  0163                     l3326:	
  1492                           
  1493                           ;Button_src.c: 194:                     x = modulus_func(x,10);
  1494  0163  0832               	movf	_x+1,w
  1495  0164  00F8               	movwf	modulus_func@x+1
  1496  0165  0831               	movf	_x,w
  1497  0166  00F7               	movwf	modulus_func@x
  1498  0167  300A               	movlw	10
  1499  0168  00F9               	movwf	modulus_func@y
  1500  0169  3000               	movlw	0
  1501  016A  00FA               	movwf	modulus_func@y+1
  1502  016B  160A  118A  26B2  120A  118A  	fcall	_modulus_func
  1503  0170  0878               	movf	?_modulus_func+1,w
  1504  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0173  00B2               	movwf	_x+1
  1507  0174  0877               	movf	?_modulus_func,w
  1508  0175  00B1               	movwf	_x
  1509  0176                     l3328:	
  1510                           
  1511                           ;Button_src.c: 195:                     y = incrementor(y,x,'9');
  1512  0176  0830               	movf	_y+1,w
  1513  0177  00CC               	movwf	incrementor@upper_val+1
  1514  0178  082F               	movf	_y,w
  1515  0179  00CB               	movwf	incrementor@upper_val
  1516  017A  0832               	movf	_x+1,w
  1517  017B  00CE               	movwf	incrementor@lower_val+1
  1518  017C  0831               	movf	_x,w
  1519  017D  00CD               	movwf	incrementor@lower_val
  1520  017E  3039               	movlw	57
  1521  017F  00D0               	movwf	??_time_settings
  1522  0180  0850               	movf	??_time_settings,w
  1523  0181  00CF               	movwf	incrementor@z
  1524  0182  120A  158A  2023  120A  118A  	fcall	_incrementor
  1525  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0189  00D1               	movwf	??_time_settings+1
  1528  018A  01D2               	clrf	??_time_settings+2
  1529  018B  0851               	movf	??_time_settings+1,w
  1530  018C  00AF               	movwf	_y
  1531  018D  0852               	movf	??_time_settings+2,w
  1532  018E  00B0               	movwf	_y+1
  1533  018F                     l3330:	
  1534                           
  1535                           ;Button_src.c: 197:                     a = time_date_hex_terminator(a,'T');
  1536  018F  3054               	movlw	84
  1537  0190  00D0               	movwf	??_time_settings
  1538  0191  0850               	movf	??_time_settings,w
  1539  0192  00F0               	movwf	time_date_hex_terminator@limiter
  1540  0193  0840               	movf	_a,w
  1541  0194  160A  118A  26C4  120A  118A  	fcall	_time_date_hex_terminator
  1542  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1543  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1544  019B  00D1               	movwf	??_time_settings+1
  1545  019C  0851               	movf	??_time_settings+1,w
  1546  019D  00C0               	movwf	_a
  1547  019E                     l3332:	
  1548                           
  1549                           ;Button_src.c: 198:                     if(y == 2 && x == 4){
  1550  019E  3002               	movlw	2
  1551  019F  062F               	xorwf	_y,w
  1552  01A0  0430               	iorwf	_y+1,w
  1553  01A1  1D03               	btfss	3,2
  1554  01A2  29A4               	goto	u2071
  1555  01A3  29A5               	goto	u2070
  1556  01A4                     u2071:	
  1557  01A4  29B0               	goto	l3338
  1558  01A5                     u2070:	
  1559  01A5                     l3334:	
  1560  01A5  3004               	movlw	4
  1561  01A6  0631               	xorwf	_x,w
  1562  01A7  0432               	iorwf	_x+1,w
  1563  01A8  1D03               	btfss	3,2
  1564  01A9  29AB               	goto	u2081
  1565  01AA  29AC               	goto	u2080
  1566  01AB                     u2081:	
  1567  01AB  29B0               	goto	l3338
  1568  01AC                     u2080:	
  1569  01AC                     l3336:	
  1570                           
  1571                           ;Button_src.c: 199:                         x = 0;
  1572  01AC  01B1               	clrf	_x
  1573  01AD  01B2               	clrf	_x+1
  1574                           
  1575                           ;Button_src.c: 200:                         y = 0;
  1576  01AE  01AF               	clrf	_y
  1577  01AF  01B0               	clrf	_y+1
  1578  01B0                     l3338:	
  1579                           
  1580                           ;Button_src.c: 202:                     button_delay();
  1581  01B0  160A  118A  2710  120A  118A  	fcall	_button_delay
  1582  01B5                     l3340:	
  1583                           
  1584                           ;Button_src.c: 204:             if(RC7==0 && b == 'y'){
  1585  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1586  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1587  01B7  1B87               	btfsc	7,7	;volatile
  1588  01B8  29BA               	goto	u2091
  1589  01B9  29BB               	goto	u2090
  1590  01BA                     u2091:	
  1591  01BA  2A0E               	goto	l3362
  1592  01BB                     u2090:	
  1593  01BB                     l3342:	
  1594  01BB  3079               	movlw	121
  1595  01BC  063F               	xorwf	_b,w
  1596  01BD  1D03               	btfss	3,2
  1597  01BE  29C0               	goto	u2101
  1598  01BF  29C1               	goto	u2100
  1599  01C0                     u2101:	
  1600  01C0  2A0E               	goto	l3362
  1601  01C1                     u2100:	
  1602  01C1                     l3344:	
  1603                           
  1604                           ;Button_src.c: 205:                     c++;
  1605  01C1  3001               	movlw	1
  1606  01C2  00D0               	movwf	??_time_settings
  1607  01C3  0850               	movf	??_time_settings,w
  1608  01C4  07BE               	addwf	_c,f
  1609  01C5                     l3346:	
  1610                           
  1611                           ;Button_src.c: 206:                     t++;
  1612  01C5  3001               	movlw	1
  1613  01C6  07B5               	addwf	_t,f
  1614  01C7  1803               	skipnc
  1615  01C8  0AB6               	incf	_t+1,f
  1616  01C9  3000               	movlw	0
  1617  01CA  07B6               	addwf	_t+1,f
  1618  01CB                     l3348:	
  1619                           
  1620                           ;Button_src.c: 207:                     t = modulus_func(t,10);
  1621  01CB  0836               	movf	_t+1,w
  1622  01CC  00F8               	movwf	modulus_func@x+1
  1623  01CD  0835               	movf	_t,w
  1624  01CE  00F7               	movwf	modulus_func@x
  1625  01CF  300A               	movlw	10
  1626  01D0  00F9               	movwf	modulus_func@y
  1627  01D1  3000               	movlw	0
  1628  01D2  00FA               	movwf	modulus_func@y+1
  1629  01D3  160A  118A  26B2  120A  118A  	fcall	_modulus_func
  1630  01D8  0878               	movf	?_modulus_func+1,w
  1631  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1632  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1633  01DB  00B6               	movwf	_t+1
  1634  01DC  0877               	movf	?_modulus_func,w
  1635  01DD  00B5               	movwf	_t
  1636  01DE                     l3350:	
  1637                           
  1638                           ;Button_src.c: 208:                     w = incrementor(w,t,'9');
  1639  01DE  0834               	movf	_w+1,w
  1640  01DF  00CC               	movwf	incrementor@upper_val+1
  1641  01E0  0833               	movf	_w,w
  1642  01E1  00CB               	movwf	incrementor@upper_val
  1643  01E2  0836               	movf	_t+1,w
  1644  01E3  00CE               	movwf	incrementor@lower_val+1
  1645  01E4  0835               	movf	_t,w
  1646  01E5  00CD               	movwf	incrementor@lower_val
  1647  01E6  3039               	movlw	57
  1648  01E7  00D0               	movwf	??_time_settings
  1649  01E8  0850               	movf	??_time_settings,w
  1650  01E9  00CF               	movwf	incrementor@z
  1651  01EA  120A  158A  2023  120A  118A  	fcall	_incrementor
  1652  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1653  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1654  01F1  00D1               	movwf	??_time_settings+1
  1655  01F2  01D2               	clrf	??_time_settings+2
  1656  01F3  0851               	movf	??_time_settings+1,w
  1657  01F4  00B3               	movwf	_w
  1658  01F5  0852               	movf	??_time_settings+2,w
  1659  01F6  00B4               	movwf	_w+1
  1660  01F7                     l3352:	
  1661                           
  1662                           ;Button_src.c: 209:                     if(c == (0x59 + 1)){
  1663  01F7  305A               	movlw	90
  1664  01F8  063E               	xorwf	_c,w
  1665  01F9  1D03               	btfss	3,2
  1666  01FA  29FC               	goto	u2111
  1667  01FB  29FD               	goto	u2110
  1668  01FC                     u2111:	
  1669  01FC  29FE               	goto	l3356
  1670  01FD                     u2110:	
  1671  01FD                     l3354:	
  1672                           
  1673                           ;Button_src.c: 210:                         c = 0x00;
  1674  01FD  01BE               	clrf	_c
  1675  01FE                     l3356:	
  1676                           
  1677                           ;Button_src.c: 212:                     if(w == 6){
  1678  01FE  3006               	movlw	6
  1679  01FF  0633               	xorwf	_w,w
  1680  0200  0434               	iorwf	_w+1,w
  1681  0201  1D03               	btfss	3,2
  1682  0202  2A04               	goto	u2121
  1683  0203  2A05               	goto	u2120
  1684  0204                     u2121:	
  1685  0204  2A09               	goto	l3360
  1686  0205                     u2120:	
  1687  0205                     l3358:	
  1688                           
  1689                           ;Button_src.c: 213:                         w = 0;
  1690  0205  01B3               	clrf	_w
  1691  0206  01B4               	clrf	_w+1
  1692                           
  1693                           ;Button_src.c: 214:                         t = 0;
  1694  0207  01B5               	clrf	_t
  1695  0208  01B6               	clrf	_t+1
  1696  0209                     l3360:	
  1697                           
  1698                           ;Button_src.c: 216:                     button_delay();
  1699  0209  160A  118A  2710  120A  118A  	fcall	_button_delay
  1700  020E                     l3362:	
  1701                           
  1702                           ;Button_src.c: 219:              write_cmd(0x88);
  1703  020E  3088               	movlw	136
  1704  020F  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1705  0214                     l3364:	
  1706                           
  1707                           ;Button_src.c: 220:                     table[2] = a;
  1708  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0216  0840               	movf	_a,w
  1711  0217  00D0               	movwf	??_time_settings
  1712  0218  0850               	movf	??_time_settings,w
  1713  0219  00D7               	movwf	_table+2
  1714  021A                     l3366:	
  1715                           
  1716                           ;Button_src.c: 221:                     table[1] = c;
  1717  021A  083E               	movf	_c,w
  1718  021B  00D0               	movwf	??_time_settings
  1719  021C  0850               	movf	??_time_settings,w
  1720  021D  00D6               	movwf	_table+1
  1721  021E                     l3368:	
  1722                           
  1723                           ;Button_src.c: 226:                     a = time_date_delimiter(a,0x11,'9');
  1724  021E  3011               	movlw	17
  1725  021F  00D0               	movwf	??_time_settings
  1726  0220  0850               	movf	??_time_settings,w
  1727  0221  00F0               	movwf	time_date_delimiter@hex
  1728  0222  3039               	movlw	57
  1729  0223  00D1               	movwf	??_time_settings+1
  1730  0224  0851               	movf	??_time_settings+1,w
  1731  0225  00F1               	movwf	time_date_delimiter@limiter
  1732  0226  0840               	movf	_a,w
  1733  0227  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  1734  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1735  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1736  022E  00D2               	movwf	??_time_settings+2
  1737  022F  0852               	movf	??_time_settings+2,w
  1738  0230  00C0               	movwf	_a
  1739  0231                     l3370:	
  1740                           
  1741                           ;Button_src.c: 227:                     a = time_date_delimiter(a,0x21,'J');
  1742  0231  3021               	movlw	33
  1743  0232  00D0               	movwf	??_time_settings
  1744  0233  0850               	movf	??_time_settings,w
  1745  0234  00F0               	movwf	time_date_delimiter@hex
  1746  0235  304A               	movlw	74
  1747  0236  00D1               	movwf	??_time_settings+1
  1748  0237  0851               	movf	??_time_settings+1,w
  1749  0238  00F1               	movwf	time_date_delimiter@limiter
  1750  0239  0840               	movf	_a,w
  1751  023A  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  1752  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1753  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1754  0241  00D2               	movwf	??_time_settings+2
  1755  0242  0852               	movf	??_time_settings+2,w
  1756  0243  00C0               	movwf	_a
  1757  0244                     l3372:	
  1758                           
  1759                           ;Button_src.c: 229:                     c = time_date_delimiter(c,0x11,'9');
  1760  0244  3011               	movlw	17
  1761  0245  00D0               	movwf	??_time_settings
  1762  0246  0850               	movf	??_time_settings,w
  1763  0247  00F0               	movwf	time_date_delimiter@hex
  1764  0248  3039               	movlw	57
  1765  0249  00D1               	movwf	??_time_settings+1
  1766  024A  0851               	movf	??_time_settings+1,w
  1767  024B  00F1               	movwf	time_date_delimiter@limiter
  1768  024C  083E               	movf	_c,w
  1769  024D  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  1770  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0254  00D2               	movwf	??_time_settings+2
  1773  0255  0852               	movf	??_time_settings+2,w
  1774  0256  00BE               	movwf	_c
  1775  0257                     l3374:	
  1776                           
  1777                           ;Button_src.c: 230:                     c = time_date_delimiter(c,0x21,'J');
  1778  0257  3021               	movlw	33
  1779  0258  00D0               	movwf	??_time_settings
  1780  0259  0850               	movf	??_time_settings,w
  1781  025A  00F0               	movwf	time_date_delimiter@hex
  1782  025B  304A               	movlw	74
  1783  025C  00D1               	movwf	??_time_settings+1
  1784  025D  0851               	movf	??_time_settings+1,w
  1785  025E  00F1               	movwf	time_date_delimiter@limiter
  1786  025F  083E               	movf	_c,w
  1787  0260  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  1788  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0267  00D2               	movwf	??_time_settings+2
  1791  0268  0852               	movf	??_time_settings+2,w
  1792  0269  00BE               	movwf	_c
  1793  026A                     l3376:	
  1794                           
  1795                           ;Button_src.c: 231:                     c = time_date_delimiter(c,0x31,'Y');
  1796  026A  3031               	movlw	49
  1797  026B  00D0               	movwf	??_time_settings
  1798  026C  0850               	movf	??_time_settings,w
  1799  026D  00F0               	movwf	time_date_delimiter@hex
  1800  026E  3059               	movlw	89
  1801  026F  00D1               	movwf	??_time_settings+1
  1802  0270  0851               	movf	??_time_settings+1,w
  1803  0271  00F1               	movwf	time_date_delimiter@limiter
  1804  0272  083E               	movf	_c,w
  1805  0273  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  1806  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1808  027A  00D2               	movwf	??_time_settings+2
  1809  027B  0852               	movf	??_time_settings+2,w
  1810  027C  00BE               	movwf	_c
  1811  027D                     l3378:	
  1812                           
  1813                           ;Button_src.c: 232:                     c = time_date_delimiter(c,0x41,'j');
  1814  027D  3041               	movlw	65
  1815  027E  00D0               	movwf	??_time_settings
  1816  027F  0850               	movf	??_time_settings,w
  1817  0280  00F0               	movwf	time_date_delimiter@hex
  1818  0281  306A               	movlw	106
  1819  0282  00D1               	movwf	??_time_settings+1
  1820  0283  0851               	movf	??_time_settings+1,w
  1821  0284  00F1               	movwf	time_date_delimiter@limiter
  1822  0285  083E               	movf	_c,w
  1823  0286  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  1824  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1825  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1826  028D  00D2               	movwf	??_time_settings+2
  1827  028E  0852               	movf	??_time_settings+2,w
  1828  028F  00BE               	movwf	_c
  1829  0290                     l3380:	
  1830                           
  1831                           ;Button_src.c: 233:                     c = time_date_delimiter(c,0x51,'z');
  1832  0290  3051               	movlw	81
  1833  0291  00D0               	movwf	??_time_settings
  1834  0292  0850               	movf	??_time_settings,w
  1835  0293  00F0               	movwf	time_date_delimiter@hex
  1836  0294  307A               	movlw	122
  1837  0295  00D1               	movwf	??_time_settings+1
  1838  0296  0851               	movf	??_time_settings+1,w
  1839  0297  00F1               	movwf	time_date_delimiter@limiter
  1840  0298  083E               	movf	_c,w
  1841  0299  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  1842  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1843  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1844  02A0  00D2               	movwf	??_time_settings+2
  1845  02A1  0852               	movf	??_time_settings+2,w
  1846  02A2  00BE               	movwf	_c
  1847  02A3                     l3382:	
  1848                           
  1849                           ;Button_src.c: 235:                   RC0 = 0;
  1850  02A3  1007               	bcf	7,0	;volatile
  1851  02A4                     l3384:	
  1852                           
  1853                           ;Button_src.c: 236:                   RC1 = 1;
  1854  02A4  1487               	bsf	7,1	;volatile
  1855  02A5                     l3386:	
  1856                           
  1857                           ;Button_src.c: 237:                   RC2 = 1;
  1858  02A5  1507               	bsf	7,2	;volatile
  1859  02A6                     l3388:	
  1860                           
  1861                           ;Button_src.c: 238:                   RC3 = 1;
  1862  02A6  1587               	bsf	7,3	;volatile
  1863  02A7                     l3390:	
  1864                           
  1865                           ;Button_src.c: 239:                     if (RC6 == 0 ){
  1866  02A7  1B07               	btfsc	7,6	;volatile
  1867  02A8  2AAA               	goto	u2131
  1868  02A9  2AAB               	goto	u2130
  1869  02AA                     u2131:	
  1870  02AA  2AC3               	goto	l475
  1871  02AB                     u2130:	
  1872  02AB                     l3392:	
  1873                           
  1874                           ;Button_src.c: 240:                           write_cmd(0x1);
  1875  02AB  3001               	movlw	1
  1876  02AC  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1877  02B1                     l3394:	
  1878                           
  1879                           ;Button_src.c: 241:                           a = 0x00;
  1880  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1881  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1882  02B3  01C0               	clrf	_a
  1883  02B4                     l3396:	
  1884                           
  1885                           ;Button_src.c: 242:                           c = 0x00;
  1886  02B4  01BE               	clrf	_c
  1887  02B5                     l3398:	
  1888                           
  1889                           ;Button_src.c: 243:                           x = 0;
  1890  02B5  01B1               	clrf	_x
  1891  02B6  01B2               	clrf	_x+1
  1892  02B7                     l3400:	
  1893                           
  1894                           ;Button_src.c: 244:                           y = 0;
  1895  02B7  01AF               	clrf	_y
  1896  02B8  01B0               	clrf	_y+1
  1897  02B9                     l3402:	
  1898                           
  1899                           ;Button_src.c: 245:                           w = 0;
  1900  02B9  01B3               	clrf	_w
  1901  02BA  01B4               	clrf	_w+1
  1902  02BB                     l3404:	
  1903                           
  1904                           ;Button_src.c: 246:                           t = 0;
  1905  02BB  01B5               	clrf	_t
  1906  02BC  01B6               	clrf	_t+1
  1907  02BD                     l3406:	
  1908                           
  1909                           ;Button_src.c: 247:                           set_time();
  1910  02BD  120A  158A  204F  120A  118A  	fcall	_set_time
  1911  02C2  2BD2               	goto	l476
  1912  02C3                     l475:	
  1913                           ;Button_src.c: 249:                             }
  1914                           
  1915                           
  1916                           ;Button_src.c: 250:                   RC0 = 1;
  1917  02C3  1407               	bsf	7,0	;volatile
  1918                           
  1919                           ;Button_src.c: 251:                   RC1 = 1;
  1920  02C4  1487               	bsf	7,1	;volatile
  1921                           
  1922                           ;Button_src.c: 252:                   RC2 = 0;
  1923  02C5  1107               	bcf	7,2	;volatile
  1924                           
  1925                           ;Button_src.c: 253:                   RC3 = 1;
  1926  02C6  1587               	bsf	7,3	;volatile
  1927  02C7                     l3410:	
  1928                           
  1929                           ;Button_src.c: 254:                   z = modulus_func(z,2);
  1930  02C7  082E               	movf	_z+1,w
  1931  02C8  00F8               	movwf	modulus_func@x+1
  1932  02C9  082D               	movf	_z,w
  1933  02CA  00F7               	movwf	modulus_func@x
  1934  02CB  3002               	movlw	2
  1935  02CC  00F9               	movwf	modulus_func@y
  1936  02CD  3000               	movlw	0
  1937  02CE  00FA               	movwf	modulus_func@y+1
  1938  02CF  160A  118A  26B2  120A  118A  	fcall	_modulus_func
  1939  02D4  0878               	movf	?_modulus_func+1,w
  1940  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1941  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1942  02D7  00AE               	movwf	_z+1
  1943  02D8  0877               	movf	?_modulus_func,w
  1944  02D9  00AD               	movwf	_z
  1945  02DA                     l3412:	
  1946                           
  1947                           ;Button_src.c: 255:                   if(RC4 == 0 && z ==0){
  1948  02DA  1A07               	btfsc	7,4	;volatile
  1949  02DB  2ADD               	goto	u2141
  1950  02DC  2ADE               	goto	u2140
  1951  02DD                     u2141:	
  1952  02DD  2B1B               	goto	l3422
  1953  02DE                     u2140:	
  1954  02DE                     l3414:	
  1955  02DE  082D               	movf	_z,w
  1956  02DF  042E               	iorwf	_z+1,w
  1957  02E0  1D03               	btfss	3,2
  1958  02E1  2AE3               	goto	u2151
  1959  02E2  2AE4               	goto	u2150
  1960  02E3                     u2151:	
  1961  02E3  2B1B               	goto	l3422
  1962  02E4                     u2150:	
  1963  02E4                     l3416:	
  1964                           
  1965                           ;Button_src.c: 256:                       write_cmd(0x90);
  1966  02E4  3090               	movlw	144
  1967  02E5  120A  118A  2007  120A  118A  	fcall	_write_cmd
  1968                           
  1969                           ;Button_src.c: 257:                       write_char('H');
  1970  02EA  3048               	movlw	72
  1971  02EB  160A  118A  2769  120A  118A  	fcall	_write_char
  1972                           
  1973                           ;Button_src.c: 258:                       write_char('o');
  1974  02F0  306F               	movlw	111
  1975  02F1  160A  118A  2769  120A  118A  	fcall	_write_char
  1976                           
  1977                           ;Button_src.c: 259:                       write_char('u');
  1978  02F6  3075               	movlw	117
  1979  02F7  160A  118A  2769  120A  118A  	fcall	_write_char
  1980                           
  1981                           ;Button_src.c: 260:                       write_char('r');
  1982  02FC  3072               	movlw	114
  1983  02FD  160A  118A  2769  120A  118A  	fcall	_write_char
  1984                           
  1985                           ;Button_src.c: 261:                       write_char(':');
  1986  0302  303A               	movlw	58
  1987  0303  160A  118A  2769  120A  118A  	fcall	_write_char
  1988  0308                     l3418:	
  1989                           
  1990                           ;Button_src.c: 262:                       b = 'x';
  1991  0308  3078               	movlw	120
  1992  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1993  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1994  030B  00D0               	movwf	??_time_settings
  1995  030C  0850               	movf	??_time_settings,w
  1996  030D  00BF               	movwf	_b
  1997  030E                     l3420:	
  1998                           
  1999                           ;Button_src.c: 263:                       button_delay();
  2000  030E  160A  118A  2710  120A  118A  	fcall	_button_delay
  2001                           
  2002                           ;Button_src.c: 264:                       z++;
  2003  0313  3001               	movlw	1
  2004  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0316  07AD               	addwf	_z,f
  2007  0317  1803               	skipnc
  2008  0318  0AAE               	incf	_z+1,f
  2009  0319  3000               	movlw	0
  2010  031A  07AE               	addwf	_z+1,f
  2011  031B                     l3422:	
  2012                           
  2013                           ;Button_src.c: 266:                   RC0 = 1;
  2014  031B  1407               	bsf	7,0	;volatile
  2015  031C                     l3424:	
  2016                           
  2017                           ;Button_src.c: 267:                   RC1 = 1;
  2018  031C  1487               	bsf	7,1	;volatile
  2019  031D                     l3426:	
  2020                           
  2021                           ;Button_src.c: 268:                   RC2 = 0;
  2022  031D  1107               	bcf	7,2	;volatile
  2023  031E                     l3428:	
  2024                           
  2025                           ;Button_src.c: 269:                   RC3 = 1;
  2026  031E  1587               	bsf	7,3	;volatile
  2027  031F                     l3430:	
  2028                           
  2029                           ;Button_src.c: 271:                   if(RC4 == 0&& z ==1){
  2030  031F  1A07               	btfsc	7,4	;volatile
  2031  0320  2B22               	goto	u2161
  2032  0321  2B23               	goto	u2160
  2033  0322                     u2161:	
  2034  0322  2B5E               	goto	l478
  2035  0323                     u2160:	
  2036  0323                     l3432:	
  2037  0323  032D               	decf	_z,w
  2038  0324  042E               	iorwf	_z+1,w
  2039  0325  1D03               	btfss	3,2
  2040  0326  2B28               	goto	u2171
  2041  0327  2B29               	goto	u2170
  2042  0328                     u2171:	
  2043  0328  2B5E               	goto	l478
  2044  0329                     u2170:	
  2045  0329                     l3434:	
  2046                           
  2047                           ;Button_src.c: 272:                     z++;
  2048  0329  3001               	movlw	1
  2049  032A  07AD               	addwf	_z,f
  2050  032B  1803               	skipnc
  2051  032C  0AAE               	incf	_z+1,f
  2052  032D  3000               	movlw	0
  2053  032E  07AE               	addwf	_z+1,f
  2054  032F                     l3436:	
  2055                           
  2056                           ;Button_src.c: 273:                     button_delay();
  2057  032F  160A  118A  2710  120A  118A  	fcall	_button_delay
  2058  0334                     l3438:	
  2059                           
  2060                           ;Button_src.c: 274:                     write_cmd(0x90);
  2061  0334  3090               	movlw	144
  2062  0335  120A  118A  2007  120A  118A  	fcall	_write_cmd
  2063  033A                     l3440:	
  2064                           
  2065                           ;Button_src.c: 275:                     write_char('M');
  2066  033A  304D               	movlw	77
  2067  033B  160A  118A  2769  120A  118A  	fcall	_write_char
  2068  0340                     l3442:	
  2069                           
  2070                           ;Button_src.c: 276:                     write_char('i');
  2071  0340  3069               	movlw	105
  2072  0341  160A  118A  2769  120A  118A  	fcall	_write_char
  2073  0346                     l3444:	
  2074                           
  2075                           ;Button_src.c: 277:                     write_char('n');
  2076  0346  306E               	movlw	110
  2077  0347  160A  118A  2769  120A  118A  	fcall	_write_char
  2078  034C                     l3446:	
  2079                           
  2080                           ;Button_src.c: 278:                     write_char('s');
  2081  034C  3073               	movlw	115
  2082  034D  160A  118A  2769  120A  118A  	fcall	_write_char
  2083  0352                     l3448:	
  2084                           
  2085                           ;Button_src.c: 279:                     write_char(':');
  2086  0352  303A               	movlw	58
  2087  0353  160A  118A  2769  120A  118A  	fcall	_write_char
  2088  0358                     l3450:	
  2089                           
  2090                           ;Button_src.c: 280:                     b = 'y';
  2091  0358  3079               	movlw	121
  2092  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2093  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2094  035B  00D0               	movwf	??_time_settings
  2095  035C  0850               	movf	??_time_settings,w
  2096  035D  00BF               	movwf	_b
  2097  035E                     l478:	
  2098                           ;Button_src.c: 281:                   }
  2099                           
  2100                           
  2101                           ;Button_src.c: 282:                    write_cmd(0x88);
  2102  035E  3088               	movlw	136
  2103  035F  120A  118A  2007  120A  118A  	fcall	_write_cmd
  2104  0364                     l3452:	
  2105                           
  2106                           ;Button_src.c: 289:                   RC0 = 1;
  2107  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0366  1407               	bsf	7,0	;volatile
  2110  0367                     l3454:	
  2111                           
  2112                           ;Button_src.c: 290:                   RC1 = 1;
  2113  0367  1487               	bsf	7,1	;volatile
  2114  0368                     l3456:	
  2115                           
  2116                           ;Button_src.c: 291:                   RC2 = 0;
  2117  0368  1107               	bcf	7,2	;volatile
  2118  0369                     l3458:	
  2119                           
  2120                           ;Button_src.c: 292:                   RC3 = 1;
  2121  0369  1587               	bsf	7,3	;volatile
  2122                           
  2123                           ;Button_src.c: 294:              write_cmd(0x88);
  2124  036A  3088               	movlw	136
  2125  036B  120A  118A  2007  120A  118A  	fcall	_write_cmd
  2126                           
  2127                           ;Button_src.c: 295:              write_char('T');
  2128  0370  3054               	movlw	84
  2129  0371  160A  118A  2769  120A  118A  	fcall	_write_char
  2130                           
  2131                           ;Button_src.c: 296:              write_char('i');
  2132  0376  3069               	movlw	105
  2133  0377  160A  118A  2769  120A  118A  	fcall	_write_char
  2134                           
  2135                           ;Button_src.c: 297:              write_char('m');
  2136  037C  306D               	movlw	109
  2137  037D  160A  118A  2769  120A  118A  	fcall	_write_char
  2138                           
  2139                           ;Button_src.c: 298:              write_char('e');
  2140  0382  3065               	movlw	101
  2141  0383  160A  118A  2769  120A  118A  	fcall	_write_char
  2142                           
  2143                           ;Button_src.c: 299:              write_char(':');
  2144  0388  303A               	movlw	58
  2145  0389  160A  118A  2769  120A  118A  	fcall	_write_char
  2146                           
  2147                           ;Button_src.c: 300:              write_char(y + '0');
  2148  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2149  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0390  082F               	movf	_y,w
  2151  0391  3E30               	addlw	48
  2152  0392  160A  118A  2769  120A  118A  	fcall	_write_char
  2153                           
  2154                           ;Button_src.c: 301:              write_char(x + '0');
  2155  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0399  0831               	movf	_x,w
  2158  039A  3E30               	addlw	48
  2159  039B  160A  118A  2769  120A  118A  	fcall	_write_char
  2160                           
  2161                           ;Button_src.c: 302:              write_char(':');
  2162  03A0  303A               	movlw	58
  2163  03A1  160A  118A  2769  120A  118A  	fcall	_write_char
  2164                           
  2165                           ;Button_src.c: 303:              write_char(w + '0');
  2166  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2167  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2168  03A8  0833               	movf	_w,w
  2169  03A9  3E30               	addlw	48
  2170  03AA  160A  118A  2769  120A  118A  	fcall	_write_char
  2171                           
  2172                           ;Button_src.c: 304:              write_char(t + '0');
  2173  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2174  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2175  03B1  0835               	movf	_t,w
  2176  03B2  3E30               	addlw	48
  2177  03B3  160A  118A  2769  120A  118A  	fcall	_write_char
  2178  03B8                     l3460:	
  2179                           
  2180                           ;Button_src.c: 306:             RC0 = 0;
  2181  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2182  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2183  03BA  1007               	bcf	7,0	;volatile
  2184  03BB                     l3462:	
  2185                           
  2186                           ;Button_src.c: 307:             RC1 = 1;
  2187  03BB  1487               	bsf	7,1	;volatile
  2188  03BC                     l3464:	
  2189                           
  2190                           ;Button_src.c: 308:             RC2 = 1;
  2191  03BC  1507               	bsf	7,2	;volatile
  2192  03BD                     l3466:	
  2193                           
  2194                           ;Button_src.c: 309:             RC3 = 1;
  2195  03BD  1587               	bsf	7,3	;volatile
  2196  03BE                     l3468:	
  2197                           
  2198                           ;Button_src.c: 310:             if (RC7 == 0 ){
  2199  03BE  1B87               	btfsc	7,7	;volatile
  2200  03BF  2BC1               	goto	u2181
  2201  03C0  2BC2               	goto	u2180
  2202  03C1                     u2181:	
  2203  03C1  28F5               	goto	l469
  2204  03C2                     u2180:	
  2205  03C2                     l3470:	
  2206                           
  2207                           ;Button_src.c: 311:             a = 0x00;
  2208  03C2  01C0               	clrf	_a
  2209                           
  2210                           ;Button_src.c: 312:             c = 0x00;
  2211  03C3  01BE               	clrf	_c
  2212                           
  2213                           ;Button_src.c: 313:             x = 0;
  2214  03C4  01B1               	clrf	_x
  2215  03C5  01B2               	clrf	_x+1
  2216                           
  2217                           ;Button_src.c: 314:             y = 0;
  2218  03C6  01AF               	clrf	_y
  2219  03C7  01B0               	clrf	_y+1
  2220                           
  2221                           ;Button_src.c: 315:             w = 0;
  2222  03C8  01B3               	clrf	_w
  2223  03C9  01B4               	clrf	_w+1
  2224                           
  2225                           ;Button_src.c: 316:             t = 0;
  2226  03CA  01B5               	clrf	_t
  2227  03CB  01B6               	clrf	_t+1
  2228  03CC                     l3472:	
  2229                           
  2230                           ;Button_src.c: 317:             write_cmd(0x1);
  2231  03CC  3001               	movlw	1
  2232  03CD  120A  118A  2007  120A  118A  	fcall	_write_cmd
  2233  03D2                     l476:	
  2234                           ;Button_src.c: 318:             break;
  2235                           
  2236  03D2  0008               	return
  2237  03D3                     __end_of_time_settings:	
  2238                           
  2239                           	psect	text2
  2240  0D64                     __ptext2:	
  2241 ;; *************** function _thermometer_threshhold_settings *****************
  2242 ;; Defined at:
  2243 ;;		line 19 in file "Button_src.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  i               2    8[BANK0 ] int 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       0       0       0       0
  2258 ;;      Locals:         0       2       0       0       0
  2259 ;;      Temps:          0       3       0       0       0
  2260 ;;      Totals:         0       5       0       0       0
  2261 ;;Total ram usage:        5 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    3
  2264 ;; This function calls:
  2265 ;;		_button_delay
  2266 ;;		_decrementor
  2267 ;;		_incrementor
  2268 ;;		_modulus_func
  2269 ;;		_set_beep_threshhold
  2270 ;;		_write_char
  2271 ;;		_write_cmd
  2272 ;; This function is called by:
  2273 ;;		_main
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           
  2278                           ;psect for function _thermometer_threshhold_settings
  2279  0D64                     _thermometer_threshhold_settings:	
  2280  0D64                     l2932:	
  2281                           ;incstack = 0
  2282                           ; Regs used in _thermometer_threshhold_settings: [wreg+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2283                           
  2284                           
  2285                           ;Button_src.c: 20:  RC0 = 1;
  2286  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0D66  1407               	bsf	7,0	;volatile
  2289                           
  2290                           ;Button_src.c: 21:  RC1 = 0;
  2291  0D67  1087               	bcf	7,1	;volatile
  2292                           
  2293                           ;Button_src.c: 22:  RC2 = 1;
  2294  0D68  1507               	bsf	7,2	;volatile
  2295                           
  2296                           ;Button_src.c: 23:  RC3 = 1;
  2297  0D69  1587               	bsf	7,3	;volatile
  2298                           
  2299                           ;Button_src.c: 24:   if (RC4 == 0){
  2300  0D6A  1A07               	btfsc	7,4	;volatile
  2301  0D6B  2D6D               	goto	u1751
  2302  0D6C  2D6E               	goto	u1750
  2303  0D6D                     u1751:	
  2304  0D6D  2FFF               	goto	l459
  2305  0D6E                     u1750:	
  2306  0D6E                     l2934:	
  2307                           
  2308                           ;Button_src.c: 25:       write_cmd(0x1);
  2309  0D6E  3001               	movlw	1
  2310  0D6F  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2311  0D74                     l453:	
  2312                           ;Button_src.c: 26:       for(;;){
  2313                           
  2314                           
  2315                           ;Button_src.c: 27:             write_cmd(0x80);
  2316  0D74  3080               	movlw	128
  2317  0D75  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2318                           
  2319                           ;Button_src.c: 28:             write_char('t');
  2320  0D7A  3074               	movlw	116
  2321  0D7B  160A  118A  2769  120A  158A  	fcall	_write_char
  2322                           
  2323                           ;Button_src.c: 29:             write_char('h');
  2324  0D80  3068               	movlw	104
  2325  0D81  160A  118A  2769  120A  158A  	fcall	_write_char
  2326                           
  2327                           ;Button_src.c: 30:             write_char('r');
  2328  0D86  3072               	movlw	114
  2329  0D87  160A  118A  2769  120A  158A  	fcall	_write_char
  2330                           
  2331                           ;Button_src.c: 31:             write_char('e');
  2332  0D8C  3065               	movlw	101
  2333  0D8D  160A  118A  2769  120A  158A  	fcall	_write_char
  2334                           
  2335                           ;Button_src.c: 32:             write_char('s');
  2336  0D92  3073               	movlw	115
  2337  0D93  160A  118A  2769  120A  158A  	fcall	_write_char
  2338                           
  2339                           ;Button_src.c: 33:             write_char('h');
  2340  0D98  3068               	movlw	104
  2341  0D99  160A  118A  2769  120A  158A  	fcall	_write_char
  2342                           
  2343                           ;Button_src.c: 34:             write_char('o');
  2344  0D9E  306F               	movlw	111
  2345  0D9F  160A  118A  2769  120A  158A  	fcall	_write_char
  2346                           
  2347                           ;Button_src.c: 35:             write_char('l');
  2348  0DA4  306C               	movlw	108
  2349  0DA5  160A  118A  2769  120A  158A  	fcall	_write_char
  2350                           
  2351                           ;Button_src.c: 36:             write_char('d');
  2352  0DAA  3064               	movlw	100
  2353  0DAB  160A  118A  2769  120A  158A  	fcall	_write_char
  2354                           
  2355                           ;Button_src.c: 38:             write_cmd(0x90);
  2356  0DB0  3090               	movlw	144
  2357  0DB1  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2358                           
  2359                           ;Button_src.c: 39:             write_char('C');
  2360  0DB6  3043               	movlw	67
  2361  0DB7  160A  118A  2769  120A  158A  	fcall	_write_char
  2362                           
  2363                           ;Button_src.c: 40:             write_char('u');
  2364  0DBC  3075               	movlw	117
  2365  0DBD  160A  118A  2769  120A  158A  	fcall	_write_char
  2366                           
  2367                           ;Button_src.c: 41:             write_char('r');
  2368  0DC2  3072               	movlw	114
  2369  0DC3  160A  118A  2769  120A  158A  	fcall	_write_char
  2370                           
  2371                           ;Button_src.c: 42:             write_char('r');
  2372  0DC8  3072               	movlw	114
  2373  0DC9  160A  118A  2769  120A  158A  	fcall	_write_char
  2374                           
  2375                           ;Button_src.c: 43:             write_char('e');
  2376  0DCE  3065               	movlw	101
  2377  0DCF  160A  118A  2769  120A  158A  	fcall	_write_char
  2378                           
  2379                           ;Button_src.c: 44:             write_char('n');
  2380  0DD4  306E               	movlw	110
  2381  0DD5  160A  118A  2769  120A  158A  	fcall	_write_char
  2382                           
  2383                           ;Button_src.c: 45:             write_char('t');
  2384  0DDA  3074               	movlw	116
  2385  0DDB  160A  118A  2769  120A  158A  	fcall	_write_char
  2386                           
  2387                           ;Button_src.c: 46:             write_char(':');
  2388  0DE0  303A               	movlw	58
  2389  0DE1  160A  118A  2769  120A  158A  	fcall	_write_char
  2390                           
  2391                           ;Button_src.c: 48:             write_char(var1 + '0');
  2392  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0DE8  083B               	movf	_var1,w
  2395  0DE9  3E30               	addlw	48
  2396  0DEA  160A  118A  2769  120A  158A  	fcall	_write_char
  2397                           
  2398                           ;Button_src.c: 49:             write_char(var2 + '0');
  2399  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0DF1  083A               	movf	_var2,w
  2402  0DF2  3E30               	addlw	48
  2403  0DF3  160A  118A  2769  120A  158A  	fcall	_write_char
  2404                           
  2405                           ;Button_src.c: 51:             write_cmd(0x88);
  2406  0DF8  3088               	movlw	136
  2407  0DF9  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2408                           
  2409                           ;Button_src.c: 52:             write_char('S');
  2410  0DFE  3053               	movlw	83
  2411  0DFF  160A  118A  2769  120A  158A  	fcall	_write_char
  2412                           
  2413                           ;Button_src.c: 53:             write_char('e');
  2414  0E04  3065               	movlw	101
  2415  0E05  160A  118A  2769  120A  158A  	fcall	_write_char
  2416                           
  2417                           ;Button_src.c: 54:             write_char('t');
  2418  0E0A  3074               	movlw	116
  2419  0E0B  160A  118A  2769  120A  158A  	fcall	_write_char
  2420                           
  2421                           ;Button_src.c: 55:             write_char('_');
  2422  0E10  305F               	movlw	95
  2423  0E11  160A  118A  2769  120A  158A  	fcall	_write_char
  2424                           
  2425                           ;Button_src.c: 56:             write_char('t');
  2426  0E16  3074               	movlw	116
  2427  0E17  160A  118A  2769  120A  158A  	fcall	_write_char
  2428                           
  2429                           ;Button_src.c: 57:             write_char('h');
  2430  0E1C  3068               	movlw	104
  2431  0E1D  160A  118A  2769  120A  158A  	fcall	_write_char
  2432                           
  2433                           ;Button_src.c: 58:             write_char('r');
  2434  0E22  3072               	movlw	114
  2435  0E23  160A  118A  2769  120A  158A  	fcall	_write_char
  2436                           
  2437                           ;Button_src.c: 59:             write_char('e');
  2438  0E28  3065               	movlw	101
  2439  0E29  160A  118A  2769  120A  158A  	fcall	_write_char
  2440                           
  2441                           ;Button_src.c: 60:             write_char('s');
  2442  0E2E  3073               	movlw	115
  2443  0E2F  160A  118A  2769  120A  158A  	fcall	_write_char
  2444                           
  2445                           ;Button_src.c: 61:             write_char('h');
  2446  0E34  3068               	movlw	104
  2447  0E35  160A  118A  2769  120A  158A  	fcall	_write_char
  2448                           
  2449                           ;Button_src.c: 62:             write_char('o');
  2450  0E3A  306F               	movlw	111
  2451  0E3B  160A  118A  2769  120A  158A  	fcall	_write_char
  2452                           
  2453                           ;Button_src.c: 63:             write_char('l');
  2454  0E40  306C               	movlw	108
  2455  0E41  160A  118A  2769  120A  158A  	fcall	_write_char
  2456                           
  2457                           ;Button_src.c: 64:             write_char('d');
  2458  0E46  3064               	movlw	100
  2459  0E47  160A  118A  2769  120A  158A  	fcall	_write_char
  2460                           
  2461                           ;Button_src.c: 65:             write_char(':');
  2462  0E4C  303A               	movlw	58
  2463  0E4D  160A  118A  2769  120A  158A  	fcall	_write_char
  2464                           
  2465                           ;Button_src.c: 67:             write_cmd(0x98);
  2466  0E52  3098               	movlw	152
  2467  0E53  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2468  0E58                     l2936:	
  2469                           
  2470                           ;Button_src.c: 68:             RC0 = 1;
  2471  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0E5A  1407               	bsf	7,0	;volatile
  2474  0E5B                     l2938:	
  2475                           
  2476                           ;Button_src.c: 69:             RC1 = 0;
  2477  0E5B  1087               	bcf	7,1	;volatile
  2478  0E5C                     l2940:	
  2479                           
  2480                           ;Button_src.c: 70:             RC2 = 1;
  2481  0E5C  1507               	bsf	7,2	;volatile
  2482  0E5D                     l2942:	
  2483                           
  2484                           ;Button_src.c: 71:             RC3 = 1;
  2485  0E5D  1587               	bsf	7,3	;volatile
  2486  0E5E                     l2944:	
  2487                           
  2488                           ;Button_src.c: 72:             t = 0;
  2489  0E5E  01B5               	clrf	_t
  2490  0E5F  01B6               	clrf	_t+1
  2491  0E60                     l2946:	
  2492                           
  2493                           ;Button_src.c: 73:             w = 0;
  2494  0E60  01B3               	clrf	_w
  2495  0E61  01B4               	clrf	_w+1
  2496  0E62                     l2948:	
  2497                           
  2498                           ;Button_src.c: 74:             x = 0;
  2499  0E62  01B1               	clrf	_x
  2500  0E63  01B2               	clrf	_x+1
  2501  0E64                     l2950:	
  2502                           
  2503                           ;Button_src.c: 75:             y = 0;
  2504  0E64  01AF               	clrf	_y
  2505  0E65  01B0               	clrf	_y+1
  2506  0E66                     l2952:	
  2507                           
  2508                           ;Button_src.c: 76:             x = 0x00;
  2509  0E66  01B1               	clrf	_x
  2510  0E67  01B2               	clrf	_x+1
  2511  0E68                     l2954:	
  2512                           
  2513                           ;Button_src.c: 78:                  RC0 = 1;
  2514  0E68  1407               	bsf	7,0	;volatile
  2515  0E69                     l2956:	
  2516                           
  2517                           ;Button_src.c: 79:                  RC1 = 0;
  2518  0E69  1087               	bcf	7,1	;volatile
  2519  0E6A                     l2958:	
  2520                           
  2521                           ;Button_src.c: 80:                  RC2 = 1;
  2522  0E6A  1507               	bsf	7,2	;volatile
  2523  0E6B                     l2960:	
  2524                           
  2525                           ;Button_src.c: 81:                  RC3 = 1;
  2526  0E6B  1587               	bsf	7,3	;volatile
  2527  0E6C                     l2962:	
  2528                           
  2529                           ;Button_src.c: 83:                 if(RC7==0){
  2530  0E6C  1B87               	btfsc	7,7	;volatile
  2531  0E6D  2E6F               	goto	u1761
  2532  0E6E  2E70               	goto	u1760
  2533  0E6F                     u1761:	
  2534  0E6F  2ED3               	goto	l2982
  2535  0E70                     u1760:	
  2536  0E70                     l2964:	
  2537                           
  2538                           ;Button_src.c: 84:                     write_cmd(0x98);
  2539  0E70  3098               	movlw	152
  2540  0E71  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2541  0E76                     l2966:	
  2542                           
  2543                           ;Button_src.c: 85:                     x++;
  2544  0E76  3001               	movlw	1
  2545  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0E79  07B1               	addwf	_x,f
  2548  0E7A  1803               	skipnc
  2549  0E7B  0AB2               	incf	_x+1,f
  2550  0E7C  3000               	movlw	0
  2551  0E7D  07B2               	addwf	_x+1,f
  2552  0E7E                     l2968:	
  2553                           
  2554                           ;Button_src.c: 86:                     y = (unsigned char )y;
  2555  0E7E  082F               	movf	_y,w
  2556  0E7F  00D0               	movwf	??_thermometer_threshhold_settings
  2557  0E80  01D1               	clrf	??_thermometer_threshhold_settings+1
  2558  0E81  0850               	movf	??_thermometer_threshhold_settings,w
  2559  0E82  00AF               	movwf	_y
  2560  0E83  0851               	movf	??_thermometer_threshhold_settings+1,w
  2561  0E84  00B0               	movwf	_y+1
  2562  0E85                     l2970:	
  2563                           
  2564                           ;Button_src.c: 87:                     x = (unsigned char )(modulus_func(x,10));
  2565  0E85  0832               	movf	_x+1,w
  2566  0E86  00F8               	movwf	modulus_func@x+1
  2567  0E87  0831               	movf	_x,w
  2568  0E88  00F7               	movwf	modulus_func@x
  2569  0E89  300A               	movlw	10
  2570  0E8A  00F9               	movwf	modulus_func@y
  2571  0E8B  3000               	movlw	0
  2572  0E8C  00FA               	movwf	modulus_func@y+1
  2573  0E8D  160A  118A  26B2  120A  158A  	fcall	_modulus_func
  2574  0E92  0877               	movf	?_modulus_func,w
  2575  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0E95  00D0               	movwf	??_thermometer_threshhold_settings
  2578  0E96  01D1               	clrf	??_thermometer_threshhold_settings+1
  2579  0E97  0850               	movf	??_thermometer_threshhold_settings,w
  2580  0E98  00B1               	movwf	_x
  2581  0E99  0851               	movf	??_thermometer_threshhold_settings+1,w
  2582  0E9A  00B2               	movwf	_x+1
  2583  0E9B                     l2972:	
  2584                           
  2585                           ;Button_src.c: 88:                     write_char(y + '0');
  2586  0E9B  082F               	movf	_y,w
  2587  0E9C  3E30               	addlw	48
  2588  0E9D  160A  118A  2769  120A  158A  	fcall	_write_char
  2589  0EA2                     l2974:	
  2590                           
  2591                           ;Button_src.c: 89:                     write_char(x + '0');
  2592  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  2593  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  2594  0EA4  0831               	movf	_x,w
  2595  0EA5  3E30               	addlw	48
  2596  0EA6  160A  118A  2769  120A  158A  	fcall	_write_char
  2597  0EAB                     l2976:	
  2598                           
  2599                           ;Button_src.c: 90:                     y = incrementor(y,x,'9');
  2600  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0EAD  0830               	movf	_y+1,w
  2603  0EAE  00CC               	movwf	incrementor@upper_val+1
  2604  0EAF  082F               	movf	_y,w
  2605  0EB0  00CB               	movwf	incrementor@upper_val
  2606  0EB1  0832               	movf	_x+1,w
  2607  0EB2  00CE               	movwf	incrementor@lower_val+1
  2608  0EB3  0831               	movf	_x,w
  2609  0EB4  00CD               	movwf	incrementor@lower_val
  2610  0EB5  3039               	movlw	57
  2611  0EB6  00D0               	movwf	??_thermometer_threshhold_settings
  2612  0EB7  0850               	movf	??_thermometer_threshhold_settings,w
  2613  0EB8  00CF               	movwf	incrementor@z
  2614  0EB9  120A  158A  2023  120A  158A  	fcall	_incrementor
  2615  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0EC0  00D1               	movwf	??_thermometer_threshhold_settings+1
  2618  0EC1  01D2               	clrf	??_thermometer_threshhold_settings+2
  2619  0EC2  0851               	movf	??_thermometer_threshhold_settings+1,w
  2620  0EC3  00AF               	movwf	_y
  2621  0EC4  0852               	movf	??_thermometer_threshhold_settings+2,w
  2622  0EC5  00B0               	movwf	_y+1
  2623  0EC6                     l2978:	
  2624                           
  2625                           ;Button_src.c: 91:                     t = x;
  2626  0EC6  0832               	movf	_x+1,w
  2627  0EC7  00B6               	movwf	_t+1
  2628  0EC8  0831               	movf	_x,w
  2629  0EC9  00B5               	movwf	_t
  2630  0ECA                     l2980:	
  2631                           
  2632                           ;Button_src.c: 92:                     w = y;
  2633  0ECA  0830               	movf	_y+1,w
  2634  0ECB  00B4               	movwf	_w+1
  2635  0ECC  082F               	movf	_y,w
  2636  0ECD  00B3               	movwf	_w
  2637                           
  2638                           ;Button_src.c: 93:                     button_delay();
  2639  0ECE  160A  118A  2710  120A  158A  	fcall	_button_delay
  2640  0ED3                     l2982:	
  2641                           
  2642                           ;Button_src.c: 95:                   RC0 = 0;
  2643  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0ED5  1007               	bcf	7,0	;volatile
  2646  0ED6                     l2984:	
  2647                           
  2648                           ;Button_src.c: 96:                     RC1 = 1;
  2649  0ED6  1487               	bsf	7,1	;volatile
  2650  0ED7                     l2986:	
  2651                           
  2652                           ;Button_src.c: 97:                     RC2 = 1;
  2653  0ED7  1507               	bsf	7,2	;volatile
  2654  0ED8                     l2988:	
  2655                           
  2656                           ;Button_src.c: 98:                     RC3 = 1;
  2657  0ED8  1587               	bsf	7,3	;volatile
  2658  0ED9                     l2990:	
  2659                           
  2660                           ;Button_src.c: 99:                     if(RC6 == 0){
  2661  0ED9  1B07               	btfsc	7,6	;volatile
  2662  0EDA  2EDC               	goto	u1771
  2663  0EDB  2EDD               	goto	u1770
  2664  0EDC                     u1771:	
  2665  0EDC  2F2D               	goto	l456
  2666  0EDD                     u1770:	
  2667  0EDD                     l2992:	
  2668                           
  2669                           ;Button_src.c: 100:                         var1 = y;
  2670  0EDD  082F               	movf	_y,w
  2671  0EDE  00D0               	movwf	??_thermometer_threshhold_settings
  2672  0EDF  0850               	movf	??_thermometer_threshhold_settings,w
  2673  0EE0  00BB               	movwf	_var1
  2674                           
  2675                           ;Button_src.c: 101:                         var2 = x;
  2676  0EE1  0831               	movf	_x,w
  2677  0EE2  00D0               	movwf	??_thermometer_threshhold_settings
  2678  0EE3  0850               	movf	??_thermometer_threshhold_settings,w
  2679  0EE4  00BA               	movwf	_var2
  2680  0EE5                     l2994:	
  2681                           
  2682                           ;Button_src.c: 102:                         set_beep_threshhold(var1,var2);
  2683  0EE5  083A               	movf	_var2,w
  2684  0EE6  00D0               	movwf	??_thermometer_threshhold_settings
  2685  0EE7  0850               	movf	??_thermometer_threshhold_settings,w
  2686  0EE8  00F0               	movwf	set_beep_threshhold@y
  2687  0EE9  083B               	movf	_var1,w
  2688  0EEA  120A  158A  2000  120A  158A  	fcall	_set_beep_threshhold
  2689  0EEF                     l2996:	
  2690                           
  2691                           ;Button_src.c: 103:                         write_cmd(0x1);
  2692  0EEF  3001               	movlw	1
  2693  0EF0  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2694  0EF5                     l2998:	
  2695                           
  2696                           ;Button_src.c: 104:                         write_char('S');
  2697  0EF5  3053               	movlw	83
  2698  0EF6  160A  118A  2769  120A  158A  	fcall	_write_char
  2699  0EFB                     l3000:	
  2700                           
  2701                           ;Button_src.c: 105:                         write_char('A');
  2702  0EFB  3041               	movlw	65
  2703  0EFC  160A  118A  2769  120A  158A  	fcall	_write_char
  2704  0F01                     l3002:	
  2705                           
  2706                           ;Button_src.c: 106:                         write_char('V');
  2707  0F01  3056               	movlw	86
  2708  0F02  160A  118A  2769  120A  158A  	fcall	_write_char
  2709  0F07                     l3004:	
  2710                           
  2711                           ;Button_src.c: 107:                         write_char('E');
  2712  0F07  3045               	movlw	69
  2713  0F08  160A  118A  2769  120A  158A  	fcall	_write_char
  2714  0F0D                     l3006:	
  2715                           
  2716                           ;Button_src.c: 108:                         write_char('D');
  2717  0F0D  3044               	movlw	68
  2718  0F0E  160A  118A  2769  120A  158A  	fcall	_write_char
  2719  0F13                     l3008:	
  2720                           
  2721                           ;Button_src.c: 109:                         for(int i=0;i<30000;i++);
  2722  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0F15  01D3               	clrf	thermometer_threshhold_settings@i
  2725  0F16  01D4               	clrf	thermometer_threshhold_settings@i+1
  2726  0F17                     l3014:	
  2727  0F17  3001               	movlw	1
  2728  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0F1A  07D3               	addwf	thermometer_threshhold_settings@i,f
  2731  0F1B  1803               	skipnc
  2732  0F1C  0AD4               	incf	thermometer_threshhold_settings@i+1,f
  2733  0F1D  3000               	movlw	0
  2734  0F1E  07D4               	addwf	thermometer_threshhold_settings@i+1,f
  2735  0F1F                     l3016:	
  2736  0F1F  0854               	movf	thermometer_threshhold_settings@i+1,w
  2737  0F20  3A80               	xorlw	128
  2738  0F21  00FF               	movwf	btemp+1
  2739  0F22  30F5               	movlw	245
  2740  0F23  027F               	subwf	btemp+1,w
  2741  0F24  1D03               	skipz
  2742  0F25  2F28               	goto	u1785
  2743  0F26  3030               	movlw	48
  2744  0F27  0253               	subwf	thermometer_threshhold_settings@i,w
  2745  0F28                     u1785:	
  2746  0F28  1C03               	skipc
  2747  0F29  2F2B               	goto	u1781
  2748  0F2A  2F2C               	goto	u1780
  2749  0F2B                     u1781:	
  2750  0F2B  2F17               	goto	l3014
  2751  0F2C                     u1780:	
  2752  0F2C  2FFF               	goto	l459
  2753  0F2D                     l456:	
  2754                           ;Button_src.c: 111:                     }
  2755                           
  2756                           
  2757                           ;Button_src.c: 112:                  RC0 = 1;
  2758  0F2D  1407               	bsf	7,0	;volatile
  2759                           
  2760                           ;Button_src.c: 113:                  RC1 = 1;
  2761  0F2E  1487               	bsf	7,1	;volatile
  2762                           
  2763                           ;Button_src.c: 114:                  RC2 = 0;
  2764  0F2F  1107               	bcf	7,2	;volatile
  2765                           
  2766                           ;Button_src.c: 115:                  RC3 = 1;
  2767  0F30  1587               	bsf	7,3	;volatile
  2768                           
  2769                           ;Button_src.c: 117:                  if(RC7 == 0){
  2770  0F31  1B87               	btfsc	7,7	;volatile
  2771  0F32  2F34               	goto	u1791
  2772  0F33  2F35               	goto	u1790
  2773  0F34                     u1791:	
  2774  0F34  2FAB               	goto	l3038
  2775  0F35                     u1790:	
  2776  0F35                     l3018:	
  2777                           
  2778                           ;Button_src.c: 118:                     write_cmd(0x98);
  2779  0F35  3098               	movlw	152
  2780  0F36  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2781  0F3B                     l3020:	
  2782                           
  2783                           ;Button_src.c: 119:                       t--;
  2784  0F3B  3001               	movlw	1
  2785  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0F3E  02B5               	subwf	_t,f
  2788  0F3F  3000               	movlw	0
  2789  0F40  1C03               	skipc
  2790  0F41  03B6               	decf	_t+1,f
  2791  0F42  02B6               	subwf	_t+1,f
  2792  0F43                     l3022:	
  2793                           
  2794                           ;Button_src.c: 120:                     w = (unsigned char )w;
  2795  0F43  0833               	movf	_w,w
  2796  0F44  00D0               	movwf	??_thermometer_threshhold_settings
  2797  0F45  01D1               	clrf	??_thermometer_threshhold_settings+1
  2798  0F46  0850               	movf	??_thermometer_threshhold_settings,w
  2799  0F47  00B3               	movwf	_w
  2800  0F48  0851               	movf	??_thermometer_threshhold_settings+1,w
  2801  0F49  00B4               	movwf	_w+1
  2802  0F4A                     l3024:	
  2803                           
  2804                           ;Button_src.c: 121:                     t = (unsigned char )(modulus_func(t,10));
  2805  0F4A  0836               	movf	_t+1,w
  2806  0F4B  00F8               	movwf	modulus_func@x+1
  2807  0F4C  0835               	movf	_t,w
  2808  0F4D  00F7               	movwf	modulus_func@x
  2809  0F4E  300A               	movlw	10
  2810  0F4F  00F9               	movwf	modulus_func@y
  2811  0F50  3000               	movlw	0
  2812  0F51  00FA               	movwf	modulus_func@y+1
  2813  0F52  160A  118A  26B2  120A  158A  	fcall	_modulus_func
  2814  0F57  0877               	movf	?_modulus_func,w
  2815  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0F5A  00D0               	movwf	??_thermometer_threshhold_settings
  2818  0F5B  01D1               	clrf	??_thermometer_threshhold_settings+1
  2819  0F5C  0850               	movf	??_thermometer_threshhold_settings,w
  2820  0F5D  00B5               	movwf	_t
  2821  0F5E  0851               	movf	??_thermometer_threshhold_settings+1,w
  2822  0F5F  00B6               	movwf	_t+1
  2823  0F60                     l3026:	
  2824                           
  2825                           ;Button_src.c: 122:                     write_char(w + '0');
  2826  0F60  0833               	movf	_w,w
  2827  0F61  3E30               	addlw	48
  2828  0F62  160A  118A  2769  120A  158A  	fcall	_write_char
  2829  0F67                     l3028:	
  2830                           
  2831                           ;Button_src.c: 123:                     write_char(t + '0');
  2832  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  2833  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  2834  0F69  0835               	movf	_t,w
  2835  0F6A  3E30               	addlw	48
  2836  0F6B  160A  118A  2769  120A  158A  	fcall	_write_char
  2837  0F70                     l3030:	
  2838                           
  2839                           ;Button_src.c: 124:                     w = decrementor(w,t,'0');
  2840  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0F72  0834               	movf	_w+1,w
  2843  0F73  00CC               	movwf	decrementor@lower_val+1
  2844  0F74  0833               	movf	_w,w
  2845  0F75  00CB               	movwf	decrementor@lower_val
  2846  0F76  0836               	movf	_t+1,w
  2847  0F77  00CE               	movwf	decrementor@upper_val+1
  2848  0F78  0835               	movf	_t,w
  2849  0F79  00CD               	movwf	decrementor@upper_val
  2850  0F7A  3030               	movlw	48
  2851  0F7B  00D0               	movwf	??_thermometer_threshhold_settings
  2852  0F7C  0850               	movf	??_thermometer_threshhold_settings,w
  2853  0F7D  00CF               	movwf	decrementor@z
  2854  0F7E  120A  158A  207B  120A  158A  	fcall	_decrementor
  2855  0F83  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0F84  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0F85  00D1               	movwf	??_thermometer_threshhold_settings+1
  2858  0F86  01D2               	clrf	??_thermometer_threshhold_settings+2
  2859  0F87  0851               	movf	??_thermometer_threshhold_settings+1,w
  2860  0F88  00B3               	movwf	_w
  2861  0F89  0852               	movf	??_thermometer_threshhold_settings+2,w
  2862  0F8A  00B4               	movwf	_w+1
  2863  0F8B                     l3032:	
  2864                           
  2865                           ;Button_src.c: 125:                     if((t + '0')=='0'){
  2866  0F8B  0835               	movf	_t,w
  2867  0F8C  3E30               	addlw	48
  2868  0F8D  00D0               	movwf	??_thermometer_threshhold_settings
  2869  0F8E  0836               	movf	_t+1,w
  2870  0F8F  1803               	skipnc
  2871  0F90  3E01               	addlw	1
  2872  0F91  3E00               	addlw	0
  2873  0F92  00D1               	movwf	??_thermometer_threshhold_settings+1
  2874  0F93  3030               	movlw	48
  2875  0F94  0650               	xorwf	??_thermometer_threshhold_settings,w
  2876  0F95  0451               	iorwf	??_thermometer_threshhold_settings+1,w
  2877  0F96  1D03               	btfss	3,2
  2878  0F97  2F99               	goto	u1801
  2879  0F98  2F9A               	goto	u1800
  2880  0F99                     u1801:	
  2881  0F99  2F9E               	goto	l461
  2882  0F9A                     u1800:	
  2883  0F9A                     l3034:	
  2884                           
  2885                           ;Button_src.c: 126:                         t = 10;
  2886  0F9A  300A               	movlw	10
  2887  0F9B  00B5               	movwf	_t
  2888  0F9C  3000               	movlw	0
  2889  0F9D  00B6               	movwf	_t+1
  2890  0F9E                     l461:	
  2891                           ;Button_src.c: 127:                     }
  2892                           
  2893                           
  2894                           ;Button_src.c: 129:                     x = t;
  2895  0F9E  0836               	movf	_t+1,w
  2896  0F9F  00B2               	movwf	_x+1
  2897  0FA0  0835               	movf	_t,w
  2898  0FA1  00B1               	movwf	_x
  2899                           
  2900                           ;Button_src.c: 130:                     y = w;
  2901  0FA2  0834               	movf	_w+1,w
  2902  0FA3  00B0               	movwf	_y+1
  2903  0FA4  0833               	movf	_w,w
  2904  0FA5  00AF               	movwf	_y
  2905  0FA6                     l3036:	
  2906                           
  2907                           ;Button_src.c: 131:                     button_delay();
  2908  0FA6  160A  118A  2710  120A  158A  	fcall	_button_delay
  2909  0FAB                     l3038:	
  2910                           
  2911                           ;Button_src.c: 133:                 RC0 = 0;
  2912  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0FAD  1007               	bcf	7,0	;volatile
  2915  0FAE                     l3040:	
  2916                           
  2917                           ;Button_src.c: 134:                 RC1 = 1;
  2918  0FAE  1487               	bsf	7,1	;volatile
  2919  0FAF                     l3042:	
  2920                           
  2921                           ;Button_src.c: 135:                 RC2 = 1;
  2922  0FAF  1507               	bsf	7,2	;volatile
  2923  0FB0                     l3044:	
  2924                           
  2925                           ;Button_src.c: 136:                 RC3 = 1;
  2926  0FB0  1587               	bsf	7,3	;volatile
  2927  0FB1                     l3046:	
  2928                           
  2929                           ;Button_src.c: 137:                     if(RC6 == 0){
  2930  0FB1  1B07               	btfsc	7,6	;volatile
  2931  0FB2  2FB4               	goto	u1811
  2932  0FB3  2FB5               	goto	u1810
  2933  0FB4                     u1811:	
  2934  0FB4  2FF1               	goto	l462
  2935  0FB5                     u1810:	
  2936  0FB5                     l3048:	
  2937                           
  2938                           ;Button_src.c: 138:                         var1 = w;
  2939  0FB5  0833               	movf	_w,w
  2940  0FB6  00D0               	movwf	??_thermometer_threshhold_settings
  2941  0FB7  0850               	movf	??_thermometer_threshhold_settings,w
  2942  0FB8  00BB               	movwf	_var1
  2943                           
  2944                           ;Button_src.c: 139:                         var2 = t;
  2945  0FB9  0835               	movf	_t,w
  2946  0FBA  00D0               	movwf	??_thermometer_threshhold_settings
  2947  0FBB  0850               	movf	??_thermometer_threshhold_settings,w
  2948  0FBC  00BA               	movwf	_var2
  2949  0FBD                     l3050:	
  2950                           
  2951                           ;Button_src.c: 140:                         set_beep_threshhold(var1,var2);
  2952  0FBD  083A               	movf	_var2,w
  2953  0FBE  00D0               	movwf	??_thermometer_threshhold_settings
  2954  0FBF  0850               	movf	??_thermometer_threshhold_settings,w
  2955  0FC0  00F0               	movwf	set_beep_threshhold@y
  2956  0FC1  083B               	movf	_var1,w
  2957  0FC2  120A  158A  2000  120A  158A  	fcall	_set_beep_threshhold
  2958  0FC7                     l3052:	
  2959                           
  2960                           ;Button_src.c: 141:                         write_cmd(0x1);
  2961  0FC7  3001               	movlw	1
  2962  0FC8  120A  118A  2007  120A  158A  	fcall	_write_cmd
  2963  0FCD                     l3054:	
  2964                           
  2965                           ;Button_src.c: 142:                         write_char('S');
  2966  0FCD  3053               	movlw	83
  2967  0FCE  160A  118A  2769  120A  158A  	fcall	_write_char
  2968  0FD3                     l3056:	
  2969                           
  2970                           ;Button_src.c: 143:                         write_char('A');
  2971  0FD3  3041               	movlw	65
  2972  0FD4  160A  118A  2769  120A  158A  	fcall	_write_char
  2973  0FD9                     l3058:	
  2974                           
  2975                           ;Button_src.c: 144:                         write_char('V');
  2976  0FD9  3056               	movlw	86
  2977  0FDA  160A  118A  2769  120A  158A  	fcall	_write_char
  2978  0FDF                     l3060:	
  2979                           
  2980                           ;Button_src.c: 145:                         write_char('E');
  2981  0FDF  3045               	movlw	69
  2982  0FE0  160A  118A  2769  120A  158A  	fcall	_write_char
  2983  0FE5                     l3062:	
  2984                           
  2985                           ;Button_src.c: 146:                         write_char('D');
  2986  0FE5  3044               	movlw	68
  2987  0FE6  160A  118A  2769  120A  158A  	fcall	_write_char
  2988  0FEB                     l3064:	
  2989                           
  2990                           ;Button_src.c: 147:                         button_delay();
  2991  0FEB  160A  118A  2710  120A  158A  	fcall	_button_delay
  2992  0FF0  2FFF               	goto	l459
  2993  0FF1                     l462:	
  2994                           ;Button_src.c: 149:                     }
  2995                           
  2996                           
  2997                           ;Button_src.c: 150:             RC0 = 0;
  2998  0FF1  1007               	bcf	7,0	;volatile
  2999                           
  3000                           ;Button_src.c: 151:             RC1 = 1;
  3001  0FF2  1487               	bsf	7,1	;volatile
  3002                           
  3003                           ;Button_src.c: 152:             RC2 = 1;
  3004  0FF3  1507               	bsf	7,2	;volatile
  3005                           
  3006                           ;Button_src.c: 153:             RC3 = 1;
  3007  0FF4  1587               	bsf	7,3	;volatile
  3008                           
  3009                           ;Button_src.c: 154:             if (RC7 == 0 ){
  3010  0FF5  1B87               	btfsc	7,7	;volatile
  3011  0FF6  2FF8               	goto	u1821
  3012  0FF7  2FF9               	goto	u1820
  3013  0FF8                     u1821:	
  3014  0FF8  2E68               	goto	l2954
  3015  0FF9                     u1820:	
  3016  0FF9                     l3068:	
  3017                           
  3018                           ;Button_src.c: 155:             write_cmd(0x1);
  3019  0FF9  3001               	movlw	1
  3020  0FFA  120A  118A  2007  120A  158A  	fcall	_write_cmd
  3021  0FFF                     l459:	
  3022  0FFF  0008               	return
  3023  1000                     __end_of_thermometer_threshhold_settings:	
  3024                           
  3025                           	psect	text3
  3026  0800                     __ptext3:	
  3027 ;; *************** function _set_beep_threshhold *****************
  3028 ;; Defined at:
  3029 ;;		line 5 in file "buzzer_src.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  x               1    wreg     unsigned char 
  3032 ;;  y               1    0[COMMON] unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  x               1    3[COMMON] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         1       0       0       0       0
  3045 ;;      Locals:         1       0       0       0       0
  3046 ;;      Temps:          2       0       0       0       0
  3047 ;;      Totals:         4       0       0       0       0
  3048 ;;Total ram usage:        4 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_thermometer_threshhold_settings
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           
  3058                           ;psect for function _set_beep_threshhold
  3059  0800                     _set_beep_threshhold:	
  3060                           
  3061                           ;incstack = 0
  3062                           ; Regs used in _set_beep_threshhold: [wreg]
  3063                           ;set_beep_threshhold@x stored from wreg
  3064  0800  00F3               	movwf	set_beep_threshhold@x
  3065  0801                     l2602:	
  3066                           
  3067                           ;buzzer_src.c: 6:     if (shi + '0' == x && ge + '0' == y){
  3068  0801  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0802  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0803  0846               	movf	_shi,w
  3071  0804  3E30               	addlw	48
  3072  0805  00F1               	movwf	??_set_beep_threshhold
  3073  0806  3000               	movlw	0
  3074  0807  1803               	skipnc
  3075  0808  3001               	movlw	1
  3076  0809  00F2               	movwf	??_set_beep_threshhold+1
  3077  080A  0873               	movf	set_beep_threshhold@x,w
  3078  080B  0671               	xorwf	??_set_beep_threshhold,w
  3079  080C  0472               	iorwf	??_set_beep_threshhold+1,w
  3080  080D  1D03               	skipz
  3081  080E  2810               	goto	u1351
  3082  080F  2811               	goto	u1350
  3083  0810                     u1351:	
  3084  0810  2821               	goto	l350
  3085  0811                     u1350:	
  3086  0811                     l2604:	
  3087  0811  0845               	movf	_ge,w
  3088  0812  3E30               	addlw	48
  3089  0813  00F1               	movwf	??_set_beep_threshhold
  3090  0814  3000               	movlw	0
  3091  0815  1803               	skipnc
  3092  0816  3001               	movlw	1
  3093  0817  00F2               	movwf	??_set_beep_threshhold+1
  3094  0818  0870               	movf	set_beep_threshhold@y,w
  3095  0819  0671               	xorwf	??_set_beep_threshhold,w
  3096  081A  0472               	iorwf	??_set_beep_threshhold+1,w
  3097  081B  1D03               	skipz
  3098  081C  281E               	goto	u1361
  3099  081D  281F               	goto	u1360
  3100  081E                     u1361:	
  3101  081E  2821               	goto	l350
  3102  081F                     u1360:	
  3103  081F                     l2606:	
  3104                           
  3105                           ;buzzer_src.c: 7:         RE1 = 1;
  3106  081F  1489               	bsf	9,1	;volatile
  3107                           
  3108                           ;buzzer_src.c: 8:         return;
  3109  0820  2822               	goto	l351
  3110  0821                     l350:	
  3111                           ;buzzer_src.c: 10:     else{
  3112                           
  3113                           
  3114                           ;buzzer_src.c: 11:         RE1 = 0;
  3115  0821  1089               	bcf	9,1	;volatile
  3116  0822                     l351:	
  3117  0822  0008               	return
  3118  0823                     __end_of_set_beep_threshhold:	
  3119                           
  3120                           	psect	text4
  3121  087B                     __ptext4:	
  3122 ;; *************** function _decrementor *****************
  3123 ;; Defined at:
  3124 ;;		line 19 in file "math_src.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  lower_val       2    0[BANK0 ] int 
  3127 ;;  upper_val       2    2[BANK0 ] int 
  3128 ;;  z               1    4[BANK0 ] unsigned char 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      unsigned char 
  3133 ;; Registers used:
  3134 ;;		wreg, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       5       0       0       0
  3141 ;;      Locals:         0       0       0       0       0
  3142 ;;      Temps:          2       0       0       0       0
  3143 ;;      Totals:         2       5       0       0       0
  3144 ;;Total ram usage:        7 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    2
  3147 ;; This function calls:
  3148 ;;		_modulus_func
  3149 ;; This function is called by:
  3150 ;;		_thermometer_threshhold_settings
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           
  3155                           ;psect for function _decrementor
  3156  087B                     _decrementor:	
  3157  087B                     l2630:	
  3158                           ;incstack = 0
  3159                           ; Regs used in _decrementor: [wreg+status,2+status,0+pclath+cstack]
  3160                           
  3161                           
  3162                           ;math_src.c: 20:      if(z == (upper_val + '0')){
  3163  087B  1283               	bcf	3,5	;RP0=0, select bank0
  3164  087C  1303               	bcf	3,6	;RP1=0, select bank0
  3165  087D  084D               	movf	decrementor@upper_val,w
  3166  087E  3E30               	addlw	48
  3167  087F  00FB               	movwf	??_decrementor
  3168  0880  084E               	movf	decrementor@upper_val+1,w
  3169  0881  1803               	skipnc
  3170  0882  3E01               	addlw	1
  3171  0883  3E00               	addlw	0
  3172  0884  00FC               	movwf	??_decrementor+1
  3173  0885  084F               	movf	decrementor@z,w
  3174  0886  067B               	xorwf	??_decrementor,w
  3175  0887  047C               	iorwf	??_decrementor+1,w
  3176  0888  1D03               	skipz
  3177  0889  288B               	goto	u1391
  3178  088A  288C               	goto	u1390
  3179  088B                     u1391:	
  3180  088B  28A5               	goto	l2636
  3181  088C                     u1390:	
  3182  088C                     l2632:	
  3183                           
  3184                           ;math_src.c: 21:         lower_val--;
  3185  088C  30FF               	movlw	255
  3186  088D  07CB               	addwf	decrementor@lower_val,f
  3187  088E  1803               	skipnc
  3188  088F  0ACC               	incf	decrementor@lower_val+1,f
  3189  0890  30FF               	movlw	255
  3190  0891  07CC               	addwf	decrementor@lower_val+1,f
  3191  0892                     l2634:	
  3192                           
  3193                           ;math_src.c: 22:         lower_val = (modulus_func(lower_val,10));
  3194  0892  084C               	movf	decrementor@lower_val+1,w
  3195  0893  00F8               	movwf	modulus_func@x+1
  3196  0894  084B               	movf	decrementor@lower_val,w
  3197  0895  00F7               	movwf	modulus_func@x
  3198  0896  300A               	movlw	10
  3199  0897  00F9               	movwf	modulus_func@y
  3200  0898  3000               	movlw	0
  3201  0899  00FA               	movwf	modulus_func@y+1
  3202  089A  160A  118A  26B2  120A  158A  	fcall	_modulus_func
  3203  089F  0878               	movf	?_modulus_func+1,w
  3204  08A0  1283               	bcf	3,5	;RP0=0, select bank0
  3205  08A1  1303               	bcf	3,6	;RP1=0, select bank0
  3206  08A2  00CC               	movwf	decrementor@lower_val+1
  3207  08A3  0877               	movf	?_modulus_func,w
  3208  08A4  00CB               	movwf	decrementor@lower_val
  3209  08A5                     l2636:	
  3210                           
  3211                           ;math_src.c: 24:      return lower_val;
  3212  08A5  084B               	movf	decrementor@lower_val,w
  3213  08A6                     l514:	
  3214  08A6  0008               	return
  3215  08A7                     __end_of_decrementor:	
  3216                           
  3217                           	psect	text5
  3218  1782                     __ptext5:	
  3219 ;; *************** function _lcd_init *****************
  3220 ;; Defined at:
  3221 ;;		line 14 in file "LCD_src.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  i               2    0        int 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      void 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3235 ;;      Params:         0       0       0       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         0       0       0       0       0
  3239 ;;Total ram usage:        0 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:    2
  3242 ;; This function calls:
  3243 ;;		_delay_screen
  3244 ;;		_write_cmd
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           
  3251                           ;psect for function _lcd_init
  3252  1782                     _lcd_init:	
  3253  1782                     l2756:	
  3254                           ;incstack = 0
  3255                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3256                           
  3257                           
  3258                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  3259  1782  1683               	bsf	3,5	;RP0=1, select bank1
  3260  1783  1303               	bcf	3,6	;RP1=0, select bank1
  3261  1784  0185               	clrf	5	;volatile
  3262  1785                     l2758:	
  3263                           
  3264                           ;LCD_src.c: 18:  RA0=0;
  3265  1785  1283               	bcf	3,5	;RP0=0, select bank0
  3266  1786  1303               	bcf	3,6	;RP1=0, select bank0
  3267  1787  1005               	bcf	5,0	;volatile
  3268  1788                     l2760:	
  3269                           
  3270                           ;LCD_src.c: 19:  delay_screen();
  3271  1788  160A  118A  2726  160A  118A  	fcall	_delay_screen
  3272  178D                     l2762:	
  3273                           
  3274                           ;LCD_src.c: 20:  RA0=1;
  3275  178D  1283               	bcf	3,5	;RP0=0, select bank0
  3276  178E  1303               	bcf	3,6	;RP1=0, select bank0
  3277  178F  1405               	bsf	5,0	;volatile
  3278  1790                     l2764:	
  3279                           
  3280                           ;LCD_src.c: 21:  RA2=1;
  3281  1790  1505               	bsf	5,2	;volatile
  3282  1791                     l2766:	
  3283                           
  3284                           ;LCD_src.c: 22:  write_cmd(0x30);
  3285  1791  3030               	movlw	48
  3286  1792  120A  118A  2007  160A  118A  	fcall	_write_cmd
  3287  1797                     l2768:	
  3288                           
  3289                           ;LCD_src.c: 23:  write_cmd(0x01);
  3290  1797  3001               	movlw	1
  3291  1798  120A  118A  2007  160A  118A  	fcall	_write_cmd
  3292  179D                     l2770:	
  3293                           
  3294                           ;LCD_src.c: 24:  write_cmd(0x06);
  3295  179D  3006               	movlw	6
  3296  179E  120A  118A  2007  160A  118A  	fcall	_write_cmd
  3297  17A3                     l2772:	
  3298                           
  3299                           ;LCD_src.c: 25:  write_cmd(0x0c);
  3300  17A3  300C               	movlw	12
  3301  17A4  120A  118A  2007  160A  118A  	fcall	_write_cmd
  3302  17A9                     l128:	
  3303  17A9  0008               	return
  3304  17AA                     __end_of_lcd_init:	
  3305                           
  3306                           	psect	text6
  3307  16A4                     __ptext6:	
  3308 ;; *************** function _initialise_buttons *****************
  3309 ;; Defined at:
  3310 ;;		line 10 in file "Button_src.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3324 ;;      Params:         0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _initialise_buttons
  3339  16A4                     _initialise_buttons:	
  3340  16A4                     l2774:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _initialise_buttons: [wreg+status,2]
  3343                           
  3344                           
  3345                           ;Button_src.c: 11:     ADCON1 = 0x06;
  3346  16A4  3006               	movlw	6
  3347  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  3348  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  3349  16A7  009F               	movwf	31	;volatile
  3350                           
  3351                           ;Button_src.c: 12:     TRISC = 0xf0;
  3352  16A8  30F0               	movlw	240
  3353  16A9  0087               	movwf	7	;volatile
  3354  16AA                     l2776:	
  3355                           
  3356                           ;Button_src.c: 13:     a = 0x00;
  3357  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  3358  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  3359  16AC  01C0               	clrf	_a
  3360  16AD                     l2778:	
  3361                           
  3362                           ;Button_src.c: 14:     b = 0x00;
  3363  16AD  01BF               	clrf	_b
  3364  16AE                     l2780:	
  3365                           
  3366                           ;Button_src.c: 15:     c = 0x00;
  3367  16AE  01BE               	clrf	_c
  3368  16AF                     l2782:	
  3369                           
  3370                           ;Button_src.c: 16:     z = 0;
  3371  16AF  01AD               	clrf	_z
  3372  16B0  01AE               	clrf	_z+1
  3373  16B1                     l449:	
  3374  16B1  0008               	return
  3375  16B2                     __end_of_initialise_buttons:	
  3376                           
  3377                           	psect	text7
  3378  1684                     __ptext7:	
  3379 ;; *************** function _init_temp *****************
  3380 ;; Defined at:
  3381 ;;		line 6 in file "Thermometer_src.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		status,2
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _init_temp
  3410  1684                     _init_temp:	
  3411  1684                     l1522:	
  3412                           ;incstack = 0
  3413                           ; Regs used in _init_temp: [status,2]
  3414                           
  3415                           
  3416                           ;Thermometer_src.c: 8:     TRISE=0X00;
  3417  1684  1683               	bsf	3,5	;RP0=1, select bank1
  3418  1685  1303               	bcf	3,6	;RP1=0, select bank1
  3419  1686  0189               	clrf	9	;volatile
  3420                           
  3421                           ;Thermometer_src.c: 9:     PORTE = 0X00;
  3422  1687  1283               	bcf	3,5	;RP0=0, select bank0
  3423  1688  1303               	bcf	3,6	;RP1=0, select bank0
  3424  1689  0189               	clrf	9	;volatile
  3425  168A                     l215:	
  3426  168A  0008               	return
  3427  168B                     __end_of_init_temp:	
  3428                           
  3429                           	psect	text8
  3430  169B                     __ptext8:	
  3431 ;; *************** function _init *****************
  3432 ;; Defined at:
  3433 ;;		line 5 in file "LCD_src.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       0       0       0       0
  3448 ;;      Locals:         0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         0       0       0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_main
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function _init
  3462  169B                     _init:	
  3463  169B                     l1530:	
  3464                           ;incstack = 0
  3465                           ; Regs used in _init: [wreg+status,2]
  3466                           
  3467                           
  3468                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  3469  169B  3007               	movlw	7
  3470  169C  1683               	bsf	3,5	;RP0=1, select bank1
  3471  169D  1303               	bcf	3,6	;RP1=0, select bank1
  3472  169E  009F               	movwf	31	;volatile
  3473  169F                     l1532:	
  3474                           
  3475                           ;LCD_src.c: 8:  TRISA0=1;
  3476  169F  1405               	bsf	5,0	;volatile
  3477  16A0                     l1534:	
  3478                           
  3479                           ;LCD_src.c: 9:  TRISD=0X00;
  3480  16A0  0188               	clrf	8	;volatile
  3481  16A1                     l1536:	
  3482                           
  3483                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  3484  16A1  0181               	clrf	1	;volatile
  3485  16A2                     l1538:	
  3486                           
  3487                           ;LCD_src.c: 11:  TRISE = 0X00;
  3488  16A2  0189               	clrf	9	;volatile
  3489  16A3                     l125:	
  3490  16A3  0008               	return
  3491  16A4                     __end_of_init:	
  3492                           
  3493                           	psect	text9
  3494  08A7                     __ptext9:	
  3495 ;; *************** function _get_time *****************
  3496 ;; Defined at:
  3497 ;;		line 26 in file "clock_src.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;		None
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  i               2    6[COMMON] int 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       0       0       0       0
  3512 ;;      Locals:         2       0       0       0       0
  3513 ;;      Temps:          1       0       0       0       0
  3514 ;;      Totals:         3       0       0       0       0
  3515 ;;Total ram usage:        3 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    1
  3518 ;; This function calls:
  3519 ;;		_time_read_1
  3520 ;;		_time_write_1
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _get_time
  3528  08A7                     _get_time:	
  3529  08A7                     l2840:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3532                           
  3533                           
  3534                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  3535  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  3536  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  3537  08A9  1686               	bsf	6,5	;volatile
  3538  08AA                     l2842:	
  3539                           
  3540                           ;clock_src.c: 30:    time_write_1(0xbf);
  3541  08AA  30BF               	movlw	191
  3542  08AB  160A  118A  27AA  120A  158A  	fcall	_time_write_1
  3543  08B0                     l2844:	
  3544                           
  3545                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  3546  08B0  01F6               	clrf	get_time@i
  3547  08B1  01F7               	clrf	get_time@i+1
  3548  08B2                     l2850:	
  3549                           
  3550                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  3551  08B2  120A  158A  20D5  120A  158A  	fcall	_time_read_1
  3552  08B7  00F5               	movwf	??_get_time
  3553  08B8  0876               	movf	get_time@i,w
  3554  08B9  3E20               	addlw	(low (_table1| 0))& (0+255)
  3555  08BA  0084               	movwf	4
  3556  08BB  0875               	movf	??_get_time,w
  3557  08BC  1383               	bcf	3,7	;select IRP bank0
  3558  08BD  0080               	movwf	0
  3559  08BE                     l2852:	
  3560                           
  3561                           ;clock_src.c: 34:      }
  3562  08BE  3001               	movlw	1
  3563  08BF  07F6               	addwf	get_time@i,f
  3564  08C0  1803               	skipnc
  3565  08C1  0AF7               	incf	get_time@i+1,f
  3566  08C2  3000               	movlw	0
  3567  08C3  07F7               	addwf	get_time@i+1,f
  3568  08C4                     l2854:	
  3569  08C4  0877               	movf	get_time@i+1,w
  3570  08C5  3A80               	xorlw	128
  3571  08C6  00FF               	movwf	btemp+1
  3572  08C7  3080               	movlw	128
  3573  08C8  027F               	subwf	btemp+1,w
  3574  08C9  1D03               	skipz
  3575  08CA  28CD               	goto	u1725
  3576  08CB  3007               	movlw	7
  3577  08CC  0276               	subwf	get_time@i,w
  3578  08CD                     u1725:	
  3579  08CD  1C03               	skipc
  3580  08CE  28D0               	goto	u1721
  3581  08CF  28D1               	goto	u1720
  3582  08D0                     u1721:	
  3583  08D0  28B2               	goto	l2850
  3584  08D1                     u1720:	
  3585  08D1                     l292:	
  3586                           
  3587                           ;clock_src.c: 35:    RB5=0;
  3588  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  3589  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  3590  08D3  1286               	bcf	6,5	;volatile
  3591  08D4                     l293:	
  3592  08D4  0008               	return
  3593  08D5                     __end_of_get_time:	
  3594                           
  3595                           	psect	text10
  3596  08D5                     __ptext10:	
  3597 ;; *************** function _time_read_1 *****************
  3598 ;; Defined at:
  3599 ;;		line 131 in file "clock_src.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  j               2    2[COMMON] int 
  3604 ;;  time_rx         1    4[COMMON] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      unsigned char 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, btemp+1
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         0       0       0       0       0
  3615 ;;      Locals:         3       0       0       0       0
  3616 ;;      Temps:          2       0       0       0       0
  3617 ;;      Totals:         5       0       0       0       0
  3618 ;;Total ram usage:        5 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_get_time
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function _time_read_1
  3629  08D5                     _time_read_1:	
  3630  08D5                     l2578:	
  3631                           ;incstack = 0
  3632                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  3633                           
  3634                           
  3635                           ;clock_src.c: 133:    unsigned char time_rx=0;
  3636  08D5  01F4               	clrf	time_read_1@time_rx
  3637  08D6                     l2580:	
  3638                           
  3639                           ;clock_src.c: 134:    int j;;clock_src.c: 135:    TRISB4=1;
  3640  08D6  1683               	bsf	3,5	;RP0=1, select bank1
  3641  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  3642  08D8  1606               	bsf	6,4	;volatile
  3643                           
  3644                           ;clock_src.c: 136:    for(j=0;j<8;j++)
  3645  08D9  01F2               	clrf	time_read_1@j
  3646  08DA  01F3               	clrf	time_read_1@j+1
  3647  08DB                     l310:	
  3648                           
  3649                           ;clock_src.c: 137:       {;clock_src.c: 138:         RB0=0;
  3650  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  3651  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  3652  08DD  1006               	bcf	6,0	;volatile
  3653  08DE                     l2586:	
  3654                           
  3655                           ;clock_src.c: 139:         time_rx=time_rx>>1;
  3656  08DE  0874               	movf	time_read_1@time_rx,w
  3657  08DF  00F0               	movwf	??_time_read_1
  3658  08E0  1003               	clrc
  3659  08E1  0C70               	rrf	??_time_read_1,w
  3660  08E2  00F1               	movwf	??_time_read_1+1
  3661  08E3  0871               	movf	??_time_read_1+1,w
  3662  08E4  00F4               	movwf	time_read_1@time_rx
  3663  08E5                     l2588:	
  3664                           
  3665                           ;clock_src.c: 140:         if(RB4)time_rx=time_rx|0x80;
  3666  08E5  1E06               	btfss	6,4	;volatile
  3667  08E6  28E8               	goto	u1331
  3668  08E7  28E9               	goto	u1330
  3669  08E8                     u1331:	
  3670  08E8  28EE               	goto	l2592
  3671  08E9                     u1330:	
  3672  08E9                     l2590:	
  3673  08E9  0874               	movf	time_read_1@time_rx,w
  3674  08EA  3880               	iorlw	128
  3675  08EB  00F0               	movwf	??_time_read_1
  3676  08EC  0870               	movf	??_time_read_1,w
  3677  08ED  00F4               	movwf	time_read_1@time_rx
  3678  08EE                     l2592:	
  3679                           
  3680                           ;clock_src.c: 142:        RB0=1;
  3681  08EE  1406               	bsf	6,0	;volatile
  3682  08EF                     l2594:	
  3683                           
  3684                           ;clock_src.c: 143:       }
  3685  08EF  3001               	movlw	1
  3686  08F0  07F2               	addwf	time_read_1@j,f
  3687  08F1  1803               	skipnc
  3688  08F2  0AF3               	incf	time_read_1@j+1,f
  3689  08F3  3000               	movlw	0
  3690  08F4  07F3               	addwf	time_read_1@j+1,f
  3691  08F5                     l2596:	
  3692  08F5  0873               	movf	time_read_1@j+1,w
  3693  08F6  3A80               	xorlw	128
  3694  08F7  00FF               	movwf	btemp+1
  3695  08F8  3080               	movlw	128
  3696  08F9  027F               	subwf	btemp+1,w
  3697  08FA  1D03               	skipz
  3698  08FB  28FE               	goto	u1345
  3699  08FC  3008               	movlw	8
  3700  08FD  0272               	subwf	time_read_1@j,w
  3701  08FE                     u1345:	
  3702  08FE  1C03               	skipc
  3703  08FF  2901               	goto	u1341
  3704  0900  2902               	goto	u1340
  3705  0901                     u1341:	
  3706  0901  28DB               	goto	l310
  3707  0902                     u1340:	
  3708  0902                     l311:	
  3709                           
  3710                           ;clock_src.c: 144:     TRISB4=0;
  3711  0902  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0903  1303               	bcf	3,6	;RP1=0, select bank1
  3713  0904  1206               	bcf	6,4	;volatile
  3714                           
  3715                           ;clock_src.c: 145:     RB0=0;
  3716  0905  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0906  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0907  1006               	bcf	6,0	;volatile
  3719  0908                     l2598:	
  3720                           
  3721                           ;clock_src.c: 146:     return(time_rx);
  3722  0908  0874               	movf	time_read_1@time_rx,w
  3723  0909                     l313:	
  3724  0909  0008               	return
  3725  090A                     __end_of_time_read_1:	
  3726                           
  3727                           	psect	text11
  3728  0C36                     __ptext11:	
  3729 ;; *************** function _get_temp *****************
  3730 ;; Defined at:
  3731 ;;		line 89 in file "Thermometer_src.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  i               2    0        int 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3745 ;;      Params:         0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0
  3747 ;;      Temps:          0       4       0       0       0
  3748 ;;      Totals:         0       4       0       0       0
  3749 ;;Total ram usage:        4 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    2
  3752 ;; This function calls:
  3753 ;;		___awdiv
  3754 ;;		___awmod
  3755 ;;		___lwdiv
  3756 ;;		___lwmod
  3757 ;;		_delay2
  3758 ;;		_read_byte
  3759 ;;		_reset_temp
  3760 ;;		_write_byte
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _get_temp
  3768  0C36                     _get_temp:	
  3769  0C36                     l2784:	
  3770                           ;incstack = 0
  3771                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3772                           
  3773                           
  3774                           ;Thermometer_src.c: 91: int i;;Thermometer_src.c: 92: TRISE0 =1;
  3775  0C36  1683               	bsf	3,5	;RP0=1, select bank1
  3776  0C37  1303               	bcf	3,6	;RP1=0, select bank1
  3777  0C38  1409               	bsf	9,0	;volatile
  3778  0C39                     l2786:	
  3779                           
  3780                           ;Thermometer_src.c: 93: reset_temp();
  3781  0C39  120A  158A  217E  120A  158A  	fcall	_reset_temp
  3782                           
  3783                           ;Thermometer_src.c: 94: write_byte(0XCC);
  3784  0C3E  30CC               	movlw	204
  3785  0C3F  120A  158A  21B8  120A  158A  	fcall	_write_byte
  3786  0C44                     l2788:	
  3787                           
  3788                           ;Thermometer_src.c: 95: delay2();
  3789  0C44  160A  118A  273C  120A  158A  	fcall	_delay2
  3790  0C49                     l2790:	
  3791                           
  3792                           ;Thermometer_src.c: 96: write_byte(0X44);
  3793  0C49  3044               	movlw	68
  3794  0C4A  120A  158A  21B8  120A  158A  	fcall	_write_byte
  3795  0C4F                     l2792:	
  3796                           
  3797                           ;Thermometer_src.c: 98: reset_temp();
  3798  0C4F  120A  158A  217E  120A  158A  	fcall	_reset_temp
  3799  0C54                     l2794:	
  3800                           
  3801                           ;Thermometer_src.c: 99: write_byte(0XCC);
  3802  0C54  30CC               	movlw	204
  3803  0C55  120A  158A  21B8  120A  158A  	fcall	_write_byte
  3804  0C5A                     l2796:	
  3805                           
  3806                           ;Thermometer_src.c: 100: write_byte(0XBE);
  3807  0C5A  30BE               	movlw	190
  3808  0C5B  120A  158A  21B8  120A  158A  	fcall	_write_byte
  3809  0C60                     l2798:	
  3810                           
  3811                           ;Thermometer_src.c: 101: TLV=read_byte();
  3812  0C60  120A  158A  2144  120A  158A  	fcall	_read_byte
  3813  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  3814  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  3815  0C67  00CB               	movwf	??_get_temp
  3816  0C68  084B               	movf	??_get_temp,w
  3817  0C69  00CA               	movwf	_TLV
  3818  0C6A                     l2800:	
  3819                           
  3820                           ;Thermometer_src.c: 102: THV=read_byte();
  3821  0C6A  120A  158A  2144  120A  158A  	fcall	_read_byte
  3822  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  3823  0C70  1303               	bcf	3,6	;RP1=0, select bank0
  3824  0C71  00CB               	movwf	??_get_temp
  3825  0C72  084B               	movf	??_get_temp,w
  3826  0C73  00C9               	movwf	_THV
  3827  0C74                     l2802:	
  3828                           
  3829                           ;Thermometer_src.c: 103: TRISE0 =1;
  3830  0C74  1683               	bsf	3,5	;RP0=1, select bank1
  3831  0C75  1303               	bcf	3,6	;RP1=0, select bank1
  3832  0C76  1409               	bsf	9,0	;volatile
  3833  0C77                     l2804:	
  3834                           
  3835                           ;Thermometer_src.c: 104: TZ=(TLV>>4)|(THV<<4)&0X3f;
  3836  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  3838  0C79  0849               	movf	_THV,w
  3839  0C7A  00CB               	movwf	??_get_temp
  3840  0C7B  3004               	movlw	4
  3841  0C7C                     u1655:	
  3842  0C7C  1003               	clrc
  3843  0C7D  0DCB               	rlf	??_get_temp,f
  3844  0C7E  3EFF               	addlw	-1
  3845  0C7F  1D03               	skipz
  3846  0C80  2C7C               	goto	u1655
  3847  0C81  303F               	movlw	63
  3848  0C82  054B               	andwf	??_get_temp,w
  3849  0C83  00CC               	movwf	??_get_temp+1
  3850  0C84  084A               	movf	_TLV,w
  3851  0C85  00CD               	movwf	??_get_temp+2
  3852  0C86  3004               	movlw	4
  3853  0C87                     u1665:	
  3854  0C87  1003               	clrc
  3855  0C88  0CCD               	rrf	??_get_temp+2,f
  3856  0C89  3EFF               	addlw	-1
  3857  0C8A  1D03               	skipz
  3858  0C8B  2C87               	goto	u1665
  3859  0C8C  084D               	movf	??_get_temp+2,w
  3860  0C8D  044C               	iorwf	??_get_temp+1,w
  3861  0C8E  00CE               	movwf	??_get_temp+3
  3862  0C8F  084E               	movf	??_get_temp+3,w
  3863  0C90  00C8               	movwf	_TZ
  3864  0C91                     l2806:	
  3865                           
  3866                           ;Thermometer_src.c: 105: TX=TLV<<4;
  3867  0C91  084A               	movf	_TLV,w
  3868  0C92  00CB               	movwf	??_get_temp
  3869  0C93  3003               	movlw	3
  3870  0C94                     u1675:	
  3871  0C94  1003               	clrc
  3872  0C95  0DCB               	rlf	??_get_temp,f
  3873  0C96  3EFF               	addlw	-1
  3874  0C97  1D03               	skipz
  3875  0C98  2C94               	goto	u1675
  3876  0C99  1003               	clrc
  3877  0C9A  0D4B               	rlf	??_get_temp,w
  3878  0C9B  00CC               	movwf	??_get_temp+1
  3879  0C9C  084C               	movf	??_get_temp+1,w
  3880  0C9D  00C7               	movwf	_TX
  3881  0C9E                     l2810:	
  3882                           
  3883                           ;Thermometer_src.c: 107: ge=TZ%10;
  3884  0C9E  300A               	movlw	10
  3885  0C9F  00F0               	movwf	___awmod@divisor
  3886  0CA0  3000               	movlw	0
  3887  0CA1  00F1               	movwf	___awmod@divisor+1
  3888  0CA2  0848               	movf	_TZ,w
  3889  0CA3  00CB               	movwf	??_get_temp
  3890  0CA4  01CC               	clrf	??_get_temp+1
  3891  0CA5  084B               	movf	??_get_temp,w
  3892  0CA6  00F2               	movwf	___awmod@dividend
  3893  0CA7  084C               	movf	??_get_temp+1,w
  3894  0CA8  00F3               	movwf	___awmod@dividend+1
  3895  0CA9  120A  158A  2237  120A  158A  	fcall	___awmod
  3896  0CAE  0870               	movf	?___awmod,w
  3897  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0CB1  00CD               	movwf	??_get_temp+2
  3900  0CB2  084D               	movf	??_get_temp+2,w
  3901  0CB3  00C5               	movwf	_ge
  3902                           
  3903                           ;Thermometer_src.c: 108: shi=TZ/10;
  3904  0CB4  300A               	movlw	10
  3905  0CB5  00F0               	movwf	___awdiv@divisor
  3906  0CB6  3000               	movlw	0
  3907  0CB7  00F1               	movwf	___awdiv@divisor+1
  3908  0CB8  0848               	movf	_TZ,w
  3909  0CB9  00CB               	movwf	??_get_temp
  3910  0CBA  01CC               	clrf	??_get_temp+1
  3911  0CBB  084B               	movf	??_get_temp,w
  3912  0CBC  00F2               	movwf	___awdiv@dividend
  3913  0CBD  084C               	movf	??_get_temp+1,w
  3914  0CBE  00F3               	movwf	___awdiv@dividend+1
  3915  0CBF  120A  158A  2290  120A  158A  	fcall	___awdiv
  3916  0CC4  0870               	movf	?___awdiv,w
  3917  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0CC7  00CD               	movwf	??_get_temp+2
  3920  0CC8  084D               	movf	??_get_temp+2,w
  3921  0CC9  00C6               	movwf	_shi
  3922  0CCA                     l2812:	
  3923                           
  3924                           ;Thermometer_src.c: 109: wd=0;
  3925  0CCA  01B7               	clrf	_wd
  3926  0CCB  01B8               	clrf	_wd+1
  3927  0CCC                     l2814:	
  3928                           
  3929                           ;Thermometer_src.c: 110: if (TX & 0x80) wd=wd+5000;
  3930  0CCC  1FC7               	btfss	_TX,7
  3931  0CCD  2CCF               	goto	u1681
  3932  0CCE  2CD0               	goto	u1680
  3933  0CCF                     u1681:	
  3934  0CCF  2CD8               	goto	l2818
  3935  0CD0                     u1680:	
  3936  0CD0                     l2816:	
  3937  0CD0  0837               	movf	_wd,w
  3938  0CD1  3E88               	addlw	136
  3939  0CD2  00B7               	movwf	_wd
  3940  0CD3  0838               	movf	_wd+1,w
  3941  0CD4  1803               	skipnc
  3942  0CD5  3E01               	addlw	1
  3943  0CD6  3E13               	addlw	19
  3944  0CD7  00B8               	movwf	_wd+1
  3945  0CD8                     l2818:	
  3946                           
  3947                           ;Thermometer_src.c: 111: if (TX & 0x40) wd=wd+2500;
  3948  0CD8  1F47               	btfss	_TX,6
  3949  0CD9  2CDB               	goto	u1691
  3950  0CDA  2CDC               	goto	u1690
  3951  0CDB                     u1691:	
  3952  0CDB  2CE4               	goto	l2822
  3953  0CDC                     u1690:	
  3954  0CDC                     l2820:	
  3955  0CDC  0837               	movf	_wd,w
  3956  0CDD  3EC4               	addlw	196
  3957  0CDE  00B7               	movwf	_wd
  3958  0CDF  0838               	movf	_wd+1,w
  3959  0CE0  1803               	skipnc
  3960  0CE1  3E01               	addlw	1
  3961  0CE2  3E09               	addlw	9
  3962  0CE3  00B8               	movwf	_wd+1
  3963  0CE4                     l2822:	
  3964                           
  3965                           ;Thermometer_src.c: 112: if (TX & 0x20) wd=wd+1250;
  3966  0CE4  1EC7               	btfss	_TX,5
  3967  0CE5  2CE7               	goto	u1701
  3968  0CE6  2CE8               	goto	u1700
  3969  0CE7                     u1701:	
  3970  0CE7  2CF0               	goto	l2826
  3971  0CE8                     u1700:	
  3972  0CE8                     l2824:	
  3973  0CE8  0837               	movf	_wd,w
  3974  0CE9  3EE2               	addlw	226
  3975  0CEA  00B7               	movwf	_wd
  3976  0CEB  0838               	movf	_wd+1,w
  3977  0CEC  1803               	skipnc
  3978  0CED  3E01               	addlw	1
  3979  0CEE  3E04               	addlw	4
  3980  0CEF  00B8               	movwf	_wd+1
  3981  0CF0                     l2826:	
  3982                           
  3983                           ;Thermometer_src.c: 113: if (TX & 0x10) wd=wd+625;
  3984  0CF0  1E47               	btfss	_TX,4
  3985  0CF1  2CF3               	goto	u1711
  3986  0CF2  2CF4               	goto	u1710
  3987  0CF3                     u1711:	
  3988  0CF3  2CFC               	goto	l2830
  3989  0CF4                     u1710:	
  3990  0CF4                     l2828:	
  3991  0CF4  0837               	movf	_wd,w
  3992  0CF5  3E71               	addlw	113
  3993  0CF6  00B7               	movwf	_wd
  3994  0CF7  0838               	movf	_wd+1,w
  3995  0CF8  1803               	skipnc
  3996  0CF9  3E01               	addlw	1
  3997  0CFA  3E02               	addlw	2
  3998  0CFB  00B8               	movwf	_wd+1
  3999  0CFC                     l2830:	
  4000                           
  4001                           ;Thermometer_src.c: 114: shifen=wd/1000;
  4002  0CFC  30E8               	movlw	232
  4003  0CFD  00F6               	movwf	___lwdiv@divisor
  4004  0CFE  3003               	movlw	3
  4005  0CFF  00F7               	movwf	___lwdiv@divisor+1
  4006  0D00  0838               	movf	_wd+1,w
  4007  0D01  00F9               	movwf	___lwdiv@dividend+1
  4008  0D02  0837               	movf	_wd,w
  4009  0D03  00F8               	movwf	___lwdiv@dividend
  4010  0D04  120A  158A  21F3  120A  158A  	fcall	___lwdiv
  4011  0D09  0876               	movf	?___lwdiv,w
  4012  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  4014  0D0C  00CB               	movwf	??_get_temp
  4015  0D0D  084B               	movf	??_get_temp,w
  4016  0D0E  00C4               	movwf	_shifen
  4017  0D0F                     l2832:	
  4018                           
  4019                           ;Thermometer_src.c: 115: baifen=(wd%1000)/100;
  4020  0D0F  3064               	movlw	100
  4021  0D10  00F6               	movwf	___lwdiv@divisor
  4022  0D11  3000               	movlw	0
  4023  0D12  00F7               	movwf	___lwdiv@divisor+1
  4024  0D13  0838               	movf	_wd+1,w
  4025  0D14  00F3               	movwf	___lwmod@dividend+1
  4026  0D15  0837               	movf	_wd,w
  4027  0D16  00F2               	movwf	___lwmod@dividend
  4028  0D17  30E8               	movlw	232
  4029  0D18  00F0               	movwf	___lwmod@divisor
  4030  0D19  3003               	movlw	3
  4031  0D1A  00F1               	movwf	___lwmod@divisor+1
  4032  0D1B  120A  158A  210A  120A  158A  	fcall	___lwmod
  4033  0D20  0871               	movf	?___lwmod+1,w
  4034  0D21  00F9               	movwf	___lwdiv@dividend+1
  4035  0D22  0870               	movf	?___lwmod,w
  4036  0D23  00F8               	movwf	___lwdiv@dividend
  4037  0D24  120A  158A  21F3  120A  158A  	fcall	___lwdiv
  4038  0D29  0876               	movf	?___lwdiv,w
  4039  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0D2C  00CB               	movwf	??_get_temp
  4042  0D2D  084B               	movf	??_get_temp,w
  4043  0D2E  00C3               	movwf	_baifen
  4044  0D2F                     l2834:	
  4045                           
  4046                           ;Thermometer_src.c: 116: qianfen=(wd%100)/10;
  4047  0D2F  300A               	movlw	10
  4048  0D30  00F6               	movwf	___lwdiv@divisor
  4049  0D31  3000               	movlw	0
  4050  0D32  00F7               	movwf	___lwdiv@divisor+1
  4051  0D33  0838               	movf	_wd+1,w
  4052  0D34  00F3               	movwf	___lwmod@dividend+1
  4053  0D35  0837               	movf	_wd,w
  4054  0D36  00F2               	movwf	___lwmod@dividend
  4055  0D37  3064               	movlw	100
  4056  0D38  00F0               	movwf	___lwmod@divisor
  4057  0D39  3000               	movlw	0
  4058  0D3A  00F1               	movwf	___lwmod@divisor+1
  4059  0D3B  120A  158A  210A  120A  158A  	fcall	___lwmod
  4060  0D40  0871               	movf	?___lwmod+1,w
  4061  0D41  00F9               	movwf	___lwdiv@dividend+1
  4062  0D42  0870               	movf	?___lwmod,w
  4063  0D43  00F8               	movwf	___lwdiv@dividend
  4064  0D44  120A  158A  21F3  120A  158A  	fcall	___lwdiv
  4065  0D49  0876               	movf	?___lwdiv,w
  4066  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  4068  0D4C  00CB               	movwf	??_get_temp
  4069  0D4D  084B               	movf	??_get_temp,w
  4070  0D4E  00C2               	movwf	_qianfen
  4071  0D4F                     l2836:	
  4072                           
  4073                           ;Thermometer_src.c: 117: wanfen=wd%10;
  4074  0D4F  300A               	movlw	10
  4075  0D50  00F0               	movwf	___lwmod@divisor
  4076  0D51  3000               	movlw	0
  4077  0D52  00F1               	movwf	___lwmod@divisor+1
  4078  0D53  0838               	movf	_wd+1,w
  4079  0D54  00F3               	movwf	___lwmod@dividend+1
  4080  0D55  0837               	movf	_wd,w
  4081  0D56  00F2               	movwf	___lwmod@dividend
  4082  0D57  120A  158A  210A  120A  158A  	fcall	___lwmod
  4083  0D5C  0870               	movf	?___lwmod,w
  4084  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0D5F  00CB               	movwf	??_get_temp
  4087  0D60  084B               	movf	??_get_temp,w
  4088  0D61  00C1               	movwf	_wanfen
  4089  0D62                     l2838:	
  4090                           
  4091                           ;Thermometer_src.c: 118: __nop();
  4092  0D62  0000               	nop
  4093  0D63                     l248:	
  4094  0D63  0008               	return
  4095  0D64                     __end_of_get_temp:	
  4096                           
  4097                           	psect	text12
  4098  09B8                     __ptext12:	
  4099 ;; *************** function _write_byte *****************
  4100 ;; Defined at:
  4101 ;;		line 40 in file "Thermometer_src.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  val             1    wreg     unsigned char 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  val             1    7[COMMON] unsigned char 
  4106 ;;  i               1    8[COMMON] unsigned char 
  4107 ;;  temp            1    6[COMMON] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       0       0       0       0
  4118 ;;      Locals:         3       0       0       0       0
  4119 ;;      Temps:          2       0       0       0       0
  4120 ;;      Totals:         5       0       0       0       0
  4121 ;;Total ram usage:        5 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    1
  4124 ;; This function calls:
  4125 ;;		_delay_temp
  4126 ;; This function is called by:
  4127 ;;		_get_temp
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           
  4132                           ;psect for function _write_byte
  4133  09B8                     _write_byte:	
  4134                           
  4135                           ;incstack = 0
  4136                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4137                           ;write_byte@val stored from wreg
  4138  09B8  00F7               	movwf	write_byte@val
  4139  09B9                     l2474:	
  4140                           
  4141                           ;Thermometer_src.c: 40: void write_byte(unsigned char val);Thermometer_src.c: 41: {;Ther
      +                          mometer_src.c: 42:  unsigned char i;;Thermometer_src.c: 43:  unsigned char temp;;Thermom
      +                          eter_src.c: 44:  for(i=8;i>0;i--)
  4142  09B9  3008               	movlw	8
  4143  09BA  00F4               	movwf	??_write_byte
  4144  09BB  0874               	movf	??_write_byte,w
  4145  09BC  00F8               	movwf	write_byte@i
  4146  09BD                     l2480:	
  4147                           
  4148                           ;Thermometer_src.c: 45:  {;Thermometer_src.c: 46:    temp=val&0x01;
  4149  09BD  0877               	movf	write_byte@val,w
  4150  09BE  3901               	andlw	1
  4151  09BF  00F4               	movwf	??_write_byte
  4152  09C0  0874               	movf	??_write_byte,w
  4153  09C1  00F6               	movwf	write_byte@temp
  4154  09C2                     l2482:	
  4155                           
  4156                           ;Thermometer_src.c: 47:    RE0 = 0; TRISE0 = 0;
  4157  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  4158  09C3  1303               	bcf	3,6	;RP1=0, select bank0
  4159  09C4  1009               	bcf	9,0	;volatile
  4160  09C5                     l2484:	
  4161  09C5  1683               	bsf	3,5	;RP0=1, select bank1
  4162  09C6  1303               	bcf	3,6	;RP1=0, select bank1
  4163  09C7  1009               	bcf	9,0	;volatile
  4164  09C8                     l2486:	
  4165                           
  4166                           ;Thermometer_src.c: 48:    __nop();
  4167  09C8  0000               	nop
  4168  09C9                     l2488:	
  4169                           
  4170                           ;Thermometer_src.c: 49:    __nop();
  4171  09C9  0000               	nop
  4172  09CA                     l2490:	
  4173                           
  4174                           ;Thermometer_src.c: 50:    __nop();
  4175  09CA  0000               	nop
  4176  09CB                     l2492:	
  4177                           
  4178                           ;Thermometer_src.c: 51:    __nop();
  4179  09CB  0000               	nop
  4180  09CC                     l2494:	
  4181                           
  4182                           ;Thermometer_src.c: 52:    __nop();
  4183  09CC  0000               	nop
  4184  09CD                     l2496:	
  4185                           
  4186                           ;Thermometer_src.c: 53:    if(temp==1) TRISE0 =1;
  4187  09CD  0376               	decf	write_byte@temp,w
  4188  09CE  1D03               	btfss	3,2
  4189  09CF  29D1               	goto	u1281
  4190  09D0  29D2               	goto	u1280
  4191  09D1                     u1281:	
  4192  09D1  29D5               	goto	l2500
  4193  09D2                     u1280:	
  4194  09D2                     l2498:	
  4195  09D2  1683               	bsf	3,5	;RP0=1, select bank1
  4196  09D3  1303               	bcf	3,6	;RP1=0, select bank1
  4197  09D4  1409               	bsf	9,0	;volatile
  4198  09D5                     l2500:	
  4199                           
  4200                           ;Thermometer_src.c: 54:    delay_temp(2,7);
  4201  09D5  3007               	movlw	7
  4202  09D6  00F4               	movwf	??_write_byte
  4203  09D7  0874               	movf	??_write_byte,w
  4204  09D8  00F0               	movwf	delay_temp@y
  4205  09D9  3002               	movlw	2
  4206  09DA  160A  118A  26D6  120A  158A  	fcall	_delay_temp
  4207  09DF                     l2502:	
  4208                           
  4209                           ;Thermometer_src.c: 55:    TRISE0 =1;
  4210  09DF  1683               	bsf	3,5	;RP0=1, select bank1
  4211  09E0  1303               	bcf	3,6	;RP1=0, select bank1
  4212  09E1  1409               	bsf	9,0	;volatile
  4213  09E2                     l2504:	
  4214                           
  4215                           ;Thermometer_src.c: 56:    __nop();
  4216  09E2  0000               	nop
  4217  09E3                     l2506:	
  4218                           
  4219                           ;Thermometer_src.c: 57:    __nop();
  4220  09E3  0000               	nop
  4221  09E4                     l2508:	
  4222                           
  4223                           ;Thermometer_src.c: 58:    val=val>>1;
  4224  09E4  0877               	movf	write_byte@val,w
  4225  09E5  00F4               	movwf	??_write_byte
  4226  09E6  1003               	clrc
  4227  09E7  0C74               	rrf	??_write_byte,w
  4228  09E8  00F5               	movwf	??_write_byte+1
  4229  09E9  0875               	movf	??_write_byte+1,w
  4230  09EA  00F7               	movwf	write_byte@val
  4231  09EB                     l2510:	
  4232                           
  4233                           ;Thermometer_src.c: 59:   }
  4234  09EB  3001               	movlw	1
  4235  09EC  02F8               	subwf	write_byte@i,f
  4236  09ED                     l2512:	
  4237  09ED  0878               	movf	write_byte@i,w
  4238  09EE  1D03               	btfss	3,2
  4239  09EF  29F1               	goto	u1291
  4240  09F0  29F2               	goto	u1290
  4241  09F1                     u1291:	
  4242  09F1  29BD               	goto	l2480
  4243  09F2                     u1290:	
  4244  09F2                     l232:	
  4245  09F2  0008               	return
  4246  09F3                     __end_of_write_byte:	
  4247                           
  4248                           	psect	text13
  4249  097E                     __ptext13:	
  4250 ;; *************** function _reset_temp *****************
  4251 ;; Defined at:
  4252 ;;		line 25 in file "Thermometer_src.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  presence        1    5[COMMON] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, pclath, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4266 ;;      Params:         0       0       0       0       0
  4267 ;;      Locals:         1       0       0       0       0
  4268 ;;      Temps:          1       0       0       0       0
  4269 ;;      Totals:         2       0       0       0       0
  4270 ;;Total ram usage:        2 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    1
  4273 ;; This function calls:
  4274 ;;		_delay_temp
  4275 ;; This function is called by:
  4276 ;;		_get_temp
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           
  4281                           ;psect for function _reset_temp
  4282  097E                     _reset_temp:	
  4283  097E                     l2458:	
  4284                           ;incstack = 0
  4285                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  4286                           
  4287                           
  4288                           ;Thermometer_src.c: 27:   char presence=1;
  4289  097E  01F5               	clrf	reset_temp@presence
  4290  097F  0AF5               	incf	reset_temp@presence,f
  4291                           
  4292                           ;Thermometer_src.c: 28:   while(presence)
  4293  0980  29B2               	goto	l2472
  4294  0981                     l222:	
  4295                           
  4296                           ;Thermometer_src.c: 29:   {;Thermometer_src.c: 30:     RE0 = 0; TRISE0 = 0 ;
  4297  0981  1283               	bcf	3,5	;RP0=0, select bank0
  4298  0982  1303               	bcf	3,6	;RP1=0, select bank0
  4299  0983  1009               	bcf	9,0	;volatile
  4300  0984  1683               	bsf	3,5	;RP0=1, select bank1
  4301  0985  1303               	bcf	3,6	;RP1=0, select bank1
  4302  0986  1009               	bcf	9,0	;volatile
  4303  0987                     l2460:	
  4304                           
  4305                           ;Thermometer_src.c: 31:     delay_temp(2,70);
  4306  0987  3046               	movlw	70
  4307  0988  00F4               	movwf	??_reset_temp
  4308  0989  0874               	movf	??_reset_temp,w
  4309  098A  00F0               	movwf	delay_temp@y
  4310  098B  3002               	movlw	2
  4311  098C  160A  118A  26D6  120A  158A  	fcall	_delay_temp
  4312  0991                     l2462:	
  4313                           
  4314                           ;Thermometer_src.c: 32:     TRISE0 =1;
  4315  0991  1683               	bsf	3,5	;RP0=1, select bank1
  4316  0992  1303               	bcf	3,6	;RP1=0, select bank1
  4317  0993  1409               	bsf	9,0	;volatile
  4318                           
  4319                           ;Thermometer_src.c: 33:     delay_temp(2,8);
  4320  0994  3008               	movlw	8
  4321  0995  00F4               	movwf	??_reset_temp
  4322  0996  0874               	movf	??_reset_temp,w
  4323  0997  00F0               	movwf	delay_temp@y
  4324  0998  3002               	movlw	2
  4325  0999  160A  118A  26D6  120A  158A  	fcall	_delay_temp
  4326  099E                     l2464:	
  4327                           
  4328                           ;Thermometer_src.c: 34:     if(RE0==1) presence=1;
  4329  099E  1283               	bcf	3,5	;RP0=0, select bank0
  4330  099F  1303               	bcf	3,6	;RP1=0, select bank0
  4331  09A0  1C09               	btfss	9,0	;volatile
  4332  09A1  29A3               	goto	u1261
  4333  09A2  29A4               	goto	u1260
  4334  09A3                     u1261:	
  4335  09A3  29A7               	goto	l2468
  4336  09A4                     u1260:	
  4337  09A4                     l2466:	
  4338  09A4  01F5               	clrf	reset_temp@presence
  4339  09A5  0AF5               	incf	reset_temp@presence,f
  4340  09A6  29A8               	goto	l2470
  4341  09A7                     l2468:	
  4342  09A7  01F5               	clrf	reset_temp@presence
  4343  09A8                     l2470:	
  4344                           
  4345                           ;Thermometer_src.c: 36:     delay_temp(2,60);
  4346  09A8  303C               	movlw	60
  4347  09A9  00F4               	movwf	??_reset_temp
  4348  09AA  0874               	movf	??_reset_temp,w
  4349  09AB  00F0               	movwf	delay_temp@y
  4350  09AC  3002               	movlw	2
  4351  09AD  160A  118A  26D6  120A  158A  	fcall	_delay_temp
  4352  09B2                     l2472:	
  4353                           
  4354                           ;Thermometer_src.c: 28:   while(presence)
  4355  09B2  0875               	movf	reset_temp@presence,w
  4356  09B3  1D03               	btfss	3,2
  4357  09B4  29B6               	goto	u1271
  4358  09B5  29B7               	goto	u1270
  4359  09B6                     u1271:	
  4360  09B6  2981               	goto	l222
  4361  09B7                     u1270:	
  4362  09B7                     l226:	
  4363  09B7  0008               	return
  4364  09B8                     __end_of_reset_temp:	
  4365                           
  4366                           	psect	text14
  4367  0944                     __ptext14:	
  4368 ;; *************** function _read_byte *****************
  4369 ;; Defined at:
  4370 ;;		line 62 in file "Thermometer_src.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  i               1    6[COMMON] unsigned char 
  4375 ;;  value           1    5[COMMON] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  1    wreg      unsigned char 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0, pclath, cstack
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4385 ;;      Params:         0       0       0       0       0
  4386 ;;      Locals:         2       0       0       0       0
  4387 ;;      Temps:          1       0       0       0       0
  4388 ;;      Totals:         3       0       0       0       0
  4389 ;;Total ram usage:        3 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    1
  4392 ;; This function calls:
  4393 ;;		_delay_temp
  4394 ;; This function is called by:
  4395 ;;		_get_temp
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           
  4400                           ;psect for function _read_byte
  4401  0944                     _read_byte:	
  4402  0944                     l2514:	
  4403                           ;incstack = 0
  4404                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  4405                           
  4406                           
  4407                           ;Thermometer_src.c: 64:  unsigned char i;;Thermometer_src.c: 65:  unsigned char value=0;
  4408  0944  01F5               	clrf	read_byte@value
  4409  0945                     l2516:	
  4410                           
  4411                           ;Thermometer_src.c: 66:  static _Bool j;;Thermometer_src.c: 67:  for(i=8;i>0;i--)
  4412  0945  3008               	movlw	8
  4413  0946  00F4               	movwf	??_read_byte
  4414  0947  0874               	movf	??_read_byte,w
  4415  0948  00F6               	movwf	read_byte@i
  4416  0949                     l2522:	
  4417                           
  4418                           ;Thermometer_src.c: 68:  {;Thermometer_src.c: 69:    value>>=1;
  4419  0949  1003               	clrc
  4420  094A  0CF5               	rrf	read_byte@value,f
  4421  094B                     l2524:	
  4422                           
  4423                           ;Thermometer_src.c: 70:    RE0 = 0; TRISE0 = 0;
  4424  094B  1283               	bcf	3,5	;RP0=0, select bank0
  4425  094C  1303               	bcf	3,6	;RP1=0, select bank0
  4426  094D  1009               	bcf	9,0	;volatile
  4427  094E                     l2526:	
  4428  094E  1683               	bsf	3,5	;RP0=1, select bank1
  4429  094F  1303               	bcf	3,6	;RP1=0, select bank1
  4430  0950  1009               	bcf	9,0	;volatile
  4431  0951                     l2528:	
  4432                           
  4433                           ;Thermometer_src.c: 71:    __nop();
  4434  0951  0000               	nop
  4435  0952                     l2530:	
  4436                           
  4437                           ;Thermometer_src.c: 72:    __nop();
  4438  0952  0000               	nop
  4439  0953                     l2532:	
  4440                           
  4441                           ;Thermometer_src.c: 73:    __nop();
  4442  0953  0000               	nop
  4443  0954                     l2534:	
  4444                           
  4445                           ;Thermometer_src.c: 74:    __nop();
  4446  0954  0000               	nop
  4447  0955                     l2536:	
  4448                           
  4449                           ;Thermometer_src.c: 75:    __nop();
  4450  0955  0000               	nop
  4451  0956                     l2538:	
  4452                           
  4453                           ;Thermometer_src.c: 76:    __nop();
  4454  0956  0000               	nop
  4455  0957                     l2540:	
  4456                           
  4457                           ;Thermometer_src.c: 77:    TRISE0 =1;
  4458  0957  1683               	bsf	3,5	;RP0=1, select bank1
  4459  0958  1303               	bcf	3,6	;RP1=0, select bank1
  4460  0959  1409               	bsf	9,0	;volatile
  4461  095A                     l2542:	
  4462                           
  4463                           ;Thermometer_src.c: 78:    __nop();
  4464  095A  0000               	nop
  4465  095B                     l2544:	
  4466                           
  4467                           ;Thermometer_src.c: 79:    __nop();
  4468  095B  0000               	nop
  4469  095C                     l2546:	
  4470                           
  4471                           ;Thermometer_src.c: 80:    __nop();
  4472  095C  0000               	nop
  4473  095D                     l2548:	
  4474                           
  4475                           ;Thermometer_src.c: 81:    __nop();
  4476  095D  0000               	nop
  4477  095E                     l2550:	
  4478                           
  4479                           ;Thermometer_src.c: 82:    __nop();
  4480  095E  0000               	nop
  4481  095F                     l2552:	
  4482                           
  4483                           ;Thermometer_src.c: 83:    j=RE0;
  4484  095F  3000               	movlw	0
  4485  0960  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0961  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0962  1809               	btfsc	9,0	;volatile
  4488  0963  3001               	movlw	1
  4489  0964  00B9               	movwf	read_byte@j
  4490  0965                     l2554:	
  4491                           
  4492                           ;Thermometer_src.c: 84:    if(j) value|=0x80;
  4493  0965  0839               	movf	read_byte@j,w
  4494  0966  1903               	btfsc	3,2
  4495  0967  2969               	goto	u1301
  4496  0968  296A               	goto	u1300
  4497  0969                     u1301:	
  4498  0969  296B               	goto	l2558
  4499  096A                     u1300:	
  4500  096A                     l2556:	
  4501  096A  17F5               	bsf	read_byte@value,7
  4502  096B                     l2558:	
  4503                           
  4504                           ;Thermometer_src.c: 85:    delay_temp(2,7);
  4505  096B  3007               	movlw	7
  4506  096C  00F4               	movwf	??_read_byte
  4507  096D  0874               	movf	??_read_byte,w
  4508  096E  00F0               	movwf	delay_temp@y
  4509  096F  3002               	movlw	2
  4510  0970  160A  118A  26D6  120A  158A  	fcall	_delay_temp
  4511  0975                     l2560:	
  4512                           
  4513                           ;Thermometer_src.c: 86:   }
  4514  0975  3001               	movlw	1
  4515  0976  02F6               	subwf	read_byte@i,f
  4516  0977                     l2562:	
  4517  0977  0876               	movf	read_byte@i,w
  4518  0978  1D03               	btfss	3,2
  4519  0979  297B               	goto	u1311
  4520  097A  297C               	goto	u1310
  4521  097B                     u1311:	
  4522  097B  2949               	goto	l2522
  4523  097C                     u1310:	
  4524  097C                     l2564:	
  4525                           
  4526                           ;Thermometer_src.c: 87:   return(value);
  4527  097C  0875               	movf	read_byte@value,w
  4528  097D                     l240:	
  4529  097D  0008               	return
  4530  097E                     __end_of_read_byte:	
  4531                           
  4532                           	psect	text15
  4533  16D6                     __ptext15:	
  4534 ;; *************** function _delay_temp *****************
  4535 ;; Defined at:
  4536 ;;		line 121 in file "Thermometer_src.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  x               1    wreg     unsigned char 
  4539 ;;  y               1    0[COMMON] unsigned char 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  x               1    2[COMMON] unsigned char 
  4542 ;;  z               1    3[COMMON] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         1       0       0       0       0
  4553 ;;      Locals:         2       0       0       0       0
  4554 ;;      Temps:          1       0       0       0       0
  4555 ;;      Totals:         4       0       0       0       0
  4556 ;;Total ram usage:        4 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_reset_temp
  4562 ;;		_write_byte
  4563 ;;		_read_byte
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _delay_temp
  4569  16D6                     _delay_temp:	
  4570                           
  4571                           ;incstack = 0
  4572                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  4573                           ;delay_temp@x stored from wreg
  4574  16D6  00F2               	movwf	delay_temp@x
  4575  16D7                     l251:	
  4576                           ;Thermometer_src.c: 121: void delay_temp(char x, char y);Thermometer_src.c: 122: {;Therm
      +                          ometer_src.c: 123:  char z;;Thermometer_src.c: 124:  do{
  4577                           
  4578  16D7                     l2390:	
  4579                           
  4580                           ;Thermometer_src.c: 125:  z=y;
  4581  16D7  0870               	movf	delay_temp@y,w
  4582  16D8  00F1               	movwf	??_delay_temp
  4583  16D9  0871               	movf	??_delay_temp,w
  4584  16DA  00F3               	movwf	delay_temp@z
  4585  16DB                     l2392:	
  4586  16DB  3001               	movlw	1
  4587  16DC  02F3               	subwf	delay_temp@z,f
  4588  16DD  1D03               	btfss	3,2
  4589  16DE  2EE0               	goto	u1211
  4590  16DF  2EE1               	goto	u1210
  4591  16E0                     u1211:	
  4592  16E0  2EDB               	goto	l2392
  4593  16E1                     u1210:	
  4594  16E1                     l2394:	
  4595                           
  4596                           ;Thermometer_src.c: 127:  }while(--x);
  4597  16E1  3001               	movlw	1
  4598  16E2  02F2               	subwf	delay_temp@x,f
  4599  16E3  1D03               	btfss	3,2
  4600  16E4  2EE6               	goto	u1221
  4601  16E5  2EE7               	goto	u1220
  4602  16E6                     u1221:	
  4603  16E6  2ED7               	goto	l251
  4604  16E7                     u1220:	
  4605  16E7                     l255:	
  4606  16E7  0008               	return
  4607  16E8                     __end_of_delay_temp:	
  4608                           
  4609                           	psect	text16
  4610  173C                     __ptext16:	
  4611 ;; *************** function _delay2 *****************
  4612 ;; Defined at:
  4613 ;;		line 130 in file "Thermometer_src.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  i               2    0[COMMON] int 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, btemp+1
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         2       0       0       0       0
  4629 ;;      Temps:          0       0       0       0       0
  4630 ;;      Totals:         2       0       0       0       0
  4631 ;;Total ram usage:        2 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_get_temp
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _delay2
  4642  173C                     _delay2:	
  4643  173C                     l2568:	
  4644                           ;incstack = 0
  4645                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  4646                           
  4647                           
  4648                           ;Thermometer_src.c: 131:  for (int i = 0; i<50;i++){
  4649  173C  01F0               	clrf	delay2@i
  4650  173D  01F1               	clrf	delay2@i+1
  4651  173E                     l2574:	
  4652                           
  4653                           ;Thermometer_src.c: 132:  }
  4654  173E  3001               	movlw	1
  4655  173F  07F0               	addwf	delay2@i,f
  4656  1740  1803               	skipnc
  4657  1741  0AF1               	incf	delay2@i+1,f
  4658  1742  3000               	movlw	0
  4659  1743  07F1               	addwf	delay2@i+1,f
  4660  1744                     l2576:	
  4661  1744  0871               	movf	delay2@i+1,w
  4662  1745  3A80               	xorlw	128
  4663  1746  00FF               	movwf	btemp+1
  4664  1747  3080               	movlw	128
  4665  1748  027F               	subwf	btemp+1,w
  4666  1749  1D03               	skipz
  4667  174A  2F4D               	goto	u1325
  4668  174B  3032               	movlw	50
  4669  174C  0270               	subwf	delay2@i,w
  4670  174D                     u1325:	
  4671  174D  1C03               	skipc
  4672  174E  2F50               	goto	u1321
  4673  174F  2F51               	goto	u1320
  4674  1750                     u1321:	
  4675  1750  2F3E               	goto	l2574
  4676  1751                     u1320:	
  4677  1751                     l260:	
  4678  1751  0008               	return
  4679  1752                     __end_of_delay2:	
  4680                           
  4681                           	psect	text17
  4682  090A                     __ptext17:	
  4683 ;; *************** function ___lwmod *****************
  4684 ;; Defined at:
  4685 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  divisor         2    0[COMMON] unsigned int 
  4688 ;;  dividend        2    2[COMMON] unsigned int 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  counter         1    5[COMMON] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    0[COMMON] unsigned int 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4700 ;;      Params:         4       0       0       0       0
  4701 ;;      Locals:         1       0       0       0       0
  4702 ;;      Temps:          1       0       0       0       0
  4703 ;;      Totals:         6       0       0       0       0
  4704 ;;Total ram usage:        6 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_get_temp
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           
  4714                           ;psect for function ___lwmod
  4715  090A                     ___lwmod:	
  4716  090A                     l2728:	
  4717                           ;incstack = 0
  4718                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4719                           
  4720  090A  0870               	movf	___lwmod@divisor,w
  4721  090B  0471               	iorwf	___lwmod@divisor+1,w
  4722  090C  1903               	btfsc	3,2
  4723  090D  290F               	goto	u1591
  4724  090E  2910               	goto	u1590
  4725  090F                     u1591:	
  4726  090F  293F               	goto	l2746
  4727  0910                     u1590:	
  4728  0910                     l2730:	
  4729  0910  01F5               	clrf	___lwmod@counter
  4730  0911  0AF5               	incf	___lwmod@counter,f
  4731  0912  291E               	goto	l2736
  4732  0913                     l2732:	
  4733  0913  3001               	movlw	1
  4734  0914                     u1605:	
  4735  0914  1003               	clrc
  4736  0915  0DF0               	rlf	___lwmod@divisor,f
  4737  0916  0DF1               	rlf	___lwmod@divisor+1,f
  4738  0917  3EFF               	addlw	-1
  4739  0918  1D03               	skipz
  4740  0919  2914               	goto	u1605
  4741  091A                     l2734:	
  4742  091A  3001               	movlw	1
  4743  091B  00F4               	movwf	??___lwmod
  4744  091C  0874               	movf	??___lwmod,w
  4745  091D  07F5               	addwf	___lwmod@counter,f
  4746  091E                     l2736:	
  4747  091E  1FF1               	btfss	___lwmod@divisor+1,7
  4748  091F  2921               	goto	u1611
  4749  0920  2922               	goto	u1610
  4750  0921                     u1611:	
  4751  0921  2913               	goto	l2732
  4752  0922                     u1610:	
  4753  0922                     l2738:	
  4754  0922  0871               	movf	___lwmod@divisor+1,w
  4755  0923  0273               	subwf	___lwmod@dividend+1,w
  4756  0924  1D03               	skipz
  4757  0925  2928               	goto	u1625
  4758  0926  0870               	movf	___lwmod@divisor,w
  4759  0927  0272               	subwf	___lwmod@dividend,w
  4760  0928                     u1625:	
  4761  0928  1C03               	skipc
  4762  0929  292B               	goto	u1621
  4763  092A  292C               	goto	u1620
  4764  092B                     u1621:	
  4765  092B  2932               	goto	l2742
  4766  092C                     u1620:	
  4767  092C                     l2740:	
  4768  092C  0870               	movf	___lwmod@divisor,w
  4769  092D  02F2               	subwf	___lwmod@dividend,f
  4770  092E  0871               	movf	___lwmod@divisor+1,w
  4771  092F  1C03               	skipc
  4772  0930  03F3               	decf	___lwmod@dividend+1,f
  4773  0931  02F3               	subwf	___lwmod@dividend+1,f
  4774  0932                     l2742:	
  4775  0932  3001               	movlw	1
  4776  0933                     u1635:	
  4777  0933  1003               	clrc
  4778  0934  0CF1               	rrf	___lwmod@divisor+1,f
  4779  0935  0CF0               	rrf	___lwmod@divisor,f
  4780  0936  3EFF               	addlw	-1
  4781  0937  1D03               	skipz
  4782  0938  2933               	goto	u1635
  4783  0939                     l2744:	
  4784  0939  3001               	movlw	1
  4785  093A  02F5               	subwf	___lwmod@counter,f
  4786  093B  1D03               	btfss	3,2
  4787  093C  293E               	goto	u1641
  4788  093D  293F               	goto	u1640
  4789  093E                     u1641:	
  4790  093E  2922               	goto	l2738
  4791  093F                     u1640:	
  4792  093F                     l2746:	
  4793  093F  0873               	movf	___lwmod@dividend+1,w
  4794  0940  00F1               	movwf	?___lwmod+1
  4795  0941  0872               	movf	___lwmod@dividend,w
  4796  0942  00F0               	movwf	?___lwmod
  4797  0943                     l890:	
  4798  0943  0008               	return
  4799  0944                     __end_of___lwmod:	
  4800                           
  4801                           	psect	text18
  4802  09F3                     __ptext18:	
  4803 ;; *************** function ___lwdiv *****************
  4804 ;; Defined at:
  4805 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  divisor         2    6[COMMON] unsigned int 
  4808 ;;  dividend        2    8[COMMON] unsigned int 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  quotient        2   11[COMMON] unsigned int 
  4811 ;;  counter         1   13[COMMON] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  2    6[COMMON] unsigned int 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4821 ;;      Params:         4       0       0       0       0
  4822 ;;      Locals:         3       0       0       0       0
  4823 ;;      Temps:          1       0       0       0       0
  4824 ;;      Totals:         8       0       0       0       0
  4825 ;;Total ram usage:        8 bytes
  4826 ;; Hardware stack levels used:    1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_get_temp
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function ___lwdiv
  4836  09F3                     ___lwdiv:	
  4837  09F3                     l2702:	
  4838                           ;incstack = 0
  4839                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4840                           
  4841  09F3  01FB               	clrf	___lwdiv@quotient
  4842  09F4  01FC               	clrf	___lwdiv@quotient+1
  4843  09F5                     l2704:	
  4844  09F5  0876               	movf	___lwdiv@divisor,w
  4845  09F6  0477               	iorwf	___lwdiv@divisor+1,w
  4846  09F7  1903               	btfsc	3,2
  4847  09F8  29FA               	goto	u1521
  4848  09F9  29FB               	goto	u1520
  4849  09FA                     u1521:	
  4850  09FA  2A32               	goto	l2724
  4851  09FB                     u1520:	
  4852  09FB                     l2706:	
  4853  09FB  01FD               	clrf	___lwdiv@counter
  4854  09FC  0AFD               	incf	___lwdiv@counter,f
  4855  09FD  2A09               	goto	l2712
  4856  09FE                     l2708:	
  4857  09FE  3001               	movlw	1
  4858  09FF                     u1535:	
  4859  09FF  1003               	clrc
  4860  0A00  0DF6               	rlf	___lwdiv@divisor,f
  4861  0A01  0DF7               	rlf	___lwdiv@divisor+1,f
  4862  0A02  3EFF               	addlw	-1
  4863  0A03  1D03               	skipz
  4864  0A04  29FF               	goto	u1535
  4865  0A05                     l2710:	
  4866  0A05  3001               	movlw	1
  4867  0A06  00FA               	movwf	??___lwdiv
  4868  0A07  087A               	movf	??___lwdiv,w
  4869  0A08  07FD               	addwf	___lwdiv@counter,f
  4870  0A09                     l2712:	
  4871  0A09  1FF7               	btfss	___lwdiv@divisor+1,7
  4872  0A0A  2A0C               	goto	u1541
  4873  0A0B  2A0D               	goto	u1540
  4874  0A0C                     u1541:	
  4875  0A0C  29FE               	goto	l2708
  4876  0A0D                     u1540:	
  4877  0A0D                     l2714:	
  4878  0A0D  3001               	movlw	1
  4879  0A0E                     u1555:	
  4880  0A0E  1003               	clrc
  4881  0A0F  0DFB               	rlf	___lwdiv@quotient,f
  4882  0A10  0DFC               	rlf	___lwdiv@quotient+1,f
  4883  0A11  3EFF               	addlw	-1
  4884  0A12  1D03               	skipz
  4885  0A13  2A0E               	goto	u1555
  4886  0A14  0877               	movf	___lwdiv@divisor+1,w
  4887  0A15  0279               	subwf	___lwdiv@dividend+1,w
  4888  0A16  1D03               	skipz
  4889  0A17  2A1A               	goto	u1565
  4890  0A18  0876               	movf	___lwdiv@divisor,w
  4891  0A19  0278               	subwf	___lwdiv@dividend,w
  4892  0A1A                     u1565:	
  4893  0A1A  1C03               	skipc
  4894  0A1B  2A1D               	goto	u1561
  4895  0A1C  2A1E               	goto	u1560
  4896  0A1D                     u1561:	
  4897  0A1D  2A25               	goto	l2720
  4898  0A1E                     u1560:	
  4899  0A1E                     l2716:	
  4900  0A1E  0876               	movf	___lwdiv@divisor,w
  4901  0A1F  02F8               	subwf	___lwdiv@dividend,f
  4902  0A20  0877               	movf	___lwdiv@divisor+1,w
  4903  0A21  1C03               	skipc
  4904  0A22  03F9               	decf	___lwdiv@dividend+1,f
  4905  0A23  02F9               	subwf	___lwdiv@dividend+1,f
  4906  0A24                     l2718:	
  4907  0A24  147B               	bsf	___lwdiv@quotient,0
  4908  0A25                     l2720:	
  4909  0A25  3001               	movlw	1
  4910  0A26                     u1575:	
  4911  0A26  1003               	clrc
  4912  0A27  0CF7               	rrf	___lwdiv@divisor+1,f
  4913  0A28  0CF6               	rrf	___lwdiv@divisor,f
  4914  0A29  3EFF               	addlw	-1
  4915  0A2A  1D03               	skipz
  4916  0A2B  2A26               	goto	u1575
  4917  0A2C                     l2722:	
  4918  0A2C  3001               	movlw	1
  4919  0A2D  02FD               	subwf	___lwdiv@counter,f
  4920  0A2E  1D03               	btfss	3,2
  4921  0A2F  2A31               	goto	u1581
  4922  0A30  2A32               	goto	u1580
  4923  0A31                     u1581:	
  4924  0A31  2A0D               	goto	l2714
  4925  0A32                     u1580:	
  4926  0A32                     l2724:	
  4927  0A32  087C               	movf	___lwdiv@quotient+1,w
  4928  0A33  00F7               	movwf	?___lwdiv+1
  4929  0A34  087B               	movf	___lwdiv@quotient,w
  4930  0A35  00F6               	movwf	?___lwdiv
  4931  0A36                     l880:	
  4932  0A36  0008               	return
  4933  0A37                     __end_of___lwdiv:	
  4934                           
  4935                           	psect	text19
  4936  0A90                     __ptext19:	
  4937 ;; *************** function ___awdiv *****************
  4938 ;; Defined at:
  4939 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  divisor         2    0[COMMON] int 
  4942 ;;  dividend        2    2[COMMON] int 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  quotient        2    7[COMMON] int 
  4945 ;;  sign            1    6[COMMON] unsigned char 
  4946 ;;  counter         1    5[COMMON] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  2    0[COMMON] int 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4956 ;;      Params:         4       0       0       0       0
  4957 ;;      Locals:         4       0       0       0       0
  4958 ;;      Temps:          1       0       0       0       0
  4959 ;;      Totals:         9       0       0       0       0
  4960 ;;Total ram usage:        9 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; This function calls:
  4963 ;;		Nothing
  4964 ;; This function is called by:
  4965 ;;		_get_temp
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function ___awdiv
  4971  0A90                     ___awdiv:	
  4972  0A90                     l2658:	
  4973                           ;incstack = 0
  4974                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4975                           
  4976  0A90  01F6               	clrf	___awdiv@sign
  4977  0A91                     l2660:	
  4978  0A91  1FF1               	btfss	___awdiv@divisor+1,7
  4979  0A92  2A94               	goto	u1421
  4980  0A93  2A95               	goto	u1420
  4981  0A94                     u1421:	
  4982  0A94  2A9C               	goto	l2666
  4983  0A95                     u1420:	
  4984  0A95                     l2662:	
  4985  0A95  09F0               	comf	___awdiv@divisor,f
  4986  0A96  09F1               	comf	___awdiv@divisor+1,f
  4987  0A97  0AF0               	incf	___awdiv@divisor,f
  4988  0A98  1903               	skipnz
  4989  0A99  0AF1               	incf	___awdiv@divisor+1,f
  4990  0A9A                     l2664:	
  4991  0A9A  01F6               	clrf	___awdiv@sign
  4992  0A9B  0AF6               	incf	___awdiv@sign,f
  4993  0A9C                     l2666:	
  4994  0A9C  1FF3               	btfss	___awdiv@dividend+1,7
  4995  0A9D  2A9F               	goto	u1431
  4996  0A9E  2AA0               	goto	u1430
  4997  0A9F                     u1431:	
  4998  0A9F  2AA9               	goto	l2672
  4999  0AA0                     u1430:	
  5000  0AA0                     l2668:	
  5001  0AA0  09F2               	comf	___awdiv@dividend,f
  5002  0AA1  09F3               	comf	___awdiv@dividend+1,f
  5003  0AA2  0AF2               	incf	___awdiv@dividend,f
  5004  0AA3  1903               	skipnz
  5005  0AA4  0AF3               	incf	___awdiv@dividend+1,f
  5006  0AA5                     l2670:	
  5007  0AA5  3001               	movlw	1
  5008  0AA6  00F4               	movwf	??___awdiv
  5009  0AA7  0874               	movf	??___awdiv,w
  5010  0AA8  06F6               	xorwf	___awdiv@sign,f
  5011  0AA9                     l2672:	
  5012  0AA9  01F7               	clrf	___awdiv@quotient
  5013  0AAA  01F8               	clrf	___awdiv@quotient+1
  5014  0AAB                     l2674:	
  5015  0AAB  0870               	movf	___awdiv@divisor,w
  5016  0AAC  0471               	iorwf	___awdiv@divisor+1,w
  5017  0AAD  1903               	btfsc	3,2
  5018  0AAE  2AB0               	goto	u1441
  5019  0AAF  2AB1               	goto	u1440
  5020  0AB0                     u1441:	
  5021  0AB0  2AE8               	goto	l2694
  5022  0AB1                     u1440:	
  5023  0AB1                     l2676:	
  5024  0AB1  01F5               	clrf	___awdiv@counter
  5025  0AB2  0AF5               	incf	___awdiv@counter,f
  5026  0AB3  2ABF               	goto	l2682
  5027  0AB4                     l2678:	
  5028  0AB4  3001               	movlw	1
  5029  0AB5                     u1455:	
  5030  0AB5  1003               	clrc
  5031  0AB6  0DF0               	rlf	___awdiv@divisor,f
  5032  0AB7  0DF1               	rlf	___awdiv@divisor+1,f
  5033  0AB8  3EFF               	addlw	-1
  5034  0AB9  1D03               	skipz
  5035  0ABA  2AB5               	goto	u1455
  5036  0ABB                     l2680:	
  5037  0ABB  3001               	movlw	1
  5038  0ABC  00F4               	movwf	??___awdiv
  5039  0ABD  0874               	movf	??___awdiv,w
  5040  0ABE  07F5               	addwf	___awdiv@counter,f
  5041  0ABF                     l2682:	
  5042  0ABF  1FF1               	btfss	___awdiv@divisor+1,7
  5043  0AC0  2AC2               	goto	u1461
  5044  0AC1  2AC3               	goto	u1460
  5045  0AC2                     u1461:	
  5046  0AC2  2AB4               	goto	l2678
  5047  0AC3                     u1460:	
  5048  0AC3                     l2684:	
  5049  0AC3  3001               	movlw	1
  5050  0AC4                     u1475:	
  5051  0AC4  1003               	clrc
  5052  0AC5  0DF7               	rlf	___awdiv@quotient,f
  5053  0AC6  0DF8               	rlf	___awdiv@quotient+1,f
  5054  0AC7  3EFF               	addlw	-1
  5055  0AC8  1D03               	skipz
  5056  0AC9  2AC4               	goto	u1475
  5057  0ACA  0871               	movf	___awdiv@divisor+1,w
  5058  0ACB  0273               	subwf	___awdiv@dividend+1,w
  5059  0ACC  1D03               	skipz
  5060  0ACD  2AD0               	goto	u1485
  5061  0ACE  0870               	movf	___awdiv@divisor,w
  5062  0ACF  0272               	subwf	___awdiv@dividend,w
  5063  0AD0                     u1485:	
  5064  0AD0  1C03               	skipc
  5065  0AD1  2AD3               	goto	u1481
  5066  0AD2  2AD4               	goto	u1480
  5067  0AD3                     u1481:	
  5068  0AD3  2ADB               	goto	l2690
  5069  0AD4                     u1480:	
  5070  0AD4                     l2686:	
  5071  0AD4  0870               	movf	___awdiv@divisor,w
  5072  0AD5  02F2               	subwf	___awdiv@dividend,f
  5073  0AD6  0871               	movf	___awdiv@divisor+1,w
  5074  0AD7  1C03               	skipc
  5075  0AD8  03F3               	decf	___awdiv@dividend+1,f
  5076  0AD9  02F3               	subwf	___awdiv@dividend+1,f
  5077  0ADA                     l2688:	
  5078  0ADA  1477               	bsf	___awdiv@quotient,0
  5079  0ADB                     l2690:	
  5080  0ADB  3001               	movlw	1
  5081  0ADC                     u1495:	
  5082  0ADC  1003               	clrc
  5083  0ADD  0CF1               	rrf	___awdiv@divisor+1,f
  5084  0ADE  0CF0               	rrf	___awdiv@divisor,f
  5085  0ADF  3EFF               	addlw	-1
  5086  0AE0  1D03               	skipz
  5087  0AE1  2ADC               	goto	u1495
  5088  0AE2                     l2692:	
  5089  0AE2  3001               	movlw	1
  5090  0AE3  02F5               	subwf	___awdiv@counter,f
  5091  0AE4  1D03               	btfss	3,2
  5092  0AE5  2AE7               	goto	u1501
  5093  0AE6  2AE8               	goto	u1500
  5094  0AE7                     u1501:	
  5095  0AE7  2AC3               	goto	l2684
  5096  0AE8                     u1500:	
  5097  0AE8                     l2694:	
  5098  0AE8  0876               	movf	___awdiv@sign,w
  5099  0AE9  1903               	btfsc	3,2
  5100  0AEA  2AEC               	goto	u1511
  5101  0AEB  2AED               	goto	u1510
  5102  0AEC                     u1511:	
  5103  0AEC  2AF2               	goto	l2698
  5104  0AED                     u1510:	
  5105  0AED                     l2696:	
  5106  0AED  09F7               	comf	___awdiv@quotient,f
  5107  0AEE  09F8               	comf	___awdiv@quotient+1,f
  5108  0AEF  0AF7               	incf	___awdiv@quotient,f
  5109  0AF0  1903               	skipnz
  5110  0AF1  0AF8               	incf	___awdiv@quotient+1,f
  5111  0AF2                     l2698:	
  5112  0AF2  0878               	movf	___awdiv@quotient+1,w
  5113  0AF3  00F1               	movwf	?___awdiv+1
  5114  0AF4  0877               	movf	___awdiv@quotient,w
  5115  0AF5  00F0               	movwf	?___awdiv
  5116  0AF6                     l761:	
  5117  0AF6  0008               	return
  5118  0AF7                     __end_of___awdiv:	
  5119                           
  5120                           	psect	text20
  5121  16FB                     __ptext20:	
  5122 ;; *************** function _ds1302_init *****************
  5123 ;; Defined at:
  5124 ;;		line 6 in file "clock_src.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5138 ;;      Params:         0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0
  5141 ;;      Totals:         0       0       0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    1
  5145 ;; This function calls:
  5146 ;;		_time_write_1
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           
  5153                           ;psect for function _ds1302_init
  5154  16FB                     _ds1302_init:	
  5155  16FB                     l2750:	
  5156                           ;incstack = 0
  5157                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5158                           
  5159                           
  5160                           ;clock_src.c: 8:    RB0=0;
  5161  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  5162  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  5163  16FD  1006               	bcf	6,0	;volatile
  5164                           
  5165                           ;clock_src.c: 9:    RB5 =0;
  5166  16FE  1286               	bcf	6,5	;volatile
  5167                           
  5168                           ;clock_src.c: 10:    RB5=1;
  5169  16FF  1686               	bsf	6,5	;volatile
  5170  1700                     l2752:	
  5171                           
  5172                           ;clock_src.c: 11:    time_write_1(0x8e);
  5173  1700  308E               	movlw	142
  5174  1701  160A  118A  27AA  160A  118A  	fcall	_time_write_1
  5175                           
  5176                           ;clock_src.c: 12:    time_write_1(0);
  5177  1706  3000               	movlw	0
  5178  1707  160A  118A  27AA  160A  118A  	fcall	_time_write_1
  5179  170C                     l2754:	
  5180                           
  5181                           ;clock_src.c: 13:    RB5=0;
  5182  170C  1283               	bcf	3,5	;RP0=0, select bank0
  5183  170D  1303               	bcf	3,6	;RP1=0, select bank0
  5184  170E  1286               	bcf	6,5	;volatile
  5185  170F                     l283:	
  5186  170F  0008               	return
  5187  1710                     __end_of_ds1302_init:	
  5188                           
  5189                           	psect	text21
  5190  17D5                     __ptext21:	
  5191 ;; *************** function _display_temp *****************
  5192 ;; Defined at:
  5193 ;;		line 12 in file "Thermometer_src.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;		None
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         0       0       0       0       0
  5208 ;;      Locals:         0       0       0       0       0
  5209 ;;      Temps:          0       0       0       0       0
  5210 ;;      Totals:         0       0       0       0       0
  5211 ;;Total ram usage:        0 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; Hardware stack levels required when called:    2
  5214 ;; This function calls:
  5215 ;;		_write_char
  5216 ;; This function is called by:
  5217 ;;		_main
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           
  5222                           ;psect for function _display_temp
  5223  17D5                     _display_temp:	
  5224  17D5                     l2856:	
  5225                           ;incstack = 0
  5226                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5227                           
  5228                           
  5229                           ;Thermometer_src.c: 14:  write_char(shi + '0');
  5230  17D5  1283               	bcf	3,5	;RP0=0, select bank0
  5231  17D6  1303               	bcf	3,6	;RP1=0, select bank0
  5232  17D7  0846               	movf	_shi,w
  5233  17D8  3E30               	addlw	48
  5234  17D9  160A  118A  2769  160A  118A  	fcall	_write_char
  5235                           
  5236                           ;Thermometer_src.c: 16:  write_char(ge + '0');
  5237  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  5238  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  5239  17E0  0845               	movf	_ge,w
  5240  17E1  3E30               	addlw	48
  5241  17E2  160A  118A  2769  160A  118A  	fcall	_write_char
  5242                           
  5243                           ;Thermometer_src.c: 17:  write_char('.');
  5244  17E7  302E               	movlw	46
  5245  17E8  160A  118A  2769  160A  118A  	fcall	_write_char
  5246                           
  5247                           ;Thermometer_src.c: 19:  write_char(shifen + '0');
  5248  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5249  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5250  17EF  0844               	movf	_shifen,w
  5251  17F0  3E30               	addlw	48
  5252  17F1  160A  118A  2769  160A  118A  	fcall	_write_char
  5253                           
  5254                           ;Thermometer_src.c: 21:  write_char(baifen + '0');
  5255  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  5256  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  5257  17F8  0843               	movf	_baifen,w
  5258  17F9  3E30               	addlw	48
  5259  17FA  160A  118A  2769  160A  118A  	fcall	_write_char
  5260  17FF                     l218:	
  5261  17FF  0008               	return
  5262  1800                     __end_of_display_temp:	
  5263                           
  5264                           	psect	text22
  5265  0AF7                     __ptext22:	
  5266 ;; *************** function _display_date *****************
  5267 ;; Defined at:
  5268 ;;		line 79 in file "clock_src.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;		None
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  i               2    5[COMMON] int 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      void 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5282 ;;      Params:         0       0       0       0       0
  5283 ;;      Locals:         2       0       0       0       0
  5284 ;;      Temps:          2       0       0       0       0
  5285 ;;      Totals:         4       0       0       0       0
  5286 ;;Total ram usage:        4 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    2
  5289 ;; This function calls:
  5290 ;;		_write_char
  5291 ;; This function is called by:
  5292 ;;		_main
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _display_date
  5298  0AF7                     _display_date:	
  5299  0AF7                     l2858:	
  5300                           ;incstack = 0
  5301                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5302                           
  5303                           
  5304                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  5305  0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  5307  0AF9  1886               	btfsc	6,1	;volatile
  5308  0AFA  2AFC               	goto	u1731
  5309  0AFB  2AFD               	goto	u1730
  5310  0AFC                     u1731:	
  5311  0AFC  2B05               	goto	l2862
  5312  0AFD                     u1730:	
  5313  0AFD                     l2860:	
  5314                           
  5315                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  5316  0AFD  0823               	movf	_table1+3,w
  5317  0AFE  00F3               	movwf	??_display_date
  5318  0AFF  0873               	movf	??_display_date,w
  5319  0B00  00A0               	movwf	_table1
  5320                           
  5321                           ;clock_src.c: 85:           table1[1]=table1[4];
  5322  0B01  0824               	movf	_table1+4,w
  5323  0B02  00F3               	movwf	??_display_date
  5324  0B03  0873               	movf	??_display_date,w
  5325  0B04  00A1               	movwf	_table1+1
  5326  0B05                     l2862:	
  5327                           
  5328                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  5329  0B05  0823               	movf	_table1+3,w
  5330  0B06  39F0               	andlw	240
  5331  0B07  00F3               	movwf	??_display_date
  5332  0B08  01F4               	clrf	??_display_date+1
  5333  0B09  0873               	movf	??_display_date,w
  5334  0B0A  00F5               	movwf	display_date@i
  5335  0B0B  0874               	movf	??_display_date+1,w
  5336  0B0C  00F6               	movwf	display_date@i+1
  5337  0B0D                     l2864:	
  5338                           
  5339                           ;clock_src.c: 88:      i=i>>4;
  5340  0B0D  0E75               	swapf	display_date@i,w
  5341  0B0E  390F               	andlw	15
  5342  0B0F  00F5               	movwf	display_date@i
  5343  0B10  0E76               	swapf	display_date@i+1,w
  5344  0B11  39F0               	andlw	240
  5345  0B12  04F5               	iorwf	display_date@i,f
  5346  0B13  0E76               	swapf	display_date@i+1,w
  5347  0B14  390F               	andlw	15
  5348  0B15  00F6               	movwf	display_date@i+1
  5349  0B16  30F0               	movlw	240
  5350  0B17  1DF6               	btfss	display_date@i+1,3
  5351  0B18  3000               	movlw	0
  5352  0B19  04F6               	iorwf	display_date@i+1,f
  5353  0B1A                     l2866:	
  5354                           
  5355                           ;clock_src.c: 89:      write_char(i + '0');
  5356  0B1A  0875               	movf	display_date@i,w
  5357  0B1B  3E30               	addlw	48
  5358  0B1C  160A  118A  2769  120A  158A  	fcall	_write_char
  5359  0B21                     l2868:	
  5360                           
  5361                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  5362  0B21  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0B22  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0B23  0823               	movf	_table1+3,w
  5365  0B24  390F               	andlw	15
  5366  0B25  00F3               	movwf	??_display_date
  5367  0B26  01F4               	clrf	??_display_date+1
  5368  0B27  0873               	movf	??_display_date,w
  5369  0B28  00F5               	movwf	display_date@i
  5370  0B29  0874               	movf	??_display_date+1,w
  5371  0B2A  00F6               	movwf	display_date@i+1
  5372  0B2B                     l2870:	
  5373                           
  5374                           ;clock_src.c: 92:      write_char(i + '0');
  5375  0B2B  0875               	movf	display_date@i,w
  5376  0B2C  3E30               	addlw	48
  5377  0B2D  160A  118A  2769  120A  158A  	fcall	_write_char
  5378  0B32                     l2872:	
  5379                           
  5380                           ;clock_src.c: 93:      write_char('/');
  5381  0B32  302F               	movlw	47
  5382  0B33  160A  118A  2769  120A  158A  	fcall	_write_char
  5383  0B38                     l2874:	
  5384                           
  5385                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  5386  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0B3A  0824               	movf	_table1+4,w
  5389  0B3B  39F0               	andlw	240
  5390  0B3C  00F3               	movwf	??_display_date
  5391  0B3D  01F4               	clrf	??_display_date+1
  5392  0B3E  0873               	movf	??_display_date,w
  5393  0B3F  00F5               	movwf	display_date@i
  5394  0B40  0874               	movf	??_display_date+1,w
  5395  0B41  00F6               	movwf	display_date@i+1
  5396  0B42                     l2876:	
  5397                           
  5398                           ;clock_src.c: 98:      i=i>>4;
  5399  0B42  0E75               	swapf	display_date@i,w
  5400  0B43  390F               	andlw	15
  5401  0B44  00F5               	movwf	display_date@i
  5402  0B45  0E76               	swapf	display_date@i+1,w
  5403  0B46  39F0               	andlw	240
  5404  0B47  04F5               	iorwf	display_date@i,f
  5405  0B48  0E76               	swapf	display_date@i+1,w
  5406  0B49  390F               	andlw	15
  5407  0B4A  00F6               	movwf	display_date@i+1
  5408  0B4B  30F0               	movlw	240
  5409  0B4C  1DF6               	btfss	display_date@i+1,3
  5410  0B4D  3000               	movlw	0
  5411  0B4E  04F6               	iorwf	display_date@i+1,f
  5412  0B4F                     l2878:	
  5413                           
  5414                           ;clock_src.c: 99:      write_char(i + '0');
  5415  0B4F  0875               	movf	display_date@i,w
  5416  0B50  3E30               	addlw	48
  5417  0B51  160A  118A  2769  120A  158A  	fcall	_write_char
  5418  0B56                     l2880:	
  5419                           
  5420                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  5421  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0B58  0824               	movf	_table1+4,w
  5424  0B59  390F               	andlw	15
  5425  0B5A  00F3               	movwf	??_display_date
  5426  0B5B  01F4               	clrf	??_display_date+1
  5427  0B5C  0873               	movf	??_display_date,w
  5428  0B5D  00F5               	movwf	display_date@i
  5429  0B5E  0874               	movf	??_display_date+1,w
  5430  0B5F  00F6               	movwf	display_date@i+1
  5431  0B60                     l2882:	
  5432                           
  5433                           ;clock_src.c: 102:      write_char(i + '0');
  5434  0B60  0875               	movf	display_date@i,w
  5435  0B61  3E30               	addlw	48
  5436  0B62  160A  118A  2769  120A  158A  	fcall	_write_char
  5437  0B67                     l2884:	
  5438                           
  5439                           ;clock_src.c: 103:      write_char('/');
  5440  0B67  302F               	movlw	47
  5441  0B68  160A  118A  2769  120A  158A  	fcall	_write_char
  5442  0B6D                     l2886:	
  5443                           
  5444                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  5445  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  5447  0B6F  0826               	movf	_table1+6,w
  5448  0B70  39F0               	andlw	240
  5449  0B71  00F3               	movwf	??_display_date
  5450  0B72  01F4               	clrf	??_display_date+1
  5451  0B73  0873               	movf	??_display_date,w
  5452  0B74  00F5               	movwf	display_date@i
  5453  0B75  0874               	movf	??_display_date+1,w
  5454  0B76  00F6               	movwf	display_date@i+1
  5455  0B77                     l2888:	
  5456                           
  5457                           ;clock_src.c: 108:      write_char(i + '0');
  5458  0B77  0875               	movf	display_date@i,w
  5459  0B78  3E30               	addlw	48
  5460  0B79  160A  118A  2769  120A  158A  	fcall	_write_char
  5461  0B7E                     l2890:	
  5462                           
  5463                           ;clock_src.c: 110:      i=table1[6]&0x0f;
  5464  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  5465  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0B80  0826               	movf	_table1+6,w
  5467  0B81  390F               	andlw	15
  5468  0B82  00F3               	movwf	??_display_date
  5469  0B83  01F4               	clrf	??_display_date+1
  5470  0B84  0873               	movf	??_display_date,w
  5471  0B85  00F5               	movwf	display_date@i
  5472  0B86  0874               	movf	??_display_date+1,w
  5473  0B87  00F6               	movwf	display_date@i+1
  5474  0B88                     l2892:	
  5475                           
  5476                           ;clock_src.c: 111:      write_char(i + '0');
  5477  0B88  0875               	movf	display_date@i,w
  5478  0B89  3E30               	addlw	48
  5479  0B8A  160A  118A  2769  120A  158A  	fcall	_write_char
  5480  0B8F                     l301:	
  5481  0B8F  0008               	return
  5482  0B90                     __end_of_display_date:	
  5483                           
  5484                           	psect	text23
  5485  0B90                     __ptext23:	
  5486 ;; *************** function _display_clock *****************
  5487 ;; Defined at:
  5488 ;;		line 37 in file "clock_src.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  i               2    5[COMMON] int 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5502 ;;      Params:         0       0       0       0       0
  5503 ;;      Locals:         2       0       0       0       0
  5504 ;;      Temps:          2       0       0       0       0
  5505 ;;      Totals:         4       0       0       0       0
  5506 ;;Total ram usage:        4 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    2
  5509 ;; This function calls:
  5510 ;;		_write_char
  5511 ;; This function is called by:
  5512 ;;		_main
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           
  5517                           ;psect for function _display_clock
  5518  0B90                     _display_clock:	
  5519  0B90                     l2894:	
  5520                           ;incstack = 0
  5521                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5522                           
  5523                           
  5524                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  5525  0B90  1283               	bcf	3,5	;RP0=0, select bank0
  5526  0B91  1303               	bcf	3,6	;RP1=0, select bank0
  5527  0B92  1886               	btfsc	6,1	;volatile
  5528  0B93  2B95               	goto	u1741
  5529  0B94  2B96               	goto	u1740
  5530  0B95                     u1741:	
  5531  0B95  2B9E               	goto	l2898
  5532  0B96                     u1740:	
  5533  0B96                     l2896:	
  5534                           
  5535                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  5536  0B96  0823               	movf	_table1+3,w
  5537  0B97  00F3               	movwf	??_display_clock
  5538  0B98  0873               	movf	??_display_clock,w
  5539  0B99  00A0               	movwf	_table1
  5540                           
  5541                           ;clock_src.c: 43:           table1[1]=table1[4];
  5542  0B9A  0824               	movf	_table1+4,w
  5543  0B9B  00F3               	movwf	??_display_clock
  5544  0B9C  0873               	movf	??_display_clock,w
  5545  0B9D  00A1               	movwf	_table1+1
  5546  0B9E                     l2898:	
  5547                           
  5548                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  5549  0B9E  0822               	movf	_table1+2,w
  5550  0B9F  39F0               	andlw	240
  5551  0BA0  00F3               	movwf	??_display_clock
  5552  0BA1  01F4               	clrf	??_display_clock+1
  5553  0BA2  0873               	movf	??_display_clock,w
  5554  0BA3  00F5               	movwf	display_clock@i
  5555  0BA4  0874               	movf	??_display_clock+1,w
  5556  0BA5  00F6               	movwf	display_clock@i+1
  5557  0BA6                     l2900:	
  5558                           
  5559                           ;clock_src.c: 47:      i=i>>4;
  5560  0BA6  0E75               	swapf	display_clock@i,w
  5561  0BA7  390F               	andlw	15
  5562  0BA8  00F5               	movwf	display_clock@i
  5563  0BA9  0E76               	swapf	display_clock@i+1,w
  5564  0BAA  39F0               	andlw	240
  5565  0BAB  04F5               	iorwf	display_clock@i,f
  5566  0BAC  0E76               	swapf	display_clock@i+1,w
  5567  0BAD  390F               	andlw	15
  5568  0BAE  00F6               	movwf	display_clock@i+1
  5569  0BAF  30F0               	movlw	240
  5570  0BB0  1DF6               	btfss	display_clock@i+1,3
  5571  0BB1  3000               	movlw	0
  5572  0BB2  04F6               	iorwf	display_clock@i+1,f
  5573  0BB3                     l2902:	
  5574                           
  5575                           ;clock_src.c: 48:      write_char(i + '0');
  5576  0BB3  0875               	movf	display_clock@i,w
  5577  0BB4  3E30               	addlw	48
  5578  0BB5  160A  118A  2769  120A  158A  	fcall	_write_char
  5579  0BBA                     l2904:	
  5580                           
  5581                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  5582  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  5583  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  5584  0BBC  0822               	movf	_table1+2,w
  5585  0BBD  390F               	andlw	15
  5586  0BBE  00F3               	movwf	??_display_clock
  5587  0BBF  01F4               	clrf	??_display_clock+1
  5588  0BC0  0873               	movf	??_display_clock,w
  5589  0BC1  00F5               	movwf	display_clock@i
  5590  0BC2  0874               	movf	??_display_clock+1,w
  5591  0BC3  00F6               	movwf	display_clock@i+1
  5592  0BC4                     l2906:	
  5593                           
  5594                           ;clock_src.c: 53:      write_char(i + '0');
  5595  0BC4  0875               	movf	display_clock@i,w
  5596  0BC5  3E30               	addlw	48
  5597  0BC6  160A  118A  2769  120A  158A  	fcall	_write_char
  5598  0BCB                     l2908:	
  5599                           
  5600                           ;clock_src.c: 54:      write_char(':');
  5601  0BCB  303A               	movlw	58
  5602  0BCC  160A  118A  2769  120A  158A  	fcall	_write_char
  5603  0BD1                     l2910:	
  5604                           
  5605                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  5606  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  5607  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  5608  0BD3  0821               	movf	_table1+1,w
  5609  0BD4  39F0               	andlw	240
  5610  0BD5  00F3               	movwf	??_display_clock
  5611  0BD6  01F4               	clrf	??_display_clock+1
  5612  0BD7  0873               	movf	??_display_clock,w
  5613  0BD8  00F5               	movwf	display_clock@i
  5614  0BD9  0874               	movf	??_display_clock+1,w
  5615  0BDA  00F6               	movwf	display_clock@i+1
  5616  0BDB                     l2912:	
  5617                           
  5618                           ;clock_src.c: 59:      i=i>>4;
  5619  0BDB  0E75               	swapf	display_clock@i,w
  5620  0BDC  390F               	andlw	15
  5621  0BDD  00F5               	movwf	display_clock@i
  5622  0BDE  0E76               	swapf	display_clock@i+1,w
  5623  0BDF  39F0               	andlw	240
  5624  0BE0  04F5               	iorwf	display_clock@i,f
  5625  0BE1  0E76               	swapf	display_clock@i+1,w
  5626  0BE2  390F               	andlw	15
  5627  0BE3  00F6               	movwf	display_clock@i+1
  5628  0BE4  30F0               	movlw	240
  5629  0BE5  1DF6               	btfss	display_clock@i+1,3
  5630  0BE6  3000               	movlw	0
  5631  0BE7  04F6               	iorwf	display_clock@i+1,f
  5632  0BE8                     l2914:	
  5633                           
  5634                           ;clock_src.c: 60:      write_char(i + '0');
  5635  0BE8  0875               	movf	display_clock@i,w
  5636  0BE9  3E30               	addlw	48
  5637  0BEA  160A  118A  2769  120A  158A  	fcall	_write_char
  5638  0BEF                     l2916:	
  5639                           
  5640                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  5641  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0BF1  0821               	movf	_table1+1,w
  5644  0BF2  390F               	andlw	15
  5645  0BF3  00F3               	movwf	??_display_clock
  5646  0BF4  01F4               	clrf	??_display_clock+1
  5647  0BF5  0873               	movf	??_display_clock,w
  5648  0BF6  00F5               	movwf	display_clock@i
  5649  0BF7  0874               	movf	??_display_clock+1,w
  5650  0BF8  00F6               	movwf	display_clock@i+1
  5651  0BF9                     l2918:	
  5652                           
  5653                           ;clock_src.c: 64:      write_char(i + '0');
  5654  0BF9  0875               	movf	display_clock@i,w
  5655  0BFA  3E30               	addlw	48
  5656  0BFB  160A  118A  2769  120A  158A  	fcall	_write_char
  5657  0C00                     l2920:	
  5658                           
  5659                           ;clock_src.c: 65:      write_char(':');
  5660  0C00  303A               	movlw	58
  5661  0C01  160A  118A  2769  120A  158A  	fcall	_write_char
  5662  0C06                     l2922:	
  5663                           
  5664                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  5665  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0C08  0820               	movf	_table1,w
  5668  0C09  39F0               	andlw	240
  5669  0C0A  00F3               	movwf	??_display_clock
  5670  0C0B  01F4               	clrf	??_display_clock+1
  5671  0C0C  0873               	movf	??_display_clock,w
  5672  0C0D  00F5               	movwf	display_clock@i
  5673  0C0E  0874               	movf	??_display_clock+1,w
  5674  0C0F  00F6               	movwf	display_clock@i+1
  5675  0C10                     l2924:	
  5676                           
  5677                           ;clock_src.c: 69:      i=i>>4;
  5678  0C10  0E75               	swapf	display_clock@i,w
  5679  0C11  390F               	andlw	15
  5680  0C12  00F5               	movwf	display_clock@i
  5681  0C13  0E76               	swapf	display_clock@i+1,w
  5682  0C14  39F0               	andlw	240
  5683  0C15  04F5               	iorwf	display_clock@i,f
  5684  0C16  0E76               	swapf	display_clock@i+1,w
  5685  0C17  390F               	andlw	15
  5686  0C18  00F6               	movwf	display_clock@i+1
  5687  0C19  30F0               	movlw	240
  5688  0C1A  1DF6               	btfss	display_clock@i+1,3
  5689  0C1B  3000               	movlw	0
  5690  0C1C  04F6               	iorwf	display_clock@i+1,f
  5691  0C1D                     l2926:	
  5692                           
  5693                           ;clock_src.c: 70:      write_char(i + '0');
  5694  0C1D  0875               	movf	display_clock@i,w
  5695  0C1E  3E30               	addlw	48
  5696  0C1F  160A  118A  2769  120A  158A  	fcall	_write_char
  5697  0C24                     l2928:	
  5698                           
  5699                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  5700  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  5701  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  5702  0C26  0820               	movf	_table1,w
  5703  0C27  390F               	andlw	15
  5704  0C28  00F3               	movwf	??_display_clock
  5705  0C29  01F4               	clrf	??_display_clock+1
  5706  0C2A  0873               	movf	??_display_clock,w
  5707  0C2B  00F5               	movwf	display_clock@i
  5708  0C2C  0874               	movf	??_display_clock+1,w
  5709  0C2D  00F6               	movwf	display_clock@i+1
  5710  0C2E                     l2930:	
  5711                           
  5712                           ;clock_src.c: 74:      write_char(i + '0');
  5713  0C2E  0875               	movf	display_clock@i,w
  5714  0C2F  3E30               	addlw	48
  5715  0C30  160A  118A  2769  120A  158A  	fcall	_write_char
  5716  0C35                     l297:	
  5717  0C35  0008               	return
  5718  0C36                     __end_of_display_clock:	
  5719                           
  5720                           	psect	text24
  5721  03D3                     __ptext24:	
  5722 ;; *************** function _date_settings *****************
  5723 ;; Defined at:
  5724 ;;		line 324 in file "Button_src.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;		None
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;		None
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5738 ;;      Params:         0       0       0       0       0
  5739 ;;      Locals:         0       0       0       0       0
  5740 ;;      Temps:          0       3       0       0       0
  5741 ;;      Totals:         0       3       0       0       0
  5742 ;;Total ram usage:        3 bytes
  5743 ;; Hardware stack levels used:    1
  5744 ;; Hardware stack levels required when called:    3
  5745 ;; This function calls:
  5746 ;;		_button_delay
  5747 ;;		_incrementor
  5748 ;;		_modulus_func
  5749 ;;		_set_time
  5750 ;;		_time_date_delimiter
  5751 ;;		_time_date_hex_terminator
  5752 ;;		_write_char
  5753 ;;		_write_cmd
  5754 ;; This function is called by:
  5755 ;;		_main
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           
  5760                           ;psect for function _date_settings
  5761  03D3                     _date_settings:	
  5762  03D3                     l3072:	
  5763                           ;incstack = 0
  5764                           ; Regs used in _date_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5765                           
  5766                           
  5767                           ;Button_src.c: 325:  RC0 = 0;
  5768  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  5769  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  5770  03D5  1007               	bcf	7,0	;volatile
  5771                           
  5772                           ;Button_src.c: 326:  RC1 = 1;
  5773  03D6  1487               	bsf	7,1	;volatile
  5774                           
  5775                           ;Button_src.c: 327:  RC2 = 1;
  5776  03D7  1507               	bsf	7,2	;volatile
  5777                           
  5778                           ;Button_src.c: 328:  RC3 = 1;
  5779  03D8  1587               	bsf	7,3	;volatile
  5780                           
  5781                           ;Button_src.c: 329:   if (RC4 == 0){
  5782  03D9  1A07               	btfsc	7,4	;volatile
  5783  03DA  2BDC               	goto	u1831
  5784  03DB  2BDD               	goto	u1830
  5785  03DC                     u1831:	
  5786  03DC  2FE5               	goto	l493
  5787  03DD                     u1830:	
  5788  03DD                     l3074:	
  5789                           
  5790                           ;Button_src.c: 330:       write_cmd(0x1);
  5791  03DD  3001               	movlw	1
  5792  03DE  120A  118A  2007  120A  118A  	fcall	_write_cmd
  5793  03E3                     l484:	
  5794                           ;Button_src.c: 331:       for(;;){
  5795                           
  5796                           
  5797                           ;Button_src.c: 332:             write_cmd(0x80);
  5798  03E3  3080               	movlw	128
  5799  03E4  120A  118A  2007  120A  118A  	fcall	_write_cmd
  5800                           
  5801                           ;Button_src.c: 333:             write_char('D');
  5802  03E9  3044               	movlw	68
  5803  03EA  160A  118A  2769  120A  118A  	fcall	_write_char
  5804                           
  5805                           ;Button_src.c: 334:             write_char('a');
  5806  03EF  3061               	movlw	97
  5807  03F0  160A  118A  2769  120A  118A  	fcall	_write_char
  5808                           
  5809                           ;Button_src.c: 335:             write_char('t');
  5810  03F5  3074               	movlw	116
  5811  03F6  160A  118A  2769  120A  118A  	fcall	_write_char
  5812                           
  5813                           ;Button_src.c: 336:             write_char('e');
  5814  03FB  3065               	movlw	101
  5815  03FC  160A  118A  2769  120A  118A  	fcall	_write_char
  5816                           
  5817                           ;Button_src.c: 337:             write_char('_');
  5818  0401  305F               	movlw	95
  5819  0402  160A  118A  2769  120A  118A  	fcall	_write_char
  5820                           
  5821                           ;Button_src.c: 338:             write_char('S');
  5822  0407  3053               	movlw	83
  5823  0408  160A  118A  2769  120A  118A  	fcall	_write_char
  5824                           
  5825                           ;Button_src.c: 339:             write_char('e');
  5826  040D  3065               	movlw	101
  5827  040E  160A  118A  2769  120A  118A  	fcall	_write_char
  5828                           
  5829                           ;Button_src.c: 340:             write_char('t');
  5830  0413  3074               	movlw	116
  5831  0414  160A  118A  2769  120A  118A  	fcall	_write_char
  5832                           
  5833                           ;Button_src.c: 341:             write_char('t');
  5834  0419  3074               	movlw	116
  5835  041A  160A  118A  2769  120A  118A  	fcall	_write_char
  5836                           
  5837                           ;Button_src.c: 342:             write_char('i');
  5838  041F  3069               	movlw	105
  5839  0420  160A  118A  2769  120A  118A  	fcall	_write_char
  5840                           
  5841                           ;Button_src.c: 343:             write_char('n');
  5842  0425  306E               	movlw	110
  5843  0426  160A  118A  2769  120A  118A  	fcall	_write_char
  5844                           
  5845                           ;Button_src.c: 344:             write_char('g');
  5846  042B  3067               	movlw	103
  5847  042C  160A  118A  2769  120A  118A  	fcall	_write_char
  5848                           
  5849                           ;Button_src.c: 345:             write_char('s');
  5850  0431  3073               	movlw	115
  5851  0432  160A  118A  2769  120A  118A  	fcall	_write_char
  5852  0437                     l3076:	
  5853                           
  5854                           ;Button_src.c: 346:             RC0 = 1;
  5855  0437  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0438  1303               	bcf	3,6	;RP1=0, select bank0
  5857  0439  1407               	bsf	7,0	;volatile
  5858  043A                     l3078:	
  5859                           
  5860                           ;Button_src.c: 347:             RC1 = 0;
  5861  043A  1087               	bcf	7,1	;volatile
  5862  043B                     l3080:	
  5863                           
  5864                           ;Button_src.c: 348:             RC2 = 1;
  5865  043B  1507               	bsf	7,2	;volatile
  5866  043C                     l3082:	
  5867                           
  5868                           ;Button_src.c: 349:             RC3 = 1;
  5869  043C  1587               	bsf	7,3	;volatile
  5870  043D                     l3084:	
  5871                           
  5872                           ;Button_src.c: 350:             if(RC7 == 0 && b =='x'){
  5873  043D  1B87               	btfsc	7,7	;volatile
  5874  043E  2C40               	goto	u1841
  5875  043F  2C41               	goto	u1840
  5876  0440                     u1841:	
  5877  0440  2CA2               	goto	l3106
  5878  0441                     u1840:	
  5879  0441                     l3086:	
  5880  0441  3078               	movlw	120
  5881  0442  063F               	xorwf	_b,w
  5882  0443  1D03               	btfss	3,2
  5883  0444  2C46               	goto	u1851
  5884  0445  2C47               	goto	u1850
  5885  0446                     u1851:	
  5886  0446  2CA2               	goto	l3106
  5887  0447                     u1850:	
  5888  0447                     l3088:	
  5889                           
  5890                           ;Button_src.c: 351:                     a++;
  5891  0447  3001               	movlw	1
  5892  0448  00D0               	movwf	??_date_settings
  5893  0449  0850               	movf	??_date_settings,w
  5894  044A  07C0               	addwf	_a,f
  5895  044B                     l3090:	
  5896                           
  5897                           ;Button_src.c: 352:                     x++ ;
  5898  044B  3001               	movlw	1
  5899  044C  07B1               	addwf	_x,f
  5900  044D  1803               	skipnc
  5901  044E  0AB2               	incf	_x+1,f
  5902  044F  3000               	movlw	0
  5903  0450  07B2               	addwf	_x+1,f
  5904  0451                     l3092:	
  5905                           
  5906                           ;Button_src.c: 353:                     x = modulus_func(x,10);
  5907  0451  0832               	movf	_x+1,w
  5908  0452  00F8               	movwf	modulus_func@x+1
  5909  0453  0831               	movf	_x,w
  5910  0454  00F7               	movwf	modulus_func@x
  5911  0455  300A               	movlw	10
  5912  0456  00F9               	movwf	modulus_func@y
  5913  0457  3000               	movlw	0
  5914  0458  00FA               	movwf	modulus_func@y+1
  5915  0459  160A  118A  26B2  120A  118A  	fcall	_modulus_func
  5916  045E  0878               	movf	?_modulus_func+1,w
  5917  045F  1283               	bcf	3,5	;RP0=0, select bank0
  5918  0460  1303               	bcf	3,6	;RP1=0, select bank0
  5919  0461  00B2               	movwf	_x+1
  5920  0462  0877               	movf	?_modulus_func,w
  5921  0463  00B1               	movwf	_x
  5922  0464                     l3094:	
  5923                           
  5924                           ;Button_src.c: 354:                     y = incrementor(y,x,'9');
  5925  0464  0830               	movf	_y+1,w
  5926  0465  00CC               	movwf	incrementor@upper_val+1
  5927  0466  082F               	movf	_y,w
  5928  0467  00CB               	movwf	incrementor@upper_val
  5929  0468  0832               	movf	_x+1,w
  5930  0469  00CE               	movwf	incrementor@lower_val+1
  5931  046A  0831               	movf	_x,w
  5932  046B  00CD               	movwf	incrementor@lower_val
  5933  046C  3039               	movlw	57
  5934  046D  00D0               	movwf	??_date_settings
  5935  046E  0850               	movf	??_date_settings,w
  5936  046F  00CF               	movwf	incrementor@z
  5937  0470  120A  158A  2023  120A  118A  	fcall	_incrementor
  5938  0475  1283               	bcf	3,5	;RP0=0, select bank0
  5939  0476  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0477  00D1               	movwf	??_date_settings+1
  5941  0478  01D2               	clrf	??_date_settings+2
  5942  0479  0851               	movf	??_date_settings+1,w
  5943  047A  00AF               	movwf	_y
  5944  047B  0852               	movf	??_date_settings+2,w
  5945  047C  00B0               	movwf	_y+1
  5946  047D                     l3096:	
  5947                           
  5948                           ;Button_src.c: 355:                     a = time_date_hex_terminator(a,'C');
  5949  047D  3043               	movlw	67
  5950  047E  00D0               	movwf	??_date_settings
  5951  047F  0850               	movf	??_date_settings,w
  5952  0480  00F0               	movwf	time_date_hex_terminator@limiter
  5953  0481  0840               	movf	_a,w
  5954  0482  160A  118A  26C4  120A  118A  	fcall	_time_date_hex_terminator
  5955  0487  1283               	bcf	3,5	;RP0=0, select bank0
  5956  0488  1303               	bcf	3,6	;RP1=0, select bank0
  5957  0489  00D1               	movwf	??_date_settings+1
  5958  048A  0851               	movf	??_date_settings+1,w
  5959  048B  00C0               	movwf	_a
  5960  048C                     l3098:	
  5961                           
  5962                           ;Button_src.c: 356:                     if(y == 1 && x == 3){
  5963  048C  032F               	decf	_y,w
  5964  048D  0430               	iorwf	_y+1,w
  5965  048E  1D03               	btfss	3,2
  5966  048F  2C91               	goto	u1861
  5967  0490  2C92               	goto	u1860
  5968  0491                     u1861:	
  5969  0491  2C9D               	goto	l3104
  5970  0492                     u1860:	
  5971  0492                     l3100:	
  5972  0492  3003               	movlw	3
  5973  0493  0631               	xorwf	_x,w
  5974  0494  0432               	iorwf	_x+1,w
  5975  0495  1D03               	btfss	3,2
  5976  0496  2C98               	goto	u1871
  5977  0497  2C99               	goto	u1870
  5978  0498                     u1871:	
  5979  0498  2C9D               	goto	l3104
  5980  0499                     u1870:	
  5981  0499                     l3102:	
  5982                           
  5983                           ;Button_src.c: 357:                         x = 0;
  5984  0499  01B1               	clrf	_x
  5985  049A  01B2               	clrf	_x+1
  5986                           
  5987                           ;Button_src.c: 358:                         y = 0;
  5988  049B  01AF               	clrf	_y
  5989  049C  01B0               	clrf	_y+1
  5990  049D                     l3104:	
  5991                           
  5992                           ;Button_src.c: 360:                     button_delay();
  5993  049D  160A  118A  2710  120A  118A  	fcall	_button_delay
  5994  04A2                     l3106:	
  5995                           
  5996                           ;Button_src.c: 362:             if(RC7==0 && b == 'y'){
  5997  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  5998  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  5999  04A4  1B87               	btfsc	7,7	;volatile
  6000  04A5  2CA7               	goto	u1881
  6001  04A6  2CA8               	goto	u1880
  6002  04A7                     u1881:	
  6003  04A7  2D0A               	goto	l3128
  6004  04A8                     u1880:	
  6005  04A8                     l3108:	
  6006  04A8  3079               	movlw	121
  6007  04A9  063F               	xorwf	_b,w
  6008  04AA  1D03               	btfss	3,2
  6009  04AB  2CAD               	goto	u1891
  6010  04AC  2CAE               	goto	u1890
  6011  04AD                     u1891:	
  6012  04AD  2D0A               	goto	l3128
  6013  04AE                     u1890:	
  6014  04AE                     l3110:	
  6015                           
  6016                           ;Button_src.c: 363:                     day_hex++;
  6017  04AE  3001               	movlw	1
  6018  04AF  00D0               	movwf	??_date_settings
  6019  04B0  0850               	movf	??_date_settings,w
  6020  04B1  07BD               	addwf	_day_hex,f
  6021  04B2                     l3112:	
  6022                           
  6023                           ;Button_src.c: 364:                     day_low++;
  6024  04B2  3001               	movlw	1
  6025  04B3  07AB               	addwf	_day_low,f
  6026  04B4  1803               	skipnc
  6027  04B5  0AAC               	incf	_day_low+1,f
  6028  04B6  3000               	movlw	0
  6029  04B7  07AC               	addwf	_day_low+1,f
  6030  04B8                     l3114:	
  6031                           
  6032                           ;Button_src.c: 365:                     day_low = modulus_func(day_low,10);
  6033  04B8  082C               	movf	_day_low+1,w
  6034  04B9  00F8               	movwf	modulus_func@x+1
  6035  04BA  082B               	movf	_day_low,w
  6036  04BB  00F7               	movwf	modulus_func@x
  6037  04BC  300A               	movlw	10
  6038  04BD  00F9               	movwf	modulus_func@y
  6039  04BE  3000               	movlw	0
  6040  04BF  00FA               	movwf	modulus_func@y+1
  6041  04C0  160A  118A  26B2  120A  118A  	fcall	_modulus_func
  6042  04C5  0878               	movf	?_modulus_func+1,w
  6043  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  6044  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  6045  04C8  00AC               	movwf	_day_low+1
  6046  04C9  0877               	movf	?_modulus_func,w
  6047  04CA  00AB               	movwf	_day_low
  6048  04CB                     l3116:	
  6049                           
  6050                           ;Button_src.c: 366:                     day_high = incrementor(day_high,day_low,'9');
  6051  04CB  082A               	movf	_day_high+1,w
  6052  04CC  00CC               	movwf	incrementor@upper_val+1
  6053  04CD  0829               	movf	_day_high,w
  6054  04CE  00CB               	movwf	incrementor@upper_val
  6055  04CF  082C               	movf	_day_low+1,w
  6056  04D0  00CE               	movwf	incrementor@lower_val+1
  6057  04D1  082B               	movf	_day_low,w
  6058  04D2  00CD               	movwf	incrementor@lower_val
  6059  04D3  3039               	movlw	57
  6060  04D4  00D0               	movwf	??_date_settings
  6061  04D5  0850               	movf	??_date_settings,w
  6062  04D6  00CF               	movwf	incrementor@z
  6063  04D7  120A  158A  2023  120A  118A  	fcall	_incrementor
  6064  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  6065  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  6066  04DE  00D1               	movwf	??_date_settings+1
  6067  04DF  01D2               	clrf	??_date_settings+2
  6068  04E0  0851               	movf	??_date_settings+1,w
  6069  04E1  00A9               	movwf	_day_high
  6070  04E2  0852               	movf	??_date_settings+2,w
  6071  04E3  00AA               	movwf	_day_high+1
  6072  04E4                     l3118:	
  6073                           
  6074                           ;Button_src.c: 367:                     day_hex = time_date_hex_terminator(day_hex,'d');
  6075  04E4  3064               	movlw	100
  6076  04E5  00D0               	movwf	??_date_settings
  6077  04E6  0850               	movf	??_date_settings,w
  6078  04E7  00F0               	movwf	time_date_hex_terminator@limiter
  6079  04E8  083D               	movf	_day_hex,w
  6080  04E9  160A  118A  26C4  120A  118A  	fcall	_time_date_hex_terminator
  6081  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  6082  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  6083  04F0  00D1               	movwf	??_date_settings+1
  6084  04F1  0851               	movf	??_date_settings+1,w
  6085  04F2  00BD               	movwf	_day_hex
  6086  04F3                     l3120:	
  6087                           
  6088                           ;Button_src.c: 368:                     if(day_high == 3 && day_low==2 ){
  6089  04F3  3003               	movlw	3
  6090  04F4  0629               	xorwf	_day_high,w
  6091  04F5  042A               	iorwf	_day_high+1,w
  6092  04F6  1D03               	btfss	3,2
  6093  04F7  2CF9               	goto	u1901
  6094  04F8  2CFA               	goto	u1900
  6095  04F9                     u1901:	
  6096  04F9  2D05               	goto	l3126
  6097  04FA                     u1900:	
  6098  04FA                     l3122:	
  6099  04FA  3002               	movlw	2
  6100  04FB  062B               	xorwf	_day_low,w
  6101  04FC  042C               	iorwf	_day_low+1,w
  6102  04FD  1D03               	btfss	3,2
  6103  04FE  2D00               	goto	u1911
  6104  04FF  2D01               	goto	u1910
  6105  0500                     u1911:	
  6106  0500  2D05               	goto	l3126
  6107  0501                     u1910:	
  6108  0501                     l3124:	
  6109                           
  6110                           ;Button_src.c: 369:                         day_high = 0;
  6111  0501  01A9               	clrf	_day_high
  6112  0502  01AA               	clrf	_day_high+1
  6113                           
  6114                           ;Button_src.c: 370:                         day_low = 0;
  6115  0503  01AB               	clrf	_day_low
  6116  0504  01AC               	clrf	_day_low+1
  6117  0505                     l3126:	
  6118                           
  6119                           ;Button_src.c: 372:                     button_delay();
  6120  0505  160A  118A  2710  120A  118A  	fcall	_button_delay
  6121  050A                     l3128:	
  6122                           
  6123                           ;Button_src.c: 374:             if(RC7==0 && b == 'z'){
  6124  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6125  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6126  050C  1B87               	btfsc	7,7	;volatile
  6127  050D  2D0F               	goto	u1921
  6128  050E  2D10               	goto	u1920
  6129  050F                     u1921:	
  6130  050F  2D63               	goto	l3150
  6131  0510                     u1920:	
  6132  0510                     l3130:	
  6133  0510  307A               	movlw	122
  6134  0511  063F               	xorwf	_b,w
  6135  0512  1D03               	btfss	3,2
  6136  0513  2D15               	goto	u1931
  6137  0514  2D16               	goto	u1930
  6138  0515                     u1931:	
  6139  0515  2D63               	goto	l3150
  6140  0516                     u1930:	
  6141  0516                     l3132:	
  6142                           
  6143                           ;Button_src.c: 375:                     c++;
  6144  0516  3001               	movlw	1
  6145  0517  00D0               	movwf	??_date_settings
  6146  0518  0850               	movf	??_date_settings,w
  6147  0519  07BE               	addwf	_c,f
  6148  051A                     l3134:	
  6149                           
  6150                           ;Button_src.c: 376:                     t++;
  6151  051A  3001               	movlw	1
  6152  051B  07B5               	addwf	_t,f
  6153  051C  1803               	skipnc
  6154  051D  0AB6               	incf	_t+1,f
  6155  051E  3000               	movlw	0
  6156  051F  07B6               	addwf	_t+1,f
  6157  0520                     l3136:	
  6158                           
  6159                           ;Button_src.c: 377:                     t = modulus_func(t,10);
  6160  0520  0836               	movf	_t+1,w
  6161  0521  00F8               	movwf	modulus_func@x+1
  6162  0522  0835               	movf	_t,w
  6163  0523  00F7               	movwf	modulus_func@x
  6164  0524  300A               	movlw	10
  6165  0525  00F9               	movwf	modulus_func@y
  6166  0526  3000               	movlw	0
  6167  0527  00FA               	movwf	modulus_func@y+1
  6168  0528  160A  118A  26B2  120A  118A  	fcall	_modulus_func
  6169  052D  0878               	movf	?_modulus_func+1,w
  6170  052E  1283               	bcf	3,5	;RP0=0, select bank0
  6171  052F  1303               	bcf	3,6	;RP1=0, select bank0
  6172  0530  00B6               	movwf	_t+1
  6173  0531  0877               	movf	?_modulus_func,w
  6174  0532  00B5               	movwf	_t
  6175  0533                     l3138:	
  6176                           
  6177                           ;Button_src.c: 378:                     w = incrementor(w,t,'9');
  6178  0533  0834               	movf	_w+1,w
  6179  0534  00CC               	movwf	incrementor@upper_val+1
  6180  0535  0833               	movf	_w,w
  6181  0536  00CB               	movwf	incrementor@upper_val
  6182  0537  0836               	movf	_t+1,w
  6183  0538  00CE               	movwf	incrementor@lower_val+1
  6184  0539  0835               	movf	_t,w
  6185  053A  00CD               	movwf	incrementor@lower_val
  6186  053B  3039               	movlw	57
  6187  053C  00D0               	movwf	??_date_settings
  6188  053D  0850               	movf	??_date_settings,w
  6189  053E  00CF               	movwf	incrementor@z
  6190  053F  120A  158A  2023  120A  118A  	fcall	_incrementor
  6191  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0545  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0546  00D1               	movwf	??_date_settings+1
  6194  0547  01D2               	clrf	??_date_settings+2
  6195  0548  0851               	movf	??_date_settings+1,w
  6196  0549  00B3               	movwf	_w
  6197  054A  0852               	movf	??_date_settings+2,w
  6198  054B  00B4               	movwf	_w+1
  6199  054C                     l3140:	
  6200                           
  6201                           ;Button_src.c: 379:                      if(c == (0x59 + 1)){
  6202  054C  305A               	movlw	90
  6203  054D  063E               	xorwf	_c,w
  6204  054E  1D03               	btfss	3,2
  6205  054F  2D51               	goto	u1941
  6206  0550  2D52               	goto	u1940
  6207  0551                     u1941:	
  6208  0551  2D53               	goto	l3144
  6209  0552                     u1940:	
  6210  0552                     l3142:	
  6211                           
  6212                           ;Button_src.c: 380:                         c = 0x00;
  6213  0552  01BE               	clrf	_c
  6214  0553                     l3144:	
  6215                           
  6216                           ;Button_src.c: 382:                     if(w == 6){
  6217  0553  3006               	movlw	6
  6218  0554  0633               	xorwf	_w,w
  6219  0555  0434               	iorwf	_w+1,w
  6220  0556  1D03               	btfss	3,2
  6221  0557  2D59               	goto	u1951
  6222  0558  2D5A               	goto	u1950
  6223  0559                     u1951:	
  6224  0559  2D5E               	goto	l3148
  6225  055A                     u1950:	
  6226  055A                     l3146:	
  6227                           
  6228                           ;Button_src.c: 383:                         w = 0;
  6229  055A  01B3               	clrf	_w
  6230  055B  01B4               	clrf	_w+1
  6231                           
  6232                           ;Button_src.c: 384:                         t = 0;
  6233  055C  01B5               	clrf	_t
  6234  055D  01B6               	clrf	_t+1
  6235  055E                     l3148:	
  6236                           
  6237                           ;Button_src.c: 386:                     button_delay();
  6238  055E  160A  118A  2710  120A  118A  	fcall	_button_delay
  6239  0563                     l3150:	
  6240                           
  6241                           ;Button_src.c: 390:              table[4] = a;
  6242  0563  1283               	bcf	3,5	;RP0=0, select bank0
  6243  0564  1303               	bcf	3,6	;RP1=0, select bank0
  6244  0565  0840               	movf	_a,w
  6245  0566  00D0               	movwf	??_date_settings
  6246  0567  0850               	movf	??_date_settings,w
  6247  0568  00D9               	movwf	_table+4
  6248  0569                     l3152:	
  6249                           
  6250                           ;Button_src.c: 391:              table[6] = c;
  6251  0569  083E               	movf	_c,w
  6252  056A  00D0               	movwf	??_date_settings
  6253  056B  0850               	movf	??_date_settings,w
  6254  056C  00DB               	movwf	_table+6
  6255  056D                     l3154:	
  6256                           
  6257                           ;Button_src.c: 392:              table[3] = day_hex;
  6258  056D  083D               	movf	_day_hex,w
  6259  056E  00D0               	movwf	??_date_settings
  6260  056F  0850               	movf	??_date_settings,w
  6261  0570  00D8               	movwf	_table+3
  6262  0571                     l3156:	
  6263                           
  6264                           ;Button_src.c: 394:                     a = time_date_delimiter(a,0x11,'9');
  6265  0571  3011               	movlw	17
  6266  0572  00D0               	movwf	??_date_settings
  6267  0573  0850               	movf	??_date_settings,w
  6268  0574  00F0               	movwf	time_date_delimiter@hex
  6269  0575  3039               	movlw	57
  6270  0576  00D1               	movwf	??_date_settings+1
  6271  0577  0851               	movf	??_date_settings+1,w
  6272  0578  00F1               	movwf	time_date_delimiter@limiter
  6273  0579  0840               	movf	_a,w
  6274  057A  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6275  057F  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0580  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0581  00D2               	movwf	??_date_settings+2
  6278  0582  0852               	movf	??_date_settings+2,w
  6279  0583  00C0               	movwf	_a
  6280  0584                     l3158:	
  6281                           
  6282                           ;Button_src.c: 396:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  6283  0584  3011               	movlw	17
  6284  0585  00D0               	movwf	??_date_settings
  6285  0586  0850               	movf	??_date_settings,w
  6286  0587  00F0               	movwf	time_date_delimiter@hex
  6287  0588  3039               	movlw	57
  6288  0589  00D1               	movwf	??_date_settings+1
  6289  058A  0851               	movf	??_date_settings+1,w
  6290  058B  00F1               	movwf	time_date_delimiter@limiter
  6291  058C  083D               	movf	_day_hex,w
  6292  058D  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6293  0592  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0593  1303               	bcf	3,6	;RP1=0, select bank0
  6295  0594  00D2               	movwf	??_date_settings+2
  6296  0595  0852               	movf	??_date_settings+2,w
  6297  0596  00BD               	movwf	_day_hex
  6298  0597                     l3160:	
  6299                           
  6300                           ;Button_src.c: 397:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  6301  0597  3021               	movlw	33
  6302  0598  00D0               	movwf	??_date_settings
  6303  0599  0850               	movf	??_date_settings,w
  6304  059A  00F0               	movwf	time_date_delimiter@hex
  6305  059B  304A               	movlw	74
  6306  059C  00D1               	movwf	??_date_settings+1
  6307  059D  0851               	movf	??_date_settings+1,w
  6308  059E  00F1               	movwf	time_date_delimiter@limiter
  6309  059F  083D               	movf	_day_hex,w
  6310  05A0  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6311  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6312  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6313  05A7  00D2               	movwf	??_date_settings+2
  6314  05A8  0852               	movf	??_date_settings+2,w
  6315  05A9  00BD               	movwf	_day_hex
  6316  05AA                     l3162:	
  6317                           
  6318                           ;Button_src.c: 398:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  6319  05AA  3011               	movlw	17
  6320  05AB  00D0               	movwf	??_date_settings
  6321  05AC  0850               	movf	??_date_settings,w
  6322  05AD  00F0               	movwf	time_date_delimiter@hex
  6323  05AE  3039               	movlw	57
  6324  05AF  00D1               	movwf	??_date_settings+1
  6325  05B0  0851               	movf	??_date_settings+1,w
  6326  05B1  00F1               	movwf	time_date_delimiter@limiter
  6327  05B2  083D               	movf	_day_hex,w
  6328  05B3  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6329  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  6330  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  6331  05BA  00D2               	movwf	??_date_settings+2
  6332  05BB  0852               	movf	??_date_settings+2,w
  6333  05BC  00BD               	movwf	_day_hex
  6334  05BD                     l3164:	
  6335                           
  6336                           ;Button_src.c: 399:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  6337  05BD  3021               	movlw	33
  6338  05BE  00D0               	movwf	??_date_settings
  6339  05BF  0850               	movf	??_date_settings,w
  6340  05C0  00F0               	movwf	time_date_delimiter@hex
  6341  05C1  304A               	movlw	74
  6342  05C2  00D1               	movwf	??_date_settings+1
  6343  05C3  0851               	movf	??_date_settings+1,w
  6344  05C4  00F1               	movwf	time_date_delimiter@limiter
  6345  05C5  083D               	movf	_day_hex,w
  6346  05C6  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6347  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  6348  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  6349  05CD  00D2               	movwf	??_date_settings+2
  6350  05CE  0852               	movf	??_date_settings+2,w
  6351  05CF  00BD               	movwf	_day_hex
  6352  05D0                     l3166:	
  6353                           
  6354                           ;Button_src.c: 400:                     day_hex = time_date_delimiter(day_hex,0x31,'Y');
  6355  05D0  3031               	movlw	49
  6356  05D1  00D0               	movwf	??_date_settings
  6357  05D2  0850               	movf	??_date_settings,w
  6358  05D3  00F0               	movwf	time_date_delimiter@hex
  6359  05D4  3059               	movlw	89
  6360  05D5  00D1               	movwf	??_date_settings+1
  6361  05D6  0851               	movf	??_date_settings+1,w
  6362  05D7  00F1               	movwf	time_date_delimiter@limiter
  6363  05D8  083D               	movf	_day_hex,w
  6364  05D9  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6365  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  6366  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  6367  05E0  00D2               	movwf	??_date_settings+2
  6368  05E1  0852               	movf	??_date_settings+2,w
  6369  05E2  00BD               	movwf	_day_hex
  6370  05E3                     l3168:	
  6371                           
  6372                           ;Button_src.c: 402:                     c = time_date_delimiter(c,0x11,'9');
  6373  05E3  3011               	movlw	17
  6374  05E4  00D0               	movwf	??_date_settings
  6375  05E5  0850               	movf	??_date_settings,w
  6376  05E6  00F0               	movwf	time_date_delimiter@hex
  6377  05E7  3039               	movlw	57
  6378  05E8  00D1               	movwf	??_date_settings+1
  6379  05E9  0851               	movf	??_date_settings+1,w
  6380  05EA  00F1               	movwf	time_date_delimiter@limiter
  6381  05EB  083E               	movf	_c,w
  6382  05EC  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6383  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  6384  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  6385  05F3  00D2               	movwf	??_date_settings+2
  6386  05F4  0852               	movf	??_date_settings+2,w
  6387  05F5  00BE               	movwf	_c
  6388  05F6                     l3170:	
  6389                           
  6390                           ;Button_src.c: 403:                     c = time_date_delimiter(c,0x21,'J');
  6391  05F6  3021               	movlw	33
  6392  05F7  00D0               	movwf	??_date_settings
  6393  05F8  0850               	movf	??_date_settings,w
  6394  05F9  00F0               	movwf	time_date_delimiter@hex
  6395  05FA  304A               	movlw	74
  6396  05FB  00D1               	movwf	??_date_settings+1
  6397  05FC  0851               	movf	??_date_settings+1,w
  6398  05FD  00F1               	movwf	time_date_delimiter@limiter
  6399  05FE  083E               	movf	_c,w
  6400  05FF  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6401  0604  1283               	bcf	3,5	;RP0=0, select bank0
  6402  0605  1303               	bcf	3,6	;RP1=0, select bank0
  6403  0606  00D2               	movwf	??_date_settings+2
  6404  0607  0852               	movf	??_date_settings+2,w
  6405  0608  00BE               	movwf	_c
  6406  0609                     l3172:	
  6407                           
  6408                           ;Button_src.c: 404:                     c = time_date_delimiter(c,0x11,'9');
  6409  0609  3011               	movlw	17
  6410  060A  00D0               	movwf	??_date_settings
  6411  060B  0850               	movf	??_date_settings,w
  6412  060C  00F0               	movwf	time_date_delimiter@hex
  6413  060D  3039               	movlw	57
  6414  060E  00D1               	movwf	??_date_settings+1
  6415  060F  0851               	movf	??_date_settings+1,w
  6416  0610  00F1               	movwf	time_date_delimiter@limiter
  6417  0611  083E               	movf	_c,w
  6418  0612  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6419  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6420  0618  1303               	bcf	3,6	;RP1=0, select bank0
  6421  0619  00D2               	movwf	??_date_settings+2
  6422  061A  0852               	movf	??_date_settings+2,w
  6423  061B  00BE               	movwf	_c
  6424  061C                     l3174:	
  6425                           
  6426                           ;Button_src.c: 405:                     c = time_date_delimiter(c,0x21,'J');
  6427  061C  3021               	movlw	33
  6428  061D  00D0               	movwf	??_date_settings
  6429  061E  0850               	movf	??_date_settings,w
  6430  061F  00F0               	movwf	time_date_delimiter@hex
  6431  0620  304A               	movlw	74
  6432  0621  00D1               	movwf	??_date_settings+1
  6433  0622  0851               	movf	??_date_settings+1,w
  6434  0623  00F1               	movwf	time_date_delimiter@limiter
  6435  0624  083E               	movf	_c,w
  6436  0625  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6437  062A  1283               	bcf	3,5	;RP0=0, select bank0
  6438  062B  1303               	bcf	3,6	;RP1=0, select bank0
  6439  062C  00D2               	movwf	??_date_settings+2
  6440  062D  0852               	movf	??_date_settings+2,w
  6441  062E  00BE               	movwf	_c
  6442  062F                     l3176:	
  6443                           
  6444                           ;Button_src.c: 406:                     c = time_date_delimiter(c,0x31,'Y');
  6445  062F  3031               	movlw	49
  6446  0630  00D0               	movwf	??_date_settings
  6447  0631  0850               	movf	??_date_settings,w
  6448  0632  00F0               	movwf	time_date_delimiter@hex
  6449  0633  3059               	movlw	89
  6450  0634  00D1               	movwf	??_date_settings+1
  6451  0635  0851               	movf	??_date_settings+1,w
  6452  0636  00F1               	movwf	time_date_delimiter@limiter
  6453  0637  083E               	movf	_c,w
  6454  0638  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6455  063D  1283               	bcf	3,5	;RP0=0, select bank0
  6456  063E  1303               	bcf	3,6	;RP1=0, select bank0
  6457  063F  00D2               	movwf	??_date_settings+2
  6458  0640  0852               	movf	??_date_settings+2,w
  6459  0641  00BE               	movwf	_c
  6460  0642                     l3178:	
  6461                           
  6462                           ;Button_src.c: 407:                     c = time_date_delimiter(c,0x41,'j');
  6463  0642  3041               	movlw	65
  6464  0643  00D0               	movwf	??_date_settings
  6465  0644  0850               	movf	??_date_settings,w
  6466  0645  00F0               	movwf	time_date_delimiter@hex
  6467  0646  306A               	movlw	106
  6468  0647  00D1               	movwf	??_date_settings+1
  6469  0648  0851               	movf	??_date_settings+1,w
  6470  0649  00F1               	movwf	time_date_delimiter@limiter
  6471  064A  083E               	movf	_c,w
  6472  064B  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6473  0650  1283               	bcf	3,5	;RP0=0, select bank0
  6474  0651  1303               	bcf	3,6	;RP1=0, select bank0
  6475  0652  00D2               	movwf	??_date_settings+2
  6476  0653  0852               	movf	??_date_settings+2,w
  6477  0654  00BE               	movwf	_c
  6478  0655                     l3180:	
  6479                           
  6480                           ;Button_src.c: 408:                     c = time_date_delimiter(c,0x51,'z');
  6481  0655  3051               	movlw	81
  6482  0656  00D0               	movwf	??_date_settings
  6483  0657  0850               	movf	??_date_settings,w
  6484  0658  00F0               	movwf	time_date_delimiter@hex
  6485  0659  307A               	movlw	122
  6486  065A  00D1               	movwf	??_date_settings+1
  6487  065B  0851               	movf	??_date_settings+1,w
  6488  065C  00F1               	movwf	time_date_delimiter@limiter
  6489  065D  083E               	movf	_c,w
  6490  065E  160A  118A  2752  120A  118A  	fcall	_time_date_delimiter
  6491  0663  1283               	bcf	3,5	;RP0=0, select bank0
  6492  0664  1303               	bcf	3,6	;RP1=0, select bank0
  6493  0665  00D2               	movwf	??_date_settings+2
  6494  0666  0852               	movf	??_date_settings+2,w
  6495  0667  00BE               	movwf	_c
  6496  0668                     l3182:	
  6497                           
  6498                           ;Button_src.c: 410:              write_cmd(0x88);
  6499  0668  3088               	movlw	136
  6500  0669  120A  118A  2007  120A  118A  	fcall	_write_cmd
  6501  066E                     l3184:	
  6502                           
  6503                           ;Button_src.c: 412:                   RC0 = 0;
  6504  066E  1283               	bcf	3,5	;RP0=0, select bank0
  6505  066F  1303               	bcf	3,6	;RP1=0, select bank0
  6506  0670  1007               	bcf	7,0	;volatile
  6507  0671                     l3186:	
  6508                           
  6509                           ;Button_src.c: 413:                   RC1 = 1;
  6510  0671  1487               	bsf	7,1	;volatile
  6511  0672                     l3188:	
  6512                           
  6513                           ;Button_src.c: 414:                   RC2 = 1;
  6514  0672  1507               	bsf	7,2	;volatile
  6515  0673                     l3190:	
  6516                           
  6517                           ;Button_src.c: 415:                   RC3 = 1;
  6518  0673  1587               	bsf	7,3	;volatile
  6519  0674                     l3192:	
  6520                           
  6521                           ;Button_src.c: 417:                     if (RC6 == 0 ){
  6522  0674  1B07               	btfsc	7,6	;volatile
  6523  0675  2E77               	goto	u1961
  6524  0676  2E78               	goto	u1960
  6525  0677                     u1961:	
  6526  0677  2E8F               	goto	l492
  6527  0678                     u1960:	
  6528  0678                     l3194:	
  6529                           
  6530                           ;Button_src.c: 418:                           a = 0x00;
  6531  0678  01C0               	clrf	_a
  6532                           
  6533                           ;Button_src.c: 419:                           c = 0x00;
  6534  0679  01BE               	clrf	_c
  6535                           
  6536                           ;Button_src.c: 420:                           day_hex = 0x00;
  6537  067A  01BD               	clrf	_day_hex
  6538                           
  6539                           ;Button_src.c: 421:                           x = 0;
  6540  067B  01B1               	clrf	_x
  6541  067C  01B2               	clrf	_x+1
  6542                           
  6543                           ;Button_src.c: 422:                           y = 0;
  6544  067D  01AF               	clrf	_y
  6545  067E  01B0               	clrf	_y+1
  6546                           
  6547                           ;Button_src.c: 423:                           w = 0;
  6548  067F  01B3               	clrf	_w
  6549  0680  01B4               	clrf	_w+1
  6550                           
  6551                           ;Button_src.c: 424:                           t = 0;
  6552  0681  01B5               	clrf	_t
  6553  0682  01B6               	clrf	_t+1
  6554  0683                     l3196:	
  6555                           
  6556                           ;Button_src.c: 425:                           write_cmd(0x1);
  6557  0683  3001               	movlw	1
  6558  0684  120A  118A  2007  120A  118A  	fcall	_write_cmd
  6559  0689                     l3198:	
  6560                           
  6561                           ;Button_src.c: 426:                           set_time();
  6562  0689  120A  158A  204F  120A  118A  	fcall	_set_time
  6563  068E  2FE5               	goto	l493
  6564  068F                     l492:	
  6565                           ;Button_src.c: 428:                             }
  6566                           
  6567                           
  6568                           ;Button_src.c: 429:                   RC0 = 0;
  6569  068F  1007               	bcf	7,0	;volatile
  6570                           
  6571                           ;Button_src.c: 430:                   RC1 = 1;
  6572  0690  1487               	bsf	7,1	;volatile
  6573                           
  6574                           ;Button_src.c: 431:                   RC2 = 1;
  6575  0691  1507               	bsf	7,2	;volatile
  6576                           
  6577                           ;Button_src.c: 432:                   RC3 = 1;
  6578  0692  1587               	bsf	7,3	;volatile
  6579  0693                     l3202:	
  6580                           
  6581                           ;Button_src.c: 433:                   z = modulus_func(z,3);
  6582  0693  082E               	movf	_z+1,w
  6583  0694  00F8               	movwf	modulus_func@x+1
  6584  0695  082D               	movf	_z,w
  6585  0696  00F7               	movwf	modulus_func@x
  6586  0697  3003               	movlw	3
  6587  0698  00F9               	movwf	modulus_func@y
  6588  0699  3000               	movlw	0
  6589  069A  00FA               	movwf	modulus_func@y+1
  6590  069B  160A  118A  26B2  120A  118A  	fcall	_modulus_func
  6591  06A0  0878               	movf	?_modulus_func+1,w
  6592  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  6593  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  6594  06A3  00AE               	movwf	_z+1
  6595  06A4  0877               	movf	?_modulus_func,w
  6596  06A5  00AD               	movwf	_z
  6597  06A6                     l3204:	
  6598                           
  6599                           ;Button_src.c: 434:                   if(RC4 == 0 && z ==0){
  6600  06A6  1A07               	btfsc	7,4	;volatile
  6601  06A7  2EA9               	goto	u1971
  6602  06A8  2EAA               	goto	u1970
  6603  06A9                     u1971:	
  6604  06A9  2EED               	goto	l3214
  6605  06AA                     u1970:	
  6606  06AA                     l3206:	
  6607  06AA  082D               	movf	_z,w
  6608  06AB  042E               	iorwf	_z+1,w
  6609  06AC  1D03               	btfss	3,2
  6610  06AD  2EAF               	goto	u1981
  6611  06AE  2EB0               	goto	u1980
  6612  06AF                     u1981:	
  6613  06AF  2EED               	goto	l3214
  6614  06B0                     u1980:	
  6615  06B0                     l3208:	
  6616                           
  6617                           ;Button_src.c: 435:                       write_cmd(0x90);
  6618  06B0  3090               	movlw	144
  6619  06B1  120A  118A  2007  120A  118A  	fcall	_write_cmd
  6620                           
  6621                           ;Button_src.c: 436:                       write_char('D');
  6622  06B6  3044               	movlw	68
  6623  06B7  160A  118A  2769  120A  118A  	fcall	_write_char
  6624                           
  6625                           ;Button_src.c: 437:                       write_char('a');
  6626  06BC  3061               	movlw	97
  6627  06BD  160A  118A  2769  120A  118A  	fcall	_write_char
  6628                           
  6629                           ;Button_src.c: 438:                       write_char('y');
  6630  06C2  3079               	movlw	121
  6631  06C3  160A  118A  2769  120A  118A  	fcall	_write_char
  6632                           
  6633                           ;Button_src.c: 439:                       write_char(':');
  6634  06C8  303A               	movlw	58
  6635  06C9  160A  118A  2769  120A  118A  	fcall	_write_char
  6636                           
  6637                           ;Button_src.c: 440:                       write_char(' ');
  6638  06CE  3020               	movlw	32
  6639  06CF  160A  118A  2769  120A  118A  	fcall	_write_char
  6640                           
  6641                           ;Button_src.c: 441:                       write_char(' ');
  6642  06D4  3020               	movlw	32
  6643  06D5  160A  118A  2769  120A  118A  	fcall	_write_char
  6644  06DA                     l3210:	
  6645                           
  6646                           ;Button_src.c: 442:                       b = 'y';
  6647  06DA  3079               	movlw	121
  6648  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  6649  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  6650  06DD  00D0               	movwf	??_date_settings
  6651  06DE  0850               	movf	??_date_settings,w
  6652  06DF  00BF               	movwf	_b
  6653  06E0                     l3212:	
  6654                           
  6655                           ;Button_src.c: 444:                       button_delay();
  6656  06E0  160A  118A  2710  120A  118A  	fcall	_button_delay
  6657                           
  6658                           ;Button_src.c: 445:                       z++;
  6659  06E5  3001               	movlw	1
  6660  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  6661  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  6662  06E8  07AD               	addwf	_z,f
  6663  06E9  1803               	skipnc
  6664  06EA  0AAE               	incf	_z+1,f
  6665  06EB  3000               	movlw	0
  6666  06EC  07AE               	addwf	_z+1,f
  6667  06ED                     l3214:	
  6668                           
  6669                           ;Button_src.c: 447:                   RC0 = 0;
  6670  06ED  1007               	bcf	7,0	;volatile
  6671  06EE                     l3216:	
  6672                           
  6673                           ;Button_src.c: 448:                   RC1 = 1;
  6674  06EE  1487               	bsf	7,1	;volatile
  6675  06EF                     l3218:	
  6676                           
  6677                           ;Button_src.c: 449:                   RC2 = 1;
  6678  06EF  1507               	bsf	7,2	;volatile
  6679  06F0                     l3220:	
  6680                           
  6681                           ;Button_src.c: 450:                   RC3 = 1;
  6682  06F0  1587               	bsf	7,3	;volatile
  6683  06F1                     l3222:	
  6684                           
  6685                           ;Button_src.c: 451:                   if(RC4 == 0&& z ==1){
  6686  06F1  1A07               	btfsc	7,4	;volatile
  6687  06F2  2EF4               	goto	u1991
  6688  06F3  2EF5               	goto	u1990
  6689  06F4                     u1991:	
  6690  06F4  2F36               	goto	l3244
  6691  06F5                     u1990:	
  6692  06F5                     l3224:	
  6693  06F5  032D               	decf	_z,w
  6694  06F6  042E               	iorwf	_z+1,w
  6695  06F7  1D03               	btfss	3,2
  6696  06F8  2EFA               	goto	u2001
  6697  06F9  2EFB               	goto	u2000
  6698  06FA                     u2001:	
  6699  06FA  2F36               	goto	l3244
  6700  06FB                     u2000:	
  6701  06FB                     l3226:	
  6702                           
  6703                           ;Button_src.c: 452:                       z++;
  6704  06FB  3001               	movlw	1
  6705  06FC  07AD               	addwf	_z,f
  6706  06FD  1803               	skipnc
  6707  06FE  0AAE               	incf	_z+1,f
  6708  06FF  3000               	movlw	0
  6709  0700  07AE               	addwf	_z+1,f
  6710  0701                     l3228:	
  6711                           
  6712                           ;Button_src.c: 453:                       button_delay();
  6713  0701  160A  118A  2710  120A  118A  	fcall	_button_delay
  6714  0706                     l3230:	
  6715                           
  6716                           ;Button_src.c: 455:                       write_cmd(0x90);
  6717  0706  3090               	movlw	144
  6718  0707  120A  118A  2007  120A  118A  	fcall	_write_cmd
  6719  070C                     l3232:	
  6720                           
  6721                           ;Button_src.c: 456:                       write_char('M');
  6722  070C  304D               	movlw	77
  6723  070D  160A  118A  2769  120A  118A  	fcall	_write_char
  6724  0712                     l3234:	
  6725                           
  6726                           ;Button_src.c: 457:                       write_char('o');
  6727  0712  306F               	movlw	111
  6728  0713  160A  118A  2769  120A  118A  	fcall	_write_char
  6729  0718                     l3236:	
  6730                           
  6731                           ;Button_src.c: 458:                       write_char('n');
  6732  0718  306E               	movlw	110
  6733  0719  160A  118A  2769  120A  118A  	fcall	_write_char
  6734  071E                     l3238:	
  6735                           
  6736                           ;Button_src.c: 459:                       write_char('t');
  6737  071E  3074               	movlw	116
  6738  071F  160A  118A  2769  120A  118A  	fcall	_write_char
  6739  0724                     l3240:	
  6740                           
  6741                           ;Button_src.c: 460:                       write_char('h');
  6742  0724  3068               	movlw	104
  6743  0725  160A  118A  2769  120A  118A  	fcall	_write_char
  6744  072A                     l3242:	
  6745                           
  6746                           ;Button_src.c: 461:                       write_char(':');
  6747  072A  303A               	movlw	58
  6748  072B  160A  118A  2769  120A  118A  	fcall	_write_char
  6749                           
  6750                           ;Button_src.c: 462:                       b = 'x';
  6751  0730  3078               	movlw	120
  6752  0731  1283               	bcf	3,5	;RP0=0, select bank0
  6753  0732  1303               	bcf	3,6	;RP1=0, select bank0
  6754  0733  00D0               	movwf	??_date_settings
  6755  0734  0850               	movf	??_date_settings,w
  6756  0735  00BF               	movwf	_b
  6757  0736                     l3244:	
  6758                           
  6759                           ;Button_src.c: 465:                   RC0 = 0;
  6760  0736  1007               	bcf	7,0	;volatile
  6761  0737                     l3246:	
  6762                           
  6763                           ;Button_src.c: 466:                   RC1 = 1;
  6764  0737  1487               	bsf	7,1	;volatile
  6765  0738                     l3248:	
  6766                           
  6767                           ;Button_src.c: 467:                   RC2 = 1;
  6768  0738  1507               	bsf	7,2	;volatile
  6769  0739                     l3250:	
  6770                           
  6771                           ;Button_src.c: 468:                   RC3 = 1;
  6772  0739  1587               	bsf	7,3	;volatile
  6773  073A                     l3252:	
  6774                           
  6775                           ;Button_src.c: 469:                   if(RC4 == 0&& z ==2){
  6776  073A  1A07               	btfsc	7,4	;volatile
  6777  073B  2F3D               	goto	u2011
  6778  073C  2F3E               	goto	u2010
  6779  073D                     u2011:	
  6780  073D  2F82               	goto	l3274
  6781  073E                     u2010:	
  6782  073E                     l3254:	
  6783  073E  3002               	movlw	2
  6784  073F  062D               	xorwf	_z,w
  6785  0740  042E               	iorwf	_z+1,w
  6786  0741  1D03               	btfss	3,2
  6787  0742  2F44               	goto	u2021
  6788  0743  2F45               	goto	u2020
  6789  0744                     u2021:	
  6790  0744  2F82               	goto	l3274
  6791  0745                     u2020:	
  6792  0745                     l3256:	
  6793                           
  6794                           ;Button_src.c: 470:                       button_delay();
  6795  0745  160A  118A  2710  120A  118A  	fcall	_button_delay
  6796  074A                     l3258:	
  6797                           
  6798                           ;Button_src.c: 471:                       z++;
  6799  074A  3001               	movlw	1
  6800  074B  1283               	bcf	3,5	;RP0=0, select bank0
  6801  074C  1303               	bcf	3,6	;RP1=0, select bank0
  6802  074D  07AD               	addwf	_z,f
  6803  074E  1803               	skipnc
  6804  074F  0AAE               	incf	_z+1,f
  6805  0750  3000               	movlw	0
  6806  0751  07AE               	addwf	_z+1,f
  6807  0752                     l3260:	
  6808                           
  6809                           ;Button_src.c: 473:                       write_cmd(0x90);
  6810  0752  3090               	movlw	144
  6811  0753  120A  118A  2007  120A  118A  	fcall	_write_cmd
  6812  0758                     l3262:	
  6813                           
  6814                           ;Button_src.c: 474:                       write_char('Y');
  6815  0758  3059               	movlw	89
  6816  0759  160A  118A  2769  120A  118A  	fcall	_write_char
  6817  075E                     l3264:	
  6818                           
  6819                           ;Button_src.c: 475:                       write_char('e');
  6820  075E  3065               	movlw	101
  6821  075F  160A  118A  2769  120A  118A  	fcall	_write_char
  6822  0764                     l3266:	
  6823                           
  6824                           ;Button_src.c: 476:                       write_char('a');
  6825  0764  3061               	movlw	97
  6826  0765  160A  118A  2769  120A  118A  	fcall	_write_char
  6827  076A                     l3268:	
  6828                           
  6829                           ;Button_src.c: 477:                       write_char('r');
  6830  076A  3072               	movlw	114
  6831  076B  160A  118A  2769  120A  118A  	fcall	_write_char
  6832  0770                     l3270:	
  6833                           
  6834                           ;Button_src.c: 478:                       write_char(':');
  6835  0770  303A               	movlw	58
  6836  0771  160A  118A  2769  120A  118A  	fcall	_write_char
  6837  0776                     l3272:	
  6838                           
  6839                           ;Button_src.c: 479:                       write_char(' ');
  6840  0776  3020               	movlw	32
  6841  0777  160A  118A  2769  120A  118A  	fcall	_write_char
  6842                           
  6843                           ;Button_src.c: 480:                       b = 'z';
  6844  077C  307A               	movlw	122
  6845  077D  1283               	bcf	3,5	;RP0=0, select bank0
  6846  077E  1303               	bcf	3,6	;RP1=0, select bank0
  6847  077F  00D0               	movwf	??_date_settings
  6848  0780  0850               	movf	??_date_settings,w
  6849  0781  00BF               	movwf	_b
  6850  0782                     l3274:	
  6851                           
  6852                           ;Button_src.c: 483:               write_cmd(0x88);
  6853  0782  3088               	movlw	136
  6854  0783  120A  118A  2007  120A  118A  	fcall	_write_cmd
  6855  0788                     l3276:	
  6856                           
  6857                           ;Button_src.c: 484:               write_char(day_high + '0');
  6858  0788  1283               	bcf	3,5	;RP0=0, select bank0
  6859  0789  1303               	bcf	3,6	;RP1=0, select bank0
  6860  078A  0829               	movf	_day_high,w
  6861  078B  3E30               	addlw	48
  6862  078C  160A  118A  2769  120A  118A  	fcall	_write_char
  6863  0791                     l3278:	
  6864                           
  6865                           ;Button_src.c: 485:               write_char(day_low + '0');
  6866  0791  1283               	bcf	3,5	;RP0=0, select bank0
  6867  0792  1303               	bcf	3,6	;RP1=0, select bank0
  6868  0793  082B               	movf	_day_low,w
  6869  0794  3E30               	addlw	48
  6870  0795  160A  118A  2769  120A  118A  	fcall	_write_char
  6871  079A                     l3280:	
  6872                           
  6873                           ;Button_src.c: 486:               write_char('/');
  6874  079A  302F               	movlw	47
  6875  079B  160A  118A  2769  120A  118A  	fcall	_write_char
  6876  07A0                     l3282:	
  6877                           
  6878                           ;Button_src.c: 487:               write_char(y + '0');
  6879  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  6880  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  6881  07A2  082F               	movf	_y,w
  6882  07A3  3E30               	addlw	48
  6883  07A4  160A  118A  2769  120A  118A  	fcall	_write_char
  6884  07A9                     l3284:	
  6885                           
  6886                           ;Button_src.c: 488:               write_char(x + '0');
  6887  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  6888  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  6889  07AB  0831               	movf	_x,w
  6890  07AC  3E30               	addlw	48
  6891  07AD  160A  118A  2769  120A  118A  	fcall	_write_char
  6892  07B2                     l3286:	
  6893                           
  6894                           ;Button_src.c: 489:               write_char('/');
  6895  07B2  302F               	movlw	47
  6896  07B3  160A  118A  2769  120A  118A  	fcall	_write_char
  6897  07B8                     l3288:	
  6898                           
  6899                           ;Button_src.c: 490:               write_char(w+ '0');
  6900  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  6901  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  6902  07BA  0833               	movf	_w,w
  6903  07BB  3E30               	addlw	48
  6904  07BC  160A  118A  2769  120A  118A  	fcall	_write_char
  6905  07C1                     l3290:	
  6906                           
  6907                           ;Button_src.c: 491:               write_char(t+ '0');
  6908  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  6909  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  6910  07C3  0835               	movf	_t,w
  6911  07C4  3E30               	addlw	48
  6912  07C5  160A  118A  2769  120A  118A  	fcall	_write_char
  6913  07CA                     l3292:	
  6914                           
  6915                           ;Button_src.c: 494:             RC0 = 0;
  6916  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  6917  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  6918  07CC  1007               	bcf	7,0	;volatile
  6919  07CD                     l3294:	
  6920                           
  6921                           ;Button_src.c: 495:             RC1 = 1;
  6922  07CD  1487               	bsf	7,1	;volatile
  6923  07CE                     l3296:	
  6924                           
  6925                           ;Button_src.c: 496:             RC2 = 1;
  6926  07CE  1507               	bsf	7,2	;volatile
  6927  07CF                     l3298:	
  6928                           
  6929                           ;Button_src.c: 497:             RC3 = 1;
  6930  07CF  1587               	bsf	7,3	;volatile
  6931  07D0                     l3300:	
  6932                           
  6933                           ;Button_src.c: 498:             if (RC7 == 0 ){
  6934  07D0  1B87               	btfsc	7,7	;volatile
  6935  07D1  2FD3               	goto	u2031
  6936  07D2  2FD4               	goto	u2030
  6937  07D3                     u2031:	
  6938  07D3  2BE3               	goto	l484
  6939  07D4                     u2030:	
  6940  07D4                     l3302:	
  6941                           
  6942                           ;Button_src.c: 499:             a = 0x00;
  6943  07D4  01C0               	clrf	_a
  6944                           
  6945                           ;Button_src.c: 500:             c = 0x00;
  6946  07D5  01BE               	clrf	_c
  6947                           
  6948                           ;Button_src.c: 501:             day_hex = 0x00;
  6949  07D6  01BD               	clrf	_day_hex
  6950                           
  6951                           ;Button_src.c: 502:             x = 0;
  6952  07D7  01B1               	clrf	_x
  6953  07D8  01B2               	clrf	_x+1
  6954                           
  6955                           ;Button_src.c: 503:             y = 0;
  6956  07D9  01AF               	clrf	_y
  6957  07DA  01B0               	clrf	_y+1
  6958                           
  6959                           ;Button_src.c: 504:             w = 0;
  6960  07DB  01B3               	clrf	_w
  6961  07DC  01B4               	clrf	_w+1
  6962                           
  6963                           ;Button_src.c: 505:             t = 0;
  6964  07DD  01B5               	clrf	_t
  6965  07DE  01B6               	clrf	_t+1
  6966  07DF                     l3304:	
  6967                           
  6968                           ;Button_src.c: 506:             write_cmd(0x1);
  6969  07DF  3001               	movlw	1
  6970  07E0  120A  118A  2007  120A  118A  	fcall	_write_cmd
  6971  07E5                     l493:	
  6972                           ;Button_src.c: 507:             break;
  6973                           
  6974  07E5  0008               	return
  6975  07E6                     __end_of_date_settings:	
  6976                           
  6977                           	psect	text25
  6978  0007                     __ptext25:	
  6979 ;; *************** function _write_cmd *****************
  6980 ;; Defined at:
  6981 ;;		line 41 in file "LCD_src.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  x               1    wreg     unsigned char 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;  x               1    2[COMMON] unsigned char 
  6986 ;;  i               2    0        int 
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6996 ;;      Params:         0       0       0       0       0
  6997 ;;      Locals:         1       0       0       0       0
  6998 ;;      Temps:          0       0       0       0       0
  6999 ;;      Totals:         1       0       0       0       0
  7000 ;;Total ram usage:        1 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; Hardware stack levels required when called:    1
  7003 ;; This function calls:
  7004 ;;		_delay_screen
  7005 ;; This function is called by:
  7006 ;;		_main
  7007 ;;		_lcd_init
  7008 ;;		_thermometer_threshhold_settings
  7009 ;;		_time_settings
  7010 ;;		_date_settings
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _write_cmd
  7016  0007                     _write_cmd:	
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7020                           ;write_cmd@x stored from wreg
  7021  0007  00F2               	movwf	write_cmd@x
  7022  0008                     l2434:	
  7023                           
  7024                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  7025  0008  1283               	bcf	3,5	;RP0=0, select bank0
  7026  0009  1303               	bcf	3,6	;RP1=0, select bank0
  7027  000A  1285               	bcf	5,5	;volatile
  7028                           
  7029                           ;LCD_src.c: 45:  RA4=0;
  7030  000B  1205               	bcf	5,4	;volatile
  7031                           
  7032                           ;LCD_src.c: 46:  RA3=0;
  7033  000C  1185               	bcf	5,3	;volatile
  7034  000D                     l2436:	
  7035                           
  7036                           ;LCD_src.c: 47:  delay_screen();
  7037  000D  160A  118A  2726  120A  118A  	fcall	_delay_screen
  7038  0012                     l2438:	
  7039                           
  7040                           ;LCD_src.c: 48:  RA3=1;
  7041  0012  1283               	bcf	3,5	;RP0=0, select bank0
  7042  0013  1303               	bcf	3,6	;RP1=0, select bank0
  7043  0014  1585               	bsf	5,3	;volatile
  7044  0015                     l2440:	
  7045                           
  7046                           ;LCD_src.c: 49:  PORTD=x;
  7047  0015  0872               	movf	write_cmd@x,w
  7048  0016  0088               	movwf	8	;volatile
  7049  0017                     l2442:	
  7050                           
  7051                           ;LCD_src.c: 50:  delay_screen();
  7052  0017  160A  118A  2726  120A  118A  	fcall	_delay_screen
  7053  001C                     l2444:	
  7054                           
  7055                           ;LCD_src.c: 51:  RA3=0;
  7056  001C  1283               	bcf	3,5	;RP0=0, select bank0
  7057  001D  1303               	bcf	3,6	;RP1=0, select bank0
  7058  001E  1185               	bcf	5,3	;volatile
  7059  001F                     l134:	
  7060  001F  0008               	return
  7061  0020                     __end_of_write_cmd:	
  7062                           
  7063                           	psect	text26
  7064  1769                     __ptext26:	
  7065 ;; *************** function _write_char *****************
  7066 ;; Defined at:
  7067 ;;		line 28 in file "LCD_src.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  x               1    wreg     unsigned char 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  x               1    2[COMMON] unsigned char 
  7072 ;;  i               2    0        int 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      void 
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7082 ;;      Params:         0       0       0       0       0
  7083 ;;      Locals:         1       0       0       0       0
  7084 ;;      Temps:          0       0       0       0       0
  7085 ;;      Totals:         1       0       0       0       0
  7086 ;;Total ram usage:        1 bytes
  7087 ;; Hardware stack levels used:    1
  7088 ;; Hardware stack levels required when called:    1
  7089 ;; This function calls:
  7090 ;;		_delay_screen
  7091 ;; This function is called by:
  7092 ;;		_main
  7093 ;;		_display_temp
  7094 ;;		_display_clock
  7095 ;;		_display_date
  7096 ;;		_thermometer_threshhold_settings
  7097 ;;		_time_settings
  7098 ;;		_date_settings
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           
  7103                           ;psect for function _write_char
  7104  1769                     _write_char:	
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7108                           ;write_char@x stored from wreg
  7109  1769  00F2               	movwf	write_char@x
  7110  176A                     l2446:	
  7111                           
  7112                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  7113  176A  1283               	bcf	3,5	;RP0=0, select bank0
  7114  176B  1303               	bcf	3,6	;RP1=0, select bank0
  7115  176C  1685               	bsf	5,5	;volatile
  7116                           
  7117                           ;LCD_src.c: 32:  RA4=0;
  7118  176D  1205               	bcf	5,4	;volatile
  7119                           
  7120                           ;LCD_src.c: 33:  RA3=0;
  7121  176E  1185               	bcf	5,3	;volatile
  7122  176F                     l2448:	
  7123                           
  7124                           ;LCD_src.c: 34:  delay_screen();
  7125  176F  160A  118A  2726  160A  118A  	fcall	_delay_screen
  7126  1774                     l2450:	
  7127                           
  7128                           ;LCD_src.c: 35:  RA3=1;
  7129  1774  1283               	bcf	3,5	;RP0=0, select bank0
  7130  1775  1303               	bcf	3,6	;RP1=0, select bank0
  7131  1776  1585               	bsf	5,3	;volatile
  7132  1777                     l2452:	
  7133                           
  7134                           ;LCD_src.c: 36:  PORTD= x;
  7135  1777  0872               	movf	write_char@x,w
  7136  1778  0088               	movwf	8	;volatile
  7137  1779                     l2454:	
  7138                           
  7139                           ;LCD_src.c: 37:  delay_screen();
  7140  1779  160A  118A  2726  160A  118A  	fcall	_delay_screen
  7141  177E                     l2456:	
  7142                           
  7143                           ;LCD_src.c: 38:  RA3=0;
  7144  177E  1283               	bcf	3,5	;RP0=0, select bank0
  7145  177F  1303               	bcf	3,6	;RP1=0, select bank0
  7146  1780  1185               	bcf	5,3	;volatile
  7147  1781                     l131:	
  7148  1781  0008               	return
  7149  1782                     __end_of_write_char:	
  7150                           
  7151                           	psect	text27
  7152  1726                     __ptext27:	
  7153 ;; *************** function _delay_screen *****************
  7154 ;; Defined at:
  7155 ;;		line 70 in file "LCD_src.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;  i               2    0[COMMON] int 
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2, btemp+1
  7164 ;; Tracked objects:
  7165 ;;		On entry : 0/0
  7166 ;;		On exit  : 0/0
  7167 ;;		Unchanged: 0/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7169 ;;      Params:         0       0       0       0       0
  7170 ;;      Locals:         2       0       0       0       0
  7171 ;;      Temps:          0       0       0       0       0
  7172 ;;      Totals:         2       0       0       0       0
  7173 ;;Total ram usage:        2 bytes
  7174 ;; Hardware stack levels used:    1
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_lcd_init
  7179 ;;		_write_char
  7180 ;;		_write_cmd
  7181 ;; This function uses a non-reentrant model
  7182 ;;
  7183                           
  7184                           
  7185                           ;psect for function _delay_screen
  7186  1726                     _delay_screen:	
  7187  1726                     l2380:	
  7188                           ;incstack = 0
  7189                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  7190                           
  7191                           
  7192                           ;LCD_src.c: 71:     int i;;LCD_src.c: 72:  for(i=0;i<5;i++);
  7193  1726  01F0               	clrf	delay_screen@i
  7194  1727  01F1               	clrf	delay_screen@i+1
  7195  1728                     l2386:	
  7196  1728  3001               	movlw	1
  7197  1729  07F0               	addwf	delay_screen@i,f
  7198  172A  1803               	skipnc
  7199  172B  0AF1               	incf	delay_screen@i+1,f
  7200  172C  3000               	movlw	0
  7201  172D  07F1               	addwf	delay_screen@i+1,f
  7202  172E                     l2388:	
  7203  172E  0871               	movf	delay_screen@i+1,w
  7204  172F  3A80               	xorlw	128
  7205  1730  00FF               	movwf	btemp+1
  7206  1731  3080               	movlw	128
  7207  1732  027F               	subwf	btemp+1,w
  7208  1733  1D03               	skipz
  7209  1734  2F37               	goto	u1205
  7210  1735  3005               	movlw	5
  7211  1736  0270               	subwf	delay_screen@i,w
  7212  1737                     u1205:	
  7213  1737  1C03               	skipc
  7214  1738  2F3A               	goto	u1201
  7215  1739  2F3B               	goto	u1200
  7216  173A                     u1201:	
  7217  173A  2F28               	goto	l2386
  7218  173B                     u1200:	
  7219  173B                     l144:	
  7220  173B  0008               	return
  7221  173C                     __end_of_delay_screen:	
  7222                           
  7223                           	psect	text28
  7224  16C4                     __ptext28:	
  7225 ;; *************** function _time_date_hex_terminator *****************
  7226 ;; Defined at:
  7227 ;;		line 35 in file "math_src.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  val             1    wreg     unsigned char 
  7230 ;;  limiter         1    0[COMMON] unsigned char 
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  val             1    3[COMMON] unsigned char 
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      unsigned char 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7242 ;;      Params:         1       0       0       0       0
  7243 ;;      Locals:         1       0       0       0       0
  7244 ;;      Temps:          2       0       0       0       0
  7245 ;;      Totals:         4       0       0       0       0
  7246 ;;Total ram usage:        4 bytes
  7247 ;; Hardware stack levels used:    1
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_time_settings
  7252 ;;		_date_settings
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           
  7257                           ;psect for function _time_date_hex_terminator
  7258  16C4                     _time_date_hex_terminator:	
  7259                           
  7260                           ;incstack = 0
  7261                           ; Regs used in _time_date_hex_terminator: [wreg+status,2]
  7262                           ;time_date_hex_terminator@val stored from wreg
  7263  16C4  00F3               	movwf	time_date_hex_terminator@val
  7264  16C5                     l2640:	
  7265                           
  7266                           ;math_src.c: 36:     if((val + '0') == limiter){
  7267  16C5  0873               	movf	time_date_hex_terminator@val,w
  7268  16C6  3E30               	addlw	48
  7269  16C7  00F1               	movwf	??_time_date_hex_terminator
  7270  16C8  3000               	movlw	0
  7271  16C9  1803               	skipnc
  7272  16CA  3001               	movlw	1
  7273  16CB  00F2               	movwf	??_time_date_hex_terminator+1
  7274  16CC  0870               	movf	time_date_hex_terminator@limiter,w
  7275  16CD  0671               	xorwf	??_time_date_hex_terminator,w
  7276  16CE  0472               	iorwf	??_time_date_hex_terminator+1,w
  7277  16CF  1D03               	skipz
  7278  16D0  2ED2               	goto	u1401
  7279  16D1  2ED3               	goto	u1400
  7280  16D2                     u1401:	
  7281  16D2  2ED4               	goto	l2644
  7282  16D3                     u1400:	
  7283  16D3                     l2642:	
  7284                           
  7285                           ;math_src.c: 37:     val = 0x00;
  7286  16D3  01F3               	clrf	time_date_hex_terminator@val
  7287  16D4                     l2644:	
  7288                           
  7289                           ;math_src.c: 39:     return val;
  7290  16D4  0873               	movf	time_date_hex_terminator@val,w
  7291  16D5                     l522:	
  7292  16D5  0008               	return
  7293  16D6                     __end_of_time_date_hex_terminator:	
  7294                           
  7295                           	psect	text29
  7296  1752                     __ptext29:	
  7297 ;; *************** function _time_date_delimiter *****************
  7298 ;; Defined at:
  7299 ;;		line 27 in file "math_src.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;  val             1    wreg     unsigned char 
  7302 ;;  hex             1    0[COMMON] unsigned char 
  7303 ;;  limiter         1    1[COMMON] unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  val             1    4[COMMON] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      unsigned char 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7315 ;;      Params:         2       0       0       0       0
  7316 ;;      Locals:         1       0       0       0       0
  7317 ;;      Temps:          2       0       0       0       0
  7318 ;;      Totals:         5       0       0       0       0
  7319 ;;Total ram usage:        5 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_time_settings
  7325 ;;		_date_settings
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           
  7330                           ;psect for function _time_date_delimiter
  7331  1752                     _time_date_delimiter:	
  7332                           
  7333                           ;incstack = 0
  7334                           ; Regs used in _time_date_delimiter: [wreg+status,2+status,0]
  7335                           ;time_date_delimiter@val stored from wreg
  7336  1752  00F4               	movwf	time_date_delimiter@val
  7337  1753                     l2648:	
  7338                           
  7339                           ;math_src.c: 28:     if((val + '0') == limiter){
  7340  1753  0874               	movf	time_date_delimiter@val,w
  7341  1754  3E30               	addlw	48
  7342  1755  00F2               	movwf	??_time_date_delimiter
  7343  1756  3000               	movlw	0
  7344  1757  1803               	skipnc
  7345  1758  3001               	movlw	1
  7346  1759  00F3               	movwf	??_time_date_delimiter+1
  7347  175A  0871               	movf	time_date_delimiter@limiter,w
  7348  175B  0672               	xorwf	??_time_date_delimiter,w
  7349  175C  0473               	iorwf	??_time_date_delimiter+1,w
  7350  175D  1D03               	skipz
  7351  175E  2F60               	goto	u1411
  7352  175F  2F61               	goto	u1410
  7353  1760                     u1411:	
  7354  1760  2F67               	goto	l2654
  7355  1761                     u1410:	
  7356  1761                     l2650:	
  7357                           
  7358                           ;math_src.c: 29:     val = hex;
  7359  1761  0870               	movf	time_date_delimiter@hex,w
  7360  1762  00F2               	movwf	??_time_date_delimiter
  7361  1763  0872               	movf	??_time_date_delimiter,w
  7362  1764  00F4               	movwf	time_date_delimiter@val
  7363  1765                     l2652:	
  7364                           
  7365                           ;math_src.c: 30:     val--;
  7366  1765  3001               	movlw	1
  7367  1766  02F4               	subwf	time_date_delimiter@val,f
  7368  1767                     l2654:	
  7369                           
  7370                           ;math_src.c: 32:     return val;
  7371  1767  0874               	movf	time_date_delimiter@val,w
  7372  1768                     l518:	
  7373  1768  0008               	return
  7374  1769                     __end_of_time_date_delimiter:	
  7375                           
  7376                           	psect	text30
  7377  084F                     __ptext30:	
  7378 ;; *************** function _set_time *****************
  7379 ;; Defined at:
  7380 ;;		line 15 in file "clock_src.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;		None
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  i               2    5[COMMON] int 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7394 ;;      Params:         0       0       0       0       0
  7395 ;;      Locals:         2       0       0       0       0
  7396 ;;      Temps:          0       0       0       0       0
  7397 ;;      Totals:         2       0       0       0       0
  7398 ;;Total ram usage:        2 bytes
  7399 ;; Hardware stack levels used:    1
  7400 ;; Hardware stack levels required when called:    1
  7401 ;; This function calls:
  7402 ;;		_time_write_1
  7403 ;; This function is called by:
  7404 ;;		_main
  7405 ;;		_time_settings
  7406 ;;		_date_settings
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function _set_time
  7412  084F                     _set_time:	
  7413  084F                     l2418:	
  7414                           ;incstack = 0
  7415                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7416                           
  7417                           
  7418                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  7419  084F  1283               	bcf	3,5	;RP0=0, select bank0
  7420  0850  1303               	bcf	3,6	;RP1=0, select bank0
  7421  0851  1686               	bsf	6,5	;volatile
  7422  0852                     l2420:	
  7423                           
  7424                           ;clock_src.c: 19:    time_write_1(0xbe);
  7425  0852  30BE               	movlw	190
  7426  0853  160A  118A  27AA  120A  158A  	fcall	_time_write_1
  7427  0858                     l2422:	
  7428                           
  7429                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  7430  0858  01F5               	clrf	set_time@i
  7431  0859  01F6               	clrf	set_time@i+1
  7432  085A                     l2428:	
  7433                           
  7434                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  7435  085A  0875               	movf	set_time@i,w
  7436  085B  3E55               	addlw	(low (_table| 0))& (0+255)
  7437  085C  0084               	movwf	4
  7438  085D  1383               	bcf	3,7	;select IRP bank0
  7439  085E  0800               	movf	0,w
  7440  085F  160A  118A  27AA  120A  158A  	fcall	_time_write_1
  7441  0864                     l2430:	
  7442                           
  7443                           ;clock_src.c: 23:      }
  7444  0864  3001               	movlw	1
  7445  0865  07F5               	addwf	set_time@i,f
  7446  0866  1803               	skipnc
  7447  0867  0AF6               	incf	set_time@i+1,f
  7448  0868  3000               	movlw	0
  7449  0869  07F6               	addwf	set_time@i+1,f
  7450  086A                     l2432:	
  7451  086A  0876               	movf	set_time@i+1,w
  7452  086B  3A80               	xorlw	128
  7453  086C  00FF               	movwf	btemp+1
  7454  086D  3080               	movlw	128
  7455  086E  027F               	subwf	btemp+1,w
  7456  086F  1D03               	skipz
  7457  0870  2873               	goto	u1255
  7458  0871  3008               	movlw	8
  7459  0872  0275               	subwf	set_time@i,w
  7460  0873                     u1255:	
  7461  0873  1C03               	skipc
  7462  0874  2876               	goto	u1251
  7463  0875  2877               	goto	u1250
  7464  0876                     u1251:	
  7465  0876  285A               	goto	l2428
  7466  0877                     u1250:	
  7467  0877                     l287:	
  7468                           
  7469                           ;clock_src.c: 24:    RB5=0;
  7470  0877  1283               	bcf	3,5	;RP0=0, select bank0
  7471  0878  1303               	bcf	3,6	;RP1=0, select bank0
  7472  0879  1286               	bcf	6,5	;volatile
  7473  087A                     l288:	
  7474  087A  0008               	return
  7475  087B                     __end_of_set_time:	
  7476                           
  7477                           	psect	text31
  7478  17AA                     __ptext31:	
  7479 ;; *************** function _time_write_1 *****************
  7480 ;; Defined at:
  7481 ;;		line 115 in file "clock_src.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;  time_tx         1    wreg     unsigned char 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;  time_tx         1    4[COMMON] unsigned char 
  7486 ;;  j               2    2[COMMON] int 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  1    wreg      void 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0, btemp+1
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7496 ;;      Params:         0       0       0       0       0
  7497 ;;      Locals:         3       0       0       0       0
  7498 ;;      Temps:          2       0       0       0       0
  7499 ;;      Totals:         5       0       0       0       0
  7500 ;;Total ram usage:        5 bytes
  7501 ;; Hardware stack levels used:    1
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		_ds1302_init
  7506 ;;		_set_time
  7507 ;;		_get_time
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           
  7512                           ;psect for function _time_write_1
  7513  17AA                     _time_write_1:	
  7514                           
  7515                           ;incstack = 0
  7516                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  7517                           ;time_write_1@time_tx stored from wreg
  7518  17AA  00F4               	movwf	time_write_1@time_tx
  7519  17AB                     l2396:	
  7520                           
  7521                           ;clock_src.c: 115: void time_write_1(unsigned char time_tx);clock_src.c: 116: {;clock_sr
      +                          c.c: 117:     int j;;clock_src.c: 118:     for(j=0;j<8;j++)
  7522  17AB  01F2               	clrf	time_write_1@j
  7523  17AC  01F3               	clrf	time_write_1@j+1
  7524  17AD                     l304:	
  7525                           
  7526                           ;clock_src.c: 119:    {;clock_src.c: 120:         RB4=0;
  7527  17AD  1283               	bcf	3,5	;RP0=0, select bank0
  7528  17AE  1303               	bcf	3,6	;RP1=0, select bank0
  7529  17AF  1206               	bcf	6,4	;volatile
  7530                           
  7531                           ;clock_src.c: 121:         RB0=0;
  7532  17B0  1006               	bcf	6,0	;volatile
  7533                           
  7534                           ;clock_src.c: 122:         if(time_tx&0x01)
  7535  17B1  1C74               	btfss	time_write_1@time_tx,0
  7536  17B2  2FB4               	goto	u1231
  7537  17B3  2FB5               	goto	u1230
  7538  17B4                     u1231:	
  7539  17B4  2FB6               	goto	l2404
  7540  17B5                     u1230:	
  7541  17B5                     l2402:	
  7542                           
  7543                           ;clock_src.c: 123:           {;clock_src.c: 124:             RB4=1;
  7544  17B5  1606               	bsf	6,4	;volatile
  7545  17B6                     l2404:	
  7546                           
  7547                           ;clock_src.c: 126:         time_tx=time_tx>>1;
  7548  17B6  0874               	movf	time_write_1@time_tx,w
  7549  17B7  00F0               	movwf	??_time_write_1
  7550  17B8  1003               	clrc
  7551  17B9  0C70               	rrf	??_time_write_1,w
  7552  17BA  00F1               	movwf	??_time_write_1+1
  7553  17BB  0871               	movf	??_time_write_1+1,w
  7554  17BC  00F4               	movwf	time_write_1@time_tx
  7555  17BD                     l2406:	
  7556                           
  7557                           ;clock_src.c: 127:         RB0=1;
  7558  17BD  1406               	bsf	6,0	;volatile
  7559  17BE                     l2408:	
  7560                           
  7561                           ;clock_src.c: 128:     }
  7562  17BE  3001               	movlw	1
  7563  17BF  07F2               	addwf	time_write_1@j,f
  7564  17C0  1803               	skipnc
  7565  17C1  0AF3               	incf	time_write_1@j+1,f
  7566  17C2  3000               	movlw	0
  7567  17C3  07F3               	addwf	time_write_1@j+1,f
  7568  17C4                     l2410:	
  7569  17C4  0873               	movf	time_write_1@j+1,w
  7570  17C5  3A80               	xorlw	128
  7571  17C6  00FF               	movwf	btemp+1
  7572  17C7  3080               	movlw	128
  7573  17C8  027F               	subwf	btemp+1,w
  7574  17C9  1D03               	skipz
  7575  17CA  2FCD               	goto	u1245
  7576  17CB  3008               	movlw	8
  7577  17CC  0272               	subwf	time_write_1@j,w
  7578  17CD                     u1245:	
  7579  17CD  1C03               	skipc
  7580  17CE  2FD0               	goto	u1241
  7581  17CF  2FD1               	goto	u1240
  7582  17D0                     u1241:	
  7583  17D0  2FAD               	goto	l304
  7584  17D1                     u1240:	
  7585  17D1                     l305:	
  7586                           
  7587                           ;clock_src.c: 129:       RB0=0;
  7588  17D1  1283               	bcf	3,5	;RP0=0, select bank0
  7589  17D2  1303               	bcf	3,6	;RP1=0, select bank0
  7590  17D3  1006               	bcf	6,0	;volatile
  7591  17D4                     l307:	
  7592  17D4  0008               	return
  7593  17D5                     __end_of_time_write_1:	
  7594                           
  7595                           	psect	text32
  7596  0823                     __ptext32:	
  7597 ;; *************** function _incrementor *****************
  7598 ;; Defined at:
  7599 ;;		line 10 in file "math_src.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  upper_val       2    0[BANK0 ] int 
  7602 ;;  lower_val       2    2[BANK0 ] int 
  7603 ;;  z               1    4[BANK0 ] unsigned char 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;		None
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1    wreg      unsigned char 
  7608 ;; Registers used:
  7609 ;;		wreg, status,2, status,0, pclath, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7615 ;;      Params:         0       5       0       0       0
  7616 ;;      Locals:         0       0       0       0       0
  7617 ;;      Temps:          2       0       0       0       0
  7618 ;;      Totals:         2       5       0       0       0
  7619 ;;Total ram usage:        7 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    2
  7622 ;; This function calls:
  7623 ;;		_modulus_func
  7624 ;; This function is called by:
  7625 ;;		_thermometer_threshhold_settings
  7626 ;;		_time_settings
  7627 ;;		_date_settings
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           
  7632                           ;psect for function _incrementor
  7633  0823                     _incrementor:	
  7634  0823                     l2610:	
  7635                           ;incstack = 0
  7636                           ; Regs used in _incrementor: [wreg+status,2+status,0+pclath+cstack]
  7637                           
  7638                           
  7639                           ;math_src.c: 11:      if(z == (lower_val + '0')){
  7640  0823  1283               	bcf	3,5	;RP0=0, select bank0
  7641  0824  1303               	bcf	3,6	;RP1=0, select bank0
  7642  0825  084D               	movf	incrementor@lower_val,w
  7643  0826  3E30               	addlw	48
  7644  0827  00FB               	movwf	??_incrementor
  7645  0828  084E               	movf	incrementor@lower_val+1,w
  7646  0829  1803               	skipnc
  7647  082A  3E01               	addlw	1
  7648  082B  3E00               	addlw	0
  7649  082C  00FC               	movwf	??_incrementor+1
  7650  082D  084F               	movf	incrementor@z,w
  7651  082E  067B               	xorwf	??_incrementor,w
  7652  082F  047C               	iorwf	??_incrementor+1,w
  7653  0830  1D03               	skipz
  7654  0831  2833               	goto	u1371
  7655  0832  2834               	goto	u1370
  7656  0833                     u1371:	
  7657  0833  284D               	goto	l2616
  7658  0834                     u1370:	
  7659  0834                     l2612:	
  7660                           
  7661                           ;math_src.c: 12:      upper_val++;
  7662  0834  3001               	movlw	1
  7663  0835  07CB               	addwf	incrementor@upper_val,f
  7664  0836  1803               	skipnc
  7665  0837  0ACC               	incf	incrementor@upper_val+1,f
  7666  0838  3000               	movlw	0
  7667  0839  07CC               	addwf	incrementor@upper_val+1,f
  7668  083A                     l2614:	
  7669                           
  7670                           ;math_src.c: 13:      upper_val =(modulus_func(upper_val,10));
  7671  083A  084C               	movf	incrementor@upper_val+1,w
  7672  083B  00F8               	movwf	modulus_func@x+1
  7673  083C  084B               	movf	incrementor@upper_val,w
  7674  083D  00F7               	movwf	modulus_func@x
  7675  083E  300A               	movlw	10
  7676  083F  00F9               	movwf	modulus_func@y
  7677  0840  3000               	movlw	0
  7678  0841  00FA               	movwf	modulus_func@y+1
  7679  0842  160A  118A  26B2  120A  158A  	fcall	_modulus_func
  7680  0847  0878               	movf	?_modulus_func+1,w
  7681  0848  1283               	bcf	3,5	;RP0=0, select bank0
  7682  0849  1303               	bcf	3,6	;RP1=0, select bank0
  7683  084A  00CC               	movwf	incrementor@upper_val+1
  7684  084B  0877               	movf	?_modulus_func,w
  7685  084C  00CB               	movwf	incrementor@upper_val
  7686  084D                     l2616:	
  7687                           
  7688                           ;math_src.c: 15:      return upper_val;
  7689  084D  084B               	movf	incrementor@upper_val,w
  7690  084E                     l510:	
  7691  084E  0008               	return
  7692  084F                     __end_of_incrementor:	
  7693                           
  7694                           	psect	text33
  7695  16B2                     __ptext33:	
  7696 ;; *************** function _modulus_func *****************
  7697 ;; Defined at:
  7698 ;;		line 5 in file "math_src.c"
  7699 ;; Parameters:    Size  Location     Type
  7700 ;;  x               2    7[COMMON] int 
  7701 ;;  y               2    9[COMMON] int 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  2    7[COMMON] int 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0, pclath, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7713 ;;      Params:         4       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0
  7716 ;;      Totals:         4       0       0       0       0
  7717 ;;Total ram usage:        4 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    1
  7720 ;; This function calls:
  7721 ;;		___awmod
  7722 ;; This function is called by:
  7723 ;;		_thermometer_threshhold_settings
  7724 ;;		_time_settings
  7725 ;;		_date_settings
  7726 ;;		_incrementor
  7727 ;;		_decrementor
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _modulus_func
  7733  16B2                     _modulus_func:	
  7734  16B2                     l2412:	
  7735                           ;incstack = 0
  7736                           ; Regs used in _modulus_func: [wreg+status,2+status,0+pclath+cstack]
  7737                           
  7738                           
  7739                           ;math_src.c: 6:     x = x % y;
  7740  16B2  087A               	movf	modulus_func@y+1,w
  7741  16B3  00F1               	movwf	___awmod@divisor+1
  7742  16B4  0879               	movf	modulus_func@y,w
  7743  16B5  00F0               	movwf	___awmod@divisor
  7744  16B6  0878               	movf	modulus_func@x+1,w
  7745  16B7  00F3               	movwf	___awmod@dividend+1
  7746  16B8  0877               	movf	modulus_func@x,w
  7747  16B9  00F2               	movwf	___awmod@dividend
  7748  16BA  120A  158A  2237  160A  118A  	fcall	___awmod
  7749  16BF  0871               	movf	?___awmod+1,w
  7750  16C0  00F8               	movwf	modulus_func@x+1
  7751  16C1  0870               	movf	?___awmod,w
  7752  16C2  00F7               	movwf	modulus_func@x
  7753  16C3                     l2414:	
  7754  16C3                     l506:	
  7755                           ;math_src.c: 7:     return x;
  7756                           
  7757  16C3  0008               	return
  7758  16C4                     __end_of_modulus_func:	
  7759                           
  7760                           	psect	text34
  7761  0A37                     __ptext34:	
  7762 ;; *************** function ___awmod *****************
  7763 ;; Defined at:
  7764 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  divisor         2    0[COMMON] int 
  7767 ;;  dividend        2    2[COMMON] int 
  7768 ;; Auto vars:     Size  Location     Type
  7769 ;;  sign            1    6[COMMON] unsigned char 
  7770 ;;  counter         1    5[COMMON] unsigned char 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2    0[COMMON] int 
  7773 ;; Registers used:
  7774 ;;		wreg, status,2, status,0
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7780 ;;      Params:         4       0       0       0       0
  7781 ;;      Locals:         2       0       0       0       0
  7782 ;;      Temps:          1       0       0       0       0
  7783 ;;      Totals:         7       0       0       0       0
  7784 ;;Total ram usage:        7 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_get_temp
  7790 ;;		_modulus_func
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           
  7795                           ;psect for function ___awmod
  7796  0A37                     ___awmod:	
  7797  0A37                     l2342:	
  7798                           ;incstack = 0
  7799                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7800                           
  7801  0A37  01F6               	clrf	___awmod@sign
  7802  0A38                     l2344:	
  7803  0A38  1FF3               	btfss	___awmod@dividend+1,7
  7804  0A39  2A3B               	goto	u1111
  7805  0A3A  2A3C               	goto	u1110
  7806  0A3B                     u1111:	
  7807  0A3B  2A43               	goto	l2350
  7808  0A3C                     u1110:	
  7809  0A3C                     l2346:	
  7810  0A3C  09F2               	comf	___awmod@dividend,f
  7811  0A3D  09F3               	comf	___awmod@dividend+1,f
  7812  0A3E  0AF2               	incf	___awmod@dividend,f
  7813  0A3F  1903               	skipnz
  7814  0A40  0AF3               	incf	___awmod@dividend+1,f
  7815  0A41                     l2348:	
  7816  0A41  01F6               	clrf	___awmod@sign
  7817  0A42  0AF6               	incf	___awmod@sign,f
  7818  0A43                     l2350:	
  7819  0A43  1FF1               	btfss	___awmod@divisor+1,7
  7820  0A44  2A46               	goto	u1121
  7821  0A45  2A47               	goto	u1120
  7822  0A46                     u1121:	
  7823  0A46  2A4C               	goto	l2354
  7824  0A47                     u1120:	
  7825  0A47                     l2352:	
  7826  0A47  09F0               	comf	___awmod@divisor,f
  7827  0A48  09F1               	comf	___awmod@divisor+1,f
  7828  0A49  0AF0               	incf	___awmod@divisor,f
  7829  0A4A  1903               	skipnz
  7830  0A4B  0AF1               	incf	___awmod@divisor+1,f
  7831  0A4C                     l2354:	
  7832  0A4C  0870               	movf	___awmod@divisor,w
  7833  0A4D  0471               	iorwf	___awmod@divisor+1,w
  7834  0A4E  1903               	btfsc	3,2
  7835  0A4F  2A51               	goto	u1131
  7836  0A50  2A52               	goto	u1130
  7837  0A51                     u1131:	
  7838  0A51  2A81               	goto	l2372
  7839  0A52                     u1130:	
  7840  0A52                     l2356:	
  7841  0A52  01F5               	clrf	___awmod@counter
  7842  0A53  0AF5               	incf	___awmod@counter,f
  7843  0A54  2A60               	goto	l2362
  7844  0A55                     l2358:	
  7845  0A55  3001               	movlw	1
  7846  0A56                     u1145:	
  7847  0A56  1003               	clrc
  7848  0A57  0DF0               	rlf	___awmod@divisor,f
  7849  0A58  0DF1               	rlf	___awmod@divisor+1,f
  7850  0A59  3EFF               	addlw	-1
  7851  0A5A  1D03               	skipz
  7852  0A5B  2A56               	goto	u1145
  7853  0A5C                     l2360:	
  7854  0A5C  3001               	movlw	1
  7855  0A5D  00F4               	movwf	??___awmod
  7856  0A5E  0874               	movf	??___awmod,w
  7857  0A5F  07F5               	addwf	___awmod@counter,f
  7858  0A60                     l2362:	
  7859  0A60  1FF1               	btfss	___awmod@divisor+1,7
  7860  0A61  2A63               	goto	u1151
  7861  0A62  2A64               	goto	u1150
  7862  0A63                     u1151:	
  7863  0A63  2A55               	goto	l2358
  7864  0A64                     u1150:	
  7865  0A64                     l2364:	
  7866  0A64  0871               	movf	___awmod@divisor+1,w
  7867  0A65  0273               	subwf	___awmod@dividend+1,w
  7868  0A66  1D03               	skipz
  7869  0A67  2A6A               	goto	u1165
  7870  0A68  0870               	movf	___awmod@divisor,w
  7871  0A69  0272               	subwf	___awmod@dividend,w
  7872  0A6A                     u1165:	
  7873  0A6A  1C03               	skipc
  7874  0A6B  2A6D               	goto	u1161
  7875  0A6C  2A6E               	goto	u1160
  7876  0A6D                     u1161:	
  7877  0A6D  2A74               	goto	l2368
  7878  0A6E                     u1160:	
  7879  0A6E                     l2366:	
  7880  0A6E  0870               	movf	___awmod@divisor,w
  7881  0A6F  02F2               	subwf	___awmod@dividend,f
  7882  0A70  0871               	movf	___awmod@divisor+1,w
  7883  0A71  1C03               	skipc
  7884  0A72  03F3               	decf	___awmod@dividend+1,f
  7885  0A73  02F3               	subwf	___awmod@dividend+1,f
  7886  0A74                     l2368:	
  7887  0A74  3001               	movlw	1
  7888  0A75                     u1175:	
  7889  0A75  1003               	clrc
  7890  0A76  0CF1               	rrf	___awmod@divisor+1,f
  7891  0A77  0CF0               	rrf	___awmod@divisor,f
  7892  0A78  3EFF               	addlw	-1
  7893  0A79  1D03               	skipz
  7894  0A7A  2A75               	goto	u1175
  7895  0A7B                     l2370:	
  7896  0A7B  3001               	movlw	1
  7897  0A7C  02F5               	subwf	___awmod@counter,f
  7898  0A7D  1D03               	btfss	3,2
  7899  0A7E  2A80               	goto	u1181
  7900  0A7F  2A81               	goto	u1180
  7901  0A80                     u1181:	
  7902  0A80  2A64               	goto	l2364
  7903  0A81                     u1180:	
  7904  0A81                     l2372:	
  7905  0A81  0876               	movf	___awmod@sign,w
  7906  0A82  1903               	btfsc	3,2
  7907  0A83  2A85               	goto	u1191
  7908  0A84  2A86               	goto	u1190
  7909  0A85                     u1191:	
  7910  0A85  2A8B               	goto	l2376
  7911  0A86                     u1190:	
  7912  0A86                     l2374:	
  7913  0A86  09F2               	comf	___awmod@dividend,f
  7914  0A87  09F3               	comf	___awmod@dividend+1,f
  7915  0A88  0AF2               	incf	___awmod@dividend,f
  7916  0A89  1903               	skipnz
  7917  0A8A  0AF3               	incf	___awmod@dividend+1,f
  7918  0A8B                     l2376:	
  7919  0A8B  0873               	movf	___awmod@dividend+1,w
  7920  0A8C  00F1               	movwf	?___awmod+1
  7921  0A8D  0872               	movf	___awmod@dividend,w
  7922  0A8E  00F0               	movwf	?___awmod
  7923  0A8F                     l774:	
  7924  0A8F  0008               	return
  7925  0A90                     __end_of___awmod:	
  7926                           
  7927                           	psect	text35
  7928  1710                     __ptext35:	
  7929 ;; *************** function _button_delay *****************
  7930 ;; Defined at:
  7931 ;;		line 513 in file "Button_src.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;		None
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  i               2    0[COMMON] int 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, btemp+1
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7945 ;;      Params:         0       0       0       0       0
  7946 ;;      Locals:         2       0       0       0       0
  7947 ;;      Temps:          0       0       0       0       0
  7948 ;;      Totals:         2       0       0       0       0
  7949 ;;Total ram usage:        2 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; This function calls:
  7952 ;;		Nothing
  7953 ;; This function is called by:
  7954 ;;		_thermometer_threshhold_settings
  7955 ;;		_time_settings
  7956 ;;		_date_settings
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           
  7961                           ;psect for function _button_delay
  7962  1710                     _button_delay:	
  7963  1710                     l2620:	
  7964                           ;incstack = 0
  7965                           ; Regs used in _button_delay: [wreg+status,2+btemp+1]
  7966                           
  7967                           
  7968                           ;Button_src.c: 514:     for(int i=0;i<10000;i++);
  7969  1710  01F0               	clrf	button_delay@i
  7970  1711  01F1               	clrf	button_delay@i+1
  7971  1712                     l2626:	
  7972  1712  3001               	movlw	1
  7973  1713  07F0               	addwf	button_delay@i,f
  7974  1714  1803               	skipnc
  7975  1715  0AF1               	incf	button_delay@i+1,f
  7976  1716  3000               	movlw	0
  7977  1717  07F1               	addwf	button_delay@i+1,f
  7978  1718                     l2628:	
  7979  1718  0871               	movf	button_delay@i+1,w
  7980  1719  3A80               	xorlw	128
  7981  171A  00FF               	movwf	btemp+1
  7982  171B  30A7               	movlw	167
  7983  171C  027F               	subwf	btemp+1,w
  7984  171D  1D03               	skipz
  7985  171E  2F21               	goto	u1385
  7986  171F  3010               	movlw	16
  7987  1720  0270               	subwf	button_delay@i,w
  7988  1721                     u1385:	
  7989  1721  1C03               	skipc
  7990  1722  2F24               	goto	u1381
  7991  1723  2F25               	goto	u1380
  7992  1724                     u1381:	
  7993  1724  2F12               	goto	l2626
  7994  1725                     u1380:	
  7995  1725                     l503:	
  7996  1725  0008               	return
  7997  1726                     __end_of_button_delay:	
  7998  007E                     btemp	set	126	;btemp
  7999  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _decrementor->_modulus_func
    _lcd_init->_write_cmd
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_write_char
    _display_date->_write_char
    _display_clock->_write_char
    _date_settings->_incrementor
    _write_cmd->_delay_screen
    _write_char->_delay_screen
    _set_time->_time_write_1
    _incrementor->_modulus_func
    _modulus_func->___awmod

Critical Paths under _main in BANK0

    _main->_thermometer_threshhold_settings
    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _date_settings->_incrementor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   34272
                      _date_settings
                      _display_clock
                       _display_date
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                 _initialise_buttons
                           _lcd_init
                           _set_time
    _thermometer_threshhold_settings
                      _time_settings
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _time_settings                                        3     3      0    9902
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _thermometer_threshhold_settings                      5     5      0    9217
                                              5 BANK0      5     5      0
                       _button_delay
                        _decrementor
                        _incrementor
                       _modulus_func
                _set_beep_threshhold
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _set_beep_threshhold                                  4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _decrementor                                          7     2      5    2657
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _initialise_buttons                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    3882
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0      68
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     252
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _date_settings                                        3     3      0    9902
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _time_date_hex_terminator                             4     3      1     295
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _time_date_delimiter                                  5     3      2    3130
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (3) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _incrementor                                          7     2      5    3797
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (2) _modulus_func                                         4     0      4    2339
                                              7 COMMON     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _button_delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _date_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _display_clock
     _write_char
       _delay_screen
   _display_date
     _write_char
       _delay_screen
   _display_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _initialise_buttons
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _set_time
     _time_write_1
   _thermometer_threshhold_settings
     _button_delay
     _decrementor
       _modulus_func
         ___awmod
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_beep_threshhold
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _time_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 02 13:04:03 2019

                                       _a 0040                                         _b 003F  
                                       _c 003E                                         _t 0035  
                                       _w 0033                                         _x 0031  
                                       _y 002F                                         _z 002D  
                                       pc 0002                                        _TX 0047  
                                      _TZ 0048                              ___awdiv@sign 0076  
                                      _ge 0045                                        _wd 0037  
                                      fsr 0004         __size_of_time_date_hex_terminator 0012  
               ?_time_date_hex_terminator 0070                       _set_beep_threshhold 0800  
                           ?_display_date 0070                                       l131 1781  
                                     l301 0B8F                                       l125 16A3  
                                     l134 001F                                       l222 0981  
                                     l310 08DB                                       l311 0902  
                                     l215 168A                                       l304 17AD  
                                     l144 173B                                       l240 097D  
                                     l232 09F2                                       l128 17A9  
                                     l305 17D1                                       l313 0909  
                                     l218 17FF                                       l226 09B7  
                                     l307 17D4                                       l251 16D7  
                                     l260 1751                                       l510 084E  
                                     l350 0821                                       l503 1725  
                                     l255 16E7                                       l351 0822  
                                     l248 0D63                                       l506 16C3  
                                     l522 16D5                                       l514 08A6  
                                     l283 170F                                       l292 08D1  
                                     l293 08D4                                       l461 0F9E  
                                     l453 0D74                                       l518 1768  
                                     l462 0FF1                                       l287 0877  
                                     l288 087A                                       l456 0F2D  
                                     l297 0C35                                       l449 16B1  
                                     l459 0FFF                                       l475 02C3  
                                     l492 068F                                       l484 03E3  
                                     l476 03D2                                       l493 07E5  
                                     l469 00F5                                       l478 035E  
                                     l761 0AF6                                       l774 0A8F  
                                     l880 0A36                                       l890 0943  
                                     _RA0 0028                                       _RA2 002A  
                                     _RB0 0030                                       _RA3 002B  
                                     _RB1 0031                                       _RA4 002C  
                                     _RC0 0038                                       _RA5 002D  
                                     _RC1 0039                                       _RB4 0034  
                                     _RC2 003A                                       _RB5 0035  
                                     _RC3 003B                                       _RE0 0048  
                                     _RC4 003C                                       _RE1 0049  
                                     _RC6 003E                                       _RC7 003F  
                                     _THV 0049                             ?_display_temp 0070  
                                     _TLV 004A                                       _shi 0046  
                                     fsr0 0004                                       indf 0000  
                            ___awmod@sign 0076                              __CFG_FOSC$HS 0000  
                         ??_time_settings 0050                              __CFG_LVP$OFF 0000  
                                    l3000 0EFB                                      l3002 0F01  
                                    l3100 0492                                      l3020 0F3B  
                                    l3004 0F07                                      l3110 04AE  
                                    l3102 0499                                      l3030 0F70  
                                    l3022 0F43                                      l3014 0F17  
                                    l3006 0F0D                                      l3120 04F3  
                                    l3112 04B2                                      l3104 049D  
                                    l3040 0FAE                                      l3032 0F8B  
                                    l3024 0F4A                                      l3016 0F1F  
                                    l3008 0F13                                      l2410 17C4  
                                    l2402 17B5                                      l3210 06DA  
                                    l3202 0693                                      l3130 0510  
                                    l3122 04FA                                      l3114 04B8  
                                    l3106 04A2                                      l1530 169B  
                                    l1522 1684                                      l3050 0FBD  
                                    l3042 0FAF                                      l3034 0F9A  
                                    l3026 0F60                                      l3018 0F35  
                                    l2412 16B2                                      l2404 17B6  
                                    l2420 0852                                      l3300 07D0  
                                    l3220 06F0                                      l3212 06E0  
                                    l3204 06A6                                      l3140 054C  
                                    l3132 0516                                      l3124 0501  
                                    l3116 04CB                                      l3108 04A8  
                                    l2500 09D5                                      l1532 169F  
                                    l3060 0FDF                                      l3052 0FC7  
                                    l3044 0FB0                                      l3036 0FA6  
                                    l3028 0F67                                      l2350 0A43  
                                    l2342 0A37                                      l2414 16C3  
                                    l2406 17BD                                      l2430 0864  
                                    l2422 0858                                      l3302 07D4  
                                    l3230 0706                                      l3222 06F1  
                                    l3206 06AA                                      l3214 06ED  
                                    l3142 0552                                      l3134 051A  
                                    l3150 0563                                      l3126 0505  
                                    l3118 04E4                                      l2510 09EB  
                                    l2502 09DF                                      l1534 16A0  
                                    l3062 0FE5                                      l3054 0FCD  
                                    l3046 0FB1                                      l3038 0FAB  
                                    l3310 0149                                      l2360 0A5C  
                                    l2352 0A47                                      l2344 0A38  
                                    l2408 17BE                                      l2432 086A  
                                    l2440 0015                                      l3304 07DF  
                                    l3240 0724                                      l3232 070C  
                                    l3224 06F5                                      l3216 06EE  
                                    l3208 06B0                                      l3160 0597  
                                    l3152 0569                                      l3144 0553  
                                    l3136 0520                                      l3128 050A  
                                    l3080 043B                                      l3072 03D3  
                                    l2512 09ED                                      l2504 09E2  
                                    l1536 16A1                                      l3064 0FEB  
                                    l3056 0FD3                                      l3048 0FB5  
                                    l3400 02B7                                      l3320 0153  
                                    l3312 014C                                      l2370 0A7B  
                                    l2362 0A60                                      l2354 0A4C  
                                    l2346 0A3C                                      l2610 0823  
                                    l2418 084F                                      l2450 1774  
                                    l2442 0017                                      l2434 0008  
                                    l3250 0739                                      l3242 072A  
                                    l3234 0712                                      l3226 06FB  
                                    l3218 06EF                                      l3170 05F6  
                                    l3162 05AA                                      l3154 056D  
                                    l3146 055A                                      l3138 0533  
                                    l3090 044B                                      l3082 043C  
                                    l3074 03DD                                      l2530 0952  
                                    l2522 0949                                      l2514 0944  
                                    l2506 09E3                                      l1538 16A2  
                                    l2602 0801                                      l3058 0FD9  
                                    l3410 02C7                                      l3402 02B9  
                                    l3330 018F                                      l3322 0159  
                                    l3314 014D                                      l3306 00E5  
                                    l2620 1710                                      l2364 0A64  
                                    l2356 0A52                                      l2372 0A81  
                                    l2348 0A41                                      l2612 0834  
                                    l2428 085A                                      l2380 1726  
                                    l2452 1777                                      l2444 001C  
                                    l2436 000D                                      l3260 0752  
                                    l3252 073A                                      l3236 0718  
                                    l3228 0701                                      l3244 0736  
                                    l3180 0655                                      l3172 0609  
                                    l3164 05BD                                      l3156 0571  
                                    l3148 055E                                      l3092 0451  
                                    l3084 043D                                      l3076 0437  
                                    l2540 0957                                      l2532 0953  
                                    l2524 094B                                      l2516 0945  
                                    l2460 0987                                      l2508 09E4  
                                    l2604 0811                                      l3068 0FF9  
                                    l3420 030E                                      l3412 02DA  
                                    l3404 02BB                                      l3332 019E  
                                    l3324 015D                                      l3340 01B5  
                                    l3316 014E                                      l3308 00EF  
                                    l3500 0063                                      l2374 0A86  
                                    l2366 0A6E                                      l2358 0A55  
                                    l2614 083A                                      l2454 1779  
                                    l2446 176A                                      l2438 0012  
                                    l3270 0770                                      l3262 0758  
                                    l3254 073E                                      l3246 0737  
                                    l3238 071E                                      l3190 0673  
                                    l3182 0668                                      l3174 061C  
                                    l3166 05D0                                      l3158 0584  
                                    l3094 0464                                      l3086 0441  
                                    l3078 043A                                      l2710 0A05  
                                    l2702 09F3                                      l2390 16D7  
                                    l2550 095E                                      l2542 095A  
                                    l2534 0954                                      l2526 094E  
                                    l2470 09A8                                      l2462 0991  
                                    l2630 087B                                      l2606 081F  
                                    l3430 031F                                      l3414 02DE  
                                    l3422 031B                                      l3406 02BD  
                                    l3350 01DE                                      l3342 01BB  
                                    l3334 01A5                                      l3326 0163  
                                    l3318 014F                                      l3510 0080  
                                    l3502 0069                                      l2376 0A8B  
                                    l2368 0A74                                      l2616 084D  
                                    l2640 16C5                                      l2456 177E  
                                    l2448 176F                                      l3280 079A  
                                    l3272 0776                                      l3264 075E  
                                    l3256 0745                                      l3248 0738  
                                    l3192 0674                                      l3184 066E  
                                    l3176 062F                                      l3168 05E3  
                                    l3096 047D                                      l3088 0447  
                                    l2720 0A25                                      l2712 0A09  
                                    l2704 09F5                                      l2392 16DB  
                                    l2560 0975                                      l2552 095F  
                                    l2544 095B                                      l2536 0955  
                                    l2528 0951                                      l2464 099E  
                                    l2472 09B2                                      l2480 09BD  
                                    l2800 0C6A                                      l2632 088C  
                                    l3440 033A                                      l3432 0323  
                                    l3424 031C                                      l3416 02E4  
                                    l3360 0209                                      l3352 01F7  
                                    l3344 01C1                                      l3336 01AC  
                                    l3328 0176                                      l3520 009E  
                                    l3512 0086                                      l3504 006F  
                                    l2626 1712                                      l2650 1761  
                                    l2642 16D3                                      l2386 1728  
                                    l3290 07C1                                      l3282 07A0  
                                    l3266 0764                                      l3258 074A  
                                    l3274 0782                                      l3194 0678  
                                    l3186 0671                                      l3178 0642  
                                    l3098 048C                                      l2722 0A2C  
                                    l2714 0A0D                                      l2706 09FB  
                                    l2730 0910                                      l2394 16E1  
                                    l2562 0977                                      l2554 0965  
                                    l2546 095C                                      l2538 0956  
                                    l2466 09A4                                      l2458 097E  
                                    l2490 09CA                                      l2482 09C2  
                                    l2474 09B9                                      l2810 0C9E  
                                    l2802 0C74                                      l2634 0892  
                                    l3450 0358                                      l3442 0340  
                                    l3434 0329                                      l3426 031D  
                                    l3418 0308                                      l3370 0231  
                                    l3354 01FD                                      l3346 01C5  
                                    l3362 020E                                      l3338 01B0  
                                    l3530 00BB                                      l3522 00A4  
                                    l3514 008C                                      l3506 0075  
                                    l2628 1718                                      l2396 17AB  
                                    l2652 1765                                      l2644 16D4  
                                    l2388 172E                                      l3292 07CA  
                                    l3284 07A9                                      l3276 0788  
                                    l3268 076A                                      l3196 0683  
                                    l3188 0672                                      l2900 0BA6  
                                    l2660 0A91                                      l2716 0A1E  
                                    l2708 09FE                                      l2724 0A32  
                                    l2740 092C                                      l2732 0913  
                                    l2564 097C                                      l2556 096A  
                                    l2548 095D                                      l2468 09A7  
                                    l2492 09CB                                      l2484 09C5  
                                    l2820 0CDC                                      l2812 0CCA  
                                    l2804 0C77                                      l2580 08D6  
                                    l2636 08A5                                      l3460 03B8  
                                    l3452 0364                                      l3444 0346  
                                    l3436 032F                                      l3428 031E  
                                    l3380 0290                                      l3372 0244  
                                    l3364 0214                                      l3356 01FE  
                                    l3348 01CB                                      l3540 00D7  
                                    l3532 00C1                                      l3524 00A9  
                                    l3516 0092                                      l3508 007A  
                                    l2654 1767                                      l3294 07CD  
                                    l3286 07B2                                      l3278 0791  
                                    l3198 0689                                      l2910 0BD1  
                                    l2902 0BB3                                      l2750 16FB  
                                    l2670 0AA5                                      l2662 0A95  
                                    l2718 0A24                                      l2742 0932  
                                    l2734 091A                                      l2574 173E  
                                    l2558 096B                                      l2494 09CC  
                                    l2486 09C8                                      l2830 0CFC  
                                    l2822 0CE4                                      l2814 0CCC  
                                    l2806 0C91                                      l2590 08E9  
                                    l3470 03C2                                      l3462 03BB  
                                    l3454 0367                                      l3446 034C  
                                    l3438 0334                                      l3390 02A7  
                                    l3382 02A3                                      l3374 0257  
                                    l3366 021A                                      l3358 0205  
                                    l3542 00DC                                      l3534 00C7  
                                    l3526 00AF                                      l3518 0098  
                                    l2648 1753                                      l3296 07CE  
                                    l3288 07B8                                      l2920 0C00  
                                    l2912 0BDB                                      l2904 0BBA  
                                    l2752 1700                                      l2680 0ABB  
                                    l2672 0AA9                                      l2664 0A9A  
                                    l2744 0939                                      l2736 091E  
                                    l2728 090A                                      l2576 1744  
                                    l2568 173C                                      l2496 09CD  
                                    l2488 09C9                                      l2832 0D0F  
                                    l2824 0CE8                                      l2816 0CD0  
                                    l2592 08EE                                      l2840 08A7  
                                    l2760 1788                                      l3472 03CC  
                                    l3464 03BC                                      l3456 0368  
                                    l3448 0352                                      l3392 02AB  
                                    l3384 02A4                                      l3376 026A  
                                    l3368 021E                                      l3536 00CD  
                                    l3528 00B5                                      l3480 002E  
                                    l3298 07CF                                      l2930 0C2E  
                                    l2922 0C06                                      l2914 0BE8  
                                    l2906 0BC4                                      l2754 170C  
                                    l2690 0ADB                                      l2682 0ABF  
                                    l2674 0AAB                                      l2666 0A9C  
                                    l2658 0A90                                      l2738 0922  
                                    l2746 093F                                      l2498 09D2  
                                    l2834 0D2F                                      l2826 0CF0  
                                    l2818 0CD8                                      l2594 08EF  
                                    l2586 08DE                                      l2578 08D5  
                                    l2850 08B2                                      l2842 08AA  
                                    l2770 179D                                      l2762 178D  
                                    l3466 03BD                                      l3458 0369  
                                    l3394 02B1                                      l3386 02A5  
                                    l3378 027D                                      l3538 00D2  
                                    l3490 0047                                      l3482 0033  
                                    l3474 0020                                      l2924 0C10  
                                    l2916 0BEF                                      l2908 0BCB  
                                    l2860 0AFD                                      l2692 0AE2  
                                    l2684 0AC3                                      l2676 0AB1  
                                    l2668 0AA0                                      l2836 0D4F  
                                    l2828 0CF4                                      l2596 08F5  
                                    l2588 08E5                                      l2852 08BE  
                                    l2844 08B0                                      l2780 16AE  
                                    l2772 17A3                                      l2764 1790  
                                    l2756 1782                                      l2940 0E5C  
                                    l2932 0D64                                      l3468 03BE  
                                    l3396 02B4                                      l3388 02A6  
                                    l3492 004C                                      l3484 0038  
                                    l3476 0024                                      l2926 0C1D  
                                    l2918 0BF9                                      l2870 0B2B  
                                    l2862 0B05                                      l2686 0AD4  
                                    l2678 0AB4                                      l2694 0AE8  
                                    l2838 0D62                                      l2790 0C49  
                                    l2598 0908                                      l2854 08C4  
                                    l2782 16AF                                      l2774 16A4  
                                    l2766 1791                                      l2758 1785  
                                    l2950 0E64                                      l2942 0E5D  
                                    l2934 0D6E                                      l3398 02B5  
                                    l3494 0051                                      l3486 003D  
                                    l3478 0029                                      l2928 0C24  
                                    l2880 0B56                                      l2872 0B32  
                                    l2864 0B0D                                      l2856 17D5  
                                    l2696 0AED                                      l2688 0ADA  
                                    l2792 0C4F                                      l2784 0C36  
                                    l2776 16AA                                      l2768 1797  
                                    l2960 0E6B                                      l2952 0E66  
                                    l2944 0E5E                                      l2936 0E58  
                                    l3496 0057                                      l3488 0042  
                                    l2890 0B7E                                      l2882 0B60  
                                    l2874 0B38                                      l2866 0B1A  
                                    l2858 0AF7                                      l2698 0AF2  
                                    l2794 0C54                                      l2786 0C39  
                                    l2778 16AD                                      l2970 0E85  
                                    l2962 0E6C                                      l2954 0E68  
                                    l2946 0E60                                      l2938 0E5B  
                                    l3498 005D                                      l2892 0B88  
                                    l2884 0B67                                      l2876 0B42  
                                    l2868 0B21                                      l2796 0C5A  
                                    l2788 0C44                                      l2980 0ECA  
                                    l2972 0E9B                                      l2964 0E70  
                                    l2956 0E69                                      l2948 0E62  
                                    l2894 0B90                                      l2886 0B6D  
                                    l2878 0B4F                                      l2798 0C60  
                                    l2990 0ED9                                      l2974 0EA2  
                                    l2966 0E76                                      l2982 0ED3  
                                    l2958 0E6A                                      l2896 0B96  
                                    l2888 0B77                                      l2992 0EDD  
                                    l2984 0ED6                                      l2976 0EAB  
                                    l2968 0E7E                                      l2898 0B9E  
                                    l2994 0EE5                                      l2986 0ED7  
                                    l2978 0EC6                                      l2996 0EEF  
                                    l2988 0ED8                                      l2998 0EF5  
                          ?_display_clock 0070                                      u1110 0A3C  
                                    u1111 0A3B                                      u1120 0A47  
                                    u1200 173B                                      u2000 06FB  
                                    u1121 0A46                                      u1201 173A  
                                    u2001 06FA                                      u1130 0A52  
                                    u2010 073E                                      u1210 16E1  
                                    u1131 0A51                                      u2011 073D  
                                    u1211 16E0                                      u2020 0745  
                                    u1220 16E7                                      u1300 096A  
                                    u2100 01C1                                      u1205 1737  
                                    u2021 0744                                      u1221 16E6  
                                    u1301 0969                                      u2101 01C0  
                                    u1150 0A64                                      u1230 17B5  
                                    u2030 07D4                                      u1310 097C  
                                    u2110 01FD                                      u1151 0A63  
                                    u1231 17B4                                      u2031 07D3  
                                    u1311 097B                                      u2111 01FC  
                                    u1160 0A6E                                      u1240 17D1  
                                    u1400 16D3                                      u1320 1751  
                                    u2120 0205                                      u2040 00EF  
                                    u1161 0A6D                                      u1145 0A56  
                                    u1241 17D0                                      u1401 16D2  
                                    u1321 1750                                      u2121 0204  
                                    u2041 00EE                                      u1250 0877  
                                    u1410 1761                                      u1330 08E9  
                                    u2130 02AB                                      u2050 0153  
                                    u1251 0876                                      u1411 1760  
                                    u1331 08E8                                      u2131 02AA  
                                    u2051 0152                                      u1180 0A81  
                                    u1500 0AE8                                      u1420 0A95  
                                    u1260 09A4                                      u1340 0902  
                                    u2140 02DE                                      u2060 0159  
                                    u1181 0A80                                      u1165 0A6A  
                                    u1245 17CD                                      u1501 0AE7  
                                    u1421 0A94                                      u1325 174D  
                                    u1261 09A3                                      u1341 0901  
                                    u2141 02DD                                      u2061 0158  
                                    u1190 0A86                                      u1510 0AED  
                                    u1430 0AA0                                      u1270 09B7  
                                    u1350 0811                                      u2150 02E4  
                                    u2070 01A5                                      u1191 0A85  
                                    u1175 0A75                                      u1255 0873  
                                    u1511 0AEC                                      u1431 0A9F  
                                    u1271 09B6                                      u1351 0810  
                                    u2151 02E3                                      u2071 01A4  
                                    u1440 0AB1                                      u1520 09FB  
                                    u1280 09D2                                      u1360 081F  
                                    u2160 0323                                      u2080 01AC  
                                    u1441 0AB0                                      u1521 09FA  
                                    u1281 09D1                                      u1345 08FE  
                                    u1361 081E                                      u2161 0322  
                                    u2081 01AB                                      u1370 0834  
                                    u1610 0922                                      u1290 09F2  
                                    u2170 0329                                      u2090 01BB  
                                    u1371 0833                                      u1611 0921  
                                    u1291 09F1                                      u2171 0328  
                                    u2091 01BA                                      u1380 1725  
                                    u1460 0AC3                                      u1540 0A0D  
                                    u1620 092C                                      u1700 0CE8  
                                    u2180 03C2                                      u1381 1724  
                                    u1461 0AC2                                      u1541 0A0C  
                                    u1621 092B                                      u1605 0914  
                                    u1701 0CE7                                      u2181 03C1  
                                    u1710 0CF4                                      u1390 088C  
                                    u1455 0AB5                                      u1535 09FF  
                                    u1711 0CF3                                      u1391 088B  
                                    u1480 0AD4                                      u1560 0A1E  
                                    u1640 093F                                      u1720 08D1  
                                    u1800 0F9A                                      u1385 1721  
                                    u1481 0AD3                                      u1561 0A1D  
                                    u1641 093E                                      u1625 0928  
                                    u1721 08D0                                      u1801 0F99  
                                    u1730 0AFD                                      u1810 0FB5  
                                    u1731 0AFC                                      u1475 0AC4  
                                    u1555 0A0E                                      u1635 0933  
                                    u1811 0FB4                                      u1900 04FA  
                                    u1740 0B96                                      u1580 0A32  
                                    u1820 0FF9                                      u1901 04F9  
                                    u1741 0B95                                      u1485 0AD0  
                                    u1581 0A31                                      u1565 0A1A  
                                    u1725 08CD                                      u1821 0FF8  
                                    u1910 0501                                      u1830 03DD  
                                    u1590 0910                                      u1750 0D6E  
                                    u1911 0500                                      u1831 03DC  
                                    u1495 0ADC                                      u1575 0A26  
                                    u1591 090F                                      u1655 0C7C  
                                    u1751 0D6D                                      u1920 0510  
                                    u1840 0441                                      u1680 0CD0  
                                    u1760 0E70                                      u1921 050F  
                                    u1841 0440                                      u1681 0CCF  
                                    u1665 0C87                                      u1761 0E6F  
                                    u1930 0516                                      u1850 0447  
                                    u1690 0CDC                                      u1770 0EDD  
                                    u1931 0515                                      u1851 0446  
                                    u1691 0CDB                                      u1675 0C94  
                                    u1771 0EDC                                      u1940 0552  
                                    u1860 0492                                      u1780 0F2C  
                                    u1941 0551                                      u1861 0491  
                                    u1781 0F2B                                      u1950 055A  
                                    u1870 0499                                      u1790 0F35  
                                    u1951 0559                                      u1871 0498  
                                    u1791 0F34                                      u1960 0678  
                                    u1880 04A8                                      u1961 0677  
                                    u1881 04A7                                      u1785 0F28  
                                    u1970 06AA                                      u1890 04AE  
                                    u1971 06A9                                      u1891 04AD  
                                    u1980 06B0                                      u1981 06AF  
                                    u1990 06F5                                      u1991 06F4  
             time_date_hex_terminator@val 0073                      ?_set_beep_threshhold 0070  
                                    _main 0020                                      _init 169B  
                                    _var1 003B                                      _var2 003A  
                                    btemp 007E           time_date_hex_terminator@limiter 0070  
                           write_byte@val 0077                                      start 0000  
                  time_date_delimiter@hex 0070                    time_date_delimiter@val 0074  
                            ?_incrementor 004B               __size_of_initialise_buttons 000E  
                          ??_display_date 0073                                     ?_main 0070  
                          ??_display_temp 0073                                     ?_init 0070  
                         __end_of___awdiv 0AF7                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 0A90                           ___awdiv@divisor 0070  
                    __end_of_delay_screen 173C                           __end_of___lwdiv 0A37  
                         __end_of___lwmod 0944                           ___awdiv@counter 0075  
                                   _PORTD 0008                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                                     _TRISD 0088  
                                   _TRISE 0089                             __CFG_PWRTE$ON 0000  
                                   _table 0055                            write_byte@temp 0076  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                   ??_set_beep_threshhold 0071                                     status 0003  
                    __size_of_decrementor 002C                                     wtemp0 007E  
                           ??_ds1302_init 0075                           __initialization 07E6  
                            __end_of_main 00E5                              __end_of_init 16A4  
                   __end_of_date_settings 07E6                                    ??_main 007E  
                                  ??_init 0070                      incrementor@lower_val 004D  
                         ??_display_clock 0073                                    _ADCON1 009F  
                        ___awdiv@dividend 0072                                    _TRISA0 0428  
                                  _TRISB4 0434                                    _TRISE0 0448  
                           ?_button_delay 0070                      incrementor@upper_val 004B  
                        __end_of_lcd_init 17AA                          __end_of_get_temp 0D64  
                        __end_of_get_time 08D5                                    _baifen 0043  
                               ??___awdiv 0074                                 ??___awmod 0074  
                                  _delay2 173C                                 ??___lwdiv 007A  
                               ??___lwmod 0074                       __end_of_ds1302_init 1710  
                                  _table1 0020                          ___awdiv@quotient 0077  
                         ___awmod@divisor 0070                                    _shifen 0044  
                                  _wanfen 0041                           ___awmod@counter 0075  
                            ?_time_read_1 0070                       time_write_1@time_tx 0074  
                           display_date@i 0075                          __end_of_set_time 087B  
                      reset_temp@presence 0075                   __end_of__initialization 07FC  
                          ??_button_delay 0070              __size_of_time_date_delimiter 0017  
                    __end_of_display_date 0B90                      __end_of_display_temp 1800  
                          __pcstackCOMMON 0070                              __pidataBANK0 1693  
                   __size_of_delay_screen 0016                      __size_of_incrementor 002C  
                              __pbssBANK0 0020                              _delay_screen 1726  
                      __size_of_init_temp 0007                        __size_of_read_byte 003A  
                             _ds1302_init 16FB                                _delay_temp 16D6  
                              __pmaintext 0020                                   ?_delay2 0070  
                           ?_modulus_func 0077                        time_read_1@time_rx 0074  
                            incrementor@z 004F                                 ?_lcd_init 0070  
                               ?_get_temp 0070                     __end_of_time_settings 03D3  
                               ?_get_time 0070                        __size_of_write_cmd 0019  
                               ?_set_time 0070                            ??_modulus_func 007B  
              __end_of_initialise_buttons 16B2                  _time_date_hex_terminator 16C4  
                                 ___awdiv 0A90                                   ___awmod 0A37  
                         __size_of_delay2 0016                                   ___lwdiv 09F3  
                                 ___lwmod 090A                                   _day_hex 003D  
                                 _day_low 002B                                   __ptext1 00E5  
                                 __ptext2 0D64                                   __ptext3 0800  
                                 __ptext4 087B                                   __ptext5 1782  
                                 __ptext6 16A4                                   __ptext7 1684  
                                 __ptext8 169B                                   __ptext9 08A7  
                    __end_of_button_delay 1726                                   delay2@i 0070  
                       __end_of_init_temp 168B                          ___awmod@dividend 0072  
                       __end_of_read_byte 097E                                   _qianfen 0042  
                    __size_of_time_read_1 0035               __end_of_set_beep_threshhold 0823  
                   __size_of_display_date 0099                                   clrloop0 168C  
                              ??_lcd_init 0073                             ??_decrementor 007B  
                              ??_get_temp 004B                                ??_get_time 0075  
                   __size_of_display_temp 002B                      end_of_initialization 07FC  
                          display_clock@i 0075                             ?_time_write_1 0070  
                             ?_delay_temp 0070                                _reset_temp 097E  
                              ??_set_time 0075                       _time_date_delimiter 1752  
                    decrementor@lower_val 004B                              _display_date 0AF7  
                            _display_temp 17D5                         __end_of_write_cmd 0020  
                           modulus_func@x 0077                             modulus_func@y 0079  
                   __end_of_display_clock 0C36                    __size_of_date_settings 0413  
                    ?_time_date_delimiter 0070                      decrementor@upper_val 004D  
                          ??_time_write_1 0070                       __end_of_decrementor 08A7  
                          __end_of_delay2 1752                                _write_char 1769  
                              _write_byte 09B8                       start_initialization 07E6  
                           delay_screen@i 0070                       __size_of_delay_temp 0012  
                    __end_of_modulus_func 16C4                     ??_time_date_delimiter 0072  
                            ?_ds1302_init 0070                               ?_reset_temp 0070  
                           ??_incrementor 007B                                init_fetch0 16E8  
                                ??_delay2 0070                     __size_of_button_delay 0016  
                           _date_settings 03D3                               __pdataBANK0 0055  
                              read_byte@i 0076                                read_byte@j 0039  
                               ___latbits 0002                             __pcstackBANK0 004B  
                             _decrementor 087B                      set_beep_threshhold@x 0073  
                    set_beep_threshhold@y 0070                         __size_of_lcd_init 0028  
                       __size_of_get_temp 012E                         __size_of_get_time 002E  
              ??_time_date_hex_terminator 0071                              _button_delay 1710  
                        ___lwdiv@dividend 0078                                  ?___awdiv 0070  
                          ?_date_settings 0070                                  ?___awmod 0070  
                                ?___lwdiv 0076                                  ?___lwmod 0070  
                       __size_of_set_time 002C                               ?_write_char 0070  
                             ?_write_byte 0070                       __end_of_incrementor 084F  
                    __end_of_time_write_1 17D5                        _initialise_buttons 16A4  
                         _day_of_week_var 0027                       __size_of_reset_temp 003A  
                        ___lwdiv@quotient 007B                                 _init_temp 1684  
                               _read_byte 0944                              decrementor@z 004F  
                     ?_initialise_buttons 0070                                 clear_ram0 168B  
                            ??_delay_temp 0071   __end_of_thermometer_threshhold_settings 1000  
__size_of_thermometer_threshhold_settings 029C         ??_thermometer_threshhold_settings 0050  
        ?_thermometer_threshhold_settings 0070           _thermometer_threshhold_settings 0D64  
                    ??_initialise_buttons 0070                    __size_of_time_settings 02EE  
        thermometer_threshhold_settings@i 0053                             ??_time_read_1 0070  
                             write_char@x 0072                     __size_of_modulus_func 0012  
                               get_time@i 0076                               write_byte@i 0078  
                      __end_of_delay_temp 16E8                                 _write_cmd 0007  
                              ?_init_temp 0070                                ?_read_byte 0070  
                     __size_of_write_char 0019              __size_of_set_beep_threshhold 0023  
                     __size_of_write_byte 003B                           ??_date_settings 0050  
                    __size_of_ds1302_init 0015                               _incrementor 0823  
                            _modulus_func 16B2                          __size_of___awdiv 0067  
                        __size_of___awmod 0059                          __size_of___lwdiv 0044  
                        __size_of___lwmod 003A                                  _day_high 0029  
                         ___lwdiv@divisor 0076                           ___lwdiv@counter 007D  
                                __ptext10 08D5                                  __ptext11 0C36  
                                __ptext20 16FB                                  __ptext12 09B8  
                                __ptext21 17D5                                  __ptext13 097E  
                                __ptext30 084F                                  __ptext22 0AF7  
                                __ptext14 0944                                  __ptext31 17AA  
                                __ptext23 0B90                                  __ptext15 16D6  
                                __ptext32 0823                                  __ptext24 03D3  
                                __ptext16 173C                                  __ptext33 16B2  
                                __ptext25 0007                                  __ptext17 090A  
                                __ptext34 0A37                                  __ptext26 1769  
                                __ptext18 09F3                                  __ptext35 1710  
                                __ptext27 1726                                  __ptext19 0A90  
                                __ptext28 16C4                                  __ptext29 1752  
                     __end_of_time_read_1 090A                                ?_write_cmd 0070  
                                _lcd_init 1782                                  _get_temp 0C36  
                                _get_time 08A7                             _time_settings 00E5  
        __end_of_time_date_hex_terminator 16D6                             __size_of_main 00C5  
                           __size_of_init 0009                             ?_delay_screen 0070  
                             _hrs_limiter 003C                                 set_time@i 0075  
                            ??_reset_temp 0074                                  _set_time 084F  
              time_date_delimiter@limiter 0071                                write_cmd@x 0072  
                   __size_of_time_write_1 002B                    __size_of_display_clock 00A6  
                             delay_temp@x 0072                               delay_temp@y 0070  
                             delay_temp@z 0073                            read_byte@value 0075  
             __end_of_time_date_delimiter 1769                                  init_ram0 16EC  
                           button_delay@i 0070                               ??_init_temp 0070  
                      __end_of_reset_temp 09B8                               ??_read_byte 0074  
                          ?_time_settings 0070                              ?_decrementor 004B  
                        ___lwmod@dividend 0072                            ??_delay_screen 0070  
                            _time_write_1 17AA                              ??_write_char 0072  
                            ??_write_byte 0074                                _OPTION_REG 0081  
                             _time_read_1 08D5                              time_read_1@j 0072  
                         ___lwmod@divisor 0070                           ___lwmod@counter 0075  
                             ??_write_cmd 0072                             _display_clock 0B90  
                           time_write_1@j 0072                        __end_of_write_char 1782  
                      __end_of_write_byte 09F3  
