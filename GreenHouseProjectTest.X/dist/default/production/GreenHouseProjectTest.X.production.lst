

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 09:29:18 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196  0000                     	;# 
   197  0001                     	;# 
   198  0002                     	;# 
   199  0003                     	;# 
   200  0004                     	;# 
   201  0005                     	;# 
   202  0006                     	;# 
   203  0007                     	;# 
   204  0008                     	;# 
   205  0009                     	;# 
   206  000A                     	;# 
   207  000B                     	;# 
   208  000C                     	;# 
   209  000D                     	;# 
   210  000E                     	;# 
   211  000E                     	;# 
   212  000F                     	;# 
   213  0010                     	;# 
   214  0011                     	;# 
   215  0012                     	;# 
   216  0013                     	;# 
   217  0014                     	;# 
   218  0015                     	;# 
   219  0015                     	;# 
   220  0016                     	;# 
   221  0017                     	;# 
   222  0018                     	;# 
   223  0019                     	;# 
   224  001A                     	;# 
   225  001B                     	;# 
   226  001B                     	;# 
   227  001C                     	;# 
   228  001D                     	;# 
   229  001E                     	;# 
   230  001F                     	;# 
   231  0081                     	;# 
   232  0085                     	;# 
   233  0086                     	;# 
   234  0087                     	;# 
   235  0088                     	;# 
   236  0089                     	;# 
   237  008C                     	;# 
   238  008D                     	;# 
   239  008E                     	;# 
   240  0091                     	;# 
   241  0092                     	;# 
   242  0093                     	;# 
   243  0094                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009C                     	;# 
   247  009D                     	;# 
   248  009E                     	;# 
   249  009F                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  010E                     	;# 
   253  010F                     	;# 
   254  018C                     	;# 
   255  018D                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  000E                     	;# 
   271  000E                     	;# 
   272  000F                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0014                     	;# 
   278  0015                     	;# 
   279  0015                     	;# 
   280  0016                     	;# 
   281  0017                     	;# 
   282  0018                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001B                     	;# 
   287  001C                     	;# 
   288  001D                     	;# 
   289  001E                     	;# 
   290  001F                     	;# 
   291  0081                     	;# 
   292  0085                     	;# 
   293  0086                     	;# 
   294  0087                     	;# 
   295  0088                     	;# 
   296  0089                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  0091                     	;# 
   301  0092                     	;# 
   302  0093                     	;# 
   303  0094                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009C                     	;# 
   307  009D                     	;# 
   308  009E                     	;# 
   309  009F                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  010F                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  010C                     	;# 
   431  010D                     	;# 
   432  010E                     	;# 
   433  010F                     	;# 
   434  018C                     	;# 
   435  018D                     	;# 
   436  0000                     	;# 
   437  0001                     	;# 
   438  0002                     	;# 
   439  0003                     	;# 
   440  0004                     	;# 
   441  0005                     	;# 
   442  0006                     	;# 
   443  0007                     	;# 
   444  0008                     	;# 
   445  0009                     	;# 
   446  000A                     	;# 
   447  000B                     	;# 
   448  000C                     	;# 
   449  000D                     	;# 
   450  000E                     	;# 
   451  000E                     	;# 
   452  000F                     	;# 
   453  0010                     	;# 
   454  0011                     	;# 
   455  0012                     	;# 
   456  0013                     	;# 
   457  0014                     	;# 
   458  0015                     	;# 
   459  0015                     	;# 
   460  0016                     	;# 
   461  0017                     	;# 
   462  0018                     	;# 
   463  0019                     	;# 
   464  001A                     	;# 
   465  001B                     	;# 
   466  001B                     	;# 
   467  001C                     	;# 
   468  001D                     	;# 
   469  001E                     	;# 
   470  001F                     	;# 
   471  0081                     	;# 
   472  0085                     	;# 
   473  0086                     	;# 
   474  0087                     	;# 
   475  0088                     	;# 
   476  0089                     	;# 
   477  008C                     	;# 
   478  008D                     	;# 
   479  008E                     	;# 
   480  0091                     	;# 
   481  0092                     	;# 
   482  0093                     	;# 
   483  0094                     	;# 
   484  0098                     	;# 
   485  0099                     	;# 
   486  009C                     	;# 
   487  009D                     	;# 
   488  009E                     	;# 
   489  009F                     	;# 
   490  010C                     	;# 
   491  010D                     	;# 
   492  010E                     	;# 
   493  010F                     	;# 
   494  018C                     	;# 
   495  018D                     	;# 
   496                           
   497                           	psect	strings
   498  0800                     __pstrings:	
   499  0800                     stringtab:	
   500  0800                     __stringtab:	
   501  0800                     stringcode:	
   502                           ;	String table - string pointers are 1 byte each
   503                           
   504  0800                     stringdir:	
   505  0800  3008               	movlw	high stringdir
   506  0801  008A               	movwf	10
   507  0802  0804               	movf	4,w
   508  0803  0A84               	incf	4,f
   509  0804  0782               	addwf	2,f
   510  0805                     __stringbase:	
   511  0805  3400               	retlw	0
   512  0806                     __end_of__stringtab:	
   513  0806                     _table:	
   514  0806  3400               	retlw	0
   515  0807  3443               	retlw	67
   516  0808  3407               	retlw	7
   517  0809  3424               	retlw	36
   518  080A  3411               	retlw	17
   519  080B  3406               	retlw	6
   520  080C  3409               	retlw	9
   521  080D  3400               	retlw	0
   522  080E                     __end_of_table:	
   523  0009                     _PORTE	set	9
   524  0008                     _PORTD	set	8
   525  003E                     _RC6	set	62
   526  003F                     _RC7	set	63
   527  003C                     _RC4	set	60
   528  003B                     _RC3	set	59
   529  003A                     _RC2	set	58
   530  0039                     _RC1	set	57
   531  0038                     _RC0	set	56
   532  0049                     _RE1	set	73
   533  0034                     _RB4	set	52
   534  0031                     _RB1	set	49
   535  0035                     _RB5	set	53
   536  0030                     _RB0	set	48
   537  0048                     _RE0	set	72
   538  002B                     _RA3	set	43
   539  002C                     _RA4	set	44
   540  002D                     _RA5	set	45
   541  002A                     _RA2	set	42
   542  0028                     _RA0	set	40
   543  0087                     _TRISC	set	135
   544  0085                     _TRISA	set	133
   545  0089                     _TRISE	set	137
   546  0081                     _OPTION_REG	set	129
   547  0088                     _TRISD	set	136
   548  009F                     _ADCON1	set	159
   549  0086                     _TRISB	set	134
   550  0434                     _TRISB4	set	1076
   551  0448                     _TRISE0	set	1096
   552  0428                     _TRISA0	set	1064
   553                           
   554                           ; #config settings
   555  0000                     
   556                           	psect	cinit
   557  07F3                     start_initialization:	
   558  07F3                     __initialization:	
   559                           
   560                           ; Clear objects allocated to BANK0
   561  07F3  1383               	bcf	3,7	;select IRP bank0
   562  07F4  3020               	movlw	low __pbssBANK0
   563  07F5  0084               	movwf	4
   564  07F6  3036               	movlw	low (__pbssBANK0+22)
   565  07F7  120A  158A  2545  120A  118A  	fcall	clear_ram0
   566  07FC                     end_of_initialization:	
   567                           ;End of C runtime variable initialization code
   568                           
   569  07FC                     __end_of__initialization:	
   570  07FC  0183               	clrf	3
   571  07FD  120A  118A  2B27   	ljmp	_main	;jump to C main() function
   572                           
   573                           	psect	bssBANK0
   574  0020                     __pbssBANK0:	
   575  0020                     _table1:	
   576  0020                     	ds	7
   577  0027                     _wd:	
   578  0027                     	ds	2
   579  0029                     read_byte@j:	
   580  0029                     	ds	1
   581  002A                     _var2:	
   582  002A                     	ds	1
   583  002B                     _var1:	
   584  002B                     	ds	1
   585  002C                     _wanfen:	
   586  002C                     	ds	1
   587  002D                     _qianfen:	
   588  002D                     	ds	1
   589  002E                     _baifen:	
   590  002E                     	ds	1
   591  002F                     _shifen:	
   592  002F                     	ds	1
   593  0030                     _ge:	
   594  0030                     	ds	1
   595  0031                     _shi:	
   596  0031                     	ds	1
   597  0032                     _TX:	
   598  0032                     	ds	1
   599  0033                     _TZ:	
   600  0033                     	ds	1
   601  0034                     _THV:	
   602  0034                     	ds	1
   603  0035                     _TLV:	
   604  0035                     	ds	1
   605                           
   606                           	psect	clrtext
   607  0D45                     clear_ram0:	
   608                           ;	Called with FSR containing the base address, and
   609                           ;	W with the last address+1
   610                           
   611  0D45  0064               	clrwdt	;clear the watchdog before getting into this loop
   612  0D46                     clrloop0:	
   613  0D46  0180               	clrf	0	;clear RAM location pointed to by FSR
   614  0D47  0A84               	incf	4,f	;increment pointer
   615  0D48  0604               	xorwf	4,w	;XOR with final address
   616  0D49  1903               	btfsc	3,2	;have we reached the end yet?
   617  0D4A  3400               	retlw	0	;all done for this memory range, return
   618  0D4B  0604               	xorwf	4,w	;XOR again to restore value
   619  0D4C  2D46               	goto	clrloop0	;do the next byte
   620                           
   621                           	psect	cstackCOMMON
   622  0070                     __pcstackCOMMON:	
   623  0070                     ?_init_temp:	
   624  0070                     ??_init_temp:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_set_time:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_ds1302_init:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_init:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??_init:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_lcd_init:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_initialise_buttons:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ??_initialise_buttons:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_get_temp:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_get_time:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_write_cmd:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_write_char:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_display_temp:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_display_date:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_display_clock:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_thermometer_threshhold_settings:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_date_settings:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_time_settings:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_delay_screen:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ??_delay_screen:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_delay_temp:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_delay2:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ??_delay2:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_time_write_1:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ??_time_write_1:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_time_read_1:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_time_read_1:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_reset_temp:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_write_byte:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_read_byte:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_set_beep_threshhold:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?___awdiv:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?___awmod:	
   724                           ; 2 bytes @ 0x0
   725                           
   726  0070                     ?___lwmod:	
   727                           ; 2 bytes @ 0x0
   728                           
   729  0070                     delay_temp@y:	
   730                           ; 2 bytes @ 0x0
   731                           
   732  0070                     set_beep_threshhold@y:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     delay_screen@i:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     delay2@i:	
   739                           ; 2 bytes @ 0x0
   740                           
   741  0070                     ___awdiv@divisor:	
   742                           ; 2 bytes @ 0x0
   743                           
   744  0070                     ___awmod@divisor:	
   745                           ; 2 bytes @ 0x0
   746                           
   747  0070                     ___lwmod@divisor:	
   748                           ; 2 bytes @ 0x0
   749                           
   750                           
   751                           ; 2 bytes @ 0x0
   752  0070                     	ds	1
   753  0071                     ??_delay_temp:	
   754  0071                     ??_set_beep_threshhold:	
   755                           ; 1 bytes @ 0x1
   756                           
   757                           
   758                           ; 1 bytes @ 0x1
   759  0071                     	ds	1
   760  0072                     ??_write_cmd:	
   761  0072                     ??_write_char:	
   762                           ; 1 bytes @ 0x2
   763                           
   764  0072                     write_char@x:	
   765                           ; 1 bytes @ 0x2
   766                           
   767  0072                     write_cmd@x:	
   768                           ; 1 bytes @ 0x2
   769                           
   770  0072                     delay_temp@x:	
   771                           ; 1 bytes @ 0x2
   772                           
   773  0072                     time_write_1@j:	
   774                           ; 1 bytes @ 0x2
   775                           
   776  0072                     time_read_1@j:	
   777                           ; 2 bytes @ 0x2
   778                           
   779  0072                     ___awdiv@dividend:	
   780                           ; 2 bytes @ 0x2
   781                           
   782  0072                     ___awmod@dividend:	
   783                           ; 2 bytes @ 0x2
   784                           
   785  0072                     ___lwmod@dividend:	
   786                           ; 2 bytes @ 0x2
   787                           
   788                           
   789                           ; 2 bytes @ 0x2
   790  0072                     	ds	1
   791  0073                     ??_lcd_init:	
   792  0073                     ??_display_temp:	
   793                           ; 1 bytes @ 0x3
   794                           
   795  0073                     ??_display_date:	
   796                           ; 1 bytes @ 0x3
   797                           
   798  0073                     ??_display_clock:	
   799                           ; 1 bytes @ 0x3
   800                           
   801  0073                     ??_date_settings:	
   802                           ; 1 bytes @ 0x3
   803                           
   804  0073                     ??_time_settings:	
   805                           ; 1 bytes @ 0x3
   806                           
   807  0073                     delay_temp@z:	
   808                           ; 1 bytes @ 0x3
   809                           
   810  0073                     set_beep_threshhold@x:	
   811                           ; 1 bytes @ 0x3
   812                           
   813                           
   814                           ; 1 bytes @ 0x3
   815  0073                     	ds	1
   816  0074                     ??_reset_temp:	
   817  0074                     ??_write_byte:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     ??_read_byte:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     ??___awdiv:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0074                     ??___awmod:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0074                     ??___lwmod:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0074                     time_write_1@time_tx:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0074                     time_read_1@time_rx:	
   836                           ; 1 bytes @ 0x4
   837                           
   838                           
   839                           ; 1 bytes @ 0x4
   840  0074                     	ds	1
   841  0075                     ??_set_time:	
   842  0075                     ??_ds1302_init:	
   843                           ; 1 bytes @ 0x5
   844                           
   845  0075                     ??_get_time:	
   846                           ; 1 bytes @ 0x5
   847                           
   848  0075                     reset_temp@presence:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0075                     read_byte@value:	
   852                           ; 1 bytes @ 0x5
   853                           
   854  0075                     ___awdiv@counter:	
   855                           ; 1 bytes @ 0x5
   856                           
   857  0075                     ___awmod@counter:	
   858                           ; 1 bytes @ 0x5
   859                           
   860  0075                     ___lwmod@counter:	
   861                           ; 1 bytes @ 0x5
   862                           
   863  0075                     set_time@i:	
   864                           ; 1 bytes @ 0x5
   865                           
   866  0075                     display_clock@i:	
   867                           ; 2 bytes @ 0x5
   868                           
   869  0075                     display_date@i:	
   870                           ; 2 bytes @ 0x5
   871                           
   872                           
   873                           ; 2 bytes @ 0x5
   874  0075                     	ds	1
   875  0076                     ?___lwdiv:	
   876  0076                     write_byte@temp:	
   877                           ; 2 bytes @ 0x6
   878                           
   879  0076                     read_byte@i:	
   880                           ; 1 bytes @ 0x6
   881                           
   882  0076                     ___awdiv@sign:	
   883                           ; 1 bytes @ 0x6
   884                           
   885  0076                     ___awmod@sign:	
   886                           ; 1 bytes @ 0x6
   887                           
   888  0076                     get_time@i:	
   889                           ; 1 bytes @ 0x6
   890                           
   891  0076                     ___lwdiv@divisor:	
   892                           ; 2 bytes @ 0x6
   893                           
   894                           
   895                           ; 2 bytes @ 0x6
   896  0076                     	ds	1
   897  0077                     ??_thermometer_threshhold_settings:	
   898  0077                     write_byte@val:	
   899                           ; 1 bytes @ 0x7
   900                           
   901  0077                     ___awdiv@quotient:	
   902                           ; 1 bytes @ 0x7
   903                           
   904                           
   905                           ; 2 bytes @ 0x7
   906  0077                     	ds	1
   907  0078                     write_byte@i:	
   908  0078                     ___lwdiv@dividend:	
   909                           ; 1 bytes @ 0x8
   910                           
   911                           
   912                           ; 2 bytes @ 0x8
   913  0078                     	ds	2
   914  007A                     ??___lwdiv:	
   915                           
   916                           ; 1 bytes @ 0xA
   917  007A                     	ds	1
   918  007B                     ___lwdiv@quotient:	
   919                           
   920                           ; 2 bytes @ 0xB
   921  007B                     	ds	2
   922  007D                     ___lwdiv@counter:	
   923                           
   924                           ; 1 bytes @ 0xD
   925  007D                     	ds	1
   926  007E                     ??_main:	
   927                           
   928                           	psect	cstackBANK0
   929  0036                     __pcstackBANK0:	
   930                           ; 1 bytes @ 0xE
   931                           
   932  0036                     ??_get_temp:	
   933  0036                     thermometer_threshhold_settings@i:	
   934                           ; 1 bytes @ 0x0
   935                           
   936                           
   937                           ; 2 bytes @ 0x0
   938  0036                     	ds	2
   939  0038                     thermometer_threshhold_settings@i_278:	
   940                           
   941                           ; 2 bytes @ 0x2
   942  0038                     	ds	2
   943  003A                     thermometer_threshhold_settings@i_279:	
   944                           
   945                           ; 2 bytes @ 0x4
   946  003A                     	ds	2
   947  003C                     thermometer_threshhold_settings@i_280:	
   948                           
   949                           ; 2 bytes @ 0x6
   950  003C                     	ds	2
   951  003E                     thermometer_threshhold_settings@w:	
   952                           
   953                           ; 2 bytes @ 0x8
   954  003E                     	ds	2
   955  0040                     thermometer_threshhold_settings@y:	
   956                           
   957                           ; 2 bytes @ 0xA
   958  0040                     	ds	2
   959  0042                     thermometer_threshhold_settings@t:	
   960                           
   961                           ; 2 bytes @ 0xC
   962  0042                     	ds	2
   963  0044                     thermometer_threshhold_settings@x:	
   964                           
   965                           ; 2 bytes @ 0xE
   966  0044                     	ds	2
   967                           
   968                           	psect	maintext
   969  0327                     __pmaintext:	
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 10 in file "mainLogic.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : B00/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels required when called:    3
   995 ;; This function calls:
   996 ;;		_date_settings
   997 ;;		_display_clock
   998 ;;		_display_date
   999 ;;		_display_temp
  1000 ;;		_ds1302_init
  1001 ;;		_get_temp
  1002 ;;		_get_time
  1003 ;;		_init
  1004 ;;		_init_temp
  1005 ;;		_initialise_buttons
  1006 ;;		_lcd_init
  1007 ;;		_set_time
  1008 ;;		_thermometer_threshhold_settings
  1009 ;;		_time_settings
  1010 ;;		_write_char
  1011 ;;		_write_cmd
  1012 ;; This function is called by:
  1013 ;;		Startup code after reset
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _main
  1019  0327                     _main:	
  1020  0327                     l2500:	
  1021                           ;incstack = 0
  1022                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1023                           
  1024                           
  1025                           ;mainLogic.c: 11:     TRISB=0X02;
  1026  0327  3002               	movlw	2
  1027  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1029  032A  0086               	movwf	6	;volatile
  1030  032B                     l2502:	
  1031                           
  1032                           ;mainLogic.c: 12:     init_temp();
  1033  032B  120A  158A  2537  120A  118A  	fcall	_init_temp
  1034  0330                     l2504:	
  1035                           
  1036                           ;mainLogic.c: 13:     set_time();
  1037  0330  120A  158A  26AA  120A  118A  	fcall	_set_time
  1038  0335                     l2506:	
  1039                           
  1040                           ;mainLogic.c: 14:     ds1302_init();
  1041  0335  120A  158A  2568  120A  118A  	fcall	_ds1302_init
  1042  033A                     l2508:	
  1043                           
  1044                           ;mainLogic.c: 16:     init();
  1045  033A  120A  158A  254D  120A  118A  	fcall	_init
  1046  033F                     l2510:	
  1047                           
  1048                           ;mainLogic.c: 17:     lcd_init();
  1049  033F  120A  158A  25FE  120A  118A  	fcall	_lcd_init
  1050  0344                     l2512:	
  1051                           
  1052                           ;mainLogic.c: 18:     init_temp();
  1053  0344  120A  158A  2537  120A  118A  	fcall	_init_temp
  1054  0349                     l2514:	
  1055                           
  1056                           ;mainLogic.c: 19:     initialise_buttons();
  1057  0349  120A  158A  253E  120A  118A  	fcall	_initialise_buttons
  1058  034E                     l2516:	
  1059                           
  1060                           ;mainLogic.c: 23:     get_temp();
  1061  034E  120A  118A  23EC  120A  118A  	fcall	_get_temp
  1062  0353                     l2518:	
  1063                           
  1064                           ;mainLogic.c: 24:     get_time();
  1065  0353  120A  158A  267C  120A  118A  	fcall	_get_time
  1066  0358                     l2520:	
  1067                           
  1068                           ;mainLogic.c: 25:     write_cmd(0x80);
  1069  0358  3080               	movlw	128
  1070  0359  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1071  035E                     l2522:	
  1072                           
  1073                           ;mainLogic.c: 26:     write_char('T');
  1074  035E  3054               	movlw	84
  1075  035F  120A  158A  25A9  120A  118A  	fcall	_write_char
  1076  0364                     l2524:	
  1077                           
  1078                           ;mainLogic.c: 27:     write_char('e');
  1079  0364  3065               	movlw	101
  1080  0365  120A  158A  25A9  120A  118A  	fcall	_write_char
  1081  036A                     l2526:	
  1082                           
  1083                           ;mainLogic.c: 28:     write_char('m');
  1084  036A  306D               	movlw	109
  1085  036B  120A  158A  25A9  120A  118A  	fcall	_write_char
  1086  0370                     l2528:	
  1087                           
  1088                           ;mainLogic.c: 29:     write_char('p');
  1089  0370  3070               	movlw	112
  1090  0371  120A  158A  25A9  120A  118A  	fcall	_write_char
  1091  0376                     l2530:	
  1092                           
  1093                           ;mainLogic.c: 30:     write_char(':');
  1094  0376  303A               	movlw	58
  1095  0377  120A  158A  25A9  120A  118A  	fcall	_write_char
  1096  037C                     l2532:	
  1097                           
  1098                           ;mainLogic.c: 31:     display_temp();
  1099  037C  120A  158A  2626  120A  118A  	fcall	_display_temp
  1100  0381                     l2534:	
  1101                           
  1102                           ;mainLogic.c: 33:     write_cmd(0x90);
  1103  0381  3090               	movlw	144
  1104  0382  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1105  0387                     l2536:	
  1106                           
  1107                           ;mainLogic.c: 34:     write_char('D');
  1108  0387  3044               	movlw	68
  1109  0388  120A  158A  25A9  120A  118A  	fcall	_write_char
  1110  038D                     l2538:	
  1111                           
  1112                           ;mainLogic.c: 35:     write_char('a');
  1113  038D  3061               	movlw	97
  1114  038E  120A  158A  25A9  120A  118A  	fcall	_write_char
  1115  0393                     l2540:	
  1116                           
  1117                           ;mainLogic.c: 36:     write_char('t');
  1118  0393  3074               	movlw	116
  1119  0394  120A  158A  25A9  120A  118A  	fcall	_write_char
  1120  0399                     l2542:	
  1121                           
  1122                           ;mainLogic.c: 37:     write_char('e');
  1123  0399  3065               	movlw	101
  1124  039A  120A  158A  25A9  120A  118A  	fcall	_write_char
  1125  039F                     l2544:	
  1126                           
  1127                           ;mainLogic.c: 38:     write_char(':');
  1128  039F  303A               	movlw	58
  1129  03A0  120A  158A  25A9  120A  118A  	fcall	_write_char
  1130  03A5                     l2546:	
  1131                           
  1132                           ;mainLogic.c: 39:     write_char(' ');
  1133  03A5  3020               	movlw	32
  1134  03A6  120A  158A  25A9  120A  118A  	fcall	_write_char
  1135  03AB                     l2548:	
  1136                           
  1137                           ;mainLogic.c: 41:     display_date();
  1138  03AB  120A  118A  21E8  120A  118A  	fcall	_display_date
  1139  03B0                     l2550:	
  1140                           
  1141                           ;mainLogic.c: 43:     write_cmd(0x88);
  1142  03B0  3088               	movlw	136
  1143  03B1  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1144  03B6                     l2552:	
  1145                           
  1146                           ;mainLogic.c: 44:     write_char('T');
  1147  03B6  3054               	movlw	84
  1148  03B7  120A  158A  25A9  120A  118A  	fcall	_write_char
  1149  03BC                     l2554:	
  1150                           
  1151                           ;mainLogic.c: 45:     write_char('i');
  1152  03BC  3069               	movlw	105
  1153  03BD  120A  158A  25A9  120A  118A  	fcall	_write_char
  1154  03C2                     l2556:	
  1155                           
  1156                           ;mainLogic.c: 46:     write_char('m');
  1157  03C2  306D               	movlw	109
  1158  03C3  120A  158A  25A9  120A  118A  	fcall	_write_char
  1159  03C8                     l2558:	
  1160                           
  1161                           ;mainLogic.c: 47:     write_char('e');
  1162  03C8  3065               	movlw	101
  1163  03C9  120A  158A  25A9  120A  118A  	fcall	_write_char
  1164  03CE                     l2560:	
  1165                           
  1166                           ;mainLogic.c: 48:     write_char(':');
  1167  03CE  303A               	movlw	58
  1168  03CF  120A  158A  25A9  120A  118A  	fcall	_write_char
  1169  03D4                     l2562:	
  1170                           
  1171                           ;mainLogic.c: 49:     display_clock();
  1172  03D4  120A  118A  2281  120A  118A  	fcall	_display_clock
  1173  03D9                     l2564:	
  1174                           
  1175                           ;mainLogic.c: 50:     thermometer_threshhold_settings();
  1176  03D9  120A  118A  251A  120A  118A  	fcall	_thermometer_threshhold_settings
  1177  03DE                     l2566:	
  1178                           
  1179                           ;mainLogic.c: 51:     date_settings();
  1180  03DE  120A  118A  20FE  120A  118A  	fcall	_date_settings
  1181  03E3                     l2568:	
  1182                           
  1183                           ;mainLogic.c: 52:     time_settings();
  1184  03E3  120A  118A  2173  120A  118A  	fcall	_time_settings
  1185  03E8  2B4E               	goto	l2516
  1186  03E9  120A  118A  2800   	ljmp	start
  1187  03EC                     __end_of_main:	
  1188                           
  1189                           	psect	text1
  1190  0173                     __ptext1:	
  1191 ;; *************** function _time_settings *****************
  1192 ;; Defined at:
  1193 ;;		line 162 in file "Button_src.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    2
  1214 ;; This function calls:
  1215 ;;		_write_char
  1216 ;;		_write_cmd
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _time_settings
  1224  0173                     _time_settings:	
  1225  0173                     l2484:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _time_settings: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1228                           
  1229                           
  1230                           ;Button_src.c: 163:  RC0 = 1;
  1231  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0175  1407               	bsf	7,0	;volatile
  1234                           
  1235                           ;Button_src.c: 164:  RC1 = 1;
  1236  0176  1487               	bsf	7,1	;volatile
  1237                           
  1238                           ;Button_src.c: 165:  RC2 = 0;
  1239  0177  1107               	bcf	7,2	;volatile
  1240                           
  1241                           ;Button_src.c: 166:  RC3 = 1;
  1242  0178  1587               	bsf	7,3	;volatile
  1243                           
  1244                           ;Button_src.c: 168:   if (RC4 == 0){
  1245  0179  1A07               	btfsc	7,4	;volatile
  1246  017A  297C               	goto	u1511
  1247  017B  297D               	goto	u1510
  1248  017C                     u1511:	
  1249  017C  29E7               	goto	l387
  1250  017D                     u1510:	
  1251  017D                     l2486:	
  1252                           
  1253                           ;Button_src.c: 169:       write_cmd(0x1);
  1254  017D  3001               	movlw	1
  1255  017E  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1256  0183                     l384:	
  1257                           ;Button_src.c: 170:       for(;;){
  1258                           
  1259                           
  1260                           ;Button_src.c: 171:             write_cmd(0x80);
  1261  0183  3080               	movlw	128
  1262  0184  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1263                           
  1264                           ;Button_src.c: 172:             write_char('T');
  1265  0189  3054               	movlw	84
  1266  018A  120A  158A  25A9  120A  118A  	fcall	_write_char
  1267                           
  1268                           ;Button_src.c: 173:             write_char('i');
  1269  018F  3069               	movlw	105
  1270  0190  120A  158A  25A9  120A  118A  	fcall	_write_char
  1271                           
  1272                           ;Button_src.c: 174:             write_char('m');
  1273  0195  306D               	movlw	109
  1274  0196  120A  158A  25A9  120A  118A  	fcall	_write_char
  1275                           
  1276                           ;Button_src.c: 175:             write_char('e');
  1277  019B  3065               	movlw	101
  1278  019C  120A  158A  25A9  120A  118A  	fcall	_write_char
  1279                           
  1280                           ;Button_src.c: 176:             write_char('_');
  1281  01A1  305F               	movlw	95
  1282  01A2  120A  158A  25A9  120A  118A  	fcall	_write_char
  1283                           
  1284                           ;Button_src.c: 177:             write_char('S');
  1285  01A7  3053               	movlw	83
  1286  01A8  120A  158A  25A9  120A  118A  	fcall	_write_char
  1287                           
  1288                           ;Button_src.c: 178:             write_char('e');
  1289  01AD  3065               	movlw	101
  1290  01AE  120A  158A  25A9  120A  118A  	fcall	_write_char
  1291                           
  1292                           ;Button_src.c: 179:             write_char('t');
  1293  01B3  3074               	movlw	116
  1294  01B4  120A  158A  25A9  120A  118A  	fcall	_write_char
  1295                           
  1296                           ;Button_src.c: 180:             write_char('t');
  1297  01B9  3074               	movlw	116
  1298  01BA  120A  158A  25A9  120A  118A  	fcall	_write_char
  1299                           
  1300                           ;Button_src.c: 181:             write_char('i');
  1301  01BF  3069               	movlw	105
  1302  01C0  120A  158A  25A9  120A  118A  	fcall	_write_char
  1303                           
  1304                           ;Button_src.c: 182:             write_char('n');
  1305  01C5  306E               	movlw	110
  1306  01C6  120A  158A  25A9  120A  118A  	fcall	_write_char
  1307                           
  1308                           ;Button_src.c: 183:             write_char('g');
  1309  01CB  3067               	movlw	103
  1310  01CC  120A  158A  25A9  120A  118A  	fcall	_write_char
  1311                           
  1312                           ;Button_src.c: 184:             write_char('s');
  1313  01D1  3073               	movlw	115
  1314  01D2  120A  158A  25A9  120A  118A  	fcall	_write_char
  1315  01D7                     l2488:	
  1316                           
  1317                           ;Button_src.c: 185:             RC0 = 0;
  1318  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1319  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1320  01D9  1007               	bcf	7,0	;volatile
  1321  01DA                     l2490:	
  1322                           
  1323                           ;Button_src.c: 186:             RC1 = 1;
  1324  01DA  1487               	bsf	7,1	;volatile
  1325  01DB                     l2492:	
  1326                           
  1327                           ;Button_src.c: 187:             RC2 = 1;
  1328  01DB  1507               	bsf	7,2	;volatile
  1329  01DC                     l2494:	
  1330                           
  1331                           ;Button_src.c: 188:             RC3 = 1;
  1332  01DC  1587               	bsf	7,3	;volatile
  1333  01DD                     l2496:	
  1334                           
  1335                           ;Button_src.c: 189:             if (RC7 == 0 ){
  1336  01DD  1B87               	btfsc	7,7	;volatile
  1337  01DE  29E0               	goto	u1521
  1338  01DF  29E1               	goto	u1520
  1339  01E0                     u1521:	
  1340  01E0  2983               	goto	l384
  1341  01E1                     u1520:	
  1342  01E1                     l2498:	
  1343                           
  1344                           ;Button_src.c: 190:             write_cmd(0x1);
  1345  01E1  3001               	movlw	1
  1346  01E2  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1347  01E7                     l387:	
  1348                           ;Button_src.c: 191:             break;
  1349                           
  1350  01E7  0008               	return
  1351  01E8                     __end_of_time_settings:	
  1352                           
  1353                           	psect	text2
  1354  051A                     __ptext2:	
  1355 ;; *************** function _thermometer_threshhold_settings *****************
  1356 ;; Defined at:
  1357 ;;		line 14 in file "Button_src.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  i               2    6[BANK0 ] int 
  1362 ;;  i               2    4[BANK0 ] int 
  1363 ;;  i               2    2[BANK0 ] int 
  1364 ;;  i               2    0[BANK0 ] int 
  1365 ;;  x               2   14[BANK0 ] int 
  1366 ;;  t               2   12[BANK0 ] int 
  1367 ;;  y               2   10[BANK0 ] int 
  1368 ;;  w               2    8[BANK0 ] int 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         0       0       0       0       0
  1379 ;;      Locals:         0      16       0       0       0
  1380 ;;      Temps:          2       0       0       0       0
  1381 ;;      Totals:         2      16       0       0       0
  1382 ;;Total ram usage:       18 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    2
  1385 ;; This function calls:
  1386 ;;		___awmod
  1387 ;;		_set_beep_threshhold
  1388 ;;		_write_char
  1389 ;;		_write_cmd
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _thermometer_threshhold_settings
  1397  051A                     _thermometer_threshhold_settings:	
  1398  051A                     l2318:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _thermometer_threshhold_settings: [wreg+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  1401                           
  1402                           
  1403                           ;Button_src.c: 15:  RC0 = 1;
  1404  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1405  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1406  051C  1407               	bsf	7,0	;volatile
  1407                           
  1408                           ;Button_src.c: 16:  RC1 = 0;
  1409  051D  1087               	bcf	7,1	;volatile
  1410                           
  1411                           ;Button_src.c: 17:  RC2 = 1;
  1412  051E  1507               	bsf	7,2	;volatile
  1413                           
  1414                           ;Button_src.c: 18:  RC3 = 1;
  1415  051F  1587               	bsf	7,3	;volatile
  1416                           
  1417                           ;Button_src.c: 19:   if (RC4 == 0){
  1418  0520  1A07               	btfsc	7,4	;volatile
  1419  0521  2D23               	goto	u1371
  1420  0522  2D24               	goto	u1370
  1421  0523                     u1371:	
  1422  0523  2FF2               	goto	l370
  1423  0524                     u1370:	
  1424  0524                     l2320:	
  1425                           
  1426                           ;Button_src.c: 20:       write_cmd(0x1);
  1427  0524  3001               	movlw	1
  1428  0525  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1429  052A                     l361:	
  1430                           ;Button_src.c: 21:       for(;;){
  1431                           
  1432                           
  1433                           ;Button_src.c: 22:             write_cmd(0x80);
  1434  052A  3080               	movlw	128
  1435  052B  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1436                           
  1437                           ;Button_src.c: 23:             write_char('t');
  1438  0530  3074               	movlw	116
  1439  0531  120A  158A  25A9  120A  118A  	fcall	_write_char
  1440                           
  1441                           ;Button_src.c: 24:             write_char('h');
  1442  0536  3068               	movlw	104
  1443  0537  120A  158A  25A9  120A  118A  	fcall	_write_char
  1444                           
  1445                           ;Button_src.c: 25:             write_char('r');
  1446  053C  3072               	movlw	114
  1447  053D  120A  158A  25A9  120A  118A  	fcall	_write_char
  1448                           
  1449                           ;Button_src.c: 26:             write_char('e');
  1450  0542  3065               	movlw	101
  1451  0543  120A  158A  25A9  120A  118A  	fcall	_write_char
  1452                           
  1453                           ;Button_src.c: 27:             write_char('s');
  1454  0548  3073               	movlw	115
  1455  0549  120A  158A  25A9  120A  118A  	fcall	_write_char
  1456                           
  1457                           ;Button_src.c: 28:             write_char('h');
  1458  054E  3068               	movlw	104
  1459  054F  120A  158A  25A9  120A  118A  	fcall	_write_char
  1460                           
  1461                           ;Button_src.c: 29:             write_char('o');
  1462  0554  306F               	movlw	111
  1463  0555  120A  158A  25A9  120A  118A  	fcall	_write_char
  1464                           
  1465                           ;Button_src.c: 30:             write_char('l');
  1466  055A  306C               	movlw	108
  1467  055B  120A  158A  25A9  120A  118A  	fcall	_write_char
  1468                           
  1469                           ;Button_src.c: 31:             write_char('d');
  1470  0560  3064               	movlw	100
  1471  0561  120A  158A  25A9  120A  118A  	fcall	_write_char
  1472                           
  1473                           ;Button_src.c: 33:             write_cmd(0x90);
  1474  0566  3090               	movlw	144
  1475  0567  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1476                           
  1477                           ;Button_src.c: 34:             write_char('C');
  1478  056C  3043               	movlw	67
  1479  056D  120A  158A  25A9  120A  118A  	fcall	_write_char
  1480                           
  1481                           ;Button_src.c: 35:             write_char('u');
  1482  0572  3075               	movlw	117
  1483  0573  120A  158A  25A9  120A  118A  	fcall	_write_char
  1484                           
  1485                           ;Button_src.c: 36:             write_char('r');
  1486  0578  3072               	movlw	114
  1487  0579  120A  158A  25A9  120A  118A  	fcall	_write_char
  1488                           
  1489                           ;Button_src.c: 37:             write_char('r');
  1490  057E  3072               	movlw	114
  1491  057F  120A  158A  25A9  120A  118A  	fcall	_write_char
  1492                           
  1493                           ;Button_src.c: 38:             write_char('e');
  1494  0584  3065               	movlw	101
  1495  0585  120A  158A  25A9  120A  118A  	fcall	_write_char
  1496                           
  1497                           ;Button_src.c: 39:             write_char('n');
  1498  058A  306E               	movlw	110
  1499  058B  120A  158A  25A9  120A  118A  	fcall	_write_char
  1500                           
  1501                           ;Button_src.c: 40:             write_char('t');
  1502  0590  3074               	movlw	116
  1503  0591  120A  158A  25A9  120A  118A  	fcall	_write_char
  1504                           
  1505                           ;Button_src.c: 41:             write_char(':');
  1506  0596  303A               	movlw	58
  1507  0597  120A  158A  25A9  120A  118A  	fcall	_write_char
  1508                           
  1509                           ;Button_src.c: 43:             write_char(var1 + '0');
  1510  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1511  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1512  059E  082B               	movf	_var1,w
  1513  059F  3E30               	addlw	48
  1514  05A0  120A  158A  25A9  120A  118A  	fcall	_write_char
  1515                           
  1516                           ;Button_src.c: 44:             write_char(var2 + '0');
  1517  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1518  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1519  05A7  082A               	movf	_var2,w
  1520  05A8  3E30               	addlw	48
  1521  05A9  120A  158A  25A9  120A  118A  	fcall	_write_char
  1522                           
  1523                           ;Button_src.c: 46:             write_cmd(0x88);
  1524  05AE  3088               	movlw	136
  1525  05AF  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1526                           
  1527                           ;Button_src.c: 47:             write_char('S');
  1528  05B4  3053               	movlw	83
  1529  05B5  120A  158A  25A9  120A  118A  	fcall	_write_char
  1530                           
  1531                           ;Button_src.c: 48:             write_char('e');
  1532  05BA  3065               	movlw	101
  1533  05BB  120A  158A  25A9  120A  118A  	fcall	_write_char
  1534                           
  1535                           ;Button_src.c: 49:             write_char('t');
  1536  05C0  3074               	movlw	116
  1537  05C1  120A  158A  25A9  120A  118A  	fcall	_write_char
  1538                           
  1539                           ;Button_src.c: 50:             write_char('_');
  1540  05C6  305F               	movlw	95
  1541  05C7  120A  158A  25A9  120A  118A  	fcall	_write_char
  1542                           
  1543                           ;Button_src.c: 51:             write_char('t');
  1544  05CC  3074               	movlw	116
  1545  05CD  120A  158A  25A9  120A  118A  	fcall	_write_char
  1546                           
  1547                           ;Button_src.c: 52:             write_char('h');
  1548  05D2  3068               	movlw	104
  1549  05D3  120A  158A  25A9  120A  118A  	fcall	_write_char
  1550                           
  1551                           ;Button_src.c: 53:             write_char('r');
  1552  05D8  3072               	movlw	114
  1553  05D9  120A  158A  25A9  120A  118A  	fcall	_write_char
  1554                           
  1555                           ;Button_src.c: 54:             write_char('e');
  1556  05DE  3065               	movlw	101
  1557  05DF  120A  158A  25A9  120A  118A  	fcall	_write_char
  1558                           
  1559                           ;Button_src.c: 55:             write_char('s');
  1560  05E4  3073               	movlw	115
  1561  05E5  120A  158A  25A9  120A  118A  	fcall	_write_char
  1562                           
  1563                           ;Button_src.c: 56:             write_char('h');
  1564  05EA  3068               	movlw	104
  1565  05EB  120A  158A  25A9  120A  118A  	fcall	_write_char
  1566                           
  1567                           ;Button_src.c: 57:             write_char('o');
  1568  05F0  306F               	movlw	111
  1569  05F1  120A  158A  25A9  120A  118A  	fcall	_write_char
  1570                           
  1571                           ;Button_src.c: 58:             write_char('l');
  1572  05F6  306C               	movlw	108
  1573  05F7  120A  158A  25A9  120A  118A  	fcall	_write_char
  1574                           
  1575                           ;Button_src.c: 59:             write_char('d');
  1576  05FC  3064               	movlw	100
  1577  05FD  120A  158A  25A9  120A  118A  	fcall	_write_char
  1578                           
  1579                           ;Button_src.c: 60:             write_char(':');
  1580  0602  303A               	movlw	58
  1581  0603  120A  158A  25A9  120A  118A  	fcall	_write_char
  1582                           
  1583                           ;Button_src.c: 62:             write_cmd(0x98);
  1584  0608  3098               	movlw	152
  1585  0609  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1586  060E                     l2322:	
  1587                           
  1588                           ;Button_src.c: 63:             RC0 = 1;
  1589  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1590  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0610  1407               	bsf	7,0	;volatile
  1592  0611                     l2324:	
  1593                           
  1594                           ;Button_src.c: 64:             RC1 = 0;
  1595  0611  1087               	bcf	7,1	;volatile
  1596  0612                     l2326:	
  1597                           
  1598                           ;Button_src.c: 65:             RC2 = 1;
  1599  0612  1507               	bsf	7,2	;volatile
  1600  0613                     l2328:	
  1601                           
  1602                           ;Button_src.c: 66:             RC3 = 1;
  1603  0613  1587               	bsf	7,3	;volatile
  1604  0614                     l2330:	
  1605                           
  1606                           ;Button_src.c: 67:             int t = 0;
  1607  0614  01C2               	clrf	thermometer_threshhold_settings@t
  1608  0615  01C3               	clrf	thermometer_threshhold_settings@t+1
  1609  0616                     l2332:	
  1610                           
  1611                           ;Button_src.c: 68:             int w = 0;
  1612  0616  01BE               	clrf	thermometer_threshhold_settings@w
  1613  0617  01BF               	clrf	thermometer_threshhold_settings@w+1
  1614  0618                     l2334:	
  1615  0618                     l2336:	
  1616                           
  1617                           ;Button_src.c: 70:             int y = 0;
  1618  0618  01C0               	clrf	thermometer_threshhold_settings@y
  1619  0619  01C1               	clrf	thermometer_threshhold_settings@y+1
  1620  061A                     l2338:	
  1621                           
  1622                           ;Button_src.c: 71:             x = 0x00;
  1623  061A  01C4               	clrf	thermometer_threshhold_settings@x
  1624  061B  01C5               	clrf	thermometer_threshhold_settings@x+1
  1625  061C                     l2340:	
  1626                           
  1627                           ;Button_src.c: 73:                  RC0 = 1;
  1628  061C  1407               	bsf	7,0	;volatile
  1629  061D                     l2342:	
  1630                           
  1631                           ;Button_src.c: 74:                  RC1 = 0;
  1632  061D  1087               	bcf	7,1	;volatile
  1633  061E                     l2344:	
  1634                           
  1635                           ;Button_src.c: 75:                  RC2 = 1;
  1636  061E  1507               	bsf	7,2	;volatile
  1637  061F                     l2346:	
  1638                           
  1639                           ;Button_src.c: 76:                  RC3 = 1;
  1640  061F  1587               	bsf	7,3	;volatile
  1641  0620                     l2348:	
  1642                           
  1643                           ;Button_src.c: 78:                 if(RC7==0){
  1644  0620  1B87               	btfsc	7,7	;volatile
  1645  0621  2E23               	goto	u1381
  1646  0622  2E24               	goto	u1380
  1647  0623                     u1381:	
  1648  0623  2EA4               	goto	l363
  1649  0624                     u1380:	
  1650  0624                     l2350:	
  1651                           
  1652                           ;Button_src.c: 79:                     write_cmd(0x98);
  1653  0624  3098               	movlw	152
  1654  0625  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1655  062A                     l2352:	
  1656                           
  1657                           ;Button_src.c: 80:                     x++;
  1658  062A  3001               	movlw	1
  1659  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1660  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1661  062D  07C4               	addwf	thermometer_threshhold_settings@x,f
  1662  062E  1803               	skipnc
  1663  062F  0AC5               	incf	thermometer_threshhold_settings@x+1,f
  1664  0630  3000               	movlw	0
  1665  0631  07C5               	addwf	thermometer_threshhold_settings@x+1,f
  1666  0632                     l2354:	
  1667                           
  1668                           ;Button_src.c: 81:                     x = (unsigned char )(x % 10);
  1669  0632  300A               	movlw	10
  1670  0633  00F0               	movwf	___awmod@divisor
  1671  0634  3000               	movlw	0
  1672  0635  00F1               	movwf	___awmod@divisor+1
  1673  0636  0845               	movf	thermometer_threshhold_settings@x+1,w
  1674  0637  00F3               	movwf	___awmod@dividend+1
  1675  0638  0844               	movf	thermometer_threshhold_settings@x,w
  1676  0639  00F2               	movwf	___awmod@dividend
  1677  063A  120A  118A  203E  120A  118A  	fcall	___awmod
  1678  063F  0870               	movf	?___awmod,w
  1679  0640  00F7               	movwf	??_thermometer_threshhold_settings
  1680  0641  01F8               	clrf	??_thermometer_threshhold_settings+1
  1681  0642  0877               	movf	??_thermometer_threshhold_settings,w
  1682  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0645  00C4               	movwf	thermometer_threshhold_settings@x
  1685  0646  0878               	movf	??_thermometer_threshhold_settings+1,w
  1686  0647  00C5               	movwf	thermometer_threshhold_settings@x+1
  1687  0648                     l2356:	
  1688                           
  1689                           ;Button_src.c: 82:                     write_char(y + '0');
  1690  0648  0840               	movf	thermometer_threshhold_settings@y,w
  1691  0649  3E30               	addlw	48
  1692  064A  120A  158A  25A9  120A  118A  	fcall	_write_char
  1693  064F                     l2358:	
  1694                           
  1695                           ;Button_src.c: 83:                     write_char(x + '0');
  1696  064F  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0650  1303               	bcf	3,6	;RP1=0, select bank0
  1698  0651  0844               	movf	thermometer_threshhold_settings@x,w
  1699  0652  3E30               	addlw	48
  1700  0653  120A  158A  25A9  120A  118A  	fcall	_write_char
  1701  0658                     l2360:	
  1702                           
  1703                           ;Button_src.c: 84:                     if('9' == (x + '0')){
  1704  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1706  065A  0844               	movf	thermometer_threshhold_settings@x,w
  1707  065B  3E30               	addlw	48
  1708  065C  00F7               	movwf	??_thermometer_threshhold_settings
  1709  065D  0845               	movf	thermometer_threshhold_settings@x+1,w
  1710  065E  1803               	skipnc
  1711  065F  3E01               	addlw	1
  1712  0660  3E00               	addlw	0
  1713  0661  00F8               	movwf	??_thermometer_threshhold_settings+1
  1714  0662  3039               	movlw	57
  1715  0663  0677               	xorwf	??_thermometer_threshhold_settings,w
  1716  0664  0478               	iorwf	??_thermometer_threshhold_settings+1,w
  1717  0665  1D03               	btfss	3,2
  1718  0666  2E68               	goto	u1391
  1719  0667  2E69               	goto	u1390
  1720  0668                     u1391:	
  1721  0668  2E85               	goto	l2366
  1722  0669                     u1390:	
  1723  0669                     l2362:	
  1724                           
  1725                           ;Button_src.c: 85:                         y++;
  1726  0669  3001               	movlw	1
  1727  066A  07C0               	addwf	thermometer_threshhold_settings@y,f
  1728  066B  1803               	skipnc
  1729  066C  0AC1               	incf	thermometer_threshhold_settings@y+1,f
  1730  066D  3000               	movlw	0
  1731  066E  07C1               	addwf	thermometer_threshhold_settings@y+1,f
  1732  066F                     l2364:	
  1733                           
  1734                           ;Button_src.c: 86:                         y = (unsigned char )(y % 10);
  1735  066F  300A               	movlw	10
  1736  0670  00F0               	movwf	___awmod@divisor
  1737  0671  3000               	movlw	0
  1738  0672  00F1               	movwf	___awmod@divisor+1
  1739  0673  0841               	movf	thermometer_threshhold_settings@y+1,w
  1740  0674  00F3               	movwf	___awmod@dividend+1
  1741  0675  0840               	movf	thermometer_threshhold_settings@y,w
  1742  0676  00F2               	movwf	___awmod@dividend
  1743  0677  120A  118A  203E  120A  118A  	fcall	___awmod
  1744  067C  0870               	movf	?___awmod,w
  1745  067D  00F7               	movwf	??_thermometer_threshhold_settings
  1746  067E  01F8               	clrf	??_thermometer_threshhold_settings+1
  1747  067F  0877               	movf	??_thermometer_threshhold_settings,w
  1748  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0682  00C0               	movwf	thermometer_threshhold_settings@y
  1751  0683  0878               	movf	??_thermometer_threshhold_settings+1,w
  1752  0684  00C1               	movwf	thermometer_threshhold_settings@y+1
  1753  0685                     l2366:	
  1754                           
  1755                           ;Button_src.c: 88:                     t = x;
  1756  0685  0845               	movf	thermometer_threshhold_settings@x+1,w
  1757  0686  00C3               	movwf	thermometer_threshhold_settings@t+1
  1758  0687  0844               	movf	thermometer_threshhold_settings@x,w
  1759  0688  00C2               	movwf	thermometer_threshhold_settings@t
  1760  0689                     l2368:	
  1761                           
  1762                           ;Button_src.c: 89:                     w = y;
  1763  0689  0841               	movf	thermometer_threshhold_settings@y+1,w
  1764  068A  00BF               	movwf	thermometer_threshhold_settings@w+1
  1765  068B  0840               	movf	thermometer_threshhold_settings@y,w
  1766  068C  00BE               	movwf	thermometer_threshhold_settings@w
  1767  068D                     l2370:	
  1768                           
  1769                           ;Button_src.c: 90:                     for(int i=0;i<10000;i++);
  1770  068D  01B6               	clrf	thermometer_threshhold_settings@i
  1771  068E  01B7               	clrf	thermometer_threshhold_settings@i+1
  1772  068F                     l2376:	
  1773  068F  3001               	movlw	1
  1774  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0692  07B6               	addwf	thermometer_threshhold_settings@i,f
  1777  0693  1803               	skipnc
  1778  0694  0AB7               	incf	thermometer_threshhold_settings@i+1,f
  1779  0695  3000               	movlw	0
  1780  0696  07B7               	addwf	thermometer_threshhold_settings@i+1,f
  1781  0697                     l2378:	
  1782  0697  0837               	movf	thermometer_threshhold_settings@i+1,w
  1783  0698  3A80               	xorlw	128
  1784  0699  00FF               	movwf	btemp+1
  1785  069A  30A7               	movlw	167
  1786  069B  027F               	subwf	btemp+1,w
  1787  069C  1D03               	skipz
  1788  069D  2EA0               	goto	u1405
  1789  069E  3010               	movlw	16
  1790  069F  0236               	subwf	thermometer_threshhold_settings@i,w
  1791  06A0                     u1405:	
  1792  06A0  1C03               	skipc
  1793  06A1  2EA3               	goto	u1401
  1794  06A2  2EA4               	goto	u1400
  1795  06A3                     u1401:	
  1796  06A3  2E8F               	goto	l2376
  1797  06A4                     u1400:	
  1798  06A4                     l363:	
  1799                           ;Button_src.c: 91:                 }
  1800                           
  1801                           
  1802                           ;Button_src.c: 92:                   RC0 = 0;
  1803  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1804  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1805  06A6  1007               	bcf	7,0	;volatile
  1806                           
  1807                           ;Button_src.c: 93:                     RC1 = 1;
  1808  06A7  1487               	bsf	7,1	;volatile
  1809                           
  1810                           ;Button_src.c: 94:                     RC2 = 1;
  1811  06A8  1507               	bsf	7,2	;volatile
  1812                           
  1813                           ;Button_src.c: 95:                     RC3 = 1;
  1814  06A9  1587               	bsf	7,3	;volatile
  1815                           
  1816                           ;Button_src.c: 96:                     if(RC6 == 0){
  1817  06AA  1B07               	btfsc	7,6	;volatile
  1818  06AB  2EAD               	goto	u1411
  1819  06AC  2EAE               	goto	u1410
  1820  06AD                     u1411:	
  1821  06AD  2EFE               	goto	l367
  1822  06AE                     u1410:	
  1823  06AE                     l2380:	
  1824                           
  1825                           ;Button_src.c: 99:                         var1 = y;
  1826  06AE  0840               	movf	thermometer_threshhold_settings@y,w
  1827  06AF  00F7               	movwf	??_thermometer_threshhold_settings
  1828  06B0  0877               	movf	??_thermometer_threshhold_settings,w
  1829  06B1  00AB               	movwf	_var1
  1830                           
  1831                           ;Button_src.c: 100:                         var2 = x;
  1832  06B2  0844               	movf	thermometer_threshhold_settings@x,w
  1833  06B3  00F7               	movwf	??_thermometer_threshhold_settings
  1834  06B4  0877               	movf	??_thermometer_threshhold_settings,w
  1835  06B5  00AA               	movwf	_var2
  1836  06B6                     l2382:	
  1837                           
  1838                           ;Button_src.c: 101:                         set_beep_threshhold(var1,var2);
  1839  06B6  082A               	movf	_var2,w
  1840  06B7  00F7               	movwf	??_thermometer_threshhold_settings
  1841  06B8  0877               	movf	??_thermometer_threshhold_settings,w
  1842  06B9  00F0               	movwf	set_beep_threshhold@y
  1843  06BA  082B               	movf	_var1,w
  1844  06BB  120A  158A  25DB  120A  118A  	fcall	_set_beep_threshhold
  1845  06C0                     l2384:	
  1846                           
  1847                           ;Button_src.c: 102:                         write_cmd(0x1);
  1848  06C0  3001               	movlw	1
  1849  06C1  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1850  06C6                     l2386:	
  1851                           
  1852                           ;Button_src.c: 104:                         write_char('S');
  1853  06C6  3053               	movlw	83
  1854  06C7  120A  158A  25A9  120A  118A  	fcall	_write_char
  1855  06CC                     l2388:	
  1856                           
  1857                           ;Button_src.c: 105:                         write_char('A');
  1858  06CC  3041               	movlw	65
  1859  06CD  120A  158A  25A9  120A  118A  	fcall	_write_char
  1860  06D2                     l2390:	
  1861                           
  1862                           ;Button_src.c: 106:                         write_char('V');
  1863  06D2  3056               	movlw	86
  1864  06D3  120A  158A  25A9  120A  118A  	fcall	_write_char
  1865  06D8                     l2392:	
  1866                           
  1867                           ;Button_src.c: 107:                         write_char('E');
  1868  06D8  3045               	movlw	69
  1869  06D9  120A  158A  25A9  120A  118A  	fcall	_write_char
  1870  06DE                     l2394:	
  1871                           
  1872                           ;Button_src.c: 108:                         write_char('D');
  1873  06DE  3044               	movlw	68
  1874  06DF  120A  158A  25A9  120A  118A  	fcall	_write_char
  1875  06E4                     l2396:	
  1876                           
  1877                           ;Button_src.c: 109:                         for(int i=0;i<30000;i++);
  1878  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1879  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1880  06E6  01B8               	clrf	thermometer_threshhold_settings@i_278
  1881  06E7  01B9               	clrf	thermometer_threshhold_settings@i_278+1
  1882  06E8                     l2402:	
  1883  06E8  3001               	movlw	1
  1884  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1885  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1886  06EB  07B8               	addwf	thermometer_threshhold_settings@i_278,f
  1887  06EC  1803               	skipnc
  1888  06ED  0AB9               	incf	thermometer_threshhold_settings@i_278+1,f
  1889  06EE  3000               	movlw	0
  1890  06EF  07B9               	addwf	thermometer_threshhold_settings@i_278+1,f
  1891  06F0                     l2404:	
  1892  06F0  0839               	movf	thermometer_threshhold_settings@i_278+1,w
  1893  06F1  3A80               	xorlw	128
  1894  06F2  00FF               	movwf	btemp+1
  1895  06F3  30F5               	movlw	245
  1896  06F4  027F               	subwf	btemp+1,w
  1897  06F5  1D03               	skipz
  1898  06F6  2EF9               	goto	u1425
  1899  06F7  3030               	movlw	48
  1900  06F8  0238               	subwf	thermometer_threshhold_settings@i_278,w
  1901  06F9                     u1425:	
  1902  06F9  1C03               	skipc
  1903  06FA  2EFC               	goto	u1421
  1904  06FB  2EFD               	goto	u1420
  1905  06FC                     u1421:	
  1906  06FC  2EE8               	goto	l2402
  1907  06FD                     u1420:	
  1908  06FD  2FF2               	goto	l370
  1909  06FE                     l367:	
  1910                           ;Button_src.c: 111:                     }
  1911                           
  1912                           
  1913                           ;Button_src.c: 112:                  RC0 = 1;
  1914  06FE  1407               	bsf	7,0	;volatile
  1915                           
  1916                           ;Button_src.c: 113:                  RC1 = 1;
  1917  06FF  1487               	bsf	7,1	;volatile
  1918                           
  1919                           ;Button_src.c: 114:                  RC2 = 0;
  1920  0700  1107               	bcf	7,2	;volatile
  1921                           
  1922                           ;Button_src.c: 115:                  RC3 = 1;
  1923  0701  1587               	bsf	7,3	;volatile
  1924                           
  1925                           ;Button_src.c: 117:                  if(RC7 == 0){
  1926  0702  1B87               	btfsc	7,7	;volatile
  1927  0703  2F05               	goto	u1431
  1928  0704  2F06               	goto	u1430
  1929  0705                     u1431:	
  1930  0705  2F8A               	goto	l371
  1931  0706                     u1430:	
  1932  0706                     l2406:	
  1933                           
  1934                           ;Button_src.c: 118:                     write_cmd(0x98);
  1935  0706  3098               	movlw	152
  1936  0707  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  1937  070C                     l2408:	
  1938                           
  1939                           ;Button_src.c: 119:                     t--;
  1940  070C  30FF               	movlw	255
  1941  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1942  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1943  070F  07C2               	addwf	thermometer_threshhold_settings@t,f
  1944  0710  1803               	skipnc
  1945  0711  0AC3               	incf	thermometer_threshhold_settings@t+1,f
  1946  0712  30FF               	movlw	255
  1947  0713  07C3               	addwf	thermometer_threshhold_settings@t+1,f
  1948  0714                     l2410:	
  1949                           
  1950                           ;Button_src.c: 120:                     t = (unsigned char)(t % 10);
  1951  0714  300A               	movlw	10
  1952  0715  00F0               	movwf	___awmod@divisor
  1953  0716  3000               	movlw	0
  1954  0717  00F1               	movwf	___awmod@divisor+1
  1955  0718  0843               	movf	thermometer_threshhold_settings@t+1,w
  1956  0719  00F3               	movwf	___awmod@dividend+1
  1957  071A  0842               	movf	thermometer_threshhold_settings@t,w
  1958  071B  00F2               	movwf	___awmod@dividend
  1959  071C  120A  118A  203E  120A  118A  	fcall	___awmod
  1960  0721  0870               	movf	?___awmod,w
  1961  0722  00F7               	movwf	??_thermometer_threshhold_settings
  1962  0723  01F8               	clrf	??_thermometer_threshhold_settings+1
  1963  0724  0877               	movf	??_thermometer_threshhold_settings,w
  1964  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0727  00C2               	movwf	thermometer_threshhold_settings@t
  1967  0728  0878               	movf	??_thermometer_threshhold_settings+1,w
  1968  0729  00C3               	movwf	thermometer_threshhold_settings@t+1
  1969  072A                     l2412:	
  1970                           
  1971                           ;Button_src.c: 121:                     write_char(w + '0');
  1972  072A  083E               	movf	thermometer_threshhold_settings@w,w
  1973  072B  3E30               	addlw	48
  1974  072C  120A  158A  25A9  120A  118A  	fcall	_write_char
  1975  0731                     l2414:	
  1976                           
  1977                           ;Button_src.c: 122:                     write_char(t + '0');
  1978  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0733  0842               	movf	thermometer_threshhold_settings@t,w
  1981  0734  3E30               	addlw	48
  1982  0735  120A  158A  25A9  120A  118A  	fcall	_write_char
  1983  073A                     l2416:	
  1984                           
  1985                           ;Button_src.c: 123:                     if('0' == (t + '0')){
  1986  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1987  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1988  073C  0842               	movf	thermometer_threshhold_settings@t,w
  1989  073D  3E30               	addlw	48
  1990  073E  00F7               	movwf	??_thermometer_threshhold_settings
  1991  073F  0843               	movf	thermometer_threshhold_settings@t+1,w
  1992  0740  1803               	skipnc
  1993  0741  3E01               	addlw	1
  1994  0742  3E00               	addlw	0
  1995  0743  00F8               	movwf	??_thermometer_threshhold_settings+1
  1996  0744  3030               	movlw	48
  1997  0745  0677               	xorwf	??_thermometer_threshhold_settings,w
  1998  0746  0478               	iorwf	??_thermometer_threshhold_settings+1,w
  1999  0747  1D03               	btfss	3,2
  2000  0748  2F4A               	goto	u1441
  2001  0749  2F4B               	goto	u1440
  2002  074A                     u1441:	
  2003  074A  2F6B               	goto	l2424
  2004  074B                     u1440:	
  2005  074B                     l2418:	
  2006                           
  2007                           ;Button_src.c: 124:                         w--;
  2008  074B  30FF               	movlw	255
  2009  074C  07BE               	addwf	thermometer_threshhold_settings@w,f
  2010  074D  1803               	skipnc
  2011  074E  0ABF               	incf	thermometer_threshhold_settings@w+1,f
  2012  074F  30FF               	movlw	255
  2013  0750  07BF               	addwf	thermometer_threshhold_settings@w+1,f
  2014  0751                     l2420:	
  2015                           
  2016                           ;Button_src.c: 125:                         w = (unsigned char)(w % 10);
  2017  0751  300A               	movlw	10
  2018  0752  00F0               	movwf	___awmod@divisor
  2019  0753  3000               	movlw	0
  2020  0754  00F1               	movwf	___awmod@divisor+1
  2021  0755  083F               	movf	thermometer_threshhold_settings@w+1,w
  2022  0756  00F3               	movwf	___awmod@dividend+1
  2023  0757  083E               	movf	thermometer_threshhold_settings@w,w
  2024  0758  00F2               	movwf	___awmod@dividend
  2025  0759  120A  118A  203E  120A  118A  	fcall	___awmod
  2026  075E  0870               	movf	?___awmod,w
  2027  075F  00F7               	movwf	??_thermometer_threshhold_settings
  2028  0760  01F8               	clrf	??_thermometer_threshhold_settings+1
  2029  0761  0877               	movf	??_thermometer_threshhold_settings,w
  2030  0762  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0763  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0764  00BE               	movwf	thermometer_threshhold_settings@w
  2033  0765  0878               	movf	??_thermometer_threshhold_settings+1,w
  2034  0766  00BF               	movwf	thermometer_threshhold_settings@w+1
  2035  0767                     l2422:	
  2036                           
  2037                           ;Button_src.c: 126:                         t = 10;
  2038  0767  300A               	movlw	10
  2039  0768  00C2               	movwf	thermometer_threshhold_settings@t
  2040  0769  3000               	movlw	0
  2041  076A  00C3               	movwf	thermometer_threshhold_settings@t+1
  2042  076B                     l2424:	
  2043                           
  2044                           ;Button_src.c: 128:                     x = t;
  2045  076B  0843               	movf	thermometer_threshhold_settings@t+1,w
  2046  076C  00C5               	movwf	thermometer_threshhold_settings@x+1
  2047  076D  0842               	movf	thermometer_threshhold_settings@t,w
  2048  076E  00C4               	movwf	thermometer_threshhold_settings@x
  2049  076F                     l2426:	
  2050                           
  2051                           ;Button_src.c: 129:                     y = w;
  2052  076F  083F               	movf	thermometer_threshhold_settings@w+1,w
  2053  0770  00C1               	movwf	thermometer_threshhold_settings@y+1
  2054  0771  083E               	movf	thermometer_threshhold_settings@w,w
  2055  0772  00C0               	movwf	thermometer_threshhold_settings@y
  2056  0773                     l2428:	
  2057                           
  2058                           ;Button_src.c: 130:                     for(int i=0;i<10000;i++);
  2059  0773  01BA               	clrf	thermometer_threshhold_settings@i_279
  2060  0774  01BB               	clrf	thermometer_threshhold_settings@i_279+1
  2061  0775                     l2434:	
  2062  0775  3001               	movlw	1
  2063  0776  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0777  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0778  07BA               	addwf	thermometer_threshhold_settings@i_279,f
  2066  0779  1803               	skipnc
  2067  077A  0ABB               	incf	thermometer_threshhold_settings@i_279+1,f
  2068  077B  3000               	movlw	0
  2069  077C  07BB               	addwf	thermometer_threshhold_settings@i_279+1,f
  2070  077D                     l2436:	
  2071  077D  083B               	movf	thermometer_threshhold_settings@i_279+1,w
  2072  077E  3A80               	xorlw	128
  2073  077F  00FF               	movwf	btemp+1
  2074  0780  30A7               	movlw	167
  2075  0781  027F               	subwf	btemp+1,w
  2076  0782  1D03               	skipz
  2077  0783  2F86               	goto	u1455
  2078  0784  3010               	movlw	16
  2079  0785  023A               	subwf	thermometer_threshhold_settings@i_279,w
  2080  0786                     u1455:	
  2081  0786  1C03               	skipc
  2082  0787  2F89               	goto	u1451
  2083  0788  2F8A               	goto	u1450
  2084  0789                     u1451:	
  2085  0789  2F75               	goto	l2434
  2086  078A                     u1450:	
  2087  078A                     l371:	
  2088                           ;Button_src.c: 131:                  }
  2089                           
  2090                           
  2091                           ;Button_src.c: 132:                 RC0 = 0;
  2092  078A  1283               	bcf	3,5	;RP0=0, select bank0
  2093  078B  1303               	bcf	3,6	;RP1=0, select bank0
  2094  078C  1007               	bcf	7,0	;volatile
  2095                           
  2096                           ;Button_src.c: 133:                 RC1 = 1;
  2097  078D  1487               	bsf	7,1	;volatile
  2098                           
  2099                           ;Button_src.c: 134:                 RC2 = 1;
  2100  078E  1507               	bsf	7,2	;volatile
  2101                           
  2102                           ;Button_src.c: 135:                 RC3 = 1;
  2103  078F  1587               	bsf	7,3	;volatile
  2104                           
  2105                           ;Button_src.c: 136:                     if(RC6 == 0){
  2106  0790  1B07               	btfsc	7,6	;volatile
  2107  0791  2F93               	goto	u1461
  2108  0792  2F94               	goto	u1460
  2109  0793                     u1461:	
  2110  0793  2FE4               	goto	l375
  2111  0794                     u1460:	
  2112  0794                     l2438:	
  2113                           
  2114                           ;Button_src.c: 137:                         var1 = w;
  2115  0794  083E               	movf	thermometer_threshhold_settings@w,w
  2116  0795  00F7               	movwf	??_thermometer_threshhold_settings
  2117  0796  0877               	movf	??_thermometer_threshhold_settings,w
  2118  0797  00AB               	movwf	_var1
  2119                           
  2120                           ;Button_src.c: 138:                         var2 = t;
  2121  0798  0842               	movf	thermometer_threshhold_settings@t,w
  2122  0799  00F7               	movwf	??_thermometer_threshhold_settings
  2123  079A  0877               	movf	??_thermometer_threshhold_settings,w
  2124  079B  00AA               	movwf	_var2
  2125  079C                     l2440:	
  2126                           
  2127                           ;Button_src.c: 139:                         set_beep_threshhold(var1,var2);
  2128  079C  082A               	movf	_var2,w
  2129  079D  00F7               	movwf	??_thermometer_threshhold_settings
  2130  079E  0877               	movf	??_thermometer_threshhold_settings,w
  2131  079F  00F0               	movwf	set_beep_threshhold@y
  2132  07A0  082B               	movf	_var1,w
  2133  07A1  120A  158A  25DB  120A  118A  	fcall	_set_beep_threshhold
  2134  07A6                     l2442:	
  2135                           
  2136                           ;Button_src.c: 140:                         write_cmd(0x1);
  2137  07A6  3001               	movlw	1
  2138  07A7  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  2139  07AC                     l2444:	
  2140                           
  2141                           ;Button_src.c: 141:                         write_char('S');
  2142  07AC  3053               	movlw	83
  2143  07AD  120A  158A  25A9  120A  118A  	fcall	_write_char
  2144  07B2                     l2446:	
  2145                           
  2146                           ;Button_src.c: 142:                         write_char('A');
  2147  07B2  3041               	movlw	65
  2148  07B3  120A  158A  25A9  120A  118A  	fcall	_write_char
  2149  07B8                     l2448:	
  2150                           
  2151                           ;Button_src.c: 143:                         write_char('V');
  2152  07B8  3056               	movlw	86
  2153  07B9  120A  158A  25A9  120A  118A  	fcall	_write_char
  2154  07BE                     l2450:	
  2155                           
  2156                           ;Button_src.c: 144:                         write_char('E');
  2157  07BE  3045               	movlw	69
  2158  07BF  120A  158A  25A9  120A  118A  	fcall	_write_char
  2159  07C4                     l2452:	
  2160                           
  2161                           ;Button_src.c: 145:                         write_char('D');
  2162  07C4  3044               	movlw	68
  2163  07C5  120A  158A  25A9  120A  118A  	fcall	_write_char
  2164  07CA                     l2454:	
  2165                           
  2166                           ;Button_src.c: 146:                         for(int i=0;i<10000;i++);
  2167  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  2168  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  2169  07CC  01BC               	clrf	thermometer_threshhold_settings@i_280
  2170  07CD  01BD               	clrf	thermometer_threshhold_settings@i_280+1
  2171  07CE                     l2460:	
  2172  07CE  3001               	movlw	1
  2173  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  2174  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  2175  07D1  07BC               	addwf	thermometer_threshhold_settings@i_280,f
  2176  07D2  1803               	skipnc
  2177  07D3  0ABD               	incf	thermometer_threshhold_settings@i_280+1,f
  2178  07D4  3000               	movlw	0
  2179  07D5  07BD               	addwf	thermometer_threshhold_settings@i_280+1,f
  2180  07D6                     l2462:	
  2181  07D6  083D               	movf	thermometer_threshhold_settings@i_280+1,w
  2182  07D7  3A80               	xorlw	128
  2183  07D8  00FF               	movwf	btemp+1
  2184  07D9  30A7               	movlw	167
  2185  07DA  027F               	subwf	btemp+1,w
  2186  07DB  1D03               	skipz
  2187  07DC  2FDF               	goto	u1475
  2188  07DD  3010               	movlw	16
  2189  07DE  023C               	subwf	thermometer_threshhold_settings@i_280,w
  2190  07DF                     u1475:	
  2191  07DF  1C03               	skipc
  2192  07E0  2FE2               	goto	u1471
  2193  07E1  2FE3               	goto	u1470
  2194  07E2                     u1471:	
  2195  07E2  2FCE               	goto	l2460
  2196  07E3                     u1470:	
  2197  07E3  2FF2               	goto	l370
  2198  07E4                     l375:	
  2199                           ;Button_src.c: 148:                     }
  2200                           
  2201                           
  2202                           ;Button_src.c: 149:             RC0 = 0;
  2203  07E4  1007               	bcf	7,0	;volatile
  2204                           
  2205                           ;Button_src.c: 150:             RC1 = 1;
  2206  07E5  1487               	bsf	7,1	;volatile
  2207                           
  2208                           ;Button_src.c: 151:             RC2 = 1;
  2209  07E6  1507               	bsf	7,2	;volatile
  2210                           
  2211                           ;Button_src.c: 152:             RC3 = 1;
  2212  07E7  1587               	bsf	7,3	;volatile
  2213                           
  2214                           ;Button_src.c: 153:             if (RC7 == 0 ){
  2215  07E8  1B87               	btfsc	7,7	;volatile
  2216  07E9  2FEB               	goto	u1481
  2217  07EA  2FEC               	goto	u1480
  2218  07EB                     u1481:	
  2219  07EB  2E1C               	goto	l2340
  2220  07EC                     u1480:	
  2221  07EC                     l2464:	
  2222                           
  2223                           ;Button_src.c: 154:             write_cmd(0x1);
  2224  07EC  3001               	movlw	1
  2225  07ED  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  2226  07F2                     l370:	
  2227  07F2  0008               	return
  2228  07F3                     __end_of_thermometer_threshhold_settings:	
  2229                           
  2230                           	psect	text3
  2231  0DDB                     __ptext3:	
  2232 ;; *************** function _set_beep_threshhold *****************
  2233 ;; Defined at:
  2234 ;;		line 5 in file "buzzer_src.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  x               1    wreg     unsigned char 
  2237 ;;  y               1    0[COMMON] unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  x               1    3[COMMON] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         1       0       0       0       0
  2250 ;;      Locals:         1       0       0       0       0
  2251 ;;      Temps:          2       0       0       0       0
  2252 ;;      Totals:         4       0       0       0       0
  2253 ;;Total ram usage:        4 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_thermometer_threshhold_settings
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _set_beep_threshhold
  2264  0DDB                     _set_beep_threshhold:	
  2265                           
  2266                           ;incstack = 0
  2267                           ; Regs used in _set_beep_threshhold: [wreg]
  2268                           ;set_beep_threshhold@x stored from wreg
  2269  0DDB  00F3               	movwf	set_beep_threshhold@x
  2270  0DDC                     l1992:	
  2271                           
  2272                           ;buzzer_src.c: 6:     if (shi + '0' == x && ge + '0' == y){
  2273  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0DDE  0831               	movf	_shi,w
  2276  0DDF  3E30               	addlw	48
  2277  0DE0  00F1               	movwf	??_set_beep_threshhold
  2278  0DE1  3000               	movlw	0
  2279  0DE2  1803               	skipnc
  2280  0DE3  3001               	movlw	1
  2281  0DE4  00F2               	movwf	??_set_beep_threshhold+1
  2282  0DE5  0873               	movf	set_beep_threshhold@x,w
  2283  0DE6  0671               	xorwf	??_set_beep_threshhold,w
  2284  0DE7  0472               	iorwf	??_set_beep_threshhold+1,w
  2285  0DE8  1D03               	skipz
  2286  0DE9  2DEB               	goto	u921
  2287  0DEA  2DEC               	goto	u920
  2288  0DEB                     u921:	
  2289  0DEB  2DFC               	goto	l298
  2290  0DEC                     u920:	
  2291  0DEC                     l1994:	
  2292  0DEC  0830               	movf	_ge,w
  2293  0DED  3E30               	addlw	48
  2294  0DEE  00F1               	movwf	??_set_beep_threshhold
  2295  0DEF  3000               	movlw	0
  2296  0DF0  1803               	skipnc
  2297  0DF1  3001               	movlw	1
  2298  0DF2  00F2               	movwf	??_set_beep_threshhold+1
  2299  0DF3  0870               	movf	set_beep_threshhold@y,w
  2300  0DF4  0671               	xorwf	??_set_beep_threshhold,w
  2301  0DF5  0472               	iorwf	??_set_beep_threshhold+1,w
  2302  0DF6  1D03               	skipz
  2303  0DF7  2DF9               	goto	u931
  2304  0DF8  2DFA               	goto	u930
  2305  0DF9                     u931:	
  2306  0DF9  2DFC               	goto	l298
  2307  0DFA                     u930:	
  2308  0DFA                     l1996:	
  2309                           
  2310                           ;buzzer_src.c: 7:         RE1 = 1;
  2311  0DFA  1489               	bsf	9,1	;volatile
  2312                           
  2313                           ;buzzer_src.c: 8:         return;
  2314  0DFB  2DFD               	goto	l299
  2315  0DFC                     l298:	
  2316                           ;buzzer_src.c: 10:     else{
  2317                           
  2318                           
  2319                           ;buzzer_src.c: 11:         RE1 = 0;
  2320  0DFC  1089               	bcf	9,1	;volatile
  2321  0DFD                     l299:	
  2322  0DFD  0008               	return
  2323  0DFE                     __end_of_set_beep_threshhold:	
  2324                           
  2325                           	psect	text4
  2326  0EAA                     __ptext4:	
  2327 ;; *************** function _set_time *****************
  2328 ;; Defined at:
  2329 ;;		line 15 in file "clock_src.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  i               2    5[COMMON] int 
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         2       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0
  2346 ;;      Totals:         2       0       0       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used:    1
  2349 ;; Hardware stack levels required when called:    1
  2350 ;; This function calls:
  2351 ;;		_time_write_1
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function _set_time
  2359  0EAA                     _set_time:	
  2360  0EAA                     l2130:	
  2361                           ;incstack = 0
  2362                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2363                           
  2364                           
  2365                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  2366  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0EAC  1686               	bsf	6,5	;volatile
  2369  0EAD                     l2132:	
  2370                           
  2371                           ;clock_src.c: 19:    time_write_1(0xbe);
  2372  0EAD  30BE               	movlw	190
  2373  0EAE  120A  158A  2651  120A  158A  	fcall	_time_write_1
  2374  0EB3                     l2134:	
  2375                           
  2376                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  2377  0EB3  01F5               	clrf	set_time@i
  2378  0EB4  01F6               	clrf	set_time@i+1
  2379  0EB5                     l2140:	
  2380                           
  2381                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  2382  0EB5  0875               	movf	set_time@i,w
  2383  0EB6  3E01               	addlw	low ((_table-__stringbase)| (0+32768))
  2384  0EB7  0084               	movwf	4
  2385  0EB8  120A  158A  2000  120A  158A  	fcall	stringdir
  2386  0EBD  120A  158A  2651  120A  158A  	fcall	_time_write_1
  2387  0EC2                     l2142:	
  2388                           
  2389                           ;clock_src.c: 23:      }
  2390  0EC2  3001               	movlw	1
  2391  0EC3  07F5               	addwf	set_time@i,f
  2392  0EC4  1803               	skipnc
  2393  0EC5  0AF6               	incf	set_time@i+1,f
  2394  0EC6  3000               	movlw	0
  2395  0EC7  07F6               	addwf	set_time@i+1,f
  2396  0EC8                     l2144:	
  2397  0EC8  0876               	movf	set_time@i+1,w
  2398  0EC9  3A80               	xorlw	128
  2399  0ECA  00FF               	movwf	btemp+1
  2400  0ECB  3080               	movlw	128
  2401  0ECC  027F               	subwf	btemp+1,w
  2402  0ECD  1D03               	skipz
  2403  0ECE  2ED1               	goto	u1265
  2404  0ECF  3008               	movlw	8
  2405  0ED0  0275               	subwf	set_time@i,w
  2406  0ED1                     u1265:	
  2407  0ED1  1C03               	skipc
  2408  0ED2  2ED4               	goto	u1261
  2409  0ED3  2ED5               	goto	u1260
  2410  0ED4                     u1261:	
  2411  0ED4  2EB5               	goto	l2140
  2412  0ED5                     u1260:	
  2413  0ED5                     l235:	
  2414                           
  2415                           ;clock_src.c: 24:    RB5=0;
  2416  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0ED7  1286               	bcf	6,5	;volatile
  2419  0ED8                     l236:	
  2420  0ED8  0008               	return
  2421  0ED9                     __end_of_set_time:	
  2422                           
  2423                           	psect	text5
  2424  0DFE                     __ptext5:	
  2425 ;; *************** function _lcd_init *****************
  2426 ;; Defined at:
  2427 ;;		line 14 in file "LCD_src.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  i               2    0        int 
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; Hardware stack levels required when called:    2
  2448 ;; This function calls:
  2449 ;;		_delay_screen
  2450 ;;		_write_cmd
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _lcd_init
  2458  0DFE                     _lcd_init:	
  2459  0DFE                     l2152:	
  2460                           ;incstack = 0
  2461                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2462                           
  2463                           
  2464                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  2465  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  2466  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  2467  0E00  0185               	clrf	5	;volatile
  2468  0E01                     l2154:	
  2469                           
  2470                           ;LCD_src.c: 18:  RA0=0;
  2471  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  2473  0E03  1005               	bcf	5,0	;volatile
  2474  0E04                     l2156:	
  2475                           
  2476                           ;LCD_src.c: 19:  delay_screen();
  2477  0E04  120A  158A  257D  120A  158A  	fcall	_delay_screen
  2478  0E09                     l2158:	
  2479                           
  2480                           ;LCD_src.c: 20:  RA0=1;
  2481  0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0E0B  1405               	bsf	5,0	;volatile
  2484  0E0C                     l2160:	
  2485                           
  2486                           ;LCD_src.c: 21:  RA2=1;
  2487  0E0C  1505               	bsf	5,2	;volatile
  2488  0E0D                     l2162:	
  2489                           
  2490                           ;LCD_src.c: 22:  write_cmd(0x30);
  2491  0E0D  3030               	movlw	48
  2492  0E0E  120A  158A  25C2  120A  158A  	fcall	_write_cmd
  2493  0E13                     l2164:	
  2494                           
  2495                           ;LCD_src.c: 23:  write_cmd(0x01);
  2496  0E13  3001               	movlw	1
  2497  0E14  120A  158A  25C2  120A  158A  	fcall	_write_cmd
  2498  0E19                     l2166:	
  2499                           
  2500                           ;LCD_src.c: 24:  write_cmd(0x06);
  2501  0E19  3006               	movlw	6
  2502  0E1A  120A  158A  25C2  120A  158A  	fcall	_write_cmd
  2503  0E1F                     l2168:	
  2504                           
  2505                           ;LCD_src.c: 25:  write_cmd(0x0c);
  2506  0E1F  300C               	movlw	12
  2507  0E20  120A  158A  25C2  120A  158A  	fcall	_write_cmd
  2508  0E25                     l102:	
  2509  0E25  0008               	return
  2510  0E26                     __end_of_lcd_init:	
  2511                           
  2512                           	psect	text6
  2513  0D3E                     __ptext6:	
  2514 ;; *************** function _initialise_buttons *****************
  2515 ;; Defined at:
  2516 ;;		line 9 in file "Button_src.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2530 ;;      Params:         0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0
  2533 ;;      Totals:         0       0       0       0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _initialise_buttons
  2545  0D3E                     _initialise_buttons:	
  2546  0D3E                     l1376:	
  2547                           ;incstack = 0
  2548                           ; Regs used in _initialise_buttons: [wreg]
  2549                           
  2550                           
  2551                           ;Button_src.c: 10:     ADCON1 = 0x06;
  2552  0D3E  3006               	movlw	6
  2553  0D3F  1683               	bsf	3,5	;RP0=1, select bank1
  2554  0D40  1303               	bcf	3,6	;RP1=0, select bank1
  2555  0D41  009F               	movwf	31	;volatile
  2556                           
  2557                           ;Button_src.c: 11:     TRISC = 0xf0;
  2558  0D42  30F0               	movlw	240
  2559  0D43  0087               	movwf	7	;volatile
  2560  0D44                     l357:	
  2561  0D44  0008               	return
  2562  0D45                     __end_of_initialise_buttons:	
  2563                           
  2564                           	psect	text7
  2565  0D37                     __ptext7:	
  2566 ;; *************** function _init_temp *****************
  2567 ;; Defined at:
  2568 ;;		line 6 in file "Thermometer_src.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		status,2
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2582 ;;      Params:         0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0
  2585 ;;      Totals:         0       0       0       0       0
  2586 ;;Total ram usage:        0 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           
  2596                           ;psect for function _init_temp
  2597  0D37                     _init_temp:	
  2598  0D37                     l1324:	
  2599                           ;incstack = 0
  2600                           ; Regs used in _init_temp: [status,2]
  2601                           
  2602                           
  2603                           ;Thermometer_src.c: 8:     TRISE=0X00;
  2604  0D37  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0D38  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0D39  0189               	clrf	9	;volatile
  2607                           
  2608                           ;Thermometer_src.c: 9:     PORTE = 0X00;
  2609  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0D3C  0189               	clrf	9	;volatile
  2612  0D3D                     l163:	
  2613  0D3D  0008               	return
  2614  0D3E                     __end_of_init_temp:	
  2615                           
  2616                           	psect	text8
  2617  0D4D                     __ptext8:	
  2618 ;; *************** function _init *****************
  2619 ;; Defined at:
  2620 ;;		line 5 in file "LCD_src.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0
  2637 ;;      Totals:         0       0       0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_main
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function _init
  2649  0D4D                     _init:	
  2650  0D4D                     l1348:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _init: [wreg+status,2]
  2653                           
  2654                           
  2655                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  2656  0D4D  3007               	movlw	7
  2657  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  2658  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  2659  0D50  009F               	movwf	31	;volatile
  2660  0D51                     l1350:	
  2661                           
  2662                           ;LCD_src.c: 8:  TRISA0=1;
  2663  0D51  1405               	bsf	5,0	;volatile
  2664  0D52                     l1352:	
  2665                           
  2666                           ;LCD_src.c: 9:  TRISD=0X00;
  2667  0D52  0188               	clrf	8	;volatile
  2668  0D53                     l1354:	
  2669                           
  2670                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  2671  0D53  0181               	clrf	1	;volatile
  2672  0D54                     l1356:	
  2673                           
  2674                           ;LCD_src.c: 11:  TRISE = 0X00;
  2675  0D54  0189               	clrf	9	;volatile
  2676  0D55                     l99:	
  2677  0D55  0008               	return
  2678  0D56                     __end_of_init:	
  2679                           
  2680                           	psect	text9
  2681  0E7C                     __ptext9:	
  2682 ;; *************** function _get_time *****************
  2683 ;; Defined at:
  2684 ;;		line 26 in file "clock_src.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  i               2    6[COMMON] int 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         2       0       0       0       0
  2700 ;;      Temps:          1       0       0       0       0
  2701 ;;      Totals:         3       0       0       0       0
  2702 ;;Total ram usage:        3 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    1
  2705 ;; This function calls:
  2706 ;;		_time_read_1
  2707 ;;		_time_write_1
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           
  2714                           ;psect for function _get_time
  2715  0E7C                     _get_time:	
  2716  0E7C                     l2226:	
  2717                           ;incstack = 0
  2718                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2719                           
  2720                           
  2721                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  2722  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0E7E  1686               	bsf	6,5	;volatile
  2725  0E7F                     l2228:	
  2726                           
  2727                           ;clock_src.c: 30:    time_write_1(0xbf);
  2728  0E7F  30BF               	movlw	191
  2729  0E80  120A  158A  2651  120A  158A  	fcall	_time_write_1
  2730  0E85                     l2230:	
  2731                           
  2732                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  2733  0E85  01F6               	clrf	get_time@i
  2734  0E86  01F7               	clrf	get_time@i+1
  2735  0E87                     l2236:	
  2736                           
  2737                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  2738  0E87  120A  158A  26D9  120A  158A  	fcall	_time_read_1
  2739  0E8C  00F5               	movwf	??_get_time
  2740  0E8D  0876               	movf	get_time@i,w
  2741  0E8E  3E20               	addlw	(low (_table1| 0))& (0+255)
  2742  0E8F  0084               	movwf	4
  2743  0E90  0875               	movf	??_get_time,w
  2744  0E91  1383               	bcf	3,7	;select IRP bank0
  2745  0E92  0080               	movwf	0
  2746  0E93                     l2238:	
  2747                           
  2748                           ;clock_src.c: 34:      }
  2749  0E93  3001               	movlw	1
  2750  0E94  07F6               	addwf	get_time@i,f
  2751  0E95  1803               	skipnc
  2752  0E96  0AF7               	incf	get_time@i+1,f
  2753  0E97  3000               	movlw	0
  2754  0E98  07F7               	addwf	get_time@i+1,f
  2755  0E99                     l2240:	
  2756  0E99  0877               	movf	get_time@i+1,w
  2757  0E9A  3A80               	xorlw	128
  2758  0E9B  00FF               	movwf	btemp+1
  2759  0E9C  3080               	movlw	128
  2760  0E9D  027F               	subwf	btemp+1,w
  2761  0E9E  1D03               	skipz
  2762  0E9F  2EA2               	goto	u1345
  2763  0EA0  3007               	movlw	7
  2764  0EA1  0276               	subwf	get_time@i,w
  2765  0EA2                     u1345:	
  2766  0EA2  1C03               	skipc
  2767  0EA3  2EA5               	goto	u1341
  2768  0EA4  2EA6               	goto	u1340
  2769  0EA5                     u1341:	
  2770  0EA5  2E87               	goto	l2236
  2771  0EA6                     u1340:	
  2772  0EA6                     l240:	
  2773                           
  2774                           ;clock_src.c: 35:    RB5=0;
  2775  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0EA8  1286               	bcf	6,5	;volatile
  2778  0EA9                     l241:	
  2779  0EA9  0008               	return
  2780  0EAA                     __end_of_get_time:	
  2781                           
  2782                           	psect	text10
  2783  0ED9                     __ptext10:	
  2784 ;; *************** function _time_read_1 *****************
  2785 ;; Defined at:
  2786 ;;		line 131 in file "clock_src.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  j               2    2[COMMON] int 
  2791 ;;  time_rx         1    4[COMMON] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      unsigned char 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0, btemp+1
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       0       0       0
  2802 ;;      Locals:         3       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0
  2804 ;;      Totals:         5       0       0       0       0
  2805 ;;Total ram usage:        5 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_get_time
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _time_read_1
  2816  0ED9                     _time_read_1:	
  2817  0ED9                     l1968:	
  2818                           ;incstack = 0
  2819                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  2820                           
  2821                           
  2822                           ;clock_src.c: 133:    unsigned char time_rx=0;
  2823  0ED9  01F4               	clrf	time_read_1@time_rx
  2824  0EDA                     l1970:	
  2825                           
  2826                           ;clock_src.c: 134:    int j;;clock_src.c: 135:    TRISB4=1;
  2827  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  2828  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  2829  0EDC  1606               	bsf	6,4	;volatile
  2830                           
  2831                           ;clock_src.c: 136:    for(j=0;j<8;j++)
  2832  0EDD  01F2               	clrf	time_read_1@j
  2833  0EDE  01F3               	clrf	time_read_1@j+1
  2834  0EDF                     l258:	
  2835                           
  2836                           ;clock_src.c: 137:       {;clock_src.c: 138:         RB0=0;
  2837  0EDF  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0EE0  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0EE1  1006               	bcf	6,0	;volatile
  2840  0EE2                     l1976:	
  2841                           
  2842                           ;clock_src.c: 139:         time_rx=time_rx>>1;
  2843  0EE2  0874               	movf	time_read_1@time_rx,w
  2844  0EE3  00F0               	movwf	??_time_read_1
  2845  0EE4  1003               	clrc
  2846  0EE5  0C70               	rrf	??_time_read_1,w
  2847  0EE6  00F1               	movwf	??_time_read_1+1
  2848  0EE7  0871               	movf	??_time_read_1+1,w
  2849  0EE8  00F4               	movwf	time_read_1@time_rx
  2850  0EE9                     l1978:	
  2851                           
  2852                           ;clock_src.c: 140:         if(RB4)time_rx=time_rx|0x80;
  2853  0EE9  1E06               	btfss	6,4	;volatile
  2854  0EEA  2EEC               	goto	u901
  2855  0EEB  2EED               	goto	u900
  2856  0EEC                     u901:	
  2857  0EEC  2EF2               	goto	l1982
  2858  0EED                     u900:	
  2859  0EED                     l1980:	
  2860  0EED  0874               	movf	time_read_1@time_rx,w
  2861  0EEE  3880               	iorlw	128
  2862  0EEF  00F0               	movwf	??_time_read_1
  2863  0EF0  0870               	movf	??_time_read_1,w
  2864  0EF1  00F4               	movwf	time_read_1@time_rx
  2865  0EF2                     l1982:	
  2866                           
  2867                           ;clock_src.c: 142:        RB0=1;
  2868  0EF2  1406               	bsf	6,0	;volatile
  2869  0EF3                     l1984:	
  2870                           
  2871                           ;clock_src.c: 143:       }
  2872  0EF3  3001               	movlw	1
  2873  0EF4  07F2               	addwf	time_read_1@j,f
  2874  0EF5  1803               	skipnc
  2875  0EF6  0AF3               	incf	time_read_1@j+1,f
  2876  0EF7  3000               	movlw	0
  2877  0EF8  07F3               	addwf	time_read_1@j+1,f
  2878  0EF9                     l1986:	
  2879  0EF9  0873               	movf	time_read_1@j+1,w
  2880  0EFA  3A80               	xorlw	128
  2881  0EFB  00FF               	movwf	btemp+1
  2882  0EFC  3080               	movlw	128
  2883  0EFD  027F               	subwf	btemp+1,w
  2884  0EFE  1D03               	skipz
  2885  0EFF  2F02               	goto	u915
  2886  0F00  3008               	movlw	8
  2887  0F01  0272               	subwf	time_read_1@j,w
  2888  0F02                     u915:	
  2889  0F02  1C03               	skipc
  2890  0F03  2F05               	goto	u911
  2891  0F04  2F06               	goto	u910
  2892  0F05                     u911:	
  2893  0F05  2EDF               	goto	l258
  2894  0F06                     u910:	
  2895  0F06                     l259:	
  2896                           
  2897                           ;clock_src.c: 144:     TRISB4=0;
  2898  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0F08  1206               	bcf	6,4	;volatile
  2901                           
  2902                           ;clock_src.c: 145:     RB0=0;
  2903  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0F0B  1006               	bcf	6,0	;volatile
  2906  0F0C                     l1988:	
  2907                           
  2908                           ;clock_src.c: 146:     return(time_rx);
  2909  0F0C  0874               	movf	time_read_1@time_rx,w
  2910  0F0D                     l261:	
  2911  0F0D  0008               	return
  2912  0F0E                     __end_of_time_read_1:	
  2913                           
  2914                           	psect	text11
  2915  03EC                     __ptext11:	
  2916 ;; *************** function _get_temp *****************
  2917 ;; Defined at:
  2918 ;;		line 89 in file "Thermometer_src.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  i               2    0        int 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2932 ;;      Params:         0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0
  2934 ;;      Temps:          0       4       0       0       0
  2935 ;;      Totals:         0       4       0       0       0
  2936 ;;Total ram usage:        4 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    2
  2939 ;; This function calls:
  2940 ;;		___awdiv
  2941 ;;		___awmod
  2942 ;;		___lwdiv
  2943 ;;		___lwmod
  2944 ;;		_delay2
  2945 ;;		_read_byte
  2946 ;;		_reset_temp
  2947 ;;		_write_byte
  2948 ;; This function is called by:
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _get_temp
  2955  03EC                     _get_temp:	
  2956  03EC                     l2170:	
  2957                           ;incstack = 0
  2958                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2959                           
  2960                           
  2961                           ;Thermometer_src.c: 91: int i;;Thermometer_src.c: 92: TRISE0 =1;
  2962  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2963  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2964  03EE  1409               	bsf	9,0	;volatile
  2965  03EF                     l2172:	
  2966                           
  2967                           ;Thermometer_src.c: 93: reset_temp();
  2968  03EF  120A  158A  2782  120A  118A  	fcall	_reset_temp
  2969                           
  2970                           ;Thermometer_src.c: 94: write_byte(0XCC);
  2971  03F4  30CC               	movlw	204
  2972  03F5  120A  118A  2003  120A  118A  	fcall	_write_byte
  2973  03FA                     l2174:	
  2974                           
  2975                           ;Thermometer_src.c: 95: delay2();
  2976  03FA  120A  158A  2593  120A  118A  	fcall	_delay2
  2977  03FF                     l2176:	
  2978                           
  2979                           ;Thermometer_src.c: 96: write_byte(0X44);
  2980  03FF  3044               	movlw	68
  2981  0400  120A  118A  2003  120A  118A  	fcall	_write_byte
  2982  0405                     l2178:	
  2983                           
  2984                           ;Thermometer_src.c: 98: reset_temp();
  2985  0405  120A  158A  2782  120A  118A  	fcall	_reset_temp
  2986  040A                     l2180:	
  2987                           
  2988                           ;Thermometer_src.c: 99: write_byte(0XCC);
  2989  040A  30CC               	movlw	204
  2990  040B  120A  118A  2003  120A  118A  	fcall	_write_byte
  2991  0410                     l2182:	
  2992                           
  2993                           ;Thermometer_src.c: 100: write_byte(0XBE);
  2994  0410  30BE               	movlw	190
  2995  0411  120A  118A  2003  120A  118A  	fcall	_write_byte
  2996  0416                     l2184:	
  2997                           
  2998                           ;Thermometer_src.c: 101: TLV=read_byte();
  2999  0416  120A  158A  2748  120A  118A  	fcall	_read_byte
  3000  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3001  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3002  041D  00B6               	movwf	??_get_temp
  3003  041E  0836               	movf	??_get_temp,w
  3004  041F  00B5               	movwf	_TLV
  3005  0420                     l2186:	
  3006                           
  3007                           ;Thermometer_src.c: 102: THV=read_byte();
  3008  0420  120A  158A  2748  120A  118A  	fcall	_read_byte
  3009  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3010  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3011  0427  00B6               	movwf	??_get_temp
  3012  0428  0836               	movf	??_get_temp,w
  3013  0429  00B4               	movwf	_THV
  3014  042A                     l2188:	
  3015                           
  3016                           ;Thermometer_src.c: 103: TRISE0 =1;
  3017  042A  1683               	bsf	3,5	;RP0=1, select bank1
  3018  042B  1303               	bcf	3,6	;RP1=0, select bank1
  3019  042C  1409               	bsf	9,0	;volatile
  3020  042D                     l2190:	
  3021                           
  3022                           ;Thermometer_src.c: 104: TZ=(TLV>>4)|(THV<<4)&0X3f;
  3023  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3024  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3025  042F  0834               	movf	_THV,w
  3026  0430  00B6               	movwf	??_get_temp
  3027  0431  3004               	movlw	4
  3028  0432                     u1275:	
  3029  0432  1003               	clrc
  3030  0433  0DB6               	rlf	??_get_temp,f
  3031  0434  3EFF               	addlw	-1
  3032  0435  1D03               	skipz
  3033  0436  2C32               	goto	u1275
  3034  0437  303F               	movlw	63
  3035  0438  0536               	andwf	??_get_temp,w
  3036  0439  00B7               	movwf	??_get_temp+1
  3037  043A  0835               	movf	_TLV,w
  3038  043B  00B8               	movwf	??_get_temp+2
  3039  043C  3004               	movlw	4
  3040  043D                     u1285:	
  3041  043D  1003               	clrc
  3042  043E  0CB8               	rrf	??_get_temp+2,f
  3043  043F  3EFF               	addlw	-1
  3044  0440  1D03               	skipz
  3045  0441  2C3D               	goto	u1285
  3046  0442  0838               	movf	??_get_temp+2,w
  3047  0443  0437               	iorwf	??_get_temp+1,w
  3048  0444  00B9               	movwf	??_get_temp+3
  3049  0445  0839               	movf	??_get_temp+3,w
  3050  0446  00B3               	movwf	_TZ
  3051  0447                     l2192:	
  3052                           
  3053                           ;Thermometer_src.c: 105: TX=TLV<<4;
  3054  0447  0835               	movf	_TLV,w
  3055  0448  00B6               	movwf	??_get_temp
  3056  0449  3003               	movlw	3
  3057  044A                     u1295:	
  3058  044A  1003               	clrc
  3059  044B  0DB6               	rlf	??_get_temp,f
  3060  044C  3EFF               	addlw	-1
  3061  044D  1D03               	skipz
  3062  044E  2C4A               	goto	u1295
  3063  044F  1003               	clrc
  3064  0450  0D36               	rlf	??_get_temp,w
  3065  0451  00B7               	movwf	??_get_temp+1
  3066  0452  0837               	movf	??_get_temp+1,w
  3067  0453  00B2               	movwf	_TX
  3068  0454                     l2196:	
  3069                           
  3070                           ;Thermometer_src.c: 107: ge=TZ%10;
  3071  0454  300A               	movlw	10
  3072  0455  00F0               	movwf	___awmod@divisor
  3073  0456  3000               	movlw	0
  3074  0457  00F1               	movwf	___awmod@divisor+1
  3075  0458  0833               	movf	_TZ,w
  3076  0459  00B6               	movwf	??_get_temp
  3077  045A  01B7               	clrf	??_get_temp+1
  3078  045B  0836               	movf	??_get_temp,w
  3079  045C  00F2               	movwf	___awmod@dividend
  3080  045D  0837               	movf	??_get_temp+1,w
  3081  045E  00F3               	movwf	___awmod@dividend+1
  3082  045F  120A  118A  203E  120A  118A  	fcall	___awmod
  3083  0464  0870               	movf	?___awmod,w
  3084  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0467  00B8               	movwf	??_get_temp+2
  3087  0468  0838               	movf	??_get_temp+2,w
  3088  0469  00B0               	movwf	_ge
  3089                           
  3090                           ;Thermometer_src.c: 108: shi=TZ/10;
  3091  046A  300A               	movlw	10
  3092  046B  00F0               	movwf	___awdiv@divisor
  3093  046C  3000               	movlw	0
  3094  046D  00F1               	movwf	___awdiv@divisor+1
  3095  046E  0833               	movf	_TZ,w
  3096  046F  00B6               	movwf	??_get_temp
  3097  0470  01B7               	clrf	??_get_temp+1
  3098  0471  0836               	movf	??_get_temp,w
  3099  0472  00F2               	movwf	___awdiv@dividend
  3100  0473  0837               	movf	??_get_temp+1,w
  3101  0474  00F3               	movwf	___awdiv@dividend+1
  3102  0475  120A  118A  2097  120A  118A  	fcall	___awdiv
  3103  047A  0870               	movf	?___awdiv,w
  3104  047B  1283               	bcf	3,5	;RP0=0, select bank0
  3105  047C  1303               	bcf	3,6	;RP1=0, select bank0
  3106  047D  00B8               	movwf	??_get_temp+2
  3107  047E  0838               	movf	??_get_temp+2,w
  3108  047F  00B1               	movwf	_shi
  3109  0480                     l2198:	
  3110                           
  3111                           ;Thermometer_src.c: 109: wd=0;
  3112  0480  01A7               	clrf	_wd
  3113  0481  01A8               	clrf	_wd+1
  3114  0482                     l2200:	
  3115                           
  3116                           ;Thermometer_src.c: 110: if (TX & 0x80) wd=wd+5000;
  3117  0482  1FB2               	btfss	_TX,7
  3118  0483  2C85               	goto	u1301
  3119  0484  2C86               	goto	u1300
  3120  0485                     u1301:	
  3121  0485  2C8E               	goto	l2204
  3122  0486                     u1300:	
  3123  0486                     l2202:	
  3124  0486  0827               	movf	_wd,w
  3125  0487  3E88               	addlw	136
  3126  0488  00A7               	movwf	_wd
  3127  0489  0828               	movf	_wd+1,w
  3128  048A  1803               	skipnc
  3129  048B  3E01               	addlw	1
  3130  048C  3E13               	addlw	19
  3131  048D  00A8               	movwf	_wd+1
  3132  048E                     l2204:	
  3133                           
  3134                           ;Thermometer_src.c: 111: if (TX & 0x40) wd=wd+2500;
  3135  048E  1F32               	btfss	_TX,6
  3136  048F  2C91               	goto	u1311
  3137  0490  2C92               	goto	u1310
  3138  0491                     u1311:	
  3139  0491  2C9A               	goto	l2208
  3140  0492                     u1310:	
  3141  0492                     l2206:	
  3142  0492  0827               	movf	_wd,w
  3143  0493  3EC4               	addlw	196
  3144  0494  00A7               	movwf	_wd
  3145  0495  0828               	movf	_wd+1,w
  3146  0496  1803               	skipnc
  3147  0497  3E01               	addlw	1
  3148  0498  3E09               	addlw	9
  3149  0499  00A8               	movwf	_wd+1
  3150  049A                     l2208:	
  3151                           
  3152                           ;Thermometer_src.c: 112: if (TX & 0x20) wd=wd+1250;
  3153  049A  1EB2               	btfss	_TX,5
  3154  049B  2C9D               	goto	u1321
  3155  049C  2C9E               	goto	u1320
  3156  049D                     u1321:	
  3157  049D  2CA6               	goto	l2212
  3158  049E                     u1320:	
  3159  049E                     l2210:	
  3160  049E  0827               	movf	_wd,w
  3161  049F  3EE2               	addlw	226
  3162  04A0  00A7               	movwf	_wd
  3163  04A1  0828               	movf	_wd+1,w
  3164  04A2  1803               	skipnc
  3165  04A3  3E01               	addlw	1
  3166  04A4  3E04               	addlw	4
  3167  04A5  00A8               	movwf	_wd+1
  3168  04A6                     l2212:	
  3169                           
  3170                           ;Thermometer_src.c: 113: if (TX & 0x10) wd=wd+625;
  3171  04A6  1E32               	btfss	_TX,4
  3172  04A7  2CA9               	goto	u1331
  3173  04A8  2CAA               	goto	u1330
  3174  04A9                     u1331:	
  3175  04A9  2CB2               	goto	l2216
  3176  04AA                     u1330:	
  3177  04AA                     l2214:	
  3178  04AA  0827               	movf	_wd,w
  3179  04AB  3E71               	addlw	113
  3180  04AC  00A7               	movwf	_wd
  3181  04AD  0828               	movf	_wd+1,w
  3182  04AE  1803               	skipnc
  3183  04AF  3E01               	addlw	1
  3184  04B0  3E02               	addlw	2
  3185  04B1  00A8               	movwf	_wd+1
  3186  04B2                     l2216:	
  3187                           
  3188                           ;Thermometer_src.c: 114: shifen=wd/1000;
  3189  04B2  30E8               	movlw	232
  3190  04B3  00F6               	movwf	___lwdiv@divisor
  3191  04B4  3003               	movlw	3
  3192  04B5  00F7               	movwf	___lwdiv@divisor+1
  3193  04B6  0828               	movf	_wd+1,w
  3194  04B7  00F9               	movwf	___lwdiv@dividend+1
  3195  04B8  0827               	movf	_wd,w
  3196  04B9  00F8               	movwf	___lwdiv@dividend
  3197  04BA  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  3198  04BF  0876               	movf	?___lwdiv,w
  3199  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3200  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3201  04C2  00B6               	movwf	??_get_temp
  3202  04C3  0836               	movf	??_get_temp,w
  3203  04C4  00AF               	movwf	_shifen
  3204  04C5                     l2218:	
  3205                           
  3206                           ;Thermometer_src.c: 115: baifen=(wd%1000)/100;
  3207  04C5  3064               	movlw	100
  3208  04C6  00F6               	movwf	___lwdiv@divisor
  3209  04C7  3000               	movlw	0
  3210  04C8  00F7               	movwf	___lwdiv@divisor+1
  3211  04C9  0828               	movf	_wd+1,w
  3212  04CA  00F3               	movwf	___lwmod@dividend+1
  3213  04CB  0827               	movf	_wd,w
  3214  04CC  00F2               	movwf	___lwmod@dividend
  3215  04CD  30E8               	movlw	232
  3216  04CE  00F0               	movwf	___lwmod@divisor
  3217  04CF  3003               	movlw	3
  3218  04D0  00F1               	movwf	___lwmod@divisor+1
  3219  04D1  120A  158A  270E  120A  118A  	fcall	___lwmod
  3220  04D6  0871               	movf	?___lwmod+1,w
  3221  04D7  00F9               	movwf	___lwdiv@dividend+1
  3222  04D8  0870               	movf	?___lwmod,w
  3223  04D9  00F8               	movwf	___lwdiv@dividend
  3224  04DA  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  3225  04DF  0876               	movf	?___lwdiv,w
  3226  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3227  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  3228  04E2  00B6               	movwf	??_get_temp
  3229  04E3  0836               	movf	??_get_temp,w
  3230  04E4  00AE               	movwf	_baifen
  3231  04E5                     l2220:	
  3232                           
  3233                           ;Thermometer_src.c: 116: qianfen=(wd%100)/10;
  3234  04E5  300A               	movlw	10
  3235  04E6  00F6               	movwf	___lwdiv@divisor
  3236  04E7  3000               	movlw	0
  3237  04E8  00F7               	movwf	___lwdiv@divisor+1
  3238  04E9  0828               	movf	_wd+1,w
  3239  04EA  00F3               	movwf	___lwmod@dividend+1
  3240  04EB  0827               	movf	_wd,w
  3241  04EC  00F2               	movwf	___lwmod@dividend
  3242  04ED  3064               	movlw	100
  3243  04EE  00F0               	movwf	___lwmod@divisor
  3244  04EF  3000               	movlw	0
  3245  04F0  00F1               	movwf	___lwmod@divisor+1
  3246  04F1  120A  158A  270E  120A  118A  	fcall	___lwmod
  3247  04F6  0871               	movf	?___lwmod+1,w
  3248  04F7  00F9               	movwf	___lwdiv@dividend+1
  3249  04F8  0870               	movf	?___lwmod,w
  3250  04F9  00F8               	movwf	___lwdiv@dividend
  3251  04FA  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  3252  04FF  0876               	movf	?___lwdiv,w
  3253  0500  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0501  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0502  00B6               	movwf	??_get_temp
  3256  0503  0836               	movf	??_get_temp,w
  3257  0504  00AD               	movwf	_qianfen
  3258  0505                     l2222:	
  3259                           
  3260                           ;Thermometer_src.c: 117: wanfen=wd%10;
  3261  0505  300A               	movlw	10
  3262  0506  00F0               	movwf	___lwmod@divisor
  3263  0507  3000               	movlw	0
  3264  0508  00F1               	movwf	___lwmod@divisor+1
  3265  0509  0828               	movf	_wd+1,w
  3266  050A  00F3               	movwf	___lwmod@dividend+1
  3267  050B  0827               	movf	_wd,w
  3268  050C  00F2               	movwf	___lwmod@dividend
  3269  050D  120A  158A  270E  120A  118A  	fcall	___lwmod
  3270  0512  0870               	movf	?___lwmod,w
  3271  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0515  00B6               	movwf	??_get_temp
  3274  0516  0836               	movf	??_get_temp,w
  3275  0517  00AC               	movwf	_wanfen
  3276  0518                     l2224:	
  3277                           
  3278                           ;Thermometer_src.c: 118: __nop();
  3279  0518  0000               	nop
  3280  0519                     l196:	
  3281  0519  0008               	return
  3282  051A                     __end_of_get_temp:	
  3283                           
  3284                           	psect	text12
  3285  0003                     __ptext12:	
  3286 ;; *************** function _write_byte *****************
  3287 ;; Defined at:
  3288 ;;		line 40 in file "Thermometer_src.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  val             1    wreg     unsigned char 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  val             1    7[COMMON] unsigned char 
  3293 ;;  i               1    8[COMMON] unsigned char 
  3294 ;;  temp            1    6[COMMON] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, pclath, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         3       0       0       0       0
  3306 ;;      Temps:          2       0       0       0       0
  3307 ;;      Totals:         5       0       0       0       0
  3308 ;;Total ram usage:        5 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    1
  3311 ;; This function calls:
  3312 ;;		_delay_temp
  3313 ;; This function is called by:
  3314 ;;		_get_temp
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function _write_byte
  3320  0003                     _write_byte:	
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  3324                           ;write_byte@val stored from wreg
  3325  0003  00F7               	movwf	write_byte@val
  3326  0004                     l1848:	
  3327                           
  3328                           ;Thermometer_src.c: 40: void write_byte(unsigned char val);Thermometer_src.c: 41: {;Ther
      +                          mometer_src.c: 42:  unsigned char i;;Thermometer_src.c: 43:  unsigned char temp;;Thermom
      +                          eter_src.c: 44:  for(i=8;i>0;i--)
  3329  0004  3008               	movlw	8
  3330  0005  00F4               	movwf	??_write_byte
  3331  0006  0874               	movf	??_write_byte,w
  3332  0007  00F8               	movwf	write_byte@i
  3333  0008                     l1854:	
  3334                           
  3335                           ;Thermometer_src.c: 45:  {;Thermometer_src.c: 46:    temp=val&0x01;
  3336  0008  0877               	movf	write_byte@val,w
  3337  0009  3901               	andlw	1
  3338  000A  00F4               	movwf	??_write_byte
  3339  000B  0874               	movf	??_write_byte,w
  3340  000C  00F6               	movwf	write_byte@temp
  3341  000D                     l1856:	
  3342                           
  3343                           ;Thermometer_src.c: 47:    RE0 = 0; TRISE0 = 0;
  3344  000D  1283               	bcf	3,5	;RP0=0, select bank0
  3345  000E  1303               	bcf	3,6	;RP1=0, select bank0
  3346  000F  1009               	bcf	9,0	;volatile
  3347  0010                     l1858:	
  3348  0010  1683               	bsf	3,5	;RP0=1, select bank1
  3349  0011  1303               	bcf	3,6	;RP1=0, select bank1
  3350  0012  1009               	bcf	9,0	;volatile
  3351  0013                     l1860:	
  3352                           
  3353                           ;Thermometer_src.c: 48:    __nop();
  3354  0013  0000               	nop
  3355  0014                     l1862:	
  3356                           
  3357                           ;Thermometer_src.c: 49:    __nop();
  3358  0014  0000               	nop
  3359  0015                     l1864:	
  3360                           
  3361                           ;Thermometer_src.c: 50:    __nop();
  3362  0015  0000               	nop
  3363  0016                     l1866:	
  3364                           
  3365                           ;Thermometer_src.c: 51:    __nop();
  3366  0016  0000               	nop
  3367  0017                     l1868:	
  3368                           
  3369                           ;Thermometer_src.c: 52:    __nop();
  3370  0017  0000               	nop
  3371  0018                     l1870:	
  3372                           
  3373                           ;Thermometer_src.c: 53:    if(temp==1) TRISE0 =1;
  3374  0018  0376               	decf	write_byte@temp,w
  3375  0019  1D03               	btfss	3,2
  3376  001A  281C               	goto	u831
  3377  001B  281D               	goto	u830
  3378  001C                     u831:	
  3379  001C  2820               	goto	l1874
  3380  001D                     u830:	
  3381  001D                     l1872:	
  3382  001D  1683               	bsf	3,5	;RP0=1, select bank1
  3383  001E  1303               	bcf	3,6	;RP1=0, select bank1
  3384  001F  1409               	bsf	9,0	;volatile
  3385  0020                     l1874:	
  3386                           
  3387                           ;Thermometer_src.c: 54:    delay_temp(2,7);
  3388  0020  3007               	movlw	7
  3389  0021  00F4               	movwf	??_write_byte
  3390  0022  0874               	movf	??_write_byte,w
  3391  0023  00F0               	movwf	delay_temp@y
  3392  0024  3002               	movlw	2
  3393  0025  120A  158A  2556  120A  118A  	fcall	_delay_temp
  3394  002A                     l1876:	
  3395                           
  3396                           ;Thermometer_src.c: 55:    TRISE0 =1;
  3397  002A  1683               	bsf	3,5	;RP0=1, select bank1
  3398  002B  1303               	bcf	3,6	;RP1=0, select bank1
  3399  002C  1409               	bsf	9,0	;volatile
  3400  002D                     l1878:	
  3401                           
  3402                           ;Thermometer_src.c: 56:    __nop();
  3403  002D  0000               	nop
  3404  002E                     l1880:	
  3405                           
  3406                           ;Thermometer_src.c: 57:    __nop();
  3407  002E  0000               	nop
  3408  002F                     l1882:	
  3409                           
  3410                           ;Thermometer_src.c: 58:    val=val>>1;
  3411  002F  0877               	movf	write_byte@val,w
  3412  0030  00F4               	movwf	??_write_byte
  3413  0031  1003               	clrc
  3414  0032  0C74               	rrf	??_write_byte,w
  3415  0033  00F5               	movwf	??_write_byte+1
  3416  0034  0875               	movf	??_write_byte+1,w
  3417  0035  00F7               	movwf	write_byte@val
  3418  0036                     l1884:	
  3419                           
  3420                           ;Thermometer_src.c: 59:   }
  3421  0036  3001               	movlw	1
  3422  0037  02F8               	subwf	write_byte@i,f
  3423  0038                     l1886:	
  3424  0038  0878               	movf	write_byte@i,w
  3425  0039  1D03               	btfss	3,2
  3426  003A  283C               	goto	u841
  3427  003B  283D               	goto	u840
  3428  003C                     u841:	
  3429  003C  2808               	goto	l1854
  3430  003D                     u840:	
  3431  003D                     l180:	
  3432  003D  0008               	return
  3433  003E                     __end_of_write_byte:	
  3434                           
  3435                           	psect	text13
  3436  0F82                     __ptext13:	
  3437 ;; *************** function _reset_temp *****************
  3438 ;; Defined at:
  3439 ;;		line 25 in file "Thermometer_src.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  presence        1    5[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0, pclath, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         0       0       0       0       0
  3454 ;;      Locals:         1       0       0       0       0
  3455 ;;      Temps:          1       0       0       0       0
  3456 ;;      Totals:         2       0       0       0       0
  3457 ;;Total ram usage:        2 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    1
  3460 ;; This function calls:
  3461 ;;		_delay_temp
  3462 ;; This function is called by:
  3463 ;;		_get_temp
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           
  3468                           ;psect for function _reset_temp
  3469  0F82                     _reset_temp:	
  3470  0F82                     l1832:	
  3471                           ;incstack = 0
  3472                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  3473                           
  3474                           
  3475                           ;Thermometer_src.c: 27:   char presence=1;
  3476  0F82  01F5               	clrf	reset_temp@presence
  3477  0F83  0AF5               	incf	reset_temp@presence,f
  3478                           
  3479                           ;Thermometer_src.c: 28:   while(presence)
  3480  0F84  2FB6               	goto	l1846
  3481  0F85                     l170:	
  3482                           
  3483                           ;Thermometer_src.c: 29:   {;Thermometer_src.c: 30:     RE0 = 0; TRISE0 = 0 ;
  3484  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  3486  0F87  1009               	bcf	9,0	;volatile
  3487  0F88  1683               	bsf	3,5	;RP0=1, select bank1
  3488  0F89  1303               	bcf	3,6	;RP1=0, select bank1
  3489  0F8A  1009               	bcf	9,0	;volatile
  3490  0F8B                     l1834:	
  3491                           
  3492                           ;Thermometer_src.c: 31:     delay_temp(2,70);
  3493  0F8B  3046               	movlw	70
  3494  0F8C  00F4               	movwf	??_reset_temp
  3495  0F8D  0874               	movf	??_reset_temp,w
  3496  0F8E  00F0               	movwf	delay_temp@y
  3497  0F8F  3002               	movlw	2
  3498  0F90  120A  158A  2556  120A  158A  	fcall	_delay_temp
  3499  0F95                     l1836:	
  3500                           
  3501                           ;Thermometer_src.c: 32:     TRISE0 =1;
  3502  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  3503  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  3504  0F97  1409               	bsf	9,0	;volatile
  3505                           
  3506                           ;Thermometer_src.c: 33:     delay_temp(2,8);
  3507  0F98  3008               	movlw	8
  3508  0F99  00F4               	movwf	??_reset_temp
  3509  0F9A  0874               	movf	??_reset_temp,w
  3510  0F9B  00F0               	movwf	delay_temp@y
  3511  0F9C  3002               	movlw	2
  3512  0F9D  120A  158A  2556  120A  158A  	fcall	_delay_temp
  3513  0FA2                     l1838:	
  3514                           
  3515                           ;Thermometer_src.c: 34:     if(RE0==1) presence=1;
  3516  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0FA4  1C09               	btfss	9,0	;volatile
  3519  0FA5  2FA7               	goto	u811
  3520  0FA6  2FA8               	goto	u810
  3521  0FA7                     u811:	
  3522  0FA7  2FAB               	goto	l1842
  3523  0FA8                     u810:	
  3524  0FA8                     l1840:	
  3525  0FA8  01F5               	clrf	reset_temp@presence
  3526  0FA9  0AF5               	incf	reset_temp@presence,f
  3527  0FAA  2FAC               	goto	l1844
  3528  0FAB                     l1842:	
  3529  0FAB  01F5               	clrf	reset_temp@presence
  3530  0FAC                     l1844:	
  3531                           
  3532                           ;Thermometer_src.c: 36:     delay_temp(2,60);
  3533  0FAC  303C               	movlw	60
  3534  0FAD  00F4               	movwf	??_reset_temp
  3535  0FAE  0874               	movf	??_reset_temp,w
  3536  0FAF  00F0               	movwf	delay_temp@y
  3537  0FB0  3002               	movlw	2
  3538  0FB1  120A  158A  2556  120A  158A  	fcall	_delay_temp
  3539  0FB6                     l1846:	
  3540                           
  3541                           ;Thermometer_src.c: 28:   while(presence)
  3542  0FB6  0875               	movf	reset_temp@presence,w
  3543  0FB7  1D03               	btfss	3,2
  3544  0FB8  2FBA               	goto	u821
  3545  0FB9  2FBB               	goto	u820
  3546  0FBA                     u821:	
  3547  0FBA  2F85               	goto	l170
  3548  0FBB                     u820:	
  3549  0FBB                     l174:	
  3550  0FBB  0008               	return
  3551  0FBC                     __end_of_reset_temp:	
  3552                           
  3553                           	psect	text14
  3554  0F48                     __ptext14:	
  3555 ;; *************** function _read_byte *****************
  3556 ;; Defined at:
  3557 ;;		line 62 in file "Thermometer_src.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  i               1    6[COMMON] unsigned char 
  3562 ;;  value           1    5[COMMON] unsigned char 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      unsigned char 
  3565 ;; Registers used:
  3566 ;;		wreg, status,2, status,0, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         2       0       0       0       0
  3574 ;;      Temps:          1       0       0       0       0
  3575 ;;      Totals:         3       0       0       0       0
  3576 ;;Total ram usage:        3 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    1
  3579 ;; This function calls:
  3580 ;;		_delay_temp
  3581 ;; This function is called by:
  3582 ;;		_get_temp
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           
  3587                           ;psect for function _read_byte
  3588  0F48                     _read_byte:	
  3589  0F48                     l1888:	
  3590                           ;incstack = 0
  3591                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  3592                           
  3593                           
  3594                           ;Thermometer_src.c: 64:  unsigned char i;;Thermometer_src.c: 65:  unsigned char value=0;
  3595  0F48  01F5               	clrf	read_byte@value
  3596  0F49                     l1890:	
  3597                           
  3598                           ;Thermometer_src.c: 66:  static _Bool j;;Thermometer_src.c: 67:  for(i=8;i>0;i--)
  3599  0F49  3008               	movlw	8
  3600  0F4A  00F4               	movwf	??_read_byte
  3601  0F4B  0874               	movf	??_read_byte,w
  3602  0F4C  00F6               	movwf	read_byte@i
  3603  0F4D                     l1896:	
  3604                           
  3605                           ;Thermometer_src.c: 68:  {;Thermometer_src.c: 69:    value>>=1;
  3606  0F4D  1003               	clrc
  3607  0F4E  0CF5               	rrf	read_byte@value,f
  3608  0F4F                     l1898:	
  3609                           
  3610                           ;Thermometer_src.c: 70:    RE0 = 0; TRISE0 = 0;
  3611  0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0F50  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0F51  1009               	bcf	9,0	;volatile
  3614  0F52                     l1900:	
  3615  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  3617  0F54  1009               	bcf	9,0	;volatile
  3618  0F55                     l1902:	
  3619                           
  3620                           ;Thermometer_src.c: 71:    __nop();
  3621  0F55  0000               	nop
  3622  0F56                     l1904:	
  3623                           
  3624                           ;Thermometer_src.c: 72:    __nop();
  3625  0F56  0000               	nop
  3626  0F57                     l1906:	
  3627                           
  3628                           ;Thermometer_src.c: 73:    __nop();
  3629  0F57  0000               	nop
  3630  0F58                     l1908:	
  3631                           
  3632                           ;Thermometer_src.c: 74:    __nop();
  3633  0F58  0000               	nop
  3634  0F59                     l1910:	
  3635                           
  3636                           ;Thermometer_src.c: 75:    __nop();
  3637  0F59  0000               	nop
  3638  0F5A                     l1912:	
  3639                           
  3640                           ;Thermometer_src.c: 76:    __nop();
  3641  0F5A  0000               	nop
  3642  0F5B                     l1914:	
  3643                           
  3644                           ;Thermometer_src.c: 77:    TRISE0 =1;
  3645  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  3646  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  3647  0F5D  1409               	bsf	9,0	;volatile
  3648  0F5E                     l1916:	
  3649                           
  3650                           ;Thermometer_src.c: 78:    __nop();
  3651  0F5E  0000               	nop
  3652  0F5F                     l1918:	
  3653                           
  3654                           ;Thermometer_src.c: 79:    __nop();
  3655  0F5F  0000               	nop
  3656  0F60                     l1920:	
  3657                           
  3658                           ;Thermometer_src.c: 80:    __nop();
  3659  0F60  0000               	nop
  3660  0F61                     l1922:	
  3661                           
  3662                           ;Thermometer_src.c: 81:    __nop();
  3663  0F61  0000               	nop
  3664  0F62                     l1924:	
  3665                           
  3666                           ;Thermometer_src.c: 82:    __nop();
  3667  0F62  0000               	nop
  3668  0F63                     l1926:	
  3669                           
  3670                           ;Thermometer_src.c: 83:    j=RE0;
  3671  0F63  3000               	movlw	0
  3672  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0F66  1809               	btfsc	9,0	;volatile
  3675  0F67  3001               	movlw	1
  3676  0F68  00A9               	movwf	read_byte@j
  3677  0F69                     l1928:	
  3678                           
  3679                           ;Thermometer_src.c: 84:    if(j) value|=0x80;
  3680  0F69  0829               	movf	read_byte@j,w
  3681  0F6A  1903               	btfsc	3,2
  3682  0F6B  2F6D               	goto	u851
  3683  0F6C  2F6E               	goto	u850
  3684  0F6D                     u851:	
  3685  0F6D  2F6F               	goto	l1932
  3686  0F6E                     u850:	
  3687  0F6E                     l1930:	
  3688  0F6E  17F5               	bsf	read_byte@value,7
  3689  0F6F                     l1932:	
  3690                           
  3691                           ;Thermometer_src.c: 85:    delay_temp(2,7);
  3692  0F6F  3007               	movlw	7
  3693  0F70  00F4               	movwf	??_read_byte
  3694  0F71  0874               	movf	??_read_byte,w
  3695  0F72  00F0               	movwf	delay_temp@y
  3696  0F73  3002               	movlw	2
  3697  0F74  120A  158A  2556  120A  158A  	fcall	_delay_temp
  3698  0F79                     l1934:	
  3699                           
  3700                           ;Thermometer_src.c: 86:   }
  3701  0F79  3001               	movlw	1
  3702  0F7A  02F6               	subwf	read_byte@i,f
  3703  0F7B                     l1936:	
  3704  0F7B  0876               	movf	read_byte@i,w
  3705  0F7C  1D03               	btfss	3,2
  3706  0F7D  2F7F               	goto	u861
  3707  0F7E  2F80               	goto	u860
  3708  0F7F                     u861:	
  3709  0F7F  2F4D               	goto	l1896
  3710  0F80                     u860:	
  3711  0F80                     l1938:	
  3712                           
  3713                           ;Thermometer_src.c: 87:   return(value);
  3714  0F80  0875               	movf	read_byte@value,w
  3715  0F81                     l188:	
  3716  0F81  0008               	return
  3717  0F82                     __end_of_read_byte:	
  3718                           
  3719                           	psect	text15
  3720  0D56                     __ptext15:	
  3721 ;; *************** function _delay_temp *****************
  3722 ;; Defined at:
  3723 ;;		line 121 in file "Thermometer_src.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  x               1    wreg     unsigned char 
  3726 ;;  y               1    0[COMMON] unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  x               1    2[COMMON] unsigned char 
  3729 ;;  z               1    3[COMMON] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3739 ;;      Params:         1       0       0       0       0
  3740 ;;      Locals:         2       0       0       0       0
  3741 ;;      Temps:          1       0       0       0       0
  3742 ;;      Totals:         4       0       0       0       0
  3743 ;;Total ram usage:        4 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_reset_temp
  3749 ;;		_write_byte
  3750 ;;		_read_byte
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _delay_temp
  3756  0D56                     _delay_temp:	
  3757                           
  3758                           ;incstack = 0
  3759                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  3760                           ;delay_temp@x stored from wreg
  3761  0D56  00F2               	movwf	delay_temp@x
  3762  0D57                     l199:	
  3763                           ;Thermometer_src.c: 121: void delay_temp(char x, char y);Thermometer_src.c: 122: {;Therm
      +                          ometer_src.c: 123:  char z;;Thermometer_src.c: 124:  do{
  3764                           
  3765  0D57                     l1802:	
  3766                           
  3767                           ;Thermometer_src.c: 125:  z=y;
  3768  0D57  0870               	movf	delay_temp@y,w
  3769  0D58  00F1               	movwf	??_delay_temp
  3770  0D59  0871               	movf	??_delay_temp,w
  3771  0D5A  00F3               	movwf	delay_temp@z
  3772  0D5B                     l1804:	
  3773  0D5B  3001               	movlw	1
  3774  0D5C  02F3               	subwf	delay_temp@z,f
  3775  0D5D  1D03               	btfss	3,2
  3776  0D5E  2D60               	goto	u791
  3777  0D5F  2D61               	goto	u790
  3778  0D60                     u791:	
  3779  0D60  2D5B               	goto	l1804
  3780  0D61                     u790:	
  3781  0D61                     l1806:	
  3782                           
  3783                           ;Thermometer_src.c: 127:  }while(--x);
  3784  0D61  3001               	movlw	1
  3785  0D62  02F2               	subwf	delay_temp@x,f
  3786  0D63  1D03               	btfss	3,2
  3787  0D64  2D66               	goto	u801
  3788  0D65  2D67               	goto	u800
  3789  0D66                     u801:	
  3790  0D66  2D57               	goto	l199
  3791  0D67                     u800:	
  3792  0D67                     l203:	
  3793  0D67  0008               	return
  3794  0D68                     __end_of_delay_temp:	
  3795                           
  3796                           	psect	text16
  3797  0D93                     __ptext16:	
  3798 ;; *************** function _delay2 *****************
  3799 ;; Defined at:
  3800 ;;		line 130 in file "Thermometer_src.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  i               2    0[COMMON] int 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, btemp+1
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3814 ;;      Params:         0       0       0       0       0
  3815 ;;      Locals:         2       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0
  3817 ;;      Totals:         2       0       0       0       0
  3818 ;;Total ram usage:        2 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_get_temp
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _delay2
  3829  0D93                     _delay2:	
  3830  0D93                     l1942:	
  3831                           ;incstack = 0
  3832                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  3833                           
  3834                           
  3835                           ;Thermometer_src.c: 131:  for (int i = 0; i<50;i++){
  3836  0D93  01F0               	clrf	delay2@i
  3837  0D94  01F1               	clrf	delay2@i+1
  3838  0D95                     l1948:	
  3839                           
  3840                           ;Thermometer_src.c: 132:  }
  3841  0D95  3001               	movlw	1
  3842  0D96  07F0               	addwf	delay2@i,f
  3843  0D97  1803               	skipnc
  3844  0D98  0AF1               	incf	delay2@i+1,f
  3845  0D99  3000               	movlw	0
  3846  0D9A  07F1               	addwf	delay2@i+1,f
  3847  0D9B                     l1950:	
  3848  0D9B  0871               	movf	delay2@i+1,w
  3849  0D9C  3A80               	xorlw	128
  3850  0D9D  00FF               	movwf	btemp+1
  3851  0D9E  3080               	movlw	128
  3852  0D9F  027F               	subwf	btemp+1,w
  3853  0DA0  1D03               	skipz
  3854  0DA1  2DA4               	goto	u875
  3855  0DA2  3032               	movlw	50
  3856  0DA3  0270               	subwf	delay2@i,w
  3857  0DA4                     u875:	
  3858  0DA4  1C03               	skipc
  3859  0DA5  2DA7               	goto	u871
  3860  0DA6  2DA8               	goto	u870
  3861  0DA7                     u871:	
  3862  0DA7  2D95               	goto	l1948
  3863  0DA8                     u870:	
  3864  0DA8                     l208:	
  3865  0DA8  0008               	return
  3866  0DA9                     __end_of_delay2:	
  3867                           
  3868                           	psect	text17
  3869  0F0E                     __ptext17:	
  3870 ;; *************** function ___lwmod *****************
  3871 ;; Defined at:
  3872 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  divisor         2    0[COMMON] unsigned int 
  3875 ;;  dividend        2    2[COMMON] unsigned int 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  counter         1    5[COMMON] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  2    0[COMMON] unsigned int 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3887 ;;      Params:         4       0       0       0       0
  3888 ;;      Locals:         1       0       0       0       0
  3889 ;;      Temps:          1       0       0       0       0
  3890 ;;      Totals:         6       0       0       0       0
  3891 ;;Total ram usage:        6 bytes
  3892 ;; Hardware stack levels used:    1
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_get_temp
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function ___lwmod
  3902  0F0E                     ___lwmod:	
  3903  0F0E                     l2108:	
  3904                           ;incstack = 0
  3905                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3906                           
  3907  0F0E  0870               	movf	___lwmod@divisor,w
  3908  0F0F  0471               	iorwf	___lwmod@divisor+1,w
  3909  0F10  1903               	btfsc	3,2
  3910  0F11  2F13               	goto	u1201
  3911  0F12  2F14               	goto	u1200
  3912  0F13                     u1201:	
  3913  0F13  2F43               	goto	l2126
  3914  0F14                     u1200:	
  3915  0F14                     l2110:	
  3916  0F14  01F5               	clrf	___lwmod@counter
  3917  0F15  0AF5               	incf	___lwmod@counter,f
  3918  0F16  2F22               	goto	l2116
  3919  0F17                     l2112:	
  3920  0F17  3001               	movlw	1
  3921  0F18                     u1215:	
  3922  0F18  1003               	clrc
  3923  0F19  0DF0               	rlf	___lwmod@divisor,f
  3924  0F1A  0DF1               	rlf	___lwmod@divisor+1,f
  3925  0F1B  3EFF               	addlw	-1
  3926  0F1C  1D03               	skipz
  3927  0F1D  2F18               	goto	u1215
  3928  0F1E                     l2114:	
  3929  0F1E  3001               	movlw	1
  3930  0F1F  00F4               	movwf	??___lwmod
  3931  0F20  0874               	movf	??___lwmod,w
  3932  0F21  07F5               	addwf	___lwmod@counter,f
  3933  0F22                     l2116:	
  3934  0F22  1FF1               	btfss	___lwmod@divisor+1,7
  3935  0F23  2F25               	goto	u1221
  3936  0F24  2F26               	goto	u1220
  3937  0F25                     u1221:	
  3938  0F25  2F17               	goto	l2112
  3939  0F26                     u1220:	
  3940  0F26                     l2118:	
  3941  0F26  0871               	movf	___lwmod@divisor+1,w
  3942  0F27  0273               	subwf	___lwmod@dividend+1,w
  3943  0F28  1D03               	skipz
  3944  0F29  2F2C               	goto	u1235
  3945  0F2A  0870               	movf	___lwmod@divisor,w
  3946  0F2B  0272               	subwf	___lwmod@dividend,w
  3947  0F2C                     u1235:	
  3948  0F2C  1C03               	skipc
  3949  0F2D  2F2F               	goto	u1231
  3950  0F2E  2F30               	goto	u1230
  3951  0F2F                     u1231:	
  3952  0F2F  2F36               	goto	l2122
  3953  0F30                     u1230:	
  3954  0F30                     l2120:	
  3955  0F30  0870               	movf	___lwmod@divisor,w
  3956  0F31  02F2               	subwf	___lwmod@dividend,f
  3957  0F32  0871               	movf	___lwmod@divisor+1,w
  3958  0F33  1C03               	skipc
  3959  0F34  03F3               	decf	___lwmod@dividend+1,f
  3960  0F35  02F3               	subwf	___lwmod@dividend+1,f
  3961  0F36                     l2122:	
  3962  0F36  3001               	movlw	1
  3963  0F37                     u1245:	
  3964  0F37  1003               	clrc
  3965  0F38  0CF1               	rrf	___lwmod@divisor+1,f
  3966  0F39  0CF0               	rrf	___lwmod@divisor,f
  3967  0F3A  3EFF               	addlw	-1
  3968  0F3B  1D03               	skipz
  3969  0F3C  2F37               	goto	u1245
  3970  0F3D                     l2124:	
  3971  0F3D  3001               	movlw	1
  3972  0F3E  02F5               	subwf	___lwmod@counter,f
  3973  0F3F  1D03               	btfss	3,2
  3974  0F40  2F42               	goto	u1251
  3975  0F41  2F43               	goto	u1250
  3976  0F42                     u1251:	
  3977  0F42  2F26               	goto	l2118
  3978  0F43                     u1250:	
  3979  0F43                     l2126:	
  3980  0F43  0873               	movf	___lwmod@dividend+1,w
  3981  0F44  00F1               	movwf	?___lwmod+1
  3982  0F45  0872               	movf	___lwmod@dividend,w
  3983  0F46  00F0               	movwf	?___lwmod
  3984  0F47                     l762:	
  3985  0F47  0008               	return
  3986  0F48                     __end_of___lwmod:	
  3987                           
  3988                           	psect	text18
  3989  0FBC                     __ptext18:	
  3990 ;; *************** function ___lwdiv *****************
  3991 ;; Defined at:
  3992 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  divisor         2    6[COMMON] unsigned int 
  3995 ;;  dividend        2    8[COMMON] unsigned int 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  quotient        2   11[COMMON] unsigned int 
  3998 ;;  counter         1   13[COMMON] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    6[COMMON] unsigned int 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4008 ;;      Params:         4       0       0       0       0
  4009 ;;      Locals:         3       0       0       0       0
  4010 ;;      Temps:          1       0       0       0       0
  4011 ;;      Totals:         8       0       0       0       0
  4012 ;;Total ram usage:        8 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_get_temp
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           
  4022                           ;psect for function ___lwdiv
  4023  0FBC                     ___lwdiv:	
  4024  0FBC                     l2082:	
  4025                           ;incstack = 0
  4026                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4027                           
  4028  0FBC  01FB               	clrf	___lwdiv@quotient
  4029  0FBD  01FC               	clrf	___lwdiv@quotient+1
  4030  0FBE                     l2084:	
  4031  0FBE  0876               	movf	___lwdiv@divisor,w
  4032  0FBF  0477               	iorwf	___lwdiv@divisor+1,w
  4033  0FC0  1903               	btfsc	3,2
  4034  0FC1  2FC3               	goto	u1131
  4035  0FC2  2FC4               	goto	u1130
  4036  0FC3                     u1131:	
  4037  0FC3  2FFB               	goto	l2104
  4038  0FC4                     u1130:	
  4039  0FC4                     l2086:	
  4040  0FC4  01FD               	clrf	___lwdiv@counter
  4041  0FC5  0AFD               	incf	___lwdiv@counter,f
  4042  0FC6  2FD2               	goto	l2092
  4043  0FC7                     l2088:	
  4044  0FC7  3001               	movlw	1
  4045  0FC8                     u1145:	
  4046  0FC8  1003               	clrc
  4047  0FC9  0DF6               	rlf	___lwdiv@divisor,f
  4048  0FCA  0DF7               	rlf	___lwdiv@divisor+1,f
  4049  0FCB  3EFF               	addlw	-1
  4050  0FCC  1D03               	skipz
  4051  0FCD  2FC8               	goto	u1145
  4052  0FCE                     l2090:	
  4053  0FCE  3001               	movlw	1
  4054  0FCF  00FA               	movwf	??___lwdiv
  4055  0FD0  087A               	movf	??___lwdiv,w
  4056  0FD1  07FD               	addwf	___lwdiv@counter,f
  4057  0FD2                     l2092:	
  4058  0FD2  1FF7               	btfss	___lwdiv@divisor+1,7
  4059  0FD3  2FD5               	goto	u1151
  4060  0FD4  2FD6               	goto	u1150
  4061  0FD5                     u1151:	
  4062  0FD5  2FC7               	goto	l2088
  4063  0FD6                     u1150:	
  4064  0FD6                     l2094:	
  4065  0FD6  3001               	movlw	1
  4066  0FD7                     u1165:	
  4067  0FD7  1003               	clrc
  4068  0FD8  0DFB               	rlf	___lwdiv@quotient,f
  4069  0FD9  0DFC               	rlf	___lwdiv@quotient+1,f
  4070  0FDA  3EFF               	addlw	-1
  4071  0FDB  1D03               	skipz
  4072  0FDC  2FD7               	goto	u1165
  4073  0FDD  0877               	movf	___lwdiv@divisor+1,w
  4074  0FDE  0279               	subwf	___lwdiv@dividend+1,w
  4075  0FDF  1D03               	skipz
  4076  0FE0  2FE3               	goto	u1175
  4077  0FE1  0876               	movf	___lwdiv@divisor,w
  4078  0FE2  0278               	subwf	___lwdiv@dividend,w
  4079  0FE3                     u1175:	
  4080  0FE3  1C03               	skipc
  4081  0FE4  2FE6               	goto	u1171
  4082  0FE5  2FE7               	goto	u1170
  4083  0FE6                     u1171:	
  4084  0FE6  2FEE               	goto	l2100
  4085  0FE7                     u1170:	
  4086  0FE7                     l2096:	
  4087  0FE7  0876               	movf	___lwdiv@divisor,w
  4088  0FE8  02F8               	subwf	___lwdiv@dividend,f
  4089  0FE9  0877               	movf	___lwdiv@divisor+1,w
  4090  0FEA  1C03               	skipc
  4091  0FEB  03F9               	decf	___lwdiv@dividend+1,f
  4092  0FEC  02F9               	subwf	___lwdiv@dividend+1,f
  4093  0FED                     l2098:	
  4094  0FED  147B               	bsf	___lwdiv@quotient,0
  4095  0FEE                     l2100:	
  4096  0FEE  3001               	movlw	1
  4097  0FEF                     u1185:	
  4098  0FEF  1003               	clrc
  4099  0FF0  0CF7               	rrf	___lwdiv@divisor+1,f
  4100  0FF1  0CF6               	rrf	___lwdiv@divisor,f
  4101  0FF2  3EFF               	addlw	-1
  4102  0FF3  1D03               	skipz
  4103  0FF4  2FEF               	goto	u1185
  4104  0FF5                     l2102:	
  4105  0FF5  3001               	movlw	1
  4106  0FF6  02FD               	subwf	___lwdiv@counter,f
  4107  0FF7  1D03               	btfss	3,2
  4108  0FF8  2FFA               	goto	u1191
  4109  0FF9  2FFB               	goto	u1190
  4110  0FFA                     u1191:	
  4111  0FFA  2FD6               	goto	l2094
  4112  0FFB                     u1190:	
  4113  0FFB                     l2104:	
  4114  0FFB  087C               	movf	___lwdiv@quotient+1,w
  4115  0FFC  00F7               	movwf	?___lwdiv+1
  4116  0FFD  087B               	movf	___lwdiv@quotient,w
  4117  0FFE  00F6               	movwf	?___lwdiv
  4118  0FFF                     l752:	
  4119  0FFF  0008               	return
  4120  1000                     __end_of___lwdiv:	
  4121                           
  4122                           	psect	text19
  4123  003E                     __ptext19:	
  4124 ;; *************** function ___awmod *****************
  4125 ;; Defined at:
  4126 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  divisor         2    0[COMMON] int 
  4129 ;;  dividend        2    2[COMMON] int 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  sign            1    6[COMMON] unsigned char 
  4132 ;;  counter         1    5[COMMON] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    0[COMMON] int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         4       0       0       0       0
  4143 ;;      Locals:         2       0       0       0       0
  4144 ;;      Temps:          1       0       0       0       0
  4145 ;;      Totals:         7       0       0       0       0
  4146 ;;Total ram usage:        7 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_get_temp
  4152 ;;		_thermometer_threshhold_settings
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           
  4157                           ;psect for function ___awmod
  4158  003E                     ___awmod:	
  4159  003E                     l2044:	
  4160                           ;incstack = 0
  4161                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4162                           
  4163  003E  01F6               	clrf	___awmod@sign
  4164  003F                     l2046:	
  4165  003F  1FF3               	btfss	___awmod@dividend+1,7
  4166  0040  2842               	goto	u1041
  4167  0041  2843               	goto	u1040
  4168  0042                     u1041:	
  4169  0042  284A               	goto	l2052
  4170  0043                     u1040:	
  4171  0043                     l2048:	
  4172  0043  09F2               	comf	___awmod@dividend,f
  4173  0044  09F3               	comf	___awmod@dividend+1,f
  4174  0045  0AF2               	incf	___awmod@dividend,f
  4175  0046  1903               	skipnz
  4176  0047  0AF3               	incf	___awmod@dividend+1,f
  4177  0048                     l2050:	
  4178  0048  01F6               	clrf	___awmod@sign
  4179  0049  0AF6               	incf	___awmod@sign,f
  4180  004A                     l2052:	
  4181  004A  1FF1               	btfss	___awmod@divisor+1,7
  4182  004B  284D               	goto	u1051
  4183  004C  284E               	goto	u1050
  4184  004D                     u1051:	
  4185  004D  2853               	goto	l2056
  4186  004E                     u1050:	
  4187  004E                     l2054:	
  4188  004E  09F0               	comf	___awmod@divisor,f
  4189  004F  09F1               	comf	___awmod@divisor+1,f
  4190  0050  0AF0               	incf	___awmod@divisor,f
  4191  0051  1903               	skipnz
  4192  0052  0AF1               	incf	___awmod@divisor+1,f
  4193  0053                     l2056:	
  4194  0053  0870               	movf	___awmod@divisor,w
  4195  0054  0471               	iorwf	___awmod@divisor+1,w
  4196  0055  1903               	btfsc	3,2
  4197  0056  2858               	goto	u1061
  4198  0057  2859               	goto	u1060
  4199  0058                     u1061:	
  4200  0058  2888               	goto	l2074
  4201  0059                     u1060:	
  4202  0059                     l2058:	
  4203  0059  01F5               	clrf	___awmod@counter
  4204  005A  0AF5               	incf	___awmod@counter,f
  4205  005B  2867               	goto	l2064
  4206  005C                     l2060:	
  4207  005C  3001               	movlw	1
  4208  005D                     u1075:	
  4209  005D  1003               	clrc
  4210  005E  0DF0               	rlf	___awmod@divisor,f
  4211  005F  0DF1               	rlf	___awmod@divisor+1,f
  4212  0060  3EFF               	addlw	-1
  4213  0061  1D03               	skipz
  4214  0062  285D               	goto	u1075
  4215  0063                     l2062:	
  4216  0063  3001               	movlw	1
  4217  0064  00F4               	movwf	??___awmod
  4218  0065  0874               	movf	??___awmod,w
  4219  0066  07F5               	addwf	___awmod@counter,f
  4220  0067                     l2064:	
  4221  0067  1FF1               	btfss	___awmod@divisor+1,7
  4222  0068  286A               	goto	u1081
  4223  0069  286B               	goto	u1080
  4224  006A                     u1081:	
  4225  006A  285C               	goto	l2060
  4226  006B                     u1080:	
  4227  006B                     l2066:	
  4228  006B  0871               	movf	___awmod@divisor+1,w
  4229  006C  0273               	subwf	___awmod@dividend+1,w
  4230  006D  1D03               	skipz
  4231  006E  2871               	goto	u1095
  4232  006F  0870               	movf	___awmod@divisor,w
  4233  0070  0272               	subwf	___awmod@dividend,w
  4234  0071                     u1095:	
  4235  0071  1C03               	skipc
  4236  0072  2874               	goto	u1091
  4237  0073  2875               	goto	u1090
  4238  0074                     u1091:	
  4239  0074  287B               	goto	l2070
  4240  0075                     u1090:	
  4241  0075                     l2068:	
  4242  0075  0870               	movf	___awmod@divisor,w
  4243  0076  02F2               	subwf	___awmod@dividend,f
  4244  0077  0871               	movf	___awmod@divisor+1,w
  4245  0078  1C03               	skipc
  4246  0079  03F3               	decf	___awmod@dividend+1,f
  4247  007A  02F3               	subwf	___awmod@dividend+1,f
  4248  007B                     l2070:	
  4249  007B  3001               	movlw	1
  4250  007C                     u1105:	
  4251  007C  1003               	clrc
  4252  007D  0CF1               	rrf	___awmod@divisor+1,f
  4253  007E  0CF0               	rrf	___awmod@divisor,f
  4254  007F  3EFF               	addlw	-1
  4255  0080  1D03               	skipz
  4256  0081  287C               	goto	u1105
  4257  0082                     l2072:	
  4258  0082  3001               	movlw	1
  4259  0083  02F5               	subwf	___awmod@counter,f
  4260  0084  1D03               	btfss	3,2
  4261  0085  2887               	goto	u1111
  4262  0086  2888               	goto	u1110
  4263  0087                     u1111:	
  4264  0087  286B               	goto	l2066
  4265  0088                     u1110:	
  4266  0088                     l2074:	
  4267  0088  0876               	movf	___awmod@sign,w
  4268  0089  1903               	btfsc	3,2
  4269  008A  288C               	goto	u1121
  4270  008B  288D               	goto	u1120
  4271  008C                     u1121:	
  4272  008C  2892               	goto	l2078
  4273  008D                     u1120:	
  4274  008D                     l2076:	
  4275  008D  09F2               	comf	___awmod@dividend,f
  4276  008E  09F3               	comf	___awmod@dividend+1,f
  4277  008F  0AF2               	incf	___awmod@dividend,f
  4278  0090  1903               	skipnz
  4279  0091  0AF3               	incf	___awmod@dividend+1,f
  4280  0092                     l2078:	
  4281  0092  0873               	movf	___awmod@dividend+1,w
  4282  0093  00F1               	movwf	?___awmod+1
  4283  0094  0872               	movf	___awmod@dividend,w
  4284  0095  00F0               	movwf	?___awmod
  4285  0096                     l646:	
  4286  0096  0008               	return
  4287  0097                     __end_of___awmod:	
  4288                           
  4289                           	psect	text20
  4290  0097                     __ptext20:	
  4291 ;; *************** function ___awdiv *****************
  4292 ;; Defined at:
  4293 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  divisor         2    0[COMMON] int 
  4296 ;;  dividend        2    2[COMMON] int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  quotient        2    7[COMMON] int 
  4299 ;;  sign            1    6[COMMON] unsigned char 
  4300 ;;  counter         1    5[COMMON] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  2    0[COMMON] int 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4310 ;;      Params:         4       0       0       0       0
  4311 ;;      Locals:         4       0       0       0       0
  4312 ;;      Temps:          1       0       0       0       0
  4313 ;;      Totals:         9       0       0       0       0
  4314 ;;Total ram usage:        9 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_get_temp
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function ___awdiv
  4325  0097                     ___awdiv:	
  4326  0097                     l2000:	
  4327                           ;incstack = 0
  4328                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4329                           
  4330  0097  01F6               	clrf	___awdiv@sign
  4331  0098                     l2002:	
  4332  0098  1FF1               	btfss	___awdiv@divisor+1,7
  4333  0099  289B               	goto	u941
  4334  009A  289C               	goto	u940
  4335  009B                     u941:	
  4336  009B  28A3               	goto	l2008
  4337  009C                     u940:	
  4338  009C                     l2004:	
  4339  009C  09F0               	comf	___awdiv@divisor,f
  4340  009D  09F1               	comf	___awdiv@divisor+1,f
  4341  009E  0AF0               	incf	___awdiv@divisor,f
  4342  009F  1903               	skipnz
  4343  00A0  0AF1               	incf	___awdiv@divisor+1,f
  4344  00A1                     l2006:	
  4345  00A1  01F6               	clrf	___awdiv@sign
  4346  00A2  0AF6               	incf	___awdiv@sign,f
  4347  00A3                     l2008:	
  4348  00A3  1FF3               	btfss	___awdiv@dividend+1,7
  4349  00A4  28A6               	goto	u951
  4350  00A5  28A7               	goto	u950
  4351  00A6                     u951:	
  4352  00A6  28B0               	goto	l2014
  4353  00A7                     u950:	
  4354  00A7                     l2010:	
  4355  00A7  09F2               	comf	___awdiv@dividend,f
  4356  00A8  09F3               	comf	___awdiv@dividend+1,f
  4357  00A9  0AF2               	incf	___awdiv@dividend,f
  4358  00AA  1903               	skipnz
  4359  00AB  0AF3               	incf	___awdiv@dividend+1,f
  4360  00AC                     l2012:	
  4361  00AC  3001               	movlw	1
  4362  00AD  00F4               	movwf	??___awdiv
  4363  00AE  0874               	movf	??___awdiv,w
  4364  00AF  06F6               	xorwf	___awdiv@sign,f
  4365  00B0                     l2014:	
  4366  00B0  01F7               	clrf	___awdiv@quotient
  4367  00B1  01F8               	clrf	___awdiv@quotient+1
  4368  00B2                     l2016:	
  4369  00B2  0870               	movf	___awdiv@divisor,w
  4370  00B3  0471               	iorwf	___awdiv@divisor+1,w
  4371  00B4  1903               	btfsc	3,2
  4372  00B5  28B7               	goto	u961
  4373  00B6  28B8               	goto	u960
  4374  00B7                     u961:	
  4375  00B7  28EF               	goto	l2036
  4376  00B8                     u960:	
  4377  00B8                     l2018:	
  4378  00B8  01F5               	clrf	___awdiv@counter
  4379  00B9  0AF5               	incf	___awdiv@counter,f
  4380  00BA  28C6               	goto	l2024
  4381  00BB                     l2020:	
  4382  00BB  3001               	movlw	1
  4383  00BC                     u975:	
  4384  00BC  1003               	clrc
  4385  00BD  0DF0               	rlf	___awdiv@divisor,f
  4386  00BE  0DF1               	rlf	___awdiv@divisor+1,f
  4387  00BF  3EFF               	addlw	-1
  4388  00C0  1D03               	skipz
  4389  00C1  28BC               	goto	u975
  4390  00C2                     l2022:	
  4391  00C2  3001               	movlw	1
  4392  00C3  00F4               	movwf	??___awdiv
  4393  00C4  0874               	movf	??___awdiv,w
  4394  00C5  07F5               	addwf	___awdiv@counter,f
  4395  00C6                     l2024:	
  4396  00C6  1FF1               	btfss	___awdiv@divisor+1,7
  4397  00C7  28C9               	goto	u981
  4398  00C8  28CA               	goto	u980
  4399  00C9                     u981:	
  4400  00C9  28BB               	goto	l2020
  4401  00CA                     u980:	
  4402  00CA                     l2026:	
  4403  00CA  3001               	movlw	1
  4404  00CB                     u995:	
  4405  00CB  1003               	clrc
  4406  00CC  0DF7               	rlf	___awdiv@quotient,f
  4407  00CD  0DF8               	rlf	___awdiv@quotient+1,f
  4408  00CE  3EFF               	addlw	-1
  4409  00CF  1D03               	skipz
  4410  00D0  28CB               	goto	u995
  4411  00D1  0871               	movf	___awdiv@divisor+1,w
  4412  00D2  0273               	subwf	___awdiv@dividend+1,w
  4413  00D3  1D03               	skipz
  4414  00D4  28D7               	goto	u1005
  4415  00D5  0870               	movf	___awdiv@divisor,w
  4416  00D6  0272               	subwf	___awdiv@dividend,w
  4417  00D7                     u1005:	
  4418  00D7  1C03               	skipc
  4419  00D8  28DA               	goto	u1001
  4420  00D9  28DB               	goto	u1000
  4421  00DA                     u1001:	
  4422  00DA  28E2               	goto	l2032
  4423  00DB                     u1000:	
  4424  00DB                     l2028:	
  4425  00DB  0870               	movf	___awdiv@divisor,w
  4426  00DC  02F2               	subwf	___awdiv@dividend,f
  4427  00DD  0871               	movf	___awdiv@divisor+1,w
  4428  00DE  1C03               	skipc
  4429  00DF  03F3               	decf	___awdiv@dividend+1,f
  4430  00E0  02F3               	subwf	___awdiv@dividend+1,f
  4431  00E1                     l2030:	
  4432  00E1  1477               	bsf	___awdiv@quotient,0
  4433  00E2                     l2032:	
  4434  00E2  3001               	movlw	1
  4435  00E3                     u1015:	
  4436  00E3  1003               	clrc
  4437  00E4  0CF1               	rrf	___awdiv@divisor+1,f
  4438  00E5  0CF0               	rrf	___awdiv@divisor,f
  4439  00E6  3EFF               	addlw	-1
  4440  00E7  1D03               	skipz
  4441  00E8  28E3               	goto	u1015
  4442  00E9                     l2034:	
  4443  00E9  3001               	movlw	1
  4444  00EA  02F5               	subwf	___awdiv@counter,f
  4445  00EB  1D03               	btfss	3,2
  4446  00EC  28EE               	goto	u1021
  4447  00ED  28EF               	goto	u1020
  4448  00EE                     u1021:	
  4449  00EE  28CA               	goto	l2026
  4450  00EF                     u1020:	
  4451  00EF                     l2036:	
  4452  00EF  0876               	movf	___awdiv@sign,w
  4453  00F0  1903               	btfsc	3,2
  4454  00F1  28F3               	goto	u1031
  4455  00F2  28F4               	goto	u1030
  4456  00F3                     u1031:	
  4457  00F3  28F9               	goto	l2040
  4458  00F4                     u1030:	
  4459  00F4                     l2038:	
  4460  00F4  09F7               	comf	___awdiv@quotient,f
  4461  00F5  09F8               	comf	___awdiv@quotient+1,f
  4462  00F6  0AF7               	incf	___awdiv@quotient,f
  4463  00F7  1903               	skipnz
  4464  00F8  0AF8               	incf	___awdiv@quotient+1,f
  4465  00F9                     l2040:	
  4466  00F9  0878               	movf	___awdiv@quotient+1,w
  4467  00FA  00F1               	movwf	?___awdiv+1
  4468  00FB  0877               	movf	___awdiv@quotient,w
  4469  00FC  00F0               	movwf	?___awdiv
  4470  00FD                     l633:	
  4471  00FD  0008               	return
  4472  00FE                     __end_of___awdiv:	
  4473                           
  4474                           	psect	text21
  4475  0D68                     __ptext21:	
  4476 ;; *************** function _ds1302_init *****************
  4477 ;; Defined at:
  4478 ;;		line 6 in file "clock_src.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4492 ;;      Params:         0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    1
  4499 ;; This function calls:
  4500 ;;		_time_write_1
  4501 ;; This function is called by:
  4502 ;;		_main
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           
  4507                           ;psect for function _ds1302_init
  4508  0D68                     _ds1302_init:	
  4509  0D68                     l2146:	
  4510                           ;incstack = 0
  4511                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4512                           
  4513                           
  4514                           ;clock_src.c: 8:    RB0=0;
  4515  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  4516  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  4517  0D6A  1006               	bcf	6,0	;volatile
  4518                           
  4519                           ;clock_src.c: 9:    RB5 =0;
  4520  0D6B  1286               	bcf	6,5	;volatile
  4521                           
  4522                           ;clock_src.c: 10:    RB5=1;
  4523  0D6C  1686               	bsf	6,5	;volatile
  4524  0D6D                     l2148:	
  4525                           
  4526                           ;clock_src.c: 11:    time_write_1(0x8e);
  4527  0D6D  308E               	movlw	142
  4528  0D6E  120A  158A  2651  120A  158A  	fcall	_time_write_1
  4529                           
  4530                           ;clock_src.c: 12:    time_write_1(0);
  4531  0D73  3000               	movlw	0
  4532  0D74  120A  158A  2651  120A  158A  	fcall	_time_write_1
  4533  0D79                     l2150:	
  4534                           
  4535                           ;clock_src.c: 13:    RB5=0;
  4536  0D79  1283               	bcf	3,5	;RP0=0, select bank0
  4537  0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  4538  0D7B  1286               	bcf	6,5	;volatile
  4539  0D7C                     l231:	
  4540  0D7C  0008               	return
  4541  0D7D                     __end_of_ds1302_init:	
  4542                           
  4543                           	psect	text22
  4544  0E51                     __ptext22:	
  4545 ;; *************** function _time_write_1 *****************
  4546 ;; Defined at:
  4547 ;;		line 115 in file "clock_src.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  time_tx         1    wreg     unsigned char 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  time_tx         1    4[COMMON] unsigned char 
  4552 ;;  j               2    2[COMMON] int 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, btemp+1
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       0       0       0       0
  4563 ;;      Locals:         3       0       0       0       0
  4564 ;;      Temps:          2       0       0       0       0
  4565 ;;      Totals:         5       0       0       0       0
  4566 ;;Total ram usage:        5 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_ds1302_init
  4572 ;;		_set_time
  4573 ;;		_get_time
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _time_write_1
  4579  0E51                     _time_write_1:	
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  4583                           ;time_write_1@time_tx stored from wreg
  4584  0E51  00F4               	movwf	time_write_1@time_tx
  4585  0E52                     l1952:	
  4586                           
  4587                           ;clock_src.c: 115: void time_write_1(unsigned char time_tx);clock_src.c: 116: {;clock_sr
      +                          c.c: 117:     int j;;clock_src.c: 118:     for(j=0;j<8;j++)
  4588  0E52  01F2               	clrf	time_write_1@j
  4589  0E53  01F3               	clrf	time_write_1@j+1
  4590  0E54                     l252:	
  4591                           
  4592                           ;clock_src.c: 119:    {;clock_src.c: 120:         RB4=0;
  4593  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  4594  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  4595  0E56  1206               	bcf	6,4	;volatile
  4596                           
  4597                           ;clock_src.c: 121:         RB0=0;
  4598  0E57  1006               	bcf	6,0	;volatile
  4599                           
  4600                           ;clock_src.c: 122:         if(time_tx&0x01)
  4601  0E58  1C74               	btfss	time_write_1@time_tx,0
  4602  0E59  2E5B               	goto	u881
  4603  0E5A  2E5C               	goto	u880
  4604  0E5B                     u881:	
  4605  0E5B  2E5D               	goto	l1960
  4606  0E5C                     u880:	
  4607  0E5C                     l1958:	
  4608                           
  4609                           ;clock_src.c: 123:           {;clock_src.c: 124:             RB4=1;
  4610  0E5C  1606               	bsf	6,4	;volatile
  4611  0E5D                     l1960:	
  4612                           
  4613                           ;clock_src.c: 126:         time_tx=time_tx>>1;
  4614  0E5D  0874               	movf	time_write_1@time_tx,w
  4615  0E5E  00F0               	movwf	??_time_write_1
  4616  0E5F  1003               	clrc
  4617  0E60  0C70               	rrf	??_time_write_1,w
  4618  0E61  00F1               	movwf	??_time_write_1+1
  4619  0E62  0871               	movf	??_time_write_1+1,w
  4620  0E63  00F4               	movwf	time_write_1@time_tx
  4621  0E64                     l1962:	
  4622                           
  4623                           ;clock_src.c: 127:         RB0=1;
  4624  0E64  1406               	bsf	6,0	;volatile
  4625  0E65                     l1964:	
  4626                           
  4627                           ;clock_src.c: 128:     }
  4628  0E65  3001               	movlw	1
  4629  0E66  07F2               	addwf	time_write_1@j,f
  4630  0E67  1803               	skipnc
  4631  0E68  0AF3               	incf	time_write_1@j+1,f
  4632  0E69  3000               	movlw	0
  4633  0E6A  07F3               	addwf	time_write_1@j+1,f
  4634  0E6B                     l1966:	
  4635  0E6B  0873               	movf	time_write_1@j+1,w
  4636  0E6C  3A80               	xorlw	128
  4637  0E6D  00FF               	movwf	btemp+1
  4638  0E6E  3080               	movlw	128
  4639  0E6F  027F               	subwf	btemp+1,w
  4640  0E70  1D03               	skipz
  4641  0E71  2E74               	goto	u895
  4642  0E72  3008               	movlw	8
  4643  0E73  0272               	subwf	time_write_1@j,w
  4644  0E74                     u895:	
  4645  0E74  1C03               	skipc
  4646  0E75  2E77               	goto	u891
  4647  0E76  2E78               	goto	u890
  4648  0E77                     u891:	
  4649  0E77  2E54               	goto	l252
  4650  0E78                     u890:	
  4651  0E78                     l253:	
  4652                           
  4653                           ;clock_src.c: 129:       RB0=0;
  4654  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4655  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4656  0E7A  1006               	bcf	6,0	;volatile
  4657  0E7B                     l255:	
  4658  0E7B  0008               	return
  4659  0E7C                     __end_of_time_write_1:	
  4660                           
  4661                           	psect	text23
  4662  0E26                     __ptext23:	
  4663 ;; *************** function _display_temp *****************
  4664 ;; Defined at:
  4665 ;;		line 12 in file "Thermometer_src.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4679 ;;      Params:         0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0
  4682 ;;      Totals:         0       0       0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    2
  4686 ;; This function calls:
  4687 ;;		_write_char
  4688 ;; This function is called by:
  4689 ;;		_main
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           
  4694                           ;psect for function _display_temp
  4695  0E26                     _display_temp:	
  4696  0E26                     l2242:	
  4697                           ;incstack = 0
  4698                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4699                           
  4700                           
  4701                           ;Thermometer_src.c: 14:  write_char(shi + '0');
  4702  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  4703  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  4704  0E28  0831               	movf	_shi,w
  4705  0E29  3E30               	addlw	48
  4706  0E2A  120A  158A  25A9  120A  158A  	fcall	_write_char
  4707                           
  4708                           ;Thermometer_src.c: 16:  write_char(ge + '0');
  4709  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  4710  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  4711  0E31  0830               	movf	_ge,w
  4712  0E32  3E30               	addlw	48
  4713  0E33  120A  158A  25A9  120A  158A  	fcall	_write_char
  4714                           
  4715                           ;Thermometer_src.c: 17:  write_char('.');
  4716  0E38  302E               	movlw	46
  4717  0E39  120A  158A  25A9  120A  158A  	fcall	_write_char
  4718                           
  4719                           ;Thermometer_src.c: 19:  write_char(shifen + '0');
  4720  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  4721  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  4722  0E40  082F               	movf	_shifen,w
  4723  0E41  3E30               	addlw	48
  4724  0E42  120A  158A  25A9  120A  158A  	fcall	_write_char
  4725                           
  4726                           ;Thermometer_src.c: 21:  write_char(baifen + '0');
  4727  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4728  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4729  0E49  082E               	movf	_baifen,w
  4730  0E4A  3E30               	addlw	48
  4731  0E4B  120A  158A  25A9  120A  158A  	fcall	_write_char
  4732  0E50                     l166:	
  4733  0E50  0008               	return
  4734  0E51                     __end_of_display_temp:	
  4735                           
  4736                           	psect	text24
  4737  01E8                     __ptext24:	
  4738 ;; *************** function _display_date *****************
  4739 ;; Defined at:
  4740 ;;		line 79 in file "clock_src.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  i               2    5[COMMON] int 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4754 ;;      Params:         0       0       0       0       0
  4755 ;;      Locals:         2       0       0       0       0
  4756 ;;      Temps:          2       0       0       0       0
  4757 ;;      Totals:         4       0       0       0       0
  4758 ;;Total ram usage:        4 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; Hardware stack levels required when called:    2
  4761 ;; This function calls:
  4762 ;;		_write_char
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function _display_date
  4770  01E8                     _display_date:	
  4771  01E8                     l2244:	
  4772                           ;incstack = 0
  4773                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4774                           
  4775                           
  4776                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  4777  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  4778  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  4779  01EA  1886               	btfsc	6,1	;volatile
  4780  01EB  29ED               	goto	u1351
  4781  01EC  29EE               	goto	u1350
  4782  01ED                     u1351:	
  4783  01ED  29F6               	goto	l2248
  4784  01EE                     u1350:	
  4785  01EE                     l2246:	
  4786                           
  4787                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  4788  01EE  0823               	movf	_table1+3,w
  4789  01EF  00F3               	movwf	??_display_date
  4790  01F0  0873               	movf	??_display_date,w
  4791  01F1  00A0               	movwf	_table1
  4792                           
  4793                           ;clock_src.c: 85:           table1[1]=table1[4];
  4794  01F2  0824               	movf	_table1+4,w
  4795  01F3  00F3               	movwf	??_display_date
  4796  01F4  0873               	movf	??_display_date,w
  4797  01F5  00A1               	movwf	_table1+1
  4798  01F6                     l2248:	
  4799                           
  4800                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  4801  01F6  0823               	movf	_table1+3,w
  4802  01F7  39F0               	andlw	240
  4803  01F8  00F3               	movwf	??_display_date
  4804  01F9  01F4               	clrf	??_display_date+1
  4805  01FA  0873               	movf	??_display_date,w
  4806  01FB  00F5               	movwf	display_date@i
  4807  01FC  0874               	movf	??_display_date+1,w
  4808  01FD  00F6               	movwf	display_date@i+1
  4809  01FE                     l2250:	
  4810                           
  4811                           ;clock_src.c: 88:      i=i>>4;
  4812  01FE  0E75               	swapf	display_date@i,w
  4813  01FF  390F               	andlw	15
  4814  0200  00F5               	movwf	display_date@i
  4815  0201  0E76               	swapf	display_date@i+1,w
  4816  0202  39F0               	andlw	240
  4817  0203  04F5               	iorwf	display_date@i,f
  4818  0204  0E76               	swapf	display_date@i+1,w
  4819  0205  390F               	andlw	15
  4820  0206  00F6               	movwf	display_date@i+1
  4821  0207  30F0               	movlw	240
  4822  0208  1DF6               	btfss	display_date@i+1,3
  4823  0209  3000               	movlw	0
  4824  020A  04F6               	iorwf	display_date@i+1,f
  4825  020B                     l2252:	
  4826                           
  4827                           ;clock_src.c: 89:      write_char(i + '0');
  4828  020B  0875               	movf	display_date@i,w
  4829  020C  3E30               	addlw	48
  4830  020D  120A  158A  25A9  120A  118A  	fcall	_write_char
  4831  0212                     l2254:	
  4832                           
  4833                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  4834  0212  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0213  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0214  0823               	movf	_table1+3,w
  4837  0215  390F               	andlw	15
  4838  0216  00F3               	movwf	??_display_date
  4839  0217  01F4               	clrf	??_display_date+1
  4840  0218  0873               	movf	??_display_date,w
  4841  0219  00F5               	movwf	display_date@i
  4842  021A  0874               	movf	??_display_date+1,w
  4843  021B  00F6               	movwf	display_date@i+1
  4844  021C                     l2256:	
  4845                           
  4846                           ;clock_src.c: 92:      write_char(i + '0');
  4847  021C  0875               	movf	display_date@i,w
  4848  021D  3E30               	addlw	48
  4849  021E  120A  158A  25A9  120A  118A  	fcall	_write_char
  4850  0223                     l2258:	
  4851                           
  4852                           ;clock_src.c: 93:      write_char('/');
  4853  0223  302F               	movlw	47
  4854  0224  120A  158A  25A9  120A  118A  	fcall	_write_char
  4855  0229                     l2260:	
  4856                           
  4857                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  4858  0229  1283               	bcf	3,5	;RP0=0, select bank0
  4859  022A  1303               	bcf	3,6	;RP1=0, select bank0
  4860  022B  0824               	movf	_table1+4,w
  4861  022C  39F0               	andlw	240
  4862  022D  00F3               	movwf	??_display_date
  4863  022E  01F4               	clrf	??_display_date+1
  4864  022F  0873               	movf	??_display_date,w
  4865  0230  00F5               	movwf	display_date@i
  4866  0231  0874               	movf	??_display_date+1,w
  4867  0232  00F6               	movwf	display_date@i+1
  4868  0233                     l2262:	
  4869                           
  4870                           ;clock_src.c: 98:      i=i>>4;
  4871  0233  0E75               	swapf	display_date@i,w
  4872  0234  390F               	andlw	15
  4873  0235  00F5               	movwf	display_date@i
  4874  0236  0E76               	swapf	display_date@i+1,w
  4875  0237  39F0               	andlw	240
  4876  0238  04F5               	iorwf	display_date@i,f
  4877  0239  0E76               	swapf	display_date@i+1,w
  4878  023A  390F               	andlw	15
  4879  023B  00F6               	movwf	display_date@i+1
  4880  023C  30F0               	movlw	240
  4881  023D  1DF6               	btfss	display_date@i+1,3
  4882  023E  3000               	movlw	0
  4883  023F  04F6               	iorwf	display_date@i+1,f
  4884  0240                     l2264:	
  4885                           
  4886                           ;clock_src.c: 99:      write_char(i + '0');
  4887  0240  0875               	movf	display_date@i,w
  4888  0241  3E30               	addlw	48
  4889  0242  120A  158A  25A9  120A  118A  	fcall	_write_char
  4890  0247                     l2266:	
  4891                           
  4892                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  4893  0247  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0248  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0249  0824               	movf	_table1+4,w
  4896  024A  390F               	andlw	15
  4897  024B  00F3               	movwf	??_display_date
  4898  024C  01F4               	clrf	??_display_date+1
  4899  024D  0873               	movf	??_display_date,w
  4900  024E  00F5               	movwf	display_date@i
  4901  024F  0874               	movf	??_display_date+1,w
  4902  0250  00F6               	movwf	display_date@i+1
  4903  0251                     l2268:	
  4904                           
  4905                           ;clock_src.c: 102:      write_char(i + '0');
  4906  0251  0875               	movf	display_date@i,w
  4907  0252  3E30               	addlw	48
  4908  0253  120A  158A  25A9  120A  118A  	fcall	_write_char
  4909  0258                     l2270:	
  4910                           
  4911                           ;clock_src.c: 103:      write_char('/');
  4912  0258  302F               	movlw	47
  4913  0259  120A  158A  25A9  120A  118A  	fcall	_write_char
  4914  025E                     l2272:	
  4915                           
  4916                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  4917  025E  1283               	bcf	3,5	;RP0=0, select bank0
  4918  025F  1303               	bcf	3,6	;RP1=0, select bank0
  4919  0260  0826               	movf	_table1+6,w
  4920  0261  39F0               	andlw	240
  4921  0262  00F3               	movwf	??_display_date
  4922  0263  01F4               	clrf	??_display_date+1
  4923  0264  0873               	movf	??_display_date,w
  4924  0265  00F5               	movwf	display_date@i
  4925  0266  0874               	movf	??_display_date+1,w
  4926  0267  00F6               	movwf	display_date@i+1
  4927  0268                     l2274:	
  4928                           
  4929                           ;clock_src.c: 108:      write_char(i + '0');
  4930  0268  0875               	movf	display_date@i,w
  4931  0269  3E30               	addlw	48
  4932  026A  120A  158A  25A9  120A  118A  	fcall	_write_char
  4933  026F                     l2276:	
  4934                           
  4935                           ;clock_src.c: 110:      i=table1[6]&0x0f;
  4936  026F  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0270  1303               	bcf	3,6	;RP1=0, select bank0
  4938  0271  0826               	movf	_table1+6,w
  4939  0272  390F               	andlw	15
  4940  0273  00F3               	movwf	??_display_date
  4941  0274  01F4               	clrf	??_display_date+1
  4942  0275  0873               	movf	??_display_date,w
  4943  0276  00F5               	movwf	display_date@i
  4944  0277  0874               	movf	??_display_date+1,w
  4945  0278  00F6               	movwf	display_date@i+1
  4946  0279                     l2278:	
  4947                           
  4948                           ;clock_src.c: 111:      write_char(i + '0');
  4949  0279  0875               	movf	display_date@i,w
  4950  027A  3E30               	addlw	48
  4951  027B  120A  158A  25A9  120A  118A  	fcall	_write_char
  4952  0280                     l249:	
  4953  0280  0008               	return
  4954  0281                     __end_of_display_date:	
  4955                           
  4956                           	psect	text25
  4957  0281                     __ptext25:	
  4958 ;; *************** function _display_clock *****************
  4959 ;; Defined at:
  4960 ;;		line 37 in file "clock_src.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  i               2    5[COMMON] int 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4974 ;;      Params:         0       0       0       0       0
  4975 ;;      Locals:         2       0       0       0       0
  4976 ;;      Temps:          2       0       0       0       0
  4977 ;;      Totals:         4       0       0       0       0
  4978 ;;Total ram usage:        4 bytes
  4979 ;; Hardware stack levels used:    1
  4980 ;; Hardware stack levels required when called:    2
  4981 ;; This function calls:
  4982 ;;		_write_char
  4983 ;; This function is called by:
  4984 ;;		_main
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _display_clock
  4990  0281                     _display_clock:	
  4991  0281                     l2280:	
  4992                           ;incstack = 0
  4993                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4994                           
  4995                           
  4996                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  4997  0281  1283               	bcf	3,5	;RP0=0, select bank0
  4998  0282  1303               	bcf	3,6	;RP1=0, select bank0
  4999  0283  1886               	btfsc	6,1	;volatile
  5000  0284  2A86               	goto	u1361
  5001  0285  2A87               	goto	u1360
  5002  0286                     u1361:	
  5003  0286  2A8F               	goto	l2284
  5004  0287                     u1360:	
  5005  0287                     l2282:	
  5006                           
  5007                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  5008  0287  0823               	movf	_table1+3,w
  5009  0288  00F3               	movwf	??_display_clock
  5010  0289  0873               	movf	??_display_clock,w
  5011  028A  00A0               	movwf	_table1
  5012                           
  5013                           ;clock_src.c: 43:           table1[1]=table1[4];
  5014  028B  0824               	movf	_table1+4,w
  5015  028C  00F3               	movwf	??_display_clock
  5016  028D  0873               	movf	??_display_clock,w
  5017  028E  00A1               	movwf	_table1+1
  5018  028F                     l2284:	
  5019                           
  5020                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  5021  028F  0822               	movf	_table1+2,w
  5022  0290  39F0               	andlw	240
  5023  0291  00F3               	movwf	??_display_clock
  5024  0292  01F4               	clrf	??_display_clock+1
  5025  0293  0873               	movf	??_display_clock,w
  5026  0294  00F5               	movwf	display_clock@i
  5027  0295  0874               	movf	??_display_clock+1,w
  5028  0296  00F6               	movwf	display_clock@i+1
  5029  0297                     l2286:	
  5030                           
  5031                           ;clock_src.c: 47:      i=i>>4;
  5032  0297  0E75               	swapf	display_clock@i,w
  5033  0298  390F               	andlw	15
  5034  0299  00F5               	movwf	display_clock@i
  5035  029A  0E76               	swapf	display_clock@i+1,w
  5036  029B  39F0               	andlw	240
  5037  029C  04F5               	iorwf	display_clock@i,f
  5038  029D  0E76               	swapf	display_clock@i+1,w
  5039  029E  390F               	andlw	15
  5040  029F  00F6               	movwf	display_clock@i+1
  5041  02A0  30F0               	movlw	240
  5042  02A1  1DF6               	btfss	display_clock@i+1,3
  5043  02A2  3000               	movlw	0
  5044  02A3  04F6               	iorwf	display_clock@i+1,f
  5045  02A4                     l2288:	
  5046                           
  5047                           ;clock_src.c: 48:      write_char(i + '0');
  5048  02A4  0875               	movf	display_clock@i,w
  5049  02A5  3E30               	addlw	48
  5050  02A6  120A  158A  25A9  120A  118A  	fcall	_write_char
  5051  02AB                     l2290:	
  5052                           
  5053                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  5054  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  5055  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  5056  02AD  0822               	movf	_table1+2,w
  5057  02AE  390F               	andlw	15
  5058  02AF  00F3               	movwf	??_display_clock
  5059  02B0  01F4               	clrf	??_display_clock+1
  5060  02B1  0873               	movf	??_display_clock,w
  5061  02B2  00F5               	movwf	display_clock@i
  5062  02B3  0874               	movf	??_display_clock+1,w
  5063  02B4  00F6               	movwf	display_clock@i+1
  5064  02B5                     l2292:	
  5065                           
  5066                           ;clock_src.c: 53:      write_char(i + '0');
  5067  02B5  0875               	movf	display_clock@i,w
  5068  02B6  3E30               	addlw	48
  5069  02B7  120A  158A  25A9  120A  118A  	fcall	_write_char
  5070  02BC                     l2294:	
  5071                           
  5072                           ;clock_src.c: 54:      write_char(':');
  5073  02BC  303A               	movlw	58
  5074  02BD  120A  158A  25A9  120A  118A  	fcall	_write_char
  5075  02C2                     l2296:	
  5076                           
  5077                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  5078  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  5079  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  5080  02C4  0821               	movf	_table1+1,w
  5081  02C5  39F0               	andlw	240
  5082  02C6  00F3               	movwf	??_display_clock
  5083  02C7  01F4               	clrf	??_display_clock+1
  5084  02C8  0873               	movf	??_display_clock,w
  5085  02C9  00F5               	movwf	display_clock@i
  5086  02CA  0874               	movf	??_display_clock+1,w
  5087  02CB  00F6               	movwf	display_clock@i+1
  5088  02CC                     l2298:	
  5089                           
  5090                           ;clock_src.c: 59:      i=i>>4;
  5091  02CC  0E75               	swapf	display_clock@i,w
  5092  02CD  390F               	andlw	15
  5093  02CE  00F5               	movwf	display_clock@i
  5094  02CF  0E76               	swapf	display_clock@i+1,w
  5095  02D0  39F0               	andlw	240
  5096  02D1  04F5               	iorwf	display_clock@i,f
  5097  02D2  0E76               	swapf	display_clock@i+1,w
  5098  02D3  390F               	andlw	15
  5099  02D4  00F6               	movwf	display_clock@i+1
  5100  02D5  30F0               	movlw	240
  5101  02D6  1DF6               	btfss	display_clock@i+1,3
  5102  02D7  3000               	movlw	0
  5103  02D8  04F6               	iorwf	display_clock@i+1,f
  5104  02D9                     l2300:	
  5105                           
  5106                           ;clock_src.c: 60:      write_char(i + '0');
  5107  02D9  0875               	movf	display_clock@i,w
  5108  02DA  3E30               	addlw	48
  5109  02DB  120A  158A  25A9  120A  118A  	fcall	_write_char
  5110  02E0                     l2302:	
  5111                           
  5112                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  5113  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  5114  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  5115  02E2  0821               	movf	_table1+1,w
  5116  02E3  390F               	andlw	15
  5117  02E4  00F3               	movwf	??_display_clock
  5118  02E5  01F4               	clrf	??_display_clock+1
  5119  02E6  0873               	movf	??_display_clock,w
  5120  02E7  00F5               	movwf	display_clock@i
  5121  02E8  0874               	movf	??_display_clock+1,w
  5122  02E9  00F6               	movwf	display_clock@i+1
  5123  02EA                     l2304:	
  5124                           
  5125                           ;clock_src.c: 64:      write_char(i + '0');
  5126  02EA  0875               	movf	display_clock@i,w
  5127  02EB  3E30               	addlw	48
  5128  02EC  120A  158A  25A9  120A  118A  	fcall	_write_char
  5129  02F1                     l2306:	
  5130                           
  5131                           ;clock_src.c: 65:      write_char(':');
  5132  02F1  303A               	movlw	58
  5133  02F2  120A  158A  25A9  120A  118A  	fcall	_write_char
  5134  02F7                     l2308:	
  5135                           
  5136                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  5137  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  5138  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  5139  02F9  0820               	movf	_table1,w
  5140  02FA  39F0               	andlw	240
  5141  02FB  00F3               	movwf	??_display_clock
  5142  02FC  01F4               	clrf	??_display_clock+1
  5143  02FD  0873               	movf	??_display_clock,w
  5144  02FE  00F5               	movwf	display_clock@i
  5145  02FF  0874               	movf	??_display_clock+1,w
  5146  0300  00F6               	movwf	display_clock@i+1
  5147  0301                     l2310:	
  5148                           
  5149                           ;clock_src.c: 69:      i=i>>4;
  5150  0301  0E75               	swapf	display_clock@i,w
  5151  0302  390F               	andlw	15
  5152  0303  00F5               	movwf	display_clock@i
  5153  0304  0E76               	swapf	display_clock@i+1,w
  5154  0305  39F0               	andlw	240
  5155  0306  04F5               	iorwf	display_clock@i,f
  5156  0307  0E76               	swapf	display_clock@i+1,w
  5157  0308  390F               	andlw	15
  5158  0309  00F6               	movwf	display_clock@i+1
  5159  030A  30F0               	movlw	240
  5160  030B  1DF6               	btfss	display_clock@i+1,3
  5161  030C  3000               	movlw	0
  5162  030D  04F6               	iorwf	display_clock@i+1,f
  5163  030E                     l2312:	
  5164                           
  5165                           ;clock_src.c: 70:      write_char(i + '0');
  5166  030E  0875               	movf	display_clock@i,w
  5167  030F  3E30               	addlw	48
  5168  0310  120A  158A  25A9  120A  118A  	fcall	_write_char
  5169  0315                     l2314:	
  5170                           
  5171                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  5172  0315  1283               	bcf	3,5	;RP0=0, select bank0
  5173  0316  1303               	bcf	3,6	;RP1=0, select bank0
  5174  0317  0820               	movf	_table1,w
  5175  0318  390F               	andlw	15
  5176  0319  00F3               	movwf	??_display_clock
  5177  031A  01F4               	clrf	??_display_clock+1
  5178  031B  0873               	movf	??_display_clock,w
  5179  031C  00F5               	movwf	display_clock@i
  5180  031D  0874               	movf	??_display_clock+1,w
  5181  031E  00F6               	movwf	display_clock@i+1
  5182  031F                     l2316:	
  5183                           
  5184                           ;clock_src.c: 74:      write_char(i + '0');
  5185  031F  0875               	movf	display_clock@i,w
  5186  0320  3E30               	addlw	48
  5187  0321  120A  158A  25A9  120A  118A  	fcall	_write_char
  5188  0326                     l245:	
  5189  0326  0008               	return
  5190  0327                     __end_of_display_clock:	
  5191                           
  5192                           	psect	text26
  5193  00FE                     __ptext26:	
  5194 ;; *************** function _date_settings *****************
  5195 ;; Defined at:
  5196 ;;		line 198 in file "Button_src.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5210 ;;      Params:         0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0
  5212 ;;      Temps:          0       0       0       0       0
  5213 ;;      Totals:         0       0       0       0       0
  5214 ;;Total ram usage:        0 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    2
  5217 ;; This function calls:
  5218 ;;		_write_char
  5219 ;;		_write_cmd
  5220 ;; This function is called by:
  5221 ;;		_main
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function _date_settings
  5227  00FE                     _date_settings:	
  5228  00FE                     l2468:	
  5229                           ;incstack = 0
  5230                           ; Regs used in _date_settings: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5231                           
  5232                           
  5233                           ;Button_src.c: 199:  RC0 = 0;
  5234  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  5235  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  5236  0100  1007               	bcf	7,0	;volatile
  5237                           
  5238                           ;Button_src.c: 200:  RC1 = 1;
  5239  0101  1487               	bsf	7,1	;volatile
  5240                           
  5241                           ;Button_src.c: 201:  RC2 = 1;
  5242  0102  1507               	bsf	7,2	;volatile
  5243                           
  5244                           ;Button_src.c: 202:  RC3 = 1;
  5245  0103  1587               	bsf	7,3	;volatile
  5246                           
  5247                           ;Button_src.c: 203:   if (RC4 == 0){
  5248  0104  1A07               	btfsc	7,4	;volatile
  5249  0105  2907               	goto	u1491
  5250  0106  2908               	goto	u1490
  5251  0107                     u1491:	
  5252  0107  2972               	goto	l394
  5253  0108                     u1490:	
  5254  0108                     l2470:	
  5255                           
  5256                           ;Button_src.c: 204:       write_cmd(0x1);
  5257  0108  3001               	movlw	1
  5258  0109  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  5259  010E                     l391:	
  5260                           ;Button_src.c: 205:       for(;;){
  5261                           
  5262                           
  5263                           ;Button_src.c: 206:             write_cmd(0x80);
  5264  010E  3080               	movlw	128
  5265  010F  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  5266                           
  5267                           ;Button_src.c: 207:             write_char('D');
  5268  0114  3044               	movlw	68
  5269  0115  120A  158A  25A9  120A  118A  	fcall	_write_char
  5270                           
  5271                           ;Button_src.c: 208:             write_char('a');
  5272  011A  3061               	movlw	97
  5273  011B  120A  158A  25A9  120A  118A  	fcall	_write_char
  5274                           
  5275                           ;Button_src.c: 209:             write_char('t');
  5276  0120  3074               	movlw	116
  5277  0121  120A  158A  25A9  120A  118A  	fcall	_write_char
  5278                           
  5279                           ;Button_src.c: 210:             write_char('e');
  5280  0126  3065               	movlw	101
  5281  0127  120A  158A  25A9  120A  118A  	fcall	_write_char
  5282                           
  5283                           ;Button_src.c: 211:             write_char('_');
  5284  012C  305F               	movlw	95
  5285  012D  120A  158A  25A9  120A  118A  	fcall	_write_char
  5286                           
  5287                           ;Button_src.c: 212:             write_char('S');
  5288  0132  3053               	movlw	83
  5289  0133  120A  158A  25A9  120A  118A  	fcall	_write_char
  5290                           
  5291                           ;Button_src.c: 213:             write_char('e');
  5292  0138  3065               	movlw	101
  5293  0139  120A  158A  25A9  120A  118A  	fcall	_write_char
  5294                           
  5295                           ;Button_src.c: 214:             write_char('t');
  5296  013E  3074               	movlw	116
  5297  013F  120A  158A  25A9  120A  118A  	fcall	_write_char
  5298                           
  5299                           ;Button_src.c: 215:             write_char('t');
  5300  0144  3074               	movlw	116
  5301  0145  120A  158A  25A9  120A  118A  	fcall	_write_char
  5302                           
  5303                           ;Button_src.c: 216:             write_char('i');
  5304  014A  3069               	movlw	105
  5305  014B  120A  158A  25A9  120A  118A  	fcall	_write_char
  5306                           
  5307                           ;Button_src.c: 217:             write_char('n');
  5308  0150  306E               	movlw	110
  5309  0151  120A  158A  25A9  120A  118A  	fcall	_write_char
  5310                           
  5311                           ;Button_src.c: 218:             write_char('g');
  5312  0156  3067               	movlw	103
  5313  0157  120A  158A  25A9  120A  118A  	fcall	_write_char
  5314                           
  5315                           ;Button_src.c: 219:             write_char('s');
  5316  015C  3073               	movlw	115
  5317  015D  120A  158A  25A9  120A  118A  	fcall	_write_char
  5318  0162                     l2472:	
  5319                           
  5320                           ;Button_src.c: 220:             RC0 = 0;
  5321  0162  1283               	bcf	3,5	;RP0=0, select bank0
  5322  0163  1303               	bcf	3,6	;RP1=0, select bank0
  5323  0164  1007               	bcf	7,0	;volatile
  5324  0165                     l2474:	
  5325                           
  5326                           ;Button_src.c: 221:             RC1 = 1;
  5327  0165  1487               	bsf	7,1	;volatile
  5328  0166                     l2476:	
  5329                           
  5330                           ;Button_src.c: 222:             RC2 = 1;
  5331  0166  1507               	bsf	7,2	;volatile
  5332  0167                     l2478:	
  5333                           
  5334                           ;Button_src.c: 223:             RC3 = 1;
  5335  0167  1587               	bsf	7,3	;volatile
  5336  0168                     l2480:	
  5337                           
  5338                           ;Button_src.c: 224:             if (RC7 == 0 ){
  5339  0168  1B87               	btfsc	7,7	;volatile
  5340  0169  296B               	goto	u1501
  5341  016A  296C               	goto	u1500
  5342  016B                     u1501:	
  5343  016B  290E               	goto	l391
  5344  016C                     u1500:	
  5345  016C                     l2482:	
  5346                           
  5347                           ;Button_src.c: 225:             write_cmd(0x1);
  5348  016C  3001               	movlw	1
  5349  016D  120A  158A  25C2  120A  118A  	fcall	_write_cmd
  5350  0172                     l394:	
  5351                           ;Button_src.c: 226:             break;
  5352                           
  5353  0172  0008               	return
  5354  0173                     __end_of_date_settings:	
  5355                           
  5356                           	psect	text27
  5357  0DC2                     __ptext27:	
  5358 ;; *************** function _write_cmd *****************
  5359 ;; Defined at:
  5360 ;;		line 41 in file "LCD_src.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;  x               1    wreg     unsigned char 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;  x               1    2[COMMON] unsigned char 
  5365 ;;  i               2    0        int 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       0       0       0       0
  5376 ;;      Locals:         1       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0
  5378 ;;      Totals:         1       0       0       0       0
  5379 ;;Total ram usage:        1 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		_delay_screen
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;;		_lcd_init
  5387 ;;		_thermometer_threshhold_settings
  5388 ;;		_time_settings
  5389 ;;		_date_settings
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           
  5394                           ;psect for function _write_cmd
  5395  0DC2                     _write_cmd:	
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5399                           ;write_cmd@x stored from wreg
  5400  0DC2  00F2               	movwf	write_cmd@x
  5401  0DC3                     l1808:	
  5402                           
  5403                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  5404  0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  5405  0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  5406  0DC5  1285               	bcf	5,5	;volatile
  5407                           
  5408                           ;LCD_src.c: 45:  RA4=0;
  5409  0DC6  1205               	bcf	5,4	;volatile
  5410                           
  5411                           ;LCD_src.c: 46:  RA3=0;
  5412  0DC7  1185               	bcf	5,3	;volatile
  5413  0DC8                     l1810:	
  5414                           
  5415                           ;LCD_src.c: 47:  delay_screen();
  5416  0DC8  120A  158A  257D  120A  158A  	fcall	_delay_screen
  5417  0DCD                     l1812:	
  5418                           
  5419                           ;LCD_src.c: 48:  RA3=1;
  5420  0DCD  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0DCE  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0DCF  1585               	bsf	5,3	;volatile
  5423  0DD0                     l1814:	
  5424                           
  5425                           ;LCD_src.c: 49:  PORTD=x;
  5426  0DD0  0872               	movf	write_cmd@x,w
  5427  0DD1  0088               	movwf	8	;volatile
  5428  0DD2                     l1816:	
  5429                           
  5430                           ;LCD_src.c: 50:  delay_screen();
  5431  0DD2  120A  158A  257D  120A  158A  	fcall	_delay_screen
  5432  0DD7                     l1818:	
  5433                           
  5434                           ;LCD_src.c: 51:  RA3=0;
  5435  0DD7  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0DD8  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0DD9  1185               	bcf	5,3	;volatile
  5438  0DDA                     l108:	
  5439  0DDA  0008               	return
  5440  0DDB                     __end_of_write_cmd:	
  5441                           
  5442                           	psect	text28
  5443  0DA9                     __ptext28:	
  5444 ;; *************** function _write_char *****************
  5445 ;; Defined at:
  5446 ;;		line 28 in file "LCD_src.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  x               1    wreg     unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  x               1    2[COMMON] unsigned char 
  5451 ;;  i               2    0        int 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         1       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0
  5464 ;;      Totals:         1       0       0       0       0
  5465 ;;Total ram usage:        1 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    1
  5468 ;; This function calls:
  5469 ;;		_delay_screen
  5470 ;; This function is called by:
  5471 ;;		_main
  5472 ;;		_display_temp
  5473 ;;		_display_clock
  5474 ;;		_display_date
  5475 ;;		_thermometer_threshhold_settings
  5476 ;;		_time_settings
  5477 ;;		_date_settings
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _write_char
  5483  0DA9                     _write_char:	
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5487                           ;write_char@x stored from wreg
  5488  0DA9  00F2               	movwf	write_char@x
  5489  0DAA                     l1820:	
  5490                           
  5491                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  5492  0DAA  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0DAB  1303               	bcf	3,6	;RP1=0, select bank0
  5494  0DAC  1685               	bsf	5,5	;volatile
  5495                           
  5496                           ;LCD_src.c: 32:  RA4=0;
  5497  0DAD  1205               	bcf	5,4	;volatile
  5498                           
  5499                           ;LCD_src.c: 33:  RA3=0;
  5500  0DAE  1185               	bcf	5,3	;volatile
  5501  0DAF                     l1822:	
  5502                           
  5503                           ;LCD_src.c: 34:  delay_screen();
  5504  0DAF  120A  158A  257D  120A  158A  	fcall	_delay_screen
  5505  0DB4                     l1824:	
  5506                           
  5507                           ;LCD_src.c: 35:  RA3=1;
  5508  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  5509  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  5510  0DB6  1585               	bsf	5,3	;volatile
  5511  0DB7                     l1826:	
  5512                           
  5513                           ;LCD_src.c: 36:  PORTD= x;
  5514  0DB7  0872               	movf	write_char@x,w
  5515  0DB8  0088               	movwf	8	;volatile
  5516  0DB9                     l1828:	
  5517                           
  5518                           ;LCD_src.c: 37:  delay_screen();
  5519  0DB9  120A  158A  257D  120A  158A  	fcall	_delay_screen
  5520  0DBE                     l1830:	
  5521                           
  5522                           ;LCD_src.c: 38:  RA3=0;
  5523  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  5524  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  5525  0DC0  1185               	bcf	5,3	;volatile
  5526  0DC1                     l105:	
  5527  0DC1  0008               	return
  5528  0DC2                     __end_of_write_char:	
  5529                           
  5530                           	psect	text29
  5531  0D7D                     __ptext29:	
  5532 ;; *************** function _delay_screen *****************
  5533 ;; Defined at:
  5534 ;;		line 70 in file "LCD_src.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  i               2    0[COMMON] int 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, btemp+1
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       0       0       0       0
  5549 ;;      Locals:         2       0       0       0       0
  5550 ;;      Temps:          0       0       0       0       0
  5551 ;;      Totals:         2       0       0       0       0
  5552 ;;Total ram usage:        2 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		_lcd_init
  5558 ;;		_write_char
  5559 ;;		_write_cmd
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           
  5564                           ;psect for function _delay_screen
  5565  0D7D                     _delay_screen:	
  5566  0D7D                     l1792:	
  5567                           ;incstack = 0
  5568                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  5569                           
  5570                           
  5571                           ;LCD_src.c: 71:     int i;;LCD_src.c: 72:  for(i=0;i<5;i++);
  5572  0D7D  01F0               	clrf	delay_screen@i
  5573  0D7E  01F1               	clrf	delay_screen@i+1
  5574  0D7F                     l1798:	
  5575  0D7F  3001               	movlw	1
  5576  0D80  07F0               	addwf	delay_screen@i,f
  5577  0D81  1803               	skipnc
  5578  0D82  0AF1               	incf	delay_screen@i+1,f
  5579  0D83  3000               	movlw	0
  5580  0D84  07F1               	addwf	delay_screen@i+1,f
  5581  0D85                     l1800:	
  5582  0D85  0871               	movf	delay_screen@i+1,w
  5583  0D86  3A80               	xorlw	128
  5584  0D87  00FF               	movwf	btemp+1
  5585  0D88  3080               	movlw	128
  5586  0D89  027F               	subwf	btemp+1,w
  5587  0D8A  1D03               	skipz
  5588  0D8B  2D8E               	goto	u785
  5589  0D8C  3005               	movlw	5
  5590  0D8D  0270               	subwf	delay_screen@i,w
  5591  0D8E                     u785:	
  5592  0D8E  1C03               	skipc
  5593  0D8F  2D91               	goto	u781
  5594  0D90  2D92               	goto	u780
  5595  0D91                     u781:	
  5596  0D91  2D7F               	goto	l1798
  5597  0D92                     u780:	
  5598  0D92                     l118:	
  5599  0D92  0008               	return
  5600  0D93                     __end_of_delay_screen:	
  5601  007E                     btemp	set	126	;btemp
  5602  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    8
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _time_settings->_write_char
    _time_settings->_write_cmd
    _thermometer_threshhold_settings->___awmod
    _set_time->_time_write_1
    _lcd_init->_write_cmd
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_write_char
    _display_date->_write_char
    _display_clock->_write_char
    _date_settings->_write_char
    _date_settings->_write_cmd
    _write_cmd->_delay_screen
    _write_char->_delay_screen

Critical Paths under _main in BANK0

    _main->_thermometer_threshhold_settings

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7965
                      _date_settings
                      _display_clock
                       _display_date
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                 _initialise_buttons
                           _lcd_init
                           _set_time
    _thermometer_threshhold_settings
                      _time_settings
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _time_settings                                        0     0      0     136
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _thermometer_threshhold_settings                     18    18      0    1986
                                              7 COMMON     2     2      0
                                              0 BANK0     16    16      0
                            ___awmod
                _set_beep_threshhold
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _set_beep_threshhold                                  4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _initialise_buttons                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    4338
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1056
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0      68
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     252
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _date_settings                                        0     0      0     136
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _date_settings
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _display_clock
     _write_char
       _delay_screen
   _display_date
     _write_char
       _delay_screen
   _display_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _initialise_buttons
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _set_time
     _time_write_1
   _thermometer_threshhold_settings
     ___awmod
     _set_beep_threshhold
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _time_settings
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      34       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      34      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 09:29:18 2019

                                       pc 0002                                        l99 0D55  
                                      _TX 0032                                        _TZ 0033  
                            ___awdiv@sign 0076                                        _ge 0030  
                                      _wd 0027                                        fsr 0004  
                     _set_beep_threshhold 0DDB                             ?_display_date 0070  
                                     l102 0E25                                       l105 0DC1  
                                     l203 0D67                                       l108 0DDA  
                                     l118 0D92                                       l231 0D7C  
                                     l208 0DA8                                       l240 0EA6  
                                     l241 0EA9                                       l170 0F85  
                                     l163 0D3D                                       l235 0ED5  
                                     l252 0E54                                       l180 003D  
                                     l236 0ED8                                       l245 0326  
                                     l253 0E78                                       l261 0F0D  
                                     l166 0E50                                       l174 0FBB  
                                     l255 0E7B                                       l249 0280  
                                     l361 052A                                       l258 0EDF  
                                     l370 07F2                                       l259 0F06  
                                     l371 078A                                       l363 06A4  
                                     l188 0F81                                       l196 0519  
                                     l357 0D44                                       l391 010E  
                                     l199 0D57                                       l375 07E4  
                                     l367 06FE                                       l384 0183  
                                     l633 00FD                                       l394 0172  
                                     l298 0DFC                                       l299 0DFD  
                                     l387 01E7                                       l646 0096  
                                     l752 0FFF                                       l762 0F47  
                                     _RA0 0028                                       _RA2 002A  
                                     _RB0 0030                                       _RA3 002B  
                                     _RB1 0031                                       _RA4 002C  
                                     _RC0 0038                                       _RA5 002D  
                                     _RC1 0039                                       _RB4 0034  
                                     _RC2 003A                                       _RB5 0035  
                                     _RC3 003B                                       _RE0 0048  
                                     _RC4 003C                                       _RE1 0049  
                                     _RC6 003E                                       _RC7 003F  
                                     u800 0D67                                       u801 0D66  
                                     u810 0FA8                                       u811 0FA7  
                                     u820 0FBB                                       u900 0EED  
                                     u821 0FBA                                       u901 0EEC  
                                     u830 001D                                       u910 0F06  
                                     u831 001C                                       u911 0F05  
                                     u840 003D                                       u920 0DEC  
                                     u841 003C                                       u921 0DEB  
                                     u850 0F6E                                       u930 0DFA  
                                     u851 0F6D                                       u915 0F02  
                                     u931 0DF9                                       u780 0D92  
                                     u940 009C                                       u860 0F80  
                                     u781 0D91                                       u941 009B  
                                     u861 0F7F                                       u950 00A7  
                                     u870 0DA8                                       u790 0D61  
                                     u951 00A6                                       u871 0DA7  
                                     u791 0D60                                       u880 0E5C  
                                     u960 00B8                                       u785 0D8E  
                                     u881 0E5B                                       u961 00B7  
                                     u890 0E78                                       u891 0E77  
                                     u875 0DA4                                       u980 00CA  
                                     u981 00C9                                       _THV 0034  
                                     u895 0E74                                       u975 00BC  
                           ?_display_temp 0070                                       u995 00CB  
                                     _TLV 0035                                       _shi 0031  
                                     fsr0 0004                                       indf 0000  
                            ___awmod@sign 0076                              __CFG_FOSC$HS 0000  
                         ??_time_settings 0073                              __CFG_LVP$OFF 0000  
                                    l2000 0097                                      l2010 00A7  
                                    l2002 0098                                      l2020 00BB  
                                    l2012 00AC                                      l2004 009C  
                                    l2100 0FEE                                      l2030 00E1  
                                    l2022 00C2                                      l2014 00B0  
                                    l2006 00A1                                      l2102 0FF5  
                                    l2110 0F14                                      l2040 00F9  
                                    l2032 00E2                                      l2024 00C6  
                                    l2016 00B2                                      l2008 00A3  
                                    l2104 0FFB                                      l2120 0F30  
                                    l2112 0F17                                      l2200 0482  
                                    l2034 00E9                                      l2026 00CA  
                                    l2018 00B8                                      l2050 0048  
                                    l2122 0F36                                      l2114 0F1E  
                                    l2210 049E                                      l2202 0486  
                                    l2130 0EAA                                      l2300 02D9  
                                    l2028 00DB                                      l2036 00EF  
                                    l2060 005C                                      l2052 004A  
                                    l2044 003E                                      l2124 0F3D  
                                    l2116 0F22                                      l2108 0F0E  
                                    l2220 04E5                                      l2212 04A6  
                                    l2204 048E                                      l1324 0D37  
                                    l2140 0EB5                                      l2132 0EAD  
                                    l2310 0301                                      l2302 02E0  
                                    l2150 0D79                                      l2038 00F4  
                                    l2070 007B                                      l2062 0063  
                                    l2054 004E                                      l2046 003F  
                                    l2118 0F26                                      l2126 0F43  
                                    l2222 0505                                      l2214 04AA  
                                    l2206 0492                                      l2230 0E85  
                                    l1350 0D51                                      l2142 0EC2  
                                    l2134 0EB3                                      l2312 030E  
                                    l2304 02EA                                      l2072 0082  
                                    l2064 0067                                      l2056 0053  
                                    l2048 0043                                      l2224 0518  
                                    l2216 04B2                                      l2208 049A  
                                    l2240 0E99                                      l1352 0D52  
                                    l2160 0E0C                                      l2152 0DFE  
                                    l2144 0EC8                                      l2320 0524  
                                    l2314 0315                                      l2306 02F1  
                                    l2250 01FE                                      l2242 0E26  
                                    l2146 0D68                                      l2066 006B  
                                    l2058 0059                                      l2074 0088  
                                    l2090 0FCE                                      l2082 0FBC  
                                    l2218 04C5                                      l2170 03EC  
                                    l2226 0E7C                                      l1354 0D53  
                                    l2162 0E0D                                      l2154 0E01  
                                    l2410 0714                                      l2402 06E8  
                                    l2330 0614                                      l2322 060E  
                                    l2316 031F                                      l2308 02F7  
                                    l2260 0229                                      l2252 020B  
                                    l2244 01E8                                      l2148 0D6D  
                                    l2076 008D                                      l2068 0075  
                                    l2092 0FD2                                      l2084 0FBE  
                                    l2180 040A                                      l2172 03EF  
                                    l2236 0E87                                      l2228 0E7F  
                                    l1356 0D54                                      l1348 0D4D  
                                    l2164 0E13                                      l2156 0E04  
                                    l2420 0751                                      l2412 072A  
                                    l2404 06F0                                      l2340 061C  
                                    l2332 0616                                      l2324 0611  
                                    l2500 0327                                      l2270 0258  
                                    l2262 0233                                      l2254 0212  
                                    l2246 01EE                                      l2078 0092  
                                    l2094 0FD6                                      l2086 0FC4  
                                    l2190 042D                                      l2182 0410  
                                    l2174 03FA                                      l2238 0E93  
                                    l2166 0E19                                      l2158 0E09  
                                    l2422 0767                                      l2414 0731  
                                    l2406 0706                                      l2350 0624  
                                    l2342 061D                                      l2334 0618  
                                    l2326 0612                                      l2318 051A  
                                    l2510 033F                                      l2502 032B  
                                    l1800 0D85                                      l2280 0281  
                                    l2272 025E                                      l2264 0240  
                                    l2256 021C                                      l2248 01F6  
                                    l2096 0FE7                                      l2088 0FC7  
                                    l2192 0447                                      l2184 0416  
                                    l2176 03FF                                      l1376 0D3E  
                                    l2168 0E1F                                      l2440 079C  
                                    l2424 076B                                      l2416 073A  
                                    l2408 070C                                      l2360 0658  
                                    l2352 062A                                      l2344 061E  
                                    l2336 0618                                      l2328 0613  
                                    l2520 0358                                      l2512 0344  
                                    l2504 0330                                      l1810 0DC8  
                                    l2290 02AB                                      l2282 0287  
                                    l2274 0268                                      l2266 0247  
                                    l2258 0223                                      l2098 0FED  
                                    l1802 0D57                                      l2186 0420  
                                    l2178 0405                                      l2450 07BE  
                                    l2442 07A6                                      l2434 0775  
                                    l2426 076F                                      l2418 074B  
                                    l2370 068D                                      l2362 0669  
                                    l2354 0632                                      l2346 061F  
                                    l2338 061A                                      l2530 0376  
                                    l2522 035E                                      l2514 0349  
                                    l2506 0335                                      l1820 0DAA  
                                    l1812 0DCD                                      l2292 02B5  
                                    l2284 028F                                      l2276 026F  
                                    l2268 0251                                      l1804 0D5B  
                                    l1900 0F52                                      l2196 0454  
                                    l2188 042A                                      l2460 07CE  
                                    l2452 07C4                                      l2444 07AC  
                                    l2436 077D                                      l2428 0773  
                                    l2380 06AE                                      l2364 066F  
                                    l2356 0648                                      l2348 0620  
                                    l2540 0393                                      l2532 037C  
                                    l2524 0364                                      l2516 034E  
                                    l2508 033A                                      l1830 0DBE  
                                    l1822 0DAF                                      l1814 0DD0  
                                    l2470 0108                                      l2294 02BC  
                                    l2286 0297                                      l2278 0279  
                                    l1806 0D61                                      l1910 0F59  
                                    l1902 0F55                                      l2198 0480  
                                    l2462 07D6                                      l2454 07CA  
                                    l2446 07B2                                      l2438 0794  
                                    l2390 06D2                                      l2382 06B6  
                                    l2366 0685                                      l2358 064F  
                                    l2550 03B0                                      l2542 0399  
                                    l2534 0381                                      l2526 036A  
                                    l2518 0353                                      l1824 0DB4  
                                    l1816 0DD2                                      l1808 0DC3  
                                    l2480 0168                                      l2472 0162  
                                    l2296 02C2                                      l2288 02A4  
                                    l1920 0F60                                      l1912 0F5A  
                                    l1904 0F56                                      l1840 0FA8  
                                    l1832 0F82                                      l2464 07EC  
                                    l2448 07B8                                      l2392 06D8  
                                    l2384 06C0                                      l2376 068F  
                                    l2368 0689                                      l2560 03CE  
                                    l2552 03B6                                      l2544 039F  
                                    l2536 0387                                      l2528 0370  
                                    l1826 0DB7                                      l1818 0DD7  
                                    l2482 016C                                      l2474 0165  
                                    l2298 02CC                                      l1930 0F6E  
                                    l1922 0F61                                      l1914 0F5B  
                                    l1906 0F57                                      l1842 0FAB  
                                    l1834 0F8B                                      l2394 06DE  
                                    l2386 06C6                                      l2378 0697  
                                    l2490 01DA                                      l2562 03D4  
                                    l2554 03BC                                      l2546 03A5  
                                    l2538 038D                                      l1828 0DB9  
                                    l2476 0166                                      l2468 00FE  
                                    l1932 0F6F                                      l1924 0F62  
                                    l1916 0F5E                                      l1908 0F58  
                                    l1844 0FAC                                      l1836 0F95  
                                    l1860 0013                                      l2396 06E4  
                                    l2388 06CC                                      l2492 01DB  
                                    l2484 0173                                      l2564 03D9  
                                    l2556 03C2                                      l2548 03AB  
                                    l2478 0167                                      l1950 0D9B  
                                    l1942 0D93                                      l1934 0F79  
                                    l1926 0F63                                      l1918 0F5F  
                                    l1838 0FA2                                      l1846 0FB6  
                                    l1870 0018                                      l1862 0014  
                                    l1854 0008                                      l2494 01DC  
                                    l2486 017D                                      l2566 03DE  
                                    l2558 03C8                                      l1792 0D7D  
                                    l1960 0E5D                                      l1952 0E52  
                                    l1936 0F7B                                      l1928 0F69  
                                    l1880 002E                                      l1872 001D  
                                    l1864 0015                                      l1856 000D  
                                    l1848 0004                                      l2496 01DD  
                                    l2488 01D7                                      l2568 03E3  
                                    l1962 0E64                                      l1938 0F80  
                                    l1890 0F49                                      l1882 002F  
                                    l1874 0020                                      l1866 0016  
                                    l1858 0010                                      l1970 0EDA  
                                    l2498 01E1                                      l1964 0E65  
                                    l1948 0D95                                      l1884 0036  
                                    l1876 002A                                      l1868 0017  
                                    l1980 0EED                                      l1798 0D7F  
                                    l1966 0E6B                                      l1958 0E5C  
                                    l1886 0038                                      l1878 002D  
                                    l1982 0EF2                                      l1896 0F4D  
                                    l1888 0F48                                      l1984 0EF3  
                                    l1976 0EE2                                      l1968 0ED9  
                                    l1992 0DDC                                      l1898 0F4F  
                                    l1986 0EF9                                      l1978 0EE9  
                                    l1994 0DEC                                      l1988 0F0C  
                                    l1996 0DFA                            ?_display_clock 0070  
                                    u1000 00DB                                      u1001 00DA  
                                    u1020 00EF                                      u1021 00EE  
                                    u1005 00D7                                      u1030 00F4  
                                    u1110 0088                                      u1031 00F3  
                                    u1015 00E3                                      u1111 0087  
                                    u1120 008D                                      u1040 0043  
                                    u1200 0F14                                      u1121 008C  
                                    u1105 007C                                      u1041 0042  
                                    u1201 0F13                                      u1050 004E  
                                    u1130 0FC4                                      u1051 004D  
                                    u1131 0FC3                                      u1060 0059  
                                    u1220 0F26                                      u1300 0486  
                                    u1061 0058                                      u1221 0F25  
                                    u1301 0485                                      u1150 0FD6  
                                    u1230 0F30                                      u1310 0492  
                                    u1151 0FD5                                      u1231 0F2F  
                                    u1215 0F18                                      u1311 0491  
                                    u1080 006B                                      u1320 049E  
                                    u1400 06A4                                      u1081 006A  
                                    u1145 0FC8                                      u1321 049D  
                                    u1401 06A3                                      u1090 0075  
                                    u1170 0FE7                                      u1250 0F43  
                                    u1330 04AA                                      u1410 06AE  
                                    u1091 0074                                      u1075 005D  
                                    u1171 0FE6                                      u1251 0F42  
                                    u1235 0F2C                                      u1331 04A9  
                                    u1411 06AD                                      u1500 016C  
                                    u1340 0EA6                                      u1260 0ED5  
                                    u1420 06FD                                      u1501 016B  
                                    u1165 0FD7                                      u1245 0F37  
                                    u1341 0EA5                                      u1261 0ED4  
                                    u1421 06FC                                      u1405 06A0  
                                    u1350 01EE                                      u1190 0FFB  
                                    u1430 0706                                      u1510 017D  
                                    u1351 01ED                                      u1095 0071  
                                    u1191 0FFA                                      u1175 0FE3  
                                    u1431 0705                                      u1511 017C  
                                    u1360 0287                                      u1440 074B  
                                    u1520 01E1                                      u1361 0286  
                                    u1185 0FEF                                      u1345 0EA2  
                                    u1265 0ED1                                      u1441 074A  
                                    u1425 06F9                                      u1521 01E0  
                                    u1450 078A                                      u1370 0524  
                                    u1275 0432                                      u1451 0789  
                                    u1371 0523                                      u1460 0794  
                                    u1380 0624                                      u1285 043D  
                                    u1461 0793                                      u1381 0623  
                                    u1470 07E3                                      u1390 0669  
                                    u1295 044A                                      u1471 07E2  
                                    u1455 0786                                      u1391 0668  
                                    u1480 07EC                                      u1481 07EB  
                                    u1490 0108                                      u1491 0107  
                                    u1475 07DF                      ?_set_beep_threshhold 0070  
                                    _main 0327                                      _init 0D4D  
                                    _var1 002B                                      _var2 002A  
                                    btemp 007E                             write_byte@val 0077  
                                    start 0000               __size_of_initialise_buttons 0007  
                          ??_display_date 0073                                     ?_main 0070  
                          ??_display_temp 0073                                     ?_init 0070  
                         __end_of___awdiv 00FE                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 0097                           ___awdiv@divisor 0070  
                    __end_of_delay_screen 0D93                           __end_of___lwdiv 1000  
                         __end_of___lwmod 0F48                           ___awdiv@counter 0075  
                                   _PORTD 0008                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                                     _TRISD 0088  
                                   _TRISE 0089                             __CFG_PWRTE$ON 0000  
                                   _table 0806                            write_byte@temp 0076  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                   ??_set_beep_threshhold 0071                                     status 0003  
                                   wtemp0 007E                             ??_ds1302_init 0075  
                         __initialization 07F3                              __end_of_main 03EC  
                            __end_of_init 0D56                     __end_of_date_settings 0173  
                                  ??_main 007E                                    ??_init 0070  
                         ??_display_clock 0073      thermometer_threshhold_settings@i_280 003C  
    thermometer_threshhold_settings@i_278 0038      thermometer_threshhold_settings@i_279 003A  
                                  _ADCON1 009F                          ___awdiv@dividend 0072  
                                  _TRISA0 0428                                    _TRISB4 0434  
                                  _TRISE0 0448                          __end_of_lcd_init 0E26  
                        __end_of_get_temp 051A                          __end_of_get_time 0EAA  
                                  _baifen 002E                                 ??___awdiv 0074  
                               ??___awmod 0074                                    _delay2 0D93  
                               ??___lwdiv 007A                                 ??___lwmod 0074  
                     __end_of_ds1302_init 0D7D                                    _table1 0020  
                        ___awdiv@quotient 0077                           ___awmod@divisor 0070  
                                  _shifen 002F                                    _wanfen 002C  
                         ___awmod@counter 0075                              ?_time_read_1 0070  
                     time_write_1@time_tx 0074                             display_date@i 0075  
                        __end_of_set_time 0ED9                        reset_temp@presence 0075  
                 __end_of__initialization 07FC                      __end_of_display_date 0281  
                    __end_of_display_temp 0E51                            __pcstackCOMMON 0070  
                   __size_of_delay_screen 0016                             __end_of_table 080E  
                              __pbssBANK0 0020                              _delay_screen 0D7D  
                      __size_of_init_temp 0007                        __size_of_read_byte 003A  
                             _ds1302_init 0D68                                _delay_temp 0D56  
                              __pmaintext 0327                                   ?_delay2 0070  
                      time_read_1@time_rx 0074                                 ?_lcd_init 0070  
                               ?_get_temp 0070                     __end_of_time_settings 01E8  
                               ?_get_time 0070                                __stringtab 0800  
                      __size_of_write_cmd 0019                                 ?_set_time 0070  
              __end_of_initialise_buttons 0D45                                   ___awdiv 0097  
                                 ___awmod 003E                           __size_of_delay2 0016  
                                 ___lwdiv 0FBC                                   ___lwmod 0F0E  
                                 __ptext1 0173                                   __ptext2 051A  
                                 __ptext3 0DDB                                   __ptext4 0EAA  
                                 __ptext5 0DFE                                   __ptext6 0D3E  
                                 __ptext7 0D37                                   __ptext8 0D4D  
                                 __ptext9 0E7C                                   delay2@i 0070  
                       __end_of_init_temp 0D3E                          ___awmod@dividend 0072  
                       __end_of_read_byte 0F82                                   _qianfen 002D  
                    __size_of_time_read_1 0035               __end_of_set_beep_threshhold 0DFE  
                   __size_of_display_date 0099                                   clrloop0 0D46  
                              ??_lcd_init 0073                                ??_get_temp 0036  
                              ??_get_time 0075                     __size_of_display_temp 002B  
                    end_of_initialization 07FC                            display_clock@i 0075  
                           ?_time_write_1 0070                               ?_delay_temp 0070  
                              _reset_temp 0F82                                ??_set_time 0075  
                            _display_date 01E8                              _display_temp 0E26  
                       __end_of_write_cmd 0DDB                     __end_of_display_clock 0327  
                  __size_of_date_settings 0075                            ??_time_write_1 0070  
                          __end_of_delay2 0DA9                                _write_char 0DA9  
                              _write_byte 0003                       start_initialization 07F3  
                           delay_screen@i 0070                       __size_of_delay_temp 0012  
                            ?_ds1302_init 0070                               ?_reset_temp 0070  
                                ??_delay2 0070                             _date_settings 00FE  
                              read_byte@i 0076                                read_byte@j 0029  
                               ___latbits 0002                             __pcstackBANK0 0036  
                    set_beep_threshhold@x 0073                      set_beep_threshhold@y 0070  
                       __size_of_lcd_init 0028                         __size_of_get_temp 012E  
                       __size_of_get_time 002E                          ___lwdiv@dividend 0078  
                                ?___awdiv 0070                            ?_date_settings 0070  
                                ?___awmod 0070                                  ?___lwdiv 0076  
                                ?___lwmod 0070                         __size_of_set_time 002F  
                             ?_write_char 0070                               ?_write_byte 0070  
                               __pstrings 0800                      __end_of_time_write_1 0E7C  
                      _initialise_buttons 0D3E                       __size_of_reset_temp 003A  
                        ___lwdiv@quotient 007B                                 _init_temp 0D37  
                               _read_byte 0F48                       ?_initialise_buttons 0070  
                               clear_ram0 0D45                              ??_delay_temp 0071  
 __end_of_thermometer_threshhold_settings 07F3  __size_of_thermometer_threshhold_settings 02D9  
       ??_thermometer_threshhold_settings 0077          ?_thermometer_threshhold_settings 0070  
         _thermometer_threshhold_settings 051A                      ??_initialise_buttons 0070  
                  __size_of_time_settings 0075          thermometer_threshhold_settings@i 0036  
        thermometer_threshhold_settings@t 0042          thermometer_threshhold_settings@w 003E  
        thermometer_threshhold_settings@x 0044          thermometer_threshhold_settings@y 0040  
                             __stringbase 0805                             ??_time_read_1 0070  
                             write_char@x 0072                                 get_time@i 0076  
                             write_byte@i 0078                        __end_of_delay_temp 0D68  
                               _write_cmd 0DC2                                ?_init_temp 0070  
                              ?_read_byte 0070                       __size_of_write_char 0019  
            __size_of_set_beep_threshhold 0023                       __size_of_write_byte 003B  
                         ??_date_settings 0073                      __size_of_ds1302_init 0015  
                        __size_of___awdiv 0067                          __size_of___awmod 0059  
                        __size_of___lwdiv 0044                          __size_of___lwmod 003A  
                      __end_of__stringtab 0806                           ___lwdiv@divisor 0076  
                         ___lwdiv@counter 007D                                  __ptext10 0ED9  
                                __ptext11 03EC                                  __ptext20 0097  
                                __ptext12 0003                                  __ptext21 0D68  
                                __ptext13 0F82                                  __ptext22 0E51  
                                __ptext14 0F48                                  __ptext23 0E26  
                                __ptext15 0D56                                  __ptext24 01E8  
                                __ptext16 0D93                                  __ptext25 0281  
                                __ptext17 0F0E                                  __ptext26 00FE  
                                __ptext18 0FBC                                  __ptext27 0DC2  
                                __ptext19 003E                                  __ptext28 0DA9  
                                __ptext29 0D7D                       __end_of_time_read_1 0F0E  
                              ?_write_cmd 0070                                  _lcd_init 0DFE  
                                _get_temp 03EC                                  _get_time 0E7C  
                           _time_settings 0173                             __size_of_main 00C5  
                           __size_of_init 0009                             ?_delay_screen 0070  
                               set_time@i 0075                              ??_reset_temp 0074  
                                _set_time 0EAA                                write_cmd@x 0072  
                   __size_of_time_write_1 002B                    __size_of_display_clock 00A6  
                             delay_temp@x 0072                               delay_temp@y 0070  
                             delay_temp@z 0073                            read_byte@value 0075  
                             ??_init_temp 0070                        __end_of_reset_temp 0FBC  
                             ??_read_byte 0074                            ?_time_settings 0070  
                        ___lwmod@dividend 0072                            ??_delay_screen 0070  
                               stringcode 0800                              _time_write_1 0E51  
                            ??_write_char 0072                              ??_write_byte 0074  
                              _OPTION_REG 0081                               _time_read_1 0ED9  
                            time_read_1@j 0072                           ___lwmod@divisor 0070  
                         ___lwmod@counter 0075                                  stringdir 0800  
                                stringtab 0800                               ??_write_cmd 0072  
                           _display_clock 0281                             time_write_1@j 0072  
                      __end_of_write_char 0DC2                        __end_of_write_byte 003E  
