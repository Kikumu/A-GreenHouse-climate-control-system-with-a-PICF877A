

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 11 12:22:35 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F877A Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  009F                     	;# 
   263  010C                     	;# 
   264  010D                     	;# 
   265  010E                     	;# 
   266  010F                     	;# 
   267  018C                     	;# 
   268  018D                     	;# 
   269  0000                     	;# 
   270  0001                     	;# 
   271  0002                     	;# 
   272  0003                     	;# 
   273  0004                     	;# 
   274  0005                     	;# 
   275  0006                     	;# 
   276  0007                     	;# 
   277  0008                     	;# 
   278  0009                     	;# 
   279  000A                     	;# 
   280  000B                     	;# 
   281  000C                     	;# 
   282  000D                     	;# 
   283  000E                     	;# 
   284  000E                     	;# 
   285  000F                     	;# 
   286  0010                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0014                     	;# 
   291  0015                     	;# 
   292  0015                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001B                     	;# 
   300  001C                     	;# 
   301  001D                     	;# 
   302  001E                     	;# 
   303  001F                     	;# 
   304  0081                     	;# 
   305  0085                     	;# 
   306  0086                     	;# 
   307  0087                     	;# 
   308  0088                     	;# 
   309  0089                     	;# 
   310  008C                     	;# 
   311  008D                     	;# 
   312  008E                     	;# 
   313  0091                     	;# 
   314  0092                     	;# 
   315  0093                     	;# 
   316  0094                     	;# 
   317  0098                     	;# 
   318  0099                     	;# 
   319  009C                     	;# 
   320  009D                     	;# 
   321  009E                     	;# 
   322  009F                     	;# 
   323  010C                     	;# 
   324  010D                     	;# 
   325  010E                     	;# 
   326  010F                     	;# 
   327  018C                     	;# 
   328  018D                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000D                     	;# 
   343  000E                     	;# 
   344  000E                     	;# 
   345  000F                     	;# 
   346  0010                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0015                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001B                     	;# 
   360  001C                     	;# 
   361  001D                     	;# 
   362  001E                     	;# 
   363  001F                     	;# 
   364  0081                     	;# 
   365  0085                     	;# 
   366  0086                     	;# 
   367  0087                     	;# 
   368  0088                     	;# 
   369  0089                     	;# 
   370  008C                     	;# 
   371  008D                     	;# 
   372  008E                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0094                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  018C                     	;# 
   388  018D                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  000E                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0014                     	;# 
   411  0015                     	;# 
   412  0015                     	;# 
   413  0016                     	;# 
   414  0017                     	;# 
   415  0018                     	;# 
   416  0019                     	;# 
   417  001A                     	;# 
   418  001B                     	;# 
   419  001B                     	;# 
   420  001C                     	;# 
   421  001D                     	;# 
   422  001E                     	;# 
   423  001F                     	;# 
   424  0081                     	;# 
   425  0085                     	;# 
   426  0086                     	;# 
   427  0087                     	;# 
   428  0088                     	;# 
   429  0089                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  008E                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0000                     	;# 
   450  0001                     	;# 
   451  0002                     	;# 
   452  0003                     	;# 
   453  0004                     	;# 
   454  0005                     	;# 
   455  0006                     	;# 
   456  0007                     	;# 
   457  0008                     	;# 
   458  0009                     	;# 
   459  000A                     	;# 
   460  000B                     	;# 
   461  000C                     	;# 
   462  000D                     	;# 
   463  000E                     	;# 
   464  000E                     	;# 
   465  000F                     	;# 
   466  0010                     	;# 
   467  0011                     	;# 
   468  0012                     	;# 
   469  0013                     	;# 
   470  0014                     	;# 
   471  0015                     	;# 
   472  0015                     	;# 
   473  0016                     	;# 
   474  0017                     	;# 
   475  0018                     	;# 
   476  0019                     	;# 
   477  001A                     	;# 
   478  001B                     	;# 
   479  001B                     	;# 
   480  001C                     	;# 
   481  001D                     	;# 
   482  001E                     	;# 
   483  001F                     	;# 
   484  0081                     	;# 
   485  0085                     	;# 
   486  0086                     	;# 
   487  0087                     	;# 
   488  0088                     	;# 
   489  0089                     	;# 
   490  008C                     	;# 
   491  008D                     	;# 
   492  008E                     	;# 
   493  0091                     	;# 
   494  0092                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0098                     	;# 
   498  0099                     	;# 
   499  009C                     	;# 
   500  009D                     	;# 
   501  009E                     	;# 
   502  009F                     	;# 
   503  010C                     	;# 
   504  010D                     	;# 
   505  010E                     	;# 
   506  010F                     	;# 
   507  018C                     	;# 
   508  018D                     	;# 
   509  0000                     	;# 
   510  0001                     	;# 
   511  0002                     	;# 
   512  0003                     	;# 
   513  0004                     	;# 
   514  0005                     	;# 
   515  0006                     	;# 
   516  0007                     	;# 
   517  0008                     	;# 
   518  0009                     	;# 
   519  000A                     	;# 
   520  000B                     	;# 
   521  000C                     	;# 
   522  000D                     	;# 
   523  000E                     	;# 
   524  000E                     	;# 
   525  000F                     	;# 
   526  0010                     	;# 
   527  0011                     	;# 
   528  0012                     	;# 
   529  0013                     	;# 
   530  0014                     	;# 
   531  0015                     	;# 
   532  0015                     	;# 
   533  0016                     	;# 
   534  0017                     	;# 
   535  0018                     	;# 
   536  0019                     	;# 
   537  001A                     	;# 
   538  001B                     	;# 
   539  001B                     	;# 
   540  001C                     	;# 
   541  001D                     	;# 
   542  001E                     	;# 
   543  001F                     	;# 
   544  0081                     	;# 
   545  0085                     	;# 
   546  0086                     	;# 
   547  0087                     	;# 
   548  0088                     	;# 
   549  0089                     	;# 
   550  008C                     	;# 
   551  008D                     	;# 
   552  008E                     	;# 
   553  0091                     	;# 
   554  0092                     	;# 
   555  0093                     	;# 
   556  0094                     	;# 
   557  0098                     	;# 
   558  0099                     	;# 
   559  009C                     	;# 
   560  009D                     	;# 
   561  009E                     	;# 
   562  009F                     	;# 
   563  010C                     	;# 
   564  010D                     	;# 
   565  010E                     	;# 
   566  010F                     	;# 
   567  018C                     	;# 
   568  018D                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  000E                     	;# 
   584  000E                     	;# 
   585  000F                     	;# 
   586  0010                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0015                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001B                     	;# 
   600  001C                     	;# 
   601  001D                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  0081                     	;# 
   605  0085                     	;# 
   606  0086                     	;# 
   607  0087                     	;# 
   608  0088                     	;# 
   609  0089                     	;# 
   610  008C                     	;# 
   611  008D                     	;# 
   612  008E                     	;# 
   613  0091                     	;# 
   614  0092                     	;# 
   615  0093                     	;# 
   616  0094                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  010F                     	;# 
   627  018C                     	;# 
   628  018D                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  000E                     	;# 
   645  000F                     	;# 
   646  0010                     	;# 
   647  0011                     	;# 
   648  0012                     	;# 
   649  0013                     	;# 
   650  0014                     	;# 
   651  0015                     	;# 
   652  0015                     	;# 
   653  0016                     	;# 
   654  0017                     	;# 
   655  0018                     	;# 
   656  0019                     	;# 
   657  001A                     	;# 
   658  001B                     	;# 
   659  001B                     	;# 
   660  001C                     	;# 
   661  001D                     	;# 
   662  001E                     	;# 
   663  001F                     	;# 
   664  0081                     	;# 
   665  0085                     	;# 
   666  0086                     	;# 
   667  0087                     	;# 
   668  0088                     	;# 
   669  0089                     	;# 
   670  008C                     	;# 
   671  008D                     	;# 
   672  008E                     	;# 
   673  0091                     	;# 
   674  0092                     	;# 
   675  0093                     	;# 
   676  0094                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009C                     	;# 
   680  009D                     	;# 
   681  009E                     	;# 
   682  009F                     	;# 
   683  010C                     	;# 
   684  010D                     	;# 
   685  010E                     	;# 
   686  010F                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689                           
   690                           	psect	idataBANK1
   691  1481                     __pidataBANK1:	
   692                           
   693                           ;initializer for _table
   694  1481  3400               	retlw	0
   695  1482  3400               	retlw	0
   696  1483  3440               	retlw	64
   697  1484  3412               	retlw	18
   698  1485  3412               	retlw	18
   699  1486  3406               	retlw	6
   700  1487  3419               	retlw	25
   701  1488  3400               	retlw	0
   702  0009                     _PORTE	set	9
   703  0008                     _PORTD	set	8
   704  003E                     _RC6	set	62
   705  003F                     _RC7	set	63
   706  003C                     _RC4	set	60
   707  003B                     _RC3	set	59
   708  003A                     _RC2	set	58
   709  0039                     _RC1	set	57
   710  0038                     _RC0	set	56
   711  004A                     _RE2	set	74
   712  0034                     _RB4	set	52
   713  0031                     _RB1	set	49
   714  0035                     _RB5	set	53
   715  0030                     _RB0	set	48
   716  0048                     _RE0	set	72
   717  002B                     _RA3	set	43
   718  002C                     _RA4	set	44
   719  002D                     _RA5	set	45
   720  002A                     _RA2	set	42
   721  0028                     _RA0	set	40
   722  0087                     _TRISC	set	135
   723  0085                     _TRISA	set	133
   724  0089                     _TRISE	set	137
   725  0081                     _OPTION_REG	set	129
   726  0088                     _TRISD	set	136
   727  009F                     _ADCON1	set	159
   728  0086                     _TRISB	set	134
   729  0434                     _TRISB4	set	1076
   730  0448                     _TRISE0	set	1096
   731  0428                     _TRISA0	set	1064
   732                           
   733                           ; #config settings
   734  0000                     
   735                           	psect	cinit
   736  07E8                     start_initialization:	
   737  07E8                     __initialization:	
   738                           
   739                           ; Initialize objects allocated to BANK1
   740  07E8  1383               	bcf	3,7	;select IRP bank0
   741  07E9  30A8               	movlw	low (__pdataBANK1+8)
   742  07EA  00FD               	movwf	btemp+-1
   743  07EB  3014               	movlw	high __pidataBANK1
   744  07EC  00FE               	movwf	btemp
   745  07ED  3081               	movlw	low __pidataBANK1
   746  07EE  00FF               	movwf	btemp+1
   747  07EF  30A0               	movlw	low __pdataBANK1
   748  07F0  0084               	movwf	4
   749  07F1  160A  118A  24D6  120A  118A  	fcall	init_ram0
   750                           
   751                           ; Clear objects allocated to BANK0
   752  07F6  3020               	movlw	low __pbssBANK0
   753  07F7  0084               	movwf	4
   754  07F8  3062               	movlw	low (__pbssBANK0+66)
   755  07F9  160A  118A  2479   	fcall	clear_ram0
   756  07FC                     end_of_initialization:	
   757                           ;End of C runtime variable initialization code
   758                           
   759  07FC                     __end_of__initialization:	
   760  07FC  0183               	clrf	3
   761  07FD  120A  158A  2B30   	ljmp	_main	;jump to C main() function
   762                           
   763                           	psect	bssBANK0
   764  0020                     __pbssBANK0:	
   765  0020                     _table1:	
   766  0020                     	ds	7
   767  0027                     _day_counter:	
   768  0027                     	ds	2
   769  0029                     _var_night_high:	
   770  0029                     	ds	2
   771  002B                     _var_night_low:	
   772  002B                     	ds	2
   773  002D                     _count:	
   774  002D                     	ds	2
   775  002F                     _p:	
   776  002F                     	ds	2
   777  0031                     _d_type:	
   778  0031                     	ds	2
   779  0033                     _stats:	
   780  0033                     	ds	2
   781  0035                     _day_of_week_var:	
   782  0035                     	ds	2
   783  0037                     _day_high:	
   784  0037                     	ds	2
   785  0039                     _day_low:	
   786  0039                     	ds	2
   787  003B                     _z:	
   788  003B                     	ds	2
   789  003D                     _y:	
   790  003D                     	ds	2
   791  003F                     _x:	
   792  003F                     	ds	2
   793  0041                     _w:	
   794  0041                     	ds	2
   795  0043                     _t:	
   796  0043                     	ds	2
   797  0045                     _wd:	
   798  0045                     	ds	2
   799  0047                     read_byte@j:	
   800  0047                     	ds	1
   801  0048                     _var2:	
   802  0048                     	ds	1
   803  0049                     _var1:	
   804  0049                     	ds	1
   805  004A                     _buzzer_watcher1:	
   806  004A                     	ds	1
   807  004B                     _buzzer_watcher:	
   808  004B                     	ds	1
   809  004C                     _lower_t:	
   810  004C                     	ds	1
   811  004D                     _upper_t:	
   812  004D                     	ds	1
   813  004E                     _prev_hex_mins:	
   814  004E                     	ds	1
   815  004F                     _prev_hex_hours:	
   816  004F                     	ds	1
   817  0050                     _prev_hex_year:	
   818  0050                     	ds	1
   819  0051                     _prev_hex_day:	
   820  0051                     	ds	1
   821  0052                     _prev_hex:	
   822  0052                     	ds	1
   823  0053                     _hrs_limiter:	
   824  0053                     	ds	1
   825  0054                     _day_hex:	
   826  0054                     	ds	1
   827  0055                     _c:	
   828  0055                     	ds	1
   829  0056                     _b:	
   830  0056                     	ds	1
   831  0057                     _a:	
   832  0057                     	ds	1
   833  0058                     _wanfen:	
   834  0058                     	ds	1
   835  0059                     _qianfen:	
   836  0059                     	ds	1
   837  005A                     _baifen:	
   838  005A                     	ds	1
   839  005B                     _shifen:	
   840  005B                     	ds	1
   841  005C                     _ge:	
   842  005C                     	ds	1
   843  005D                     _shi:	
   844  005D                     	ds	1
   845  005E                     _TX:	
   846  005E                     	ds	1
   847  005F                     _TZ:	
   848  005F                     	ds	1
   849  0060                     _THV:	
   850  0060                     	ds	1
   851  0061                     _TLV:	
   852  0061                     	ds	1
   853                           
   854                           	psect	dataBANK1
   855  00A0                     __pdataBANK1:	
   856  00A0                     _table:	
   857  00A0                     	ds	8
   858                           
   859                           	psect	inittext
   860  14D2                     init_fetch0:	
   861                           ;	Called with low address in FSR and high address in W
   862                           
   863  14D2  087E               	movf	126,w
   864  14D3  008A               	movwf	10
   865  14D4  087F               	movf	127,w
   866  14D5  0082               	movwf	2
   867  14D6                     init_ram0:	
   868                           ;Called with:
   869                           ;	high address of idata address in btemp 
   870                           ;	low address of idata address in btemp+1 
   871                           ;	low address of data in FSR
   872                           ;	high address + 1 of data in btemp-1
   873                           
   874  14D6  24D2  160A  118A   	fcall	init_fetch0
   875  14D9  0080               	movwf	0
   876  14DA  0A84               	incf	4,f
   877  14DB  0804               	movf	4,w
   878  14DC  067D               	xorwf	125,w
   879  14DD  1903               	btfsc	3,2
   880  14DE  3400               	retlw	0
   881  14DF  0AFF               	incf	127,f
   882  14E0  1903               	btfsc	3,2
   883  14E1  0AFE               	incf	126,f
   884  14E2  2CD6               	goto	init_ram0
   885                           
   886                           	psect	clrtext
   887  1479                     clear_ram0:	
   888                           ;	Called with FSR containing the base address, and
   889                           ;	W with the last address+1
   890                           
   891  1479  0064               	clrwdt	;clear the watchdog before getting into this loop
   892  147A                     clrloop0:	
   893  147A  0180               	clrf	0	;clear RAM location pointed to by FSR
   894  147B  0A84               	incf	4,f	;increment pointer
   895  147C  0604               	xorwf	4,w	;XOR with final address
   896  147D  1903               	btfsc	3,2	;have we reached the end yet?
   897  147E  3400               	retlw	0	;all done for this memory range, return
   898  147F  0604               	xorwf	4,w	;XOR again to restore value
   899  1480  2C7A               	goto	clrloop0	;do the next byte
   900                           
   901                           	psect	cstackCOMMON
   902  0070                     __pcstackCOMMON:	
   903  0070                     ?_init_temp:	
   904  0070                     ??_init_temp:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_set_time:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_ds1302_init:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ?_init:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ??_init:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_lcd_init:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?_initialise_buttons:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ??_initialise_buttons:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?_get_temp:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_get_time:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_write_cmd:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_write_char:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_display_temp:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_display_date:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_display_clock:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_thermometer_threshhold_settings:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_date_settings:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_time_settings:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_set_beep_threshhold:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_reset_alarm:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ??_reset_alarm:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ?_delay_screen:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ??_delay_screen:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ?_delay_temp:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_delay2:	
   977                           ; 1 bytes @ 0x0
   978                           
   979  0070                     ??_delay2:	
   980                           ; 1 bytes @ 0x0
   981                           
   982  0070                     ?_time_write_1:	
   983                           ; 1 bytes @ 0x0
   984                           
   985  0070                     ??_time_write_1:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0070                     ?_time_read_1:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ??_time_read_1:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_button_delay:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ??_button_delay:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_time_date_hex_terminator:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_time_date_delimiter:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?_main:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_reset_temp:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_write_byte:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_read_byte:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?___lbdiv:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?___lbmod:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?___awmod:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?___lwmod:	
  1028                           ; 2 bytes @ 0x0
  1029                           
  1030  0070                     delay_temp@y:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033  0070                     time_date_delimiter@hex:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036  0070                     time_date_hex_terminator@limiter:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039  0070                     ___lbdiv@divisor:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0070                     ___lbmod@divisor:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0070                     delay_screen@i:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048  0070                     delay2@i:	
  1049                           ; 2 bytes @ 0x0
  1050                           
  1051  0070                     button_delay@i:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054  0070                     ___awmod@divisor:	
  1055                           ; 2 bytes @ 0x0
  1056                           
  1057  0070                     ___lwmod@divisor:	
  1058                           ; 2 bytes @ 0x0
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x0
  1062  0070                     	ds	1
  1063  0071                     ??_delay_temp:	
  1064  0071                     ??_time_date_hex_terminator:	
  1065                           ; 1 bytes @ 0x1
  1066                           
  1067  0071                     ??___lbdiv:	
  1068                           ; 1 bytes @ 0x1
  1069                           
  1070  0071                     ??___lbmod:	
  1071                           ; 1 bytes @ 0x1
  1072                           
  1073  0071                     time_date_delimiter@limiter:	
  1074                           ; 1 bytes @ 0x1
  1075                           
  1076                           
  1077                           ; 1 bytes @ 0x1
  1078  0071                     	ds	1
  1079  0072                     ??_write_cmd:	
  1080  0072                     ??_write_char:	
  1081                           ; 1 bytes @ 0x2
  1082                           
  1083  0072                     ??_set_beep_threshhold:	
  1084                           ; 1 bytes @ 0x2
  1085                           
  1086  0072                     write_char@x:	
  1087                           ; 1 bytes @ 0x2
  1088                           
  1089  0072                     write_cmd@x:	
  1090                           ; 1 bytes @ 0x2
  1091                           
  1092  0072                     delay_temp@x:	
  1093                           ; 1 bytes @ 0x2
  1094                           
  1095  0072                     set_beep_threshhold@x:	
  1096                           ; 1 bytes @ 0x2
  1097                           
  1098  0072                     ___lbdiv@dividend:	
  1099                           ; 1 bytes @ 0x2
  1100                           
  1101  0072                     time_write_1@j:	
  1102                           ; 1 bytes @ 0x2
  1103                           
  1104  0072                     time_read_1@j:	
  1105                           ; 2 bytes @ 0x2
  1106                           
  1107  0072                     time_date_delimiter@type:	
  1108                           ; 2 bytes @ 0x2
  1109                           
  1110  0072                     ___awmod@dividend:	
  1111                           ; 2 bytes @ 0x2
  1112                           
  1113  0072                     ___lwmod@dividend:	
  1114                           ; 2 bytes @ 0x2
  1115                           
  1116                           
  1117                           ; 2 bytes @ 0x2
  1118  0072                     	ds	1
  1119  0073                     ??_lcd_init:	
  1120  0073                     ??_display_temp:	
  1121                           ; 1 bytes @ 0x3
  1122                           
  1123  0073                     ??_display_date:	
  1124                           ; 1 bytes @ 0x3
  1125                           
  1126  0073                     ??_display_clock:	
  1127                           ; 1 bytes @ 0x3
  1128                           
  1129  0073                     ?_set_lower_threshold:	
  1130                           ; 1 bytes @ 0x3
  1131                           
  1132  0073                     ?_set_upper_threshold:	
  1133                           ; 1 bytes @ 0x3
  1134                           
  1135  0073                     ?_display_day:	
  1136                           ; 1 bytes @ 0x3
  1137                           
  1138  0073                     delay_temp@z:	
  1139                           ; 1 bytes @ 0x3
  1140                           
  1141  0073                     time_date_hex_terminator@val:	
  1142                           ; 1 bytes @ 0x3
  1143                           
  1144  0073                     ___lbdiv@counter:	
  1145                           ; 1 bytes @ 0x3
  1146                           
  1147  0073                     set_upper_threshold@upper_val:	
  1148                           ; 1 bytes @ 0x3
  1149                           
  1150  0073                     set_lower_threshold@upper_val:	
  1151                           ; 2 bytes @ 0x3
  1152                           
  1153  0073                     display_day@num:	
  1154                           ; 2 bytes @ 0x3
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0x3
  1158  0073                     	ds	1
  1159  0074                     ??_time_date_delimiter:	
  1160  0074                     ??_reset_temp:	
  1161                           ; 1 bytes @ 0x4
  1162                           
  1163  0074                     ??_write_byte:	
  1164                           ; 1 bytes @ 0x4
  1165                           
  1166  0074                     ??_read_byte:	
  1167                           ; 1 bytes @ 0x4
  1168                           
  1169  0074                     ??___awmod:	
  1170                           ; 1 bytes @ 0x4
  1171                           
  1172  0074                     ??___lwmod:	
  1173                           ; 1 bytes @ 0x4
  1174                           
  1175  0074                     time_write_1@time_tx:	
  1176                           ; 1 bytes @ 0x4
  1177                           
  1178  0074                     time_read_1@time_rx:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181  0074                     ___lbdiv@quotient:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184  0074                     ___lbmod@dividend:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0x4
  1189  0074                     	ds	1
  1190  0075                     ??_set_time:	
  1191  0075                     ??_ds1302_init:	
  1192                           ; 1 bytes @ 0x5
  1193                           
  1194  0075                     ??_get_time:	
  1195                           ; 1 bytes @ 0x5
  1196                           
  1197  0075                     ??_display_day:	
  1198                           ; 1 bytes @ 0x5
  1199                           
  1200  0075                     reset_temp@presence:	
  1201                           ; 1 bytes @ 0x5
  1202                           
  1203  0075                     read_byte@value:	
  1204                           ; 1 bytes @ 0x5
  1205                           
  1206  0075                     ___awmod@counter:	
  1207                           ; 1 bytes @ 0x5
  1208                           
  1209  0075                     ___lbmod@counter:	
  1210                           ; 1 bytes @ 0x5
  1211                           
  1212  0075                     ___lwmod@counter:	
  1213                           ; 1 bytes @ 0x5
  1214                           
  1215  0075                     set_time@i:	
  1216                           ; 1 bytes @ 0x5
  1217                           
  1218  0075                     display_clock@i:	
  1219                           ; 2 bytes @ 0x5
  1220                           
  1221  0075                     display_date@i:	
  1222                           ; 2 bytes @ 0x5
  1223                           
  1224  0075                     set_upper_threshold@lower_val:	
  1225                           ; 2 bytes @ 0x5
  1226                           
  1227  0075                     set_lower_threshold@lower_val:	
  1228                           ; 2 bytes @ 0x5
  1229                           
  1230                           
  1231                           ; 2 bytes @ 0x5
  1232  0075                     	ds	1
  1233  0076                     ?___lwdiv:	
  1234  0076                     write_byte@temp:	
  1235                           ; 2 bytes @ 0x6
  1236                           
  1237  0076                     read_byte@i:	
  1238                           ; 1 bytes @ 0x6
  1239                           
  1240  0076                     time_date_delimiter@val:	
  1241                           ; 1 bytes @ 0x6
  1242                           
  1243  0076                     ___awmod@sign:	
  1244                           ; 1 bytes @ 0x6
  1245                           
  1246  0076                     ___lbmod@rem:	
  1247                           ; 1 bytes @ 0x6
  1248                           
  1249  0076                     get_time@i:	
  1250                           ; 1 bytes @ 0x6
  1251                           
  1252  0076                     ___lwdiv@divisor:	
  1253                           ; 2 bytes @ 0x6
  1254                           
  1255                           
  1256                           ; 2 bytes @ 0x6
  1257  0076                     	ds	1
  1258  0077                     ??_set_lower_threshold:	
  1259  0077                     ??_set_upper_threshold:	
  1260                           ; 1 bytes @ 0x7
  1261                           
  1262  0077                     ?_modulus_func:	
  1263                           ; 1 bytes @ 0x7
  1264                           
  1265  0077                     write_byte@val:	
  1266                           ; 2 bytes @ 0x7
  1267                           
  1268  0077                     modulus_func@x:	
  1269                           ; 1 bytes @ 0x7
  1270                           
  1271                           
  1272                           ; 2 bytes @ 0x7
  1273  0077                     	ds	1
  1274  0078                     write_byte@i:	
  1275  0078                     ___lwdiv@dividend:	
  1276                           ; 1 bytes @ 0x8
  1277                           
  1278                           
  1279                           ; 2 bytes @ 0x8
  1280  0078                     	ds	1
  1281  0079                     modulus_func@y:	
  1282                           
  1283                           ; 2 bytes @ 0x9
  1284  0079                     	ds	1
  1285  007A                     ??___lwdiv:	
  1286                           
  1287                           ; 1 bytes @ 0xA
  1288  007A                     	ds	1
  1289  007B                     ??_modulus_func:	
  1290  007B                     ??_incrementor:	
  1291                           ; 1 bytes @ 0xB
  1292                           
  1293  007B                     ??_decrementor:	
  1294                           ; 1 bytes @ 0xB
  1295                           
  1296  007B                     ___lwdiv@quotient:	
  1297                           ; 1 bytes @ 0xB
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0xB
  1301  007B                     	ds	2
  1302  007D                     ___lwdiv@counter:	
  1303                           
  1304                           ; 1 bytes @ 0xD
  1305  007D                     	ds	1
  1306  007E                     ??_main:	
  1307                           
  1308                           	psect	cstackBANK0
  1309  0062                     __pcstackBANK0:	
  1310                           ; 1 bytes @ 0xE
  1311                           
  1312  0062                     ??_get_temp:	
  1313  0062                     ?_incrementor:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0062                     ?_decrementor:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0062                     incrementor@upper_val:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0062                     decrementor@lower_val:	
  1323                           ; 2 bytes @ 0x0
  1324                           
  1325                           
  1326                           ; 2 bytes @ 0x0
  1327  0062                     	ds	2
  1328  0064                     incrementor@lower_val:	
  1329  0064                     decrementor@upper_val:	
  1330                           ; 2 bytes @ 0x2
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x2
  1334  0064                     	ds	2
  1335  0066                     incrementor@z:	
  1336  0066                     decrementor@z:	
  1337                           ; 1 bytes @ 0x4
  1338                           
  1339                           
  1340                           ; 1 bytes @ 0x4
  1341  0066                     	ds	1
  1342  0067                     ??_thermometer_threshhold_settings:	
  1343  0067                     ??_date_settings:	
  1344                           ; 1 bytes @ 0x5
  1345                           
  1346  0067                     ??_time_settings:	
  1347                           ; 1 bytes @ 0x5
  1348                           
  1349                           
  1350                           ; 1 bytes @ 0x5
  1351  0067                     	ds	3
  1352  006A                     thermometer_threshhold_settings@i:	
  1353                           
  1354                           ; 2 bytes @ 0x8
  1355  006A                     	ds	2
  1356  006C                     main@i:	
  1357                           
  1358                           ; 2 bytes @ 0xA
  1359  006C                     	ds	2
  1360                           
  1361                           	psect	maintext
  1362  0B30                     __pmaintext:	
  1363 ;;
  1364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1365 ;;
  1366 ;; *************** function _main *****************
  1367 ;; Defined at:
  1368 ;;		line 10 in file "mainLogic.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  i               2   10[BANK0 ] int 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : B00/0
  1379 ;;		On exit  : 300/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         0       0       0       0       0
  1383 ;;      Locals:         0       2       0       0       0
  1384 ;;      Temps:          0       0       0       0       0
  1385 ;;      Totals:         0       2       0       0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels required when called:    4
  1388 ;; This function calls:
  1389 ;;		_date_settings
  1390 ;;		_display_clock
  1391 ;;		_display_date
  1392 ;;		_display_day
  1393 ;;		_display_temp
  1394 ;;		_ds1302_init
  1395 ;;		_get_temp
  1396 ;;		_get_time
  1397 ;;		_init
  1398 ;;		_init_temp
  1399 ;;		_initialise_buttons
  1400 ;;		_lcd_init
  1401 ;;		_modulus_func
  1402 ;;		_reset_alarm
  1403 ;;		_set_beep_threshhold
  1404 ;;		_set_lower_threshold
  1405 ;;		_set_time
  1406 ;;		_set_upper_threshold
  1407 ;;		_thermometer_threshhold_settings
  1408 ;;		_time_settings
  1409 ;;		_write_char
  1410 ;;		_write_cmd
  1411 ;; This function is called by:
  1412 ;;		Startup code after reset
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _main
  1418  0B30                     _main:	
  1419                           
  1420                           ;mainLogic.c: 11:     TRISB=0X02;
  1421                           
  1422                           ;incstack = 0
  1423                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1424  0B30  3002               	movlw	2
  1425  0B31  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0B32  0086               	movwf	6	;volatile
  1427                           
  1428                           ;mainLogic.c: 12:     init_temp();
  1429  0B33  160A  118A  246C  120A  158A  	fcall	_init_temp
  1430                           
  1431                           ;mainLogic.c: 13:     set_time();
  1432  0B38  120A  118A  2006  120A  158A  	fcall	_set_time
  1433                           
  1434                           ;mainLogic.c: 14:     ds1302_init();
  1435  0B3D  160A  118A  24B3  120A  158A  	fcall	_ds1302_init
  1436                           
  1437                           ;mainLogic.c: 16:     init();
  1438  0B42  160A  118A  2471  120A  158A  	fcall	_init
  1439                           
  1440                           ;mainLogic.c: 17:     lcd_init();
  1441  0B47  160A  118A  25CF  120A  158A  	fcall	_lcd_init
  1442                           
  1443                           ;mainLogic.c: 18:     init_temp();
  1444  0B4C  160A  118A  246C  120A  158A  	fcall	_init_temp
  1445                           
  1446                           ;mainLogic.c: 19:     initialise_buttons();
  1447  0B51  120A  158A  2000  120A  158A  	fcall	_initialise_buttons
  1448  0B56                     l4435:	
  1449                           
  1450                           ;mainLogic.c: 24:     get_temp();
  1451  0B56  120A  158A  2229  120A  158A  	fcall	_get_temp
  1452                           
  1453                           ;mainLogic.c: 25:     get_time();
  1454  0B5B  160A  118A  2660  120A  158A  	fcall	_get_time
  1455                           
  1456                           ;mainLogic.c: 26:     write_cmd(0x80);
  1457  0B60  3080               	movlw	128
  1458  0B61  160A  118A  2536  120A  158A  	fcall	_write_cmd
  1459                           
  1460                           ;mainLogic.c: 27:     write_char('T');
  1461  0B66  3054               	movlw	84
  1462  0B67  160A  118A  251F  120A  158A  	fcall	_write_char
  1463                           
  1464                           ;mainLogic.c: 28:     write_char('e');
  1465  0B6C  3065               	movlw	101
  1466  0B6D  160A  118A  251F  120A  158A  	fcall	_write_char
  1467                           
  1468                           ;mainLogic.c: 29:     write_char('m');
  1469  0B72  306D               	movlw	109
  1470  0B73  160A  118A  251F  120A  158A  	fcall	_write_char
  1471                           
  1472                           ;mainLogic.c: 30:     write_char('p');
  1473  0B78  3070               	movlw	112
  1474  0B79  160A  118A  251F  120A  158A  	fcall	_write_char
  1475                           
  1476                           ;mainLogic.c: 31:     write_char(':');
  1477  0B7E  303A               	movlw	58
  1478  0B7F  160A  118A  251F  120A  158A  	fcall	_write_char
  1479                           
  1480                           ;mainLogic.c: 32:     display_temp();
  1481  0B84  160A  118A  256A  120A  158A  	fcall	_display_temp
  1482                           
  1483                           ;mainLogic.c: 34:     write_cmd(0x90);
  1484  0B89  3090               	movlw	144
  1485  0B8A  160A  118A  2536  120A  158A  	fcall	_write_cmd
  1486                           
  1487                           ;mainLogic.c: 35:     write_char('D');
  1488  0B8F  3044               	movlw	68
  1489  0B90  160A  118A  251F  120A  158A  	fcall	_write_char
  1490                           
  1491                           ;mainLogic.c: 36:     write_char('a');
  1492  0B95  3061               	movlw	97
  1493  0B96  160A  118A  251F  120A  158A  	fcall	_write_char
  1494                           
  1495                           ;mainLogic.c: 37:     write_char('t');
  1496  0B9B  3074               	movlw	116
  1497  0B9C  160A  118A  251F  120A  158A  	fcall	_write_char
  1498                           
  1499                           ;mainLogic.c: 38:     write_char('e');
  1500  0BA1  3065               	movlw	101
  1501  0BA2  160A  118A  251F  120A  158A  	fcall	_write_char
  1502                           
  1503                           ;mainLogic.c: 39:     write_char(':');
  1504  0BA7  303A               	movlw	58
  1505  0BA8  160A  118A  251F  120A  158A  	fcall	_write_char
  1506                           
  1507                           ;mainLogic.c: 40:     write_char(' ');
  1508  0BAD  3020               	movlw	32
  1509  0BAE  160A  118A  251F  120A  158A  	fcall	_write_char
  1510                           
  1511                           ;mainLogic.c: 42:     display_date();
  1512  0BB3  120A  158A  20F0  120A  158A  	fcall	_display_date
  1513                           
  1514                           ;mainLogic.c: 44:     write_cmd(0x88);
  1515  0BB8  3088               	movlw	136
  1516  0BB9  160A  118A  2536  120A  158A  	fcall	_write_cmd
  1517                           
  1518                           ;mainLogic.c: 45:     write_char('T');
  1519  0BBE  3054               	movlw	84
  1520  0BBF  160A  118A  251F  120A  158A  	fcall	_write_char
  1521                           
  1522                           ;mainLogic.c: 46:     write_char('i');
  1523  0BC4  3069               	movlw	105
  1524  0BC5  160A  118A  251F  120A  158A  	fcall	_write_char
  1525                           
  1526                           ;mainLogic.c: 47:     write_char('m');
  1527  0BCA  306D               	movlw	109
  1528  0BCB  160A  118A  251F  120A  158A  	fcall	_write_char
  1529                           
  1530                           ;mainLogic.c: 48:     write_char('e');
  1531  0BD0  3065               	movlw	101
  1532  0BD1  160A  118A  251F  120A  158A  	fcall	_write_char
  1533                           
  1534                           ;mainLogic.c: 49:     write_char(':');
  1535  0BD6  303A               	movlw	58
  1536  0BD7  160A  118A  251F  120A  158A  	fcall	_write_char
  1537                           
  1538                           ;mainLogic.c: 50:     display_clock();
  1539  0BDC  120A  158A  205A  120A  158A  	fcall	_display_clock
  1540                           
  1541                           ;mainLogic.c: 51:     thermometer_threshhold_settings();
  1542  0BE1  120A  158A  25AA  120A  158A  	fcall	_thermometer_threshhold_settings
  1543                           
  1544                           ;mainLogic.c: 52:     date_settings();
  1545  0BE6  120A  118A  238F  120A  158A  	fcall	_date_settings
  1546                           
  1547                           ;mainLogic.c: 53:     time_settings();
  1548  0BEB  120A  118A  2079  120A  158A  	fcall	_time_settings
  1549                           
  1550                           ;mainLogic.c: 54:     write_cmd(0x98);
  1551  0BF0  3098               	movlw	152
  1552  0BF1  160A  118A  2536  120A  158A  	fcall	_write_cmd
  1553                           
  1554                           ;mainLogic.c: 55:     set_lower_threshold(2,4);
  1555  0BF6  3002               	movlw	2
  1556  0BF7  00F3               	movwf	set_lower_threshold@upper_val
  1557  0BF8  3000               	movlw	0
  1558  0BF9  00F4               	movwf	set_lower_threshold@upper_val+1
  1559  0BFA  3004               	movlw	4
  1560  0BFB  00F5               	movwf	set_lower_threshold@lower_val
  1561  0BFC  3000               	movlw	0
  1562  0BFD  00F6               	movwf	set_lower_threshold@lower_val+1
  1563  0BFE  120A  158A  2016  120A  158A  	fcall	_set_lower_threshold
  1564                           
  1565                           ;mainLogic.c: 56:     set_upper_threshold(2,4);
  1566  0C03  3002               	movlw	2
  1567  0C04  00F3               	movwf	set_upper_threshold@upper_val
  1568  0C05  3000               	movlw	0
  1569  0C06  00F4               	movwf	set_upper_threshold@upper_val+1
  1570  0C07  3004               	movlw	4
  1571  0C08  00F5               	movwf	set_upper_threshold@lower_val
  1572  0C09  3000               	movlw	0
  1573  0C0A  00F6               	movwf	set_upper_threshold@lower_val+1
  1574  0C0B  160A  118A  278C  120A  158A  	fcall	_set_upper_threshold
  1575                           
  1576                           ;mainLogic.c: 57:     set_beep_threshhold(buzzer_watcher);
  1577  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0C11  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0C12  084B               	movf	_buzzer_watcher,w
  1580  0C13  160A  118A  254D  120A  158A  	fcall	_set_beep_threshhold
  1581                           
  1582                           ;mainLogic.c: 58:     reset_alarm();
  1583  0C18  160A  118A  2489  120A  158A  	fcall	_reset_alarm
  1584                           
  1585                           ;mainLogic.c: 59:     for(int i = 0; i < 7; i++)
  1586  0C1D  01EC               	clrf	main@i
  1587  0C1E  01ED               	clrf	main@i+1
  1588  0C1F                     l4505:	
  1589                           
  1590                           ;mainLogic.c: 60:     write_char(' ');
  1591  0C1F  3020               	movlw	32
  1592  0C20  160A  118A  251F  120A  158A  	fcall	_write_char
  1593  0C25  3001               	movlw	1
  1594  0C26  07EC               	addwf	main@i,f
  1595  0C27  1803               	skipnc
  1596  0C28  0AED               	incf	main@i+1,f
  1597  0C29  3000               	movlw	0
  1598  0C2A  07ED               	addwf	main@i+1,f
  1599  0C2B  086D               	movf	main@i+1,w
  1600  0C2C  3A80               	xorlw	128
  1601  0C2D  00FF               	movwf	127
  1602  0C2E  3080               	movlw	128
  1603  0C2F  027F               	subwf	127,w
  1604  0C30  1D03               	skipz
  1605  0C31  2C34               	goto	u3885
  1606  0C32  3007               	movlw	7
  1607  0C33  026C               	subwf	main@i,w
  1608  0C34                     u3885:	
  1609  0C34  1C03               	skipc
  1610  0C35  2C1F               	goto	l4505
  1611                           
  1612                           ;mainLogic.c: 61:     day_counter = modulus_func(day_low,8);
  1613  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0C38  083A               	movf	_day_low+1,w
  1616  0C39  00F8               	movwf	modulus_func@x+1
  1617  0C3A  0839               	movf	_day_low,w
  1618  0C3B  00F7               	movwf	modulus_func@x
  1619  0C3C  3008               	movlw	8
  1620  0C3D  00F9               	movwf	modulus_func@y
  1621  0C3E  3000               	movlw	0
  1622  0C3F  00FA               	movwf	modulus_func@y+1
  1623  0C40  160A  118A  24C2  120A  158A  	fcall	_modulus_func
  1624  0C45  0878               	movf	?_modulus_func+1,w
  1625  0C46  00A8               	movwf	_day_counter+1
  1626  0C47  0877               	movf	?_modulus_func,w
  1627  0C48  00A7               	movwf	_day_counter
  1628                           
  1629                           ;mainLogic.c: 62:     display_day(day_counter);
  1630  0C49  0828               	movf	_day_counter+1,w
  1631  0C4A  00F4               	movwf	display_day@num+1
  1632  0C4B  0827               	movf	_day_counter,w
  1633  0C4C  00F3               	movwf	display_day@num
  1634  0C4D  120A  158A  2186  120A  158A  	fcall	_display_day
  1635  0C52  2B56               	goto	l4435
  1636  0C53                     __end_of_main:	
  1637                           
  1638                           	psect	text1
  1639  0079                     __ptext1:	
  1640 ;; *************** function _time_settings *****************
  1641 ;; Defined at:
  1642 ;;		line 167 in file "Button_src.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 300/0
  1653 ;;		On exit  : 300/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0
  1658 ;;      Temps:          0       3       0       0       0
  1659 ;;      Totals:         0       3       0       0       0
  1660 ;;Total ram usage:        3 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    3
  1663 ;; This function calls:
  1664 ;;		_button_delay
  1665 ;;		_incrementor
  1666 ;;		_modulus_func
  1667 ;;		_set_time
  1668 ;;		_time_date_delimiter
  1669 ;;		_time_date_hex_terminator
  1670 ;;		_write_char
  1671 ;;		_write_cmd
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _time_settings
  1679  0079                     _time_settings:	
  1680                           
  1681                           ;Button_src.c: 168:  RC0 = 1;
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _time_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1685  0079  1407               	bsf	7,0	;volatile
  1686                           
  1687                           ;Button_src.c: 169:  RC1 = 1;
  1688  007A  1487               	bsf	7,1	;volatile
  1689                           
  1690                           ;Button_src.c: 170:  RC2 = 0;
  1691  007B  1107               	bcf	7,2	;volatile
  1692                           
  1693                           ;Button_src.c: 171:  RC3 = 1;
  1694  007C  1587               	bsf	7,3	;volatile
  1695                           
  1696                           ;Button_src.c: 172:   if (RC4 == 0){
  1697  007D  1A07               	btfsc	7,4	;volatile
  1698  007E  0008               	return
  1699                           
  1700                           ;Button_src.c: 173:       write_cmd(0x1);
  1701  007F  3001               	movlw	1
  1702  0080  160A  118A  2536  120A  118A  	fcall	_write_cmd
  1703  0085                     l607:	
  1704                           ;Button_src.c: 174:       for(;;){
  1705                           
  1706                           
  1707                           ;Button_src.c: 175:             write_cmd(0x80);
  1708  0085  3080               	movlw	128
  1709  0086  160A  118A  2536  120A  118A  	fcall	_write_cmd
  1710                           
  1711                           ;Button_src.c: 176:             write_char('T');
  1712  008B  3054               	movlw	84
  1713  008C  160A  118A  251F  120A  118A  	fcall	_write_char
  1714                           
  1715                           ;Button_src.c: 177:             write_char('i');
  1716  0091  3069               	movlw	105
  1717  0092  160A  118A  251F  120A  118A  	fcall	_write_char
  1718                           
  1719                           ;Button_src.c: 178:             write_char('m');
  1720  0097  306D               	movlw	109
  1721  0098  160A  118A  251F  120A  118A  	fcall	_write_char
  1722                           
  1723                           ;Button_src.c: 179:             write_char('e');
  1724  009D  3065               	movlw	101
  1725  009E  160A  118A  251F  120A  118A  	fcall	_write_char
  1726                           
  1727                           ;Button_src.c: 180:             write_char('_');
  1728  00A3  305F               	movlw	95
  1729  00A4  160A  118A  251F  120A  118A  	fcall	_write_char
  1730                           
  1731                           ;Button_src.c: 181:             write_char('S');
  1732  00A9  3053               	movlw	83
  1733  00AA  160A  118A  251F  120A  118A  	fcall	_write_char
  1734                           
  1735                           ;Button_src.c: 182:             write_char('e');
  1736  00AF  3065               	movlw	101
  1737  00B0  160A  118A  251F  120A  118A  	fcall	_write_char
  1738                           
  1739                           ;Button_src.c: 183:             write_char('t');
  1740  00B5  3074               	movlw	116
  1741  00B6  160A  118A  251F  120A  118A  	fcall	_write_char
  1742                           
  1743                           ;Button_src.c: 184:             write_char('t');
  1744  00BB  3074               	movlw	116
  1745  00BC  160A  118A  251F  120A  118A  	fcall	_write_char
  1746                           
  1747                           ;Button_src.c: 185:             write_char('i');
  1748  00C1  3069               	movlw	105
  1749  00C2  160A  118A  251F  120A  118A  	fcall	_write_char
  1750                           
  1751                           ;Button_src.c: 186:             write_char('n');
  1752  00C7  306E               	movlw	110
  1753  00C8  160A  118A  251F  120A  118A  	fcall	_write_char
  1754                           
  1755                           ;Button_src.c: 187:             write_char('g');
  1756  00CD  3067               	movlw	103
  1757  00CE  160A  118A  251F  120A  118A  	fcall	_write_char
  1758                           
  1759                           ;Button_src.c: 188:             write_char('s');
  1760  00D3  3073               	movlw	115
  1761  00D4  160A  118A  251F  120A  118A  	fcall	_write_char
  1762                           
  1763                           ;Button_src.c: 190:             RC0 = 1;
  1764  00D9  1407               	bsf	7,0	;volatile
  1765                           
  1766                           ;Button_src.c: 191:             RC1 = 0;
  1767  00DA  1087               	bcf	7,1	;volatile
  1768                           
  1769                           ;Button_src.c: 192:             RC2 = 1;
  1770  00DB  1507               	bsf	7,2	;volatile
  1771                           
  1772                           ;Button_src.c: 193:             RC3 = 1;
  1773  00DC  1587               	bsf	7,3	;volatile
  1774                           
  1775                           ;Button_src.c: 195:             if(RC7 == 0 && b =='x'){
  1776  00DD  1B87               	btfsc	7,7	;volatile
  1777  00DE  2950               	goto	l4185
  1778  00DF  3078               	movlw	120
  1779  00E0  0656               	xorwf	_b,w
  1780  00E1  1D03               	btfss	3,2
  1781  00E2  2950               	goto	l4185
  1782                           
  1783                           ;Button_src.c: 196:                 if(stats == 1)
  1784  00E3  0333               	decf	_stats,w
  1785  00E4  0434               	iorwf	_stats+1,w
  1786  00E5  1D03               	btfss	3,2
  1787  00E6  28EB               	goto	l609
  1788                           
  1789                           ;Button_src.c: 197:                    a++;
  1790  00E7  3001               	movlw	1
  1791  00E8  00E7               	movwf	??_time_settings
  1792  00E9  0867               	movf	??_time_settings,w
  1793  00EA  07D7               	addwf	_a,f
  1794  00EB                     l609:	
  1795                           
  1796                           ;Button_src.c: 198:                 if(stats == 0){
  1797  00EB  0833               	movf	_stats,w
  1798  00EC  0434               	iorwf	_stats+1,w
  1799  00ED  1D03               	btfss	3,2
  1800  00EE  28F3               	goto	l610
  1801                           
  1802                           ;Button_src.c: 199:                    stats = 1;
  1803  00EF  3001               	movlw	1
  1804  00F0  00B3               	movwf	_stats
  1805  00F1  3000               	movlw	0
  1806  00F2  00B4               	movwf	_stats+1
  1807  00F3                     l610:	
  1808                           ;Button_src.c: 200:                 }
  1809                           
  1810                           
  1811                           ;Button_src.c: 202:                     x++ ;
  1812  00F3  3001               	movlw	1
  1813  00F4  07BF               	addwf	_x,f
  1814  00F5  1803               	skipnc
  1815  00F6  0AC0               	incf	_x+1,f
  1816  00F7  3000               	movlw	0
  1817  00F8  07C0               	addwf	_x+1,f
  1818                           
  1819                           ;Button_src.c: 203:                     x = modulus_func(x,10);
  1820  00F9  0840               	movf	_x+1,w
  1821  00FA  00F8               	movwf	modulus_func@x+1
  1822  00FB  083F               	movf	_x,w
  1823  00FC  00F7               	movwf	modulus_func@x
  1824  00FD  300A               	movlw	10
  1825  00FE  00F9               	movwf	modulus_func@y
  1826  00FF  3000               	movlw	0
  1827  0100  00FA               	movwf	modulus_func@y+1
  1828  0101  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  1829  0106  0878               	movf	?_modulus_func+1,w
  1830  0107  00C0               	movwf	_x+1
  1831  0108  0877               	movf	?_modulus_func,w
  1832  0109  00BF               	movwf	_x
  1833                           
  1834                           ;Button_src.c: 204:                     if (p == 1){
  1835  010A  032F               	decf	_p,w
  1836  010B  0430               	iorwf	_p+1,w
  1837  010C  1D03               	btfss	3,2
  1838  010D  2927               	goto	l4171
  1839                           
  1840                           ;Button_src.c: 205:                         y = incrementor(y,x,'0');
  1841  010E  083E               	movf	_y+1,w
  1842  010F  00E3               	movwf	incrementor@upper_val+1
  1843  0110  083D               	movf	_y,w
  1844  0111  00E2               	movwf	incrementor@upper_val
  1845  0112  0840               	movf	_x+1,w
  1846  0113  00E5               	movwf	incrementor@lower_val+1
  1847  0114  083F               	movf	_x,w
  1848  0115  00E4               	movwf	incrementor@lower_val
  1849  0116  3030               	movlw	48
  1850  0117  00E7               	movwf	??_time_settings
  1851  0118  0867               	movf	??_time_settings,w
  1852  0119  00E6               	movwf	incrementor@z
  1853  011A  160A  118A  25F2  120A  118A  	fcall	_incrementor
  1854  011F  00E8               	movwf	??_time_settings+1
  1855  0120  01E9               	clrf	??_time_settings+2
  1856  0121  0868               	movf	??_time_settings+1,w
  1857  0122  00BD               	movwf	_y
  1858  0123  0869               	movf	??_time_settings+2,w
  1859  0124  00BE               	movwf	_y+1
  1860                           
  1861                           ;Button_src.c: 206:                         p = 0;
  1862  0125  01AF               	clrf	_p
  1863  0126  01B0               	clrf	_p+1
  1864  0127                     l4171:	
  1865                           
  1866                           ;Button_src.c: 208:                     if (x == 9){
  1867  0127  3009               	movlw	9
  1868  0128  063F               	xorwf	_x,w
  1869  0129  0440               	iorwf	_x+1,w
  1870  012A  1D03               	btfss	3,2
  1871  012B  2930               	goto	l4175
  1872                           
  1873                           ;Button_src.c: 209:                         p = 1;
  1874  012C  3001               	movlw	1
  1875  012D  00AF               	movwf	_p
  1876  012E  3000               	movlw	0
  1877  012F  00B0               	movwf	_p+1
  1878  0130                     l4175:	
  1879                           
  1880                           ;Button_src.c: 213:                     a = time_date_hex_terminator(a,'T');
  1881  0130  3054               	movlw	84
  1882  0131  00E7               	movwf	??_time_settings
  1883  0132  0867               	movf	??_time_settings,w
  1884  0133  00F0               	movwf	time_date_hex_terminator@limiter
  1885  0134  0857               	movf	_a,w
  1886  0135  160A  118A  24A4  120A  118A  	fcall	_time_date_hex_terminator
  1887  013A  00E8               	movwf	??_time_settings+1
  1888  013B  0868               	movf	??_time_settings+1,w
  1889  013C  00D7               	movwf	_a
  1890                           
  1891                           ;Button_src.c: 214:                     if(y == 2 && x == 4){
  1892  013D  3002               	movlw	2
  1893  013E  063D               	xorwf	_y,w
  1894  013F  043E               	iorwf	_y+1,w
  1895  0140  1D03               	btfss	3,2
  1896  0141  294B               	goto	l4183
  1897  0142  3004               	movlw	4
  1898  0143  063F               	xorwf	_x,w
  1899  0144  0440               	iorwf	_x+1,w
  1900  0145  1D03               	btfss	3,2
  1901  0146  294B               	goto	l4183
  1902                           
  1903                           ;Button_src.c: 215:                         x = 0;
  1904  0147  01BF               	clrf	_x
  1905  0148  01C0               	clrf	_x+1
  1906                           
  1907                           ;Button_src.c: 216:                         y = 0;
  1908  0149  01BD               	clrf	_y
  1909  014A  01BE               	clrf	_y+1
  1910  014B                     l4183:	
  1911                           
  1912                           ;Button_src.c: 218:                     button_delay();
  1913  014B  160A  118A  24E3  120A  118A  	fcall	_button_delay
  1914  0150                     l4185:	
  1915                           
  1916                           ;Button_src.c: 220:             if(RC7==0 && b == 'y'){
  1917  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0152  1B87               	btfsc	7,7	;volatile
  1920  0153  29CE               	goto	l4219
  1921  0154  3079               	movlw	121
  1922  0155  0656               	xorwf	_b,w
  1923  0156  1D03               	btfss	3,2
  1924  0157  29CE               	goto	l4219
  1925                           
  1926                           ;Button_src.c: 221:                  if(stats == 1)
  1927  0158  0333               	decf	_stats,w
  1928  0159  0434               	iorwf	_stats+1,w
  1929  015A  1D03               	btfss	3,2
  1930  015B  2960               	goto	l615
  1931                           
  1932                           ;Button_src.c: 222:                    c++;
  1933  015C  3001               	movlw	1
  1934  015D  00E7               	movwf	??_time_settings
  1935  015E  0867               	movf	??_time_settings,w
  1936  015F  07D5               	addwf	_c,f
  1937  0160                     l615:	
  1938                           
  1939                           ;Button_src.c: 223:                 if(stats == 0){
  1940  0160  0833               	movf	_stats,w
  1941  0161  0434               	iorwf	_stats+1,w
  1942  0162  1D03               	btfss	3,2
  1943  0163  2968               	goto	l616
  1944                           
  1945                           ;Button_src.c: 224:                     stats = 1;
  1946  0164  3001               	movlw	1
  1947  0165  00B3               	movwf	_stats
  1948  0166  3000               	movlw	0
  1949  0167  00B4               	movwf	_stats+1
  1950  0168                     l616:	
  1951                           ;Button_src.c: 225:                 }
  1952                           
  1953                           
  1954                           ;Button_src.c: 227:                     t++;
  1955  0168  3001               	movlw	1
  1956  0169  07C3               	addwf	_t,f
  1957  016A  1803               	skipnc
  1958  016B  0AC4               	incf	_t+1,f
  1959  016C  3000               	movlw	0
  1960  016D  07C4               	addwf	_t+1,f
  1961                           
  1962                           ;Button_src.c: 228:                     t = modulus_func(t,10);
  1963  016E  0844               	movf	_t+1,w
  1964  016F  00F8               	movwf	modulus_func@x+1
  1965  0170  0843               	movf	_t,w
  1966  0171  00F7               	movwf	modulus_func@x
  1967  0172  300A               	movlw	10
  1968  0173  00F9               	movwf	modulus_func@y
  1969  0174  3000               	movlw	0
  1970  0175  00FA               	movwf	modulus_func@y+1
  1971  0176  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  1972  017B  0878               	movf	?_modulus_func+1,w
  1973  017C  00C4               	movwf	_t+1
  1974  017D  0877               	movf	?_modulus_func,w
  1975  017E  00C3               	movwf	_t
  1976                           
  1977                           ;Button_src.c: 229:                       if (p == 1){
  1978  017F  032F               	decf	_p,w
  1979  0180  0430               	iorwf	_p+1,w
  1980  0181  1D03               	btfss	3,2
  1981  0182  299C               	goto	l4203
  1982                           
  1983                           ;Button_src.c: 230:                         w = incrementor(w,t,'0');
  1984  0183  0842               	movf	_w+1,w
  1985  0184  00E3               	movwf	incrementor@upper_val+1
  1986  0185  0841               	movf	_w,w
  1987  0186  00E2               	movwf	incrementor@upper_val
  1988  0187  0844               	movf	_t+1,w
  1989  0188  00E5               	movwf	incrementor@lower_val+1
  1990  0189  0843               	movf	_t,w
  1991  018A  00E4               	movwf	incrementor@lower_val
  1992  018B  3030               	movlw	48
  1993  018C  00E7               	movwf	??_time_settings
  1994  018D  0867               	movf	??_time_settings,w
  1995  018E  00E6               	movwf	incrementor@z
  1996  018F  160A  118A  25F2  120A  118A  	fcall	_incrementor
  1997  0194  00E8               	movwf	??_time_settings+1
  1998  0195  01E9               	clrf	??_time_settings+2
  1999  0196  0868               	movf	??_time_settings+1,w
  2000  0197  00C1               	movwf	_w
  2001  0198  0869               	movf	??_time_settings+2,w
  2002  0199  00C2               	movwf	_w+1
  2003                           
  2004                           ;Button_src.c: 231:                         p = 0;
  2005  019A  01AF               	clrf	_p
  2006  019B  01B0               	clrf	_p+1
  2007  019C                     l4203:	
  2008                           
  2009                           ;Button_src.c: 233:                     if (t == 9){
  2010  019C  3009               	movlw	9
  2011  019D  0643               	xorwf	_t,w
  2012  019E  0444               	iorwf	_t+1,w
  2013  019F  1D03               	btfss	3,2
  2014  01A0  29A5               	goto	l4207
  2015                           
  2016                           ;Button_src.c: 234:                         p = 1;
  2017  01A1  3001               	movlw	1
  2018  01A2  00AF               	movwf	_p
  2019  01A3  3000               	movlw	0
  2020  01A4  00B0               	movwf	_p+1
  2021  01A5                     l4207:	
  2022                           
  2023                           ;Button_src.c: 236:                     w = incrementor(w,t,'9');
  2024  01A5  0842               	movf	_w+1,w
  2025  01A6  00E3               	movwf	incrementor@upper_val+1
  2026  01A7  0841               	movf	_w,w
  2027  01A8  00E2               	movwf	incrementor@upper_val
  2028  01A9  0844               	movf	_t+1,w
  2029  01AA  00E5               	movwf	incrementor@lower_val+1
  2030  01AB  0843               	movf	_t,w
  2031  01AC  00E4               	movwf	incrementor@lower_val
  2032  01AD  3039               	movlw	57
  2033  01AE  00E7               	movwf	??_time_settings
  2034  01AF  0867               	movf	??_time_settings,w
  2035  01B0  00E6               	movwf	incrementor@z
  2036  01B1  160A  118A  25F2  120A  118A  	fcall	_incrementor
  2037  01B6  00E8               	movwf	??_time_settings+1
  2038  01B7  01E9               	clrf	??_time_settings+2
  2039  01B8  0868               	movf	??_time_settings+1,w
  2040  01B9  00C1               	movwf	_w
  2041  01BA  0869               	movf	??_time_settings+2,w
  2042  01BB  00C2               	movwf	_w+1
  2043                           
  2044                           ;Button_src.c: 237:                     if(c == (0x59 + 1)){
  2045  01BC  305A               	movlw	90
  2046  01BD  0655               	xorwf	_c,w
  2047  01BE  1903               	btfsc	3,2
  2048                           
  2049                           ;Button_src.c: 238:                         c = 0x00;
  2050  01BF  01D5               	clrf	_c
  2051                           
  2052                           ;Button_src.c: 240:                     if(w == 6){
  2053  01C0  3006               	movlw	6
  2054  01C1  0641               	xorwf	_w,w
  2055  01C2  0442               	iorwf	_w+1,w
  2056  01C3  1D03               	btfss	3,2
  2057  01C4  29C9               	goto	l4217
  2058                           
  2059                           ;Button_src.c: 241:                         w = 0;
  2060  01C5  01C1               	clrf	_w
  2061  01C6  01C2               	clrf	_w+1
  2062                           
  2063                           ;Button_src.c: 242:                         t = 0;
  2064  01C7  01C3               	clrf	_t
  2065  01C8  01C4               	clrf	_t+1
  2066  01C9                     l4217:	
  2067                           
  2068                           ;Button_src.c: 244:                     button_delay();
  2069  01C9  160A  118A  24E3  120A  118A  	fcall	_button_delay
  2070  01CE                     l4219:	
  2071                           
  2072                           ;Button_src.c: 247:              write_cmd(0x88);
  2073  01CE  3088               	movlw	136
  2074  01CF  160A  118A  2536  120A  118A  	fcall	_write_cmd
  2075                           
  2076                           ;Button_src.c: 248:               if(stats==0){
  2077  01D4  0833               	movf	_stats,w
  2078  01D5  0434               	iorwf	_stats+1,w
  2079  01D6  1D03               	btfss	3,2
  2080  01D7  29E0               	goto	l4225
  2081                           
  2082                           ;Button_src.c: 249:                   table[2] = prev_hex_hours;
  2083  01D8  084F               	movf	_prev_hex_hours,w
  2084  01D9  00E7               	movwf	??_time_settings
  2085  01DA  0867               	movf	??_time_settings,w
  2086  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2087  01DC  00A2               	movwf	(_table^(0+128)+2)
  2088                           
  2089                           ;Button_src.c: 250:                   table[1] = prev_hex_mins;
  2090  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2091  01DE  084E               	movf	_prev_hex_mins,w
  2092  01DF  29EB               	goto	L1
  2093  01E0                     l4225:	
  2094                           ;Button_src.c: 251:               }
  2095                           
  2096  01E0  0333               	decf	_stats,w
  2097  01E1  0434               	iorwf	_stats+1,w
  2098  01E2  1D03               	btfss	3,2
  2099  01E3  29EF               	goto	l4229
  2100                           
  2101                           ;Button_src.c: 253:               {;Button_src.c: 254:                  table[2]= a;
  2102  01E4  0857               	movf	_a,w
  2103  01E5  00E7               	movwf	??_time_settings
  2104  01E6  0867               	movf	??_time_settings,w
  2105  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2106  01E8  00A2               	movwf	(_table^(0+128)+2)
  2107                           
  2108                           ;Button_src.c: 255:                  table[1] = c;
  2109  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2110  01EA  0855               	movf	_c,w
  2111  01EB                     L1:	
  2112  01EB  00E7               	movwf	??_time_settings
  2113  01EC  0867               	movf	??_time_settings,w
  2114  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2115  01EE  00A1               	movwf	(_table^(0+128)+1)
  2116  01EF                     l4229:	
  2117                           
  2118                           ;Button_src.c: 261:                     a = time_date_delimiter(a,0x11,'9',4);
  2119  01EF  3011               	movlw	17
  2120  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2121  01F1  00E7               	movwf	??_time_settings
  2122  01F2  0867               	movf	??_time_settings,w
  2123  01F3  00F0               	movwf	time_date_delimiter@hex
  2124  01F4  3039               	movlw	57
  2125  01F5  00E8               	movwf	??_time_settings+1
  2126  01F6  0868               	movf	??_time_settings+1,w
  2127  01F7  00F1               	movwf	time_date_delimiter@limiter
  2128  01F8  3004               	movlw	4
  2129  01F9  00F2               	movwf	time_date_delimiter@type
  2130  01FA  3000               	movlw	0
  2131  01FB  00F3               	movwf	time_date_delimiter@type+1
  2132  01FC  0857               	movf	_a,w
  2133  01FD  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  2134  0202  00E9               	movwf	??_time_settings+2
  2135  0203  0869               	movf	??_time_settings+2,w
  2136  0204  00D7               	movwf	_a
  2137                           
  2138                           ;Button_src.c: 262:                     a = time_date_delimiter(a,0x21,'J',4);
  2139  0205  3021               	movlw	33
  2140  0206  00E7               	movwf	??_time_settings
  2141  0207  0867               	movf	??_time_settings,w
  2142  0208  00F0               	movwf	time_date_delimiter@hex
  2143  0209  304A               	movlw	74
  2144  020A  00E8               	movwf	??_time_settings+1
  2145  020B  0868               	movf	??_time_settings+1,w
  2146  020C  00F1               	movwf	time_date_delimiter@limiter
  2147  020D  3004               	movlw	4
  2148  020E  00F2               	movwf	time_date_delimiter@type
  2149  020F  3000               	movlw	0
  2150  0210  00F3               	movwf	time_date_delimiter@type+1
  2151  0211  0857               	movf	_a,w
  2152  0212  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  2153  0217  00E9               	movwf	??_time_settings+2
  2154  0218  0869               	movf	??_time_settings+2,w
  2155  0219  00D7               	movwf	_a
  2156                           
  2157                           ;Button_src.c: 264:                     c = time_date_delimiter(c,0x11,'9',5);
  2158  021A  3011               	movlw	17
  2159  021B  00E7               	movwf	??_time_settings
  2160  021C  0867               	movf	??_time_settings,w
  2161  021D  00F0               	movwf	time_date_delimiter@hex
  2162  021E  3039               	movlw	57
  2163  021F  00E8               	movwf	??_time_settings+1
  2164  0220  0868               	movf	??_time_settings+1,w
  2165  0221  00F1               	movwf	time_date_delimiter@limiter
  2166  0222  3005               	movlw	5
  2167  0223  00F2               	movwf	time_date_delimiter@type
  2168  0224  3000               	movlw	0
  2169  0225  00F3               	movwf	time_date_delimiter@type+1
  2170  0226  0855               	movf	_c,w
  2171  0227  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  2172  022C  00E9               	movwf	??_time_settings+2
  2173  022D  0869               	movf	??_time_settings+2,w
  2174  022E  00D5               	movwf	_c
  2175                           
  2176                           ;Button_src.c: 265:                     c = time_date_delimiter(c,0x21,'J',5);
  2177  022F  3021               	movlw	33
  2178  0230  00E7               	movwf	??_time_settings
  2179  0231  0867               	movf	??_time_settings,w
  2180  0232  00F0               	movwf	time_date_delimiter@hex
  2181  0233  304A               	movlw	74
  2182  0234  00E8               	movwf	??_time_settings+1
  2183  0235  0868               	movf	??_time_settings+1,w
  2184  0236  00F1               	movwf	time_date_delimiter@limiter
  2185  0237  3005               	movlw	5
  2186  0238  00F2               	movwf	time_date_delimiter@type
  2187  0239  3000               	movlw	0
  2188  023A  00F3               	movwf	time_date_delimiter@type+1
  2189  023B  0855               	movf	_c,w
  2190  023C  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  2191  0241  00E9               	movwf	??_time_settings+2
  2192  0242  0869               	movf	??_time_settings+2,w
  2193  0243  00D5               	movwf	_c
  2194                           
  2195                           ;Button_src.c: 266:                     c = time_date_delimiter(c,0x31,'Y',5);
  2196  0244  3031               	movlw	49
  2197  0245  00E7               	movwf	??_time_settings
  2198  0246  0867               	movf	??_time_settings,w
  2199  0247  00F0               	movwf	time_date_delimiter@hex
  2200  0248  3059               	movlw	89
  2201  0249  00E8               	movwf	??_time_settings+1
  2202  024A  0868               	movf	??_time_settings+1,w
  2203  024B  00F1               	movwf	time_date_delimiter@limiter
  2204  024C  3005               	movlw	5
  2205  024D  00F2               	movwf	time_date_delimiter@type
  2206  024E  3000               	movlw	0
  2207  024F  00F3               	movwf	time_date_delimiter@type+1
  2208  0250  0855               	movf	_c,w
  2209  0251  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  2210  0256  00E9               	movwf	??_time_settings+2
  2211  0257  0869               	movf	??_time_settings+2,w
  2212  0258  00D5               	movwf	_c
  2213                           
  2214                           ;Button_src.c: 267:                     c = time_date_delimiter(c,0x41,'j',5);
  2215  0259  3041               	movlw	65
  2216  025A  00E7               	movwf	??_time_settings
  2217  025B  0867               	movf	??_time_settings,w
  2218  025C  00F0               	movwf	time_date_delimiter@hex
  2219  025D  306A               	movlw	106
  2220  025E  00E8               	movwf	??_time_settings+1
  2221  025F  0868               	movf	??_time_settings+1,w
  2222  0260  00F1               	movwf	time_date_delimiter@limiter
  2223  0261  3005               	movlw	5
  2224  0262  00F2               	movwf	time_date_delimiter@type
  2225  0263  3000               	movlw	0
  2226  0264  00F3               	movwf	time_date_delimiter@type+1
  2227  0265  0855               	movf	_c,w
  2228  0266  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  2229  026B  00E9               	movwf	??_time_settings+2
  2230  026C  0869               	movf	??_time_settings+2,w
  2231  026D  00D5               	movwf	_c
  2232                           
  2233                           ;Button_src.c: 268:                     c = time_date_delimiter(c,0x51,'z',5);
  2234  026E  3051               	movlw	81
  2235  026F  00E7               	movwf	??_time_settings
  2236  0270  0867               	movf	??_time_settings,w
  2237  0271  00F0               	movwf	time_date_delimiter@hex
  2238  0272  307A               	movlw	122
  2239  0273  00E8               	movwf	??_time_settings+1
  2240  0274  0868               	movf	??_time_settings+1,w
  2241  0275  00F1               	movwf	time_date_delimiter@limiter
  2242  0276  3005               	movlw	5
  2243  0277  00F2               	movwf	time_date_delimiter@type
  2244  0278  3000               	movlw	0
  2245  0279  00F3               	movwf	time_date_delimiter@type+1
  2246  027A  0855               	movf	_c,w
  2247  027B  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  2248  0280  00E9               	movwf	??_time_settings+2
  2249  0281  0869               	movf	??_time_settings+2,w
  2250  0282  00D5               	movwf	_c
  2251                           
  2252                           ;Button_src.c: 270:                   RC0 = 0;
  2253  0283  1007               	bcf	7,0	;volatile
  2254                           
  2255                           ;Button_src.c: 271:                   RC1 = 1;
  2256  0284  1487               	bsf	7,1	;volatile
  2257                           
  2258                           ;Button_src.c: 272:                   RC2 = 1;
  2259  0285  1507               	bsf	7,2	;volatile
  2260                           
  2261                           ;Button_src.c: 273:                   RC3 = 1;
  2262  0286  1587               	bsf	7,3	;volatile
  2263                           
  2264                           ;Button_src.c: 274:                     if (RC6 == 0 ){
  2265  0287  1B07               	btfsc	7,6	;volatile
  2266  0288  2A9D               	goto	l624
  2267                           
  2268                           ;Button_src.c: 275:                           write_cmd(0x1);
  2269  0289  3001               	movlw	1
  2270  028A  160A  118A  2536  120A  118A  	fcall	_write_cmd
  2271                           
  2272                           ;Button_src.c: 276:                           a = 0x00;
  2273  028F  01D7               	clrf	_a
  2274                           
  2275                           ;Button_src.c: 277:                           c = 0x00;
  2276  0290  01D5               	clrf	_c
  2277                           
  2278                           ;Button_src.c: 278:                           x = 0;
  2279  0291  01BF               	clrf	_x
  2280  0292  01C0               	clrf	_x+1
  2281                           
  2282                           ;Button_src.c: 279:                           y = 0;
  2283  0293  01BD               	clrf	_y
  2284  0294  01BE               	clrf	_y+1
  2285                           
  2286                           ;Button_src.c: 280:                           w = 0;
  2287  0295  01C1               	clrf	_w
  2288  0296  01C2               	clrf	_w+1
  2289                           
  2290                           ;Button_src.c: 281:                           t = 0;
  2291  0297  01C3               	clrf	_t
  2292  0298  01C4               	clrf	_t+1
  2293                           
  2294                           ;Button_src.c: 282:                           set_time();
  2295  0299  120A  118A  2006   	fcall	_set_time
  2296  029C  0008               	return
  2297  029D                     l624:	
  2298                           ;Button_src.c: 284:                             }
  2299                           
  2300                           
  2301                           ;Button_src.c: 285:                   RC0 = 1;
  2302  029D  1407               	bsf	7,0	;volatile
  2303                           
  2304                           ;Button_src.c: 286:                   RC1 = 1;
  2305  029E  1487               	bsf	7,1	;volatile
  2306                           
  2307                           ;Button_src.c: 287:                   RC2 = 0;
  2308  029F  1107               	bcf	7,2	;volatile
  2309                           
  2310                           ;Button_src.c: 288:                   RC3 = 1;
  2311  02A0  1587               	bsf	7,3	;volatile
  2312                           
  2313                           ;Button_src.c: 289:                   z = modulus_func(z,2);
  2314  02A1  083C               	movf	_z+1,w
  2315  02A2  00F8               	movwf	modulus_func@x+1
  2316  02A3  083B               	movf	_z,w
  2317  02A4  00F7               	movwf	modulus_func@x
  2318  02A5  3002               	movlw	2
  2319  02A6  00F9               	movwf	modulus_func@y
  2320  02A7  3000               	movlw	0
  2321  02A8  00FA               	movwf	modulus_func@y+1
  2322  02A9  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  2323  02AE  0878               	movf	?_modulus_func+1,w
  2324  02AF  00BC               	movwf	_z+1
  2325  02B0  0877               	movf	?_modulus_func,w
  2326  02B1  00BB               	movwf	_z
  2327                           
  2328                           ;Button_src.c: 290:                   if(RC4 == 0 && z ==0){
  2329  02B2  1A07               	btfsc	7,4	;volatile
  2330  02B3  2AED               	goto	l4283
  2331  02B4  083B               	movf	_z,w
  2332  02B5  043C               	iorwf	_z+1,w
  2333  02B6  1D03               	btfss	3,2
  2334  02B7  2AED               	goto	l4283
  2335                           
  2336                           ;Button_src.c: 291:                       write_cmd(0x90);
  2337  02B8  3090               	movlw	144
  2338  02B9  160A  118A  2536  120A  118A  	fcall	_write_cmd
  2339                           
  2340                           ;Button_src.c: 292:                       write_char('H');
  2341  02BE  3048               	movlw	72
  2342  02BF  160A  118A  251F  120A  118A  	fcall	_write_char
  2343                           
  2344                           ;Button_src.c: 293:                       write_char('o');
  2345  02C4  306F               	movlw	111
  2346  02C5  160A  118A  251F  120A  118A  	fcall	_write_char
  2347                           
  2348                           ;Button_src.c: 294:                       write_char('u');
  2349  02CA  3075               	movlw	117
  2350  02CB  160A  118A  251F  120A  118A  	fcall	_write_char
  2351                           
  2352                           ;Button_src.c: 295:                       write_char('r');
  2353  02D0  3072               	movlw	114
  2354  02D1  160A  118A  251F  120A  118A  	fcall	_write_char
  2355                           
  2356                           ;Button_src.c: 296:                       write_char(':');
  2357  02D6  303A               	movlw	58
  2358  02D7  160A  118A  251F  120A  118A  	fcall	_write_char
  2359                           
  2360                           ;Button_src.c: 297:                       b = 'x';
  2361  02DC  3078               	movlw	120
  2362  02DD  00E7               	movwf	??_time_settings
  2363  02DE  0867               	movf	??_time_settings,w
  2364  02DF  00D6               	movwf	_b
  2365                           
  2366                           ;Button_src.c: 298:                       button_delay();
  2367  02E0  160A  118A  24E3  120A  118A  	fcall	_button_delay
  2368                           
  2369                           ;Button_src.c: 299:                       z++;
  2370  02E5  3001               	movlw	1
  2371  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2372  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  2373  02E8  07BB               	addwf	_z,f
  2374  02E9  1803               	skipnc
  2375  02EA  0ABC               	incf	_z+1,f
  2376  02EB  3000               	movlw	0
  2377  02EC  07BC               	addwf	_z+1,f
  2378  02ED                     l4283:	
  2379                           
  2380                           ;Button_src.c: 301:                   RC0 = 1;
  2381  02ED  1407               	bsf	7,0	;volatile
  2382                           
  2383                           ;Button_src.c: 302:                   RC1 = 1;
  2384  02EE  1487               	bsf	7,1	;volatile
  2385                           
  2386                           ;Button_src.c: 303:                   RC2 = 0;
  2387  02EF  1107               	bcf	7,2	;volatile
  2388                           
  2389                           ;Button_src.c: 304:                   RC3 = 1;
  2390  02F0  1587               	bsf	7,3	;volatile
  2391                           
  2392                           ;Button_src.c: 306:                   if(RC4 == 0&& z ==1){
  2393  02F1  1A07               	btfsc	7,4	;volatile
  2394  02F2  2B2A               	goto	l627
  2395  02F3  033B               	decf	_z,w
  2396  02F4  043C               	iorwf	_z+1,w
  2397  02F5  1D03               	btfss	3,2
  2398  02F6  2B2A               	goto	l627
  2399                           
  2400                           ;Button_src.c: 307:                     z++;
  2401  02F7  3001               	movlw	1
  2402  02F8  07BB               	addwf	_z,f
  2403  02F9  1803               	skipnc
  2404  02FA  0ABC               	incf	_z+1,f
  2405  02FB  3000               	movlw	0
  2406  02FC  07BC               	addwf	_z+1,f
  2407                           
  2408                           ;Button_src.c: 308:                     button_delay();
  2409  02FD  160A  118A  24E3  120A  118A  	fcall	_button_delay
  2410                           
  2411                           ;Button_src.c: 309:                     write_cmd(0x90);
  2412  0302  3090               	movlw	144
  2413  0303  160A  118A  2536  120A  118A  	fcall	_write_cmd
  2414                           
  2415                           ;Button_src.c: 310:                     write_char('M');
  2416  0308  304D               	movlw	77
  2417  0309  160A  118A  251F  120A  118A  	fcall	_write_char
  2418                           
  2419                           ;Button_src.c: 311:                     write_char('i');
  2420  030E  3069               	movlw	105
  2421  030F  160A  118A  251F  120A  118A  	fcall	_write_char
  2422                           
  2423                           ;Button_src.c: 312:                     write_char('n');
  2424  0314  306E               	movlw	110
  2425  0315  160A  118A  251F  120A  118A  	fcall	_write_char
  2426                           
  2427                           ;Button_src.c: 313:                     write_char('s');
  2428  031A  3073               	movlw	115
  2429  031B  160A  118A  251F  120A  118A  	fcall	_write_char
  2430                           
  2431                           ;Button_src.c: 314:                     write_char(':');
  2432  0320  303A               	movlw	58
  2433  0321  160A  118A  251F  120A  118A  	fcall	_write_char
  2434                           
  2435                           ;Button_src.c: 315:                     b = 'y';
  2436  0326  3079               	movlw	121
  2437  0327  00E7               	movwf	??_time_settings
  2438  0328  0867               	movf	??_time_settings,w
  2439  0329  00D6               	movwf	_b
  2440  032A                     l627:	
  2441                           ;Button_src.c: 316:                   }
  2442                           
  2443                           
  2444                           ;Button_src.c: 317:                    write_cmd(0x88);
  2445  032A  3088               	movlw	136
  2446  032B  160A  118A  2536  120A  118A  	fcall	_write_cmd
  2447                           
  2448                           ;Button_src.c: 321:                   RC0 = 1;
  2449  0330  1407               	bsf	7,0	;volatile
  2450                           
  2451                           ;Button_src.c: 322:                   RC1 = 1;
  2452  0331  1487               	bsf	7,1	;volatile
  2453                           
  2454                           ;Button_src.c: 323:                   RC2 = 0;
  2455  0332  1107               	bcf	7,2	;volatile
  2456                           
  2457                           ;Button_src.c: 324:                   RC3 = 1;
  2458  0333  1587               	bsf	7,3	;volatile
  2459                           
  2460                           ;Button_src.c: 326:              write_cmd(0x88);
  2461  0334  3088               	movlw	136
  2462  0335  160A  118A  2536  120A  118A  	fcall	_write_cmd
  2463                           
  2464                           ;Button_src.c: 327:              write_char('T');
  2465  033A  3054               	movlw	84
  2466  033B  160A  118A  251F  120A  118A  	fcall	_write_char
  2467                           
  2468                           ;Button_src.c: 328:              write_char('i');
  2469  0340  3069               	movlw	105
  2470  0341  160A  118A  251F  120A  118A  	fcall	_write_char
  2471                           
  2472                           ;Button_src.c: 329:              write_char('m');
  2473  0346  306D               	movlw	109
  2474  0347  160A  118A  251F  120A  118A  	fcall	_write_char
  2475                           
  2476                           ;Button_src.c: 330:              write_char('e');
  2477  034C  3065               	movlw	101
  2478  034D  160A  118A  251F  120A  118A  	fcall	_write_char
  2479                           
  2480                           ;Button_src.c: 331:              write_char(':');
  2481  0352  303A               	movlw	58
  2482  0353  160A  118A  251F  120A  118A  	fcall	_write_char
  2483                           
  2484                           ;Button_src.c: 332:              write_char(y + '0');
  2485  0358  083D               	movf	_y,w
  2486  0359  3E30               	addlw	48
  2487  035A  160A  118A  251F  120A  118A  	fcall	_write_char
  2488                           
  2489                           ;Button_src.c: 333:              write_char(x + '0');
  2490  035F  083F               	movf	_x,w
  2491  0360  3E30               	addlw	48
  2492  0361  160A  118A  251F  120A  118A  	fcall	_write_char
  2493                           
  2494                           ;Button_src.c: 334:              write_char(':');
  2495  0366  303A               	movlw	58
  2496  0367  160A  118A  251F  120A  118A  	fcall	_write_char
  2497                           
  2498                           ;Button_src.c: 335:              write_char(w + '0');
  2499  036C  0841               	movf	_w,w
  2500  036D  3E30               	addlw	48
  2501  036E  160A  118A  251F  120A  118A  	fcall	_write_char
  2502                           
  2503                           ;Button_src.c: 336:              write_char(t + '0');
  2504  0373  0843               	movf	_t,w
  2505  0374  3E30               	addlw	48
  2506  0375  160A  118A  251F  120A  118A  	fcall	_write_char
  2507                           
  2508                           ;Button_src.c: 338:             RC0 = 0;
  2509  037A  1007               	bcf	7,0	;volatile
  2510                           
  2511                           ;Button_src.c: 339:             RC1 = 1;
  2512  037B  1487               	bsf	7,1	;volatile
  2513                           
  2514                           ;Button_src.c: 340:             RC2 = 1;
  2515  037C  1507               	bsf	7,2	;volatile
  2516                           
  2517                           ;Button_src.c: 341:             RC3 = 1;
  2518  037D  1587               	bsf	7,3	;volatile
  2519                           
  2520                           ;Button_src.c: 342:             if (RC7 == 0 ){
  2521  037E  1B87               	btfsc	7,7	;volatile
  2522  037F  2885               	goto	l607
  2523                           
  2524                           ;Button_src.c: 343:             a = 0x00;
  2525  0380  01D7               	clrf	_a
  2526                           
  2527                           ;Button_src.c: 344:             c = 0x00;
  2528  0381  01D5               	clrf	_c
  2529                           
  2530                           ;Button_src.c: 345:             x = 0;
  2531  0382  01BF               	clrf	_x
  2532  0383  01C0               	clrf	_x+1
  2533                           
  2534                           ;Button_src.c: 346:             y = 0;
  2535  0384  01BD               	clrf	_y
  2536  0385  01BE               	clrf	_y+1
  2537                           
  2538                           ;Button_src.c: 347:             w = 0;
  2539  0386  01C1               	clrf	_w
  2540  0387  01C2               	clrf	_w+1
  2541                           
  2542                           ;Button_src.c: 348:             t = 0;
  2543  0388  01C3               	clrf	_t
  2544  0389  01C4               	clrf	_t+1
  2545                           
  2546                           ;Button_src.c: 349:             write_cmd(0x1);
  2547  038A  3001               	movlw	1
  2548  038B  160A  118A  2536   	fcall	_write_cmd
  2549                           
  2550                           ;Button_src.c: 350:             break;
  2551  038E  0008               	return
  2552  038F                     __end_of_time_settings:	
  2553                           
  2554                           	psect	text2
  2555  0DAA                     __ptext2:	
  2556 ;; *************** function _thermometer_threshhold_settings *****************
  2557 ;; Defined at:
  2558 ;;		line 23 in file "Button_src.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  i               2    8[BANK0 ] int 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 300/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         0       2       0       0       0
  2574 ;;      Temps:          0       3       0       0       0
  2575 ;;      Totals:         0       5       0       0       0
  2576 ;;Total ram usage:        5 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    3
  2579 ;; This function calls:
  2580 ;;		_button_delay
  2581 ;;		_decrementor
  2582 ;;		_incrementor
  2583 ;;		_modulus_func
  2584 ;;		_write_char
  2585 ;;		_write_cmd
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _thermometer_threshhold_settings
  2593  0DAA                     _thermometer_threshhold_settings:	
  2594                           
  2595                           ;Button_src.c: 24:  RC0 = 1;
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _thermometer_threshhold_settings: [wreg+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2599  0DAA  1407               	bsf	7,0	;volatile
  2600                           
  2601                           ;Button_src.c: 25:  RC1 = 0;
  2602  0DAB  1087               	bcf	7,1	;volatile
  2603                           
  2604                           ;Button_src.c: 26:  RC2 = 1;
  2605  0DAC  1507               	bsf	7,2	;volatile
  2606                           
  2607                           ;Button_src.c: 27:  RC3 = 1;
  2608  0DAD  1587               	bsf	7,3	;volatile
  2609                           
  2610                           ;Button_src.c: 28:   if (RC4 == 0){
  2611  0DAE  1A07               	btfsc	7,4	;volatile
  2612  0DAF  0008               	return
  2613                           
  2614                           ;Button_src.c: 29:       write_cmd(0x1);
  2615  0DB0  3001               	movlw	1
  2616  0DB1  160A  118A  2536  120A  158A  	fcall	_write_cmd
  2617                           
  2618                           ;Button_src.c: 31:             write_cmd(0x80);
  2619                           
  2620                           ;Button_src.c: 30:       for(;;){
  2621  0DB6  3080               	movlw	128
  2622  0DB7  160A  118A  2536  120A  158A  	fcall	_write_cmd
  2623                           
  2624                           ;Button_src.c: 32:             write_char('t');
  2625  0DBC  3074               	movlw	116
  2626  0DBD  160A  118A  251F  120A  158A  	fcall	_write_char
  2627                           
  2628                           ;Button_src.c: 33:             write_char('h');
  2629  0DC2  3068               	movlw	104
  2630  0DC3  160A  118A  251F  120A  158A  	fcall	_write_char
  2631                           
  2632                           ;Button_src.c: 34:             write_char('r');
  2633  0DC8  3072               	movlw	114
  2634  0DC9  160A  118A  251F  120A  158A  	fcall	_write_char
  2635                           
  2636                           ;Button_src.c: 35:             write_char('e');
  2637  0DCE  3065               	movlw	101
  2638  0DCF  160A  118A  251F  120A  158A  	fcall	_write_char
  2639                           
  2640                           ;Button_src.c: 36:             write_char('s');
  2641  0DD4  3073               	movlw	115
  2642  0DD5  160A  118A  251F  120A  158A  	fcall	_write_char
  2643                           
  2644                           ;Button_src.c: 37:             write_char('h');
  2645  0DDA  3068               	movlw	104
  2646  0DDB  160A  118A  251F  120A  158A  	fcall	_write_char
  2647                           
  2648                           ;Button_src.c: 38:             write_char('o');
  2649  0DE0  306F               	movlw	111
  2650  0DE1  160A  118A  251F  120A  158A  	fcall	_write_char
  2651                           
  2652                           ;Button_src.c: 39:             write_char('l');
  2653  0DE6  306C               	movlw	108
  2654  0DE7  160A  118A  251F  120A  158A  	fcall	_write_char
  2655                           
  2656                           ;Button_src.c: 40:             write_char('d');
  2657  0DEC  3064               	movlw	100
  2658  0DED  160A  118A  251F  120A  158A  	fcall	_write_char
  2659                           
  2660                           ;Button_src.c: 42:             write_cmd(0x90);
  2661  0DF2  3090               	movlw	144
  2662  0DF3  160A  118A  2536  120A  158A  	fcall	_write_cmd
  2663                           
  2664                           ;Button_src.c: 43:             write_char('C');
  2665  0DF8  3043               	movlw	67
  2666  0DF9  160A  118A  251F  120A  158A  	fcall	_write_char
  2667                           
  2668                           ;Button_src.c: 44:             write_char('u');
  2669  0DFE  3075               	movlw	117
  2670  0DFF  160A  118A  251F  120A  158A  	fcall	_write_char
  2671                           
  2672                           ;Button_src.c: 45:             write_char('r');
  2673  0E04  3072               	movlw	114
  2674  0E05  160A  118A  251F  120A  158A  	fcall	_write_char
  2675                           
  2676                           ;Button_src.c: 46:             write_char('r');
  2677  0E0A  3072               	movlw	114
  2678  0E0B  160A  118A  251F  120A  158A  	fcall	_write_char
  2679                           
  2680                           ;Button_src.c: 47:             write_char('e');
  2681  0E10  3065               	movlw	101
  2682  0E11  160A  118A  251F  120A  158A  	fcall	_write_char
  2683                           
  2684                           ;Button_src.c: 48:             write_char('n');
  2685  0E16  306E               	movlw	110
  2686  0E17  160A  118A  251F  120A  158A  	fcall	_write_char
  2687                           
  2688                           ;Button_src.c: 49:             write_char('t');
  2689  0E1C  3074               	movlw	116
  2690  0E1D  160A  118A  251F  120A  158A  	fcall	_write_char
  2691                           
  2692                           ;Button_src.c: 50:             write_char(':');
  2693  0E22  303A               	movlw	58
  2694  0E23  160A  118A  251F  120A  158A  	fcall	_write_char
  2695                           
  2696                           ;Button_src.c: 52:             write_char(var1 + '0');
  2697  0E28  0849               	movf	_var1,w
  2698  0E29  3E30               	addlw	48
  2699  0E2A  160A  118A  251F  120A  158A  	fcall	_write_char
  2700                           
  2701                           ;Button_src.c: 53:             write_char(var2 + '0');
  2702  0E2F  0848               	movf	_var2,w
  2703  0E30  3E30               	addlw	48
  2704  0E31  160A  118A  251F  120A  158A  	fcall	_write_char
  2705                           
  2706                           ;Button_src.c: 55:             write_cmd(0x88);
  2707  0E36  3088               	movlw	136
  2708  0E37  160A  118A  2536  120A  158A  	fcall	_write_cmd
  2709                           
  2710                           ;Button_src.c: 56:             write_char('S');
  2711  0E3C  3053               	movlw	83
  2712  0E3D  160A  118A  251F  120A  158A  	fcall	_write_char
  2713                           
  2714                           ;Button_src.c: 57:             write_char('e');
  2715  0E42  3065               	movlw	101
  2716  0E43  160A  118A  251F  120A  158A  	fcall	_write_char
  2717                           
  2718                           ;Button_src.c: 58:             write_char('t');
  2719  0E48  3074               	movlw	116
  2720  0E49  160A  118A  251F  120A  158A  	fcall	_write_char
  2721                           
  2722                           ;Button_src.c: 59:             write_char('_');
  2723  0E4E  305F               	movlw	95
  2724  0E4F  160A  118A  251F  120A  158A  	fcall	_write_char
  2725                           
  2726                           ;Button_src.c: 60:             write_char('t');
  2727  0E54  3074               	movlw	116
  2728  0E55  160A  118A  251F  120A  158A  	fcall	_write_char
  2729                           
  2730                           ;Button_src.c: 61:             write_char('h');
  2731  0E5A  3068               	movlw	104
  2732  0E5B  160A  118A  251F  120A  158A  	fcall	_write_char
  2733                           
  2734                           ;Button_src.c: 62:             write_char('r');
  2735  0E60  3072               	movlw	114
  2736  0E61  160A  118A  251F  120A  158A  	fcall	_write_char
  2737                           
  2738                           ;Button_src.c: 63:             write_char('e');
  2739  0E66  3065               	movlw	101
  2740  0E67  160A  118A  251F  120A  158A  	fcall	_write_char
  2741                           
  2742                           ;Button_src.c: 64:             write_char('s');
  2743  0E6C  3073               	movlw	115
  2744  0E6D  160A  118A  251F  120A  158A  	fcall	_write_char
  2745                           
  2746                           ;Button_src.c: 65:             write_char('h');
  2747  0E72  3068               	movlw	104
  2748  0E73  160A  118A  251F  120A  158A  	fcall	_write_char
  2749                           
  2750                           ;Button_src.c: 66:             write_char('o');
  2751  0E78  306F               	movlw	111
  2752  0E79  160A  118A  251F  120A  158A  	fcall	_write_char
  2753                           
  2754                           ;Button_src.c: 67:             write_char('l');
  2755  0E7E  306C               	movlw	108
  2756  0E7F  160A  118A  251F  120A  158A  	fcall	_write_char
  2757                           
  2758                           ;Button_src.c: 68:             write_char('d');
  2759  0E84  3064               	movlw	100
  2760  0E85  160A  118A  251F  120A  158A  	fcall	_write_char
  2761                           
  2762                           ;Button_src.c: 69:             write_char(':');
  2763  0E8A  303A               	movlw	58
  2764  0E8B  160A  118A  251F  120A  158A  	fcall	_write_char
  2765                           
  2766                           ;Button_src.c: 71:             write_cmd(0x98);
  2767  0E90  3098               	movlw	152
  2768  0E91  160A  118A  2536  120A  158A  	fcall	_write_cmd
  2769                           
  2770                           ;Button_src.c: 72:             RC0 = 1;
  2771  0E96  1407               	bsf	7,0	;volatile
  2772                           
  2773                           ;Button_src.c: 73:             RC1 = 0;
  2774  0E97  1087               	bcf	7,1	;volatile
  2775                           
  2776                           ;Button_src.c: 74:             RC2 = 1;
  2777  0E98  1507               	bsf	7,2	;volatile
  2778                           
  2779                           ;Button_src.c: 75:             RC3 = 1;
  2780  0E99  1587               	bsf	7,3	;volatile
  2781                           
  2782                           ;Button_src.c: 76:             t = 0;
  2783  0E9A  01C3               	clrf	_t
  2784  0E9B  01C4               	clrf	_t+1
  2785                           
  2786                           ;Button_src.c: 77:             w = 0;
  2787  0E9C  01C1               	clrf	_w
  2788  0E9D  01C2               	clrf	_w+1
  2789                           
  2790                           ;Button_src.c: 78:             x = 0;
  2791  0E9E  01BF               	clrf	_x
  2792  0E9F  01C0               	clrf	_x+1
  2793                           
  2794                           ;Button_src.c: 79:             y = 0;
  2795  0EA0  01BD               	clrf	_y
  2796  0EA1  01BE               	clrf	_y+1
  2797                           
  2798                           ;Button_src.c: 80:             x = 0x00;
  2799  0EA2  01BF               	clrf	_x
  2800  0EA3  01C0               	clrf	_x+1
  2801  0EA4                     l3759:	
  2802                           
  2803                           ;Button_src.c: 82:                  RC0 = 1;
  2804  0EA4  1407               	bsf	7,0	;volatile
  2805                           
  2806                           ;Button_src.c: 83:                  RC1 = 0;
  2807  0EA5  1087               	bcf	7,1	;volatile
  2808                           
  2809                           ;Button_src.c: 84:                  RC2 = 1;
  2810  0EA6  1507               	bsf	7,2	;volatile
  2811                           
  2812                           ;Button_src.c: 85:                  RC3 = 1;
  2813  0EA7  1587               	bsf	7,3	;volatile
  2814                           
  2815                           ;Button_src.c: 87:                 if(RC7==0){
  2816  0EA8  1B87               	btfsc	7,7	;volatile
  2817  0EA9  2F03               	goto	l3787
  2818                           
  2819                           ;Button_src.c: 88:                     write_cmd(0x98);
  2820  0EAA  3098               	movlw	152
  2821  0EAB  160A  118A  2536  120A  158A  	fcall	_write_cmd
  2822                           
  2823                           ;Button_src.c: 89:                     x++;
  2824  0EB0  3001               	movlw	1
  2825  0EB1  07BF               	addwf	_x,f
  2826  0EB2  1803               	skipnc
  2827  0EB3  0AC0               	incf	_x+1,f
  2828  0EB4  3000               	movlw	0
  2829  0EB5  07C0               	addwf	_x+1,f
  2830                           
  2831                           ;Button_src.c: 90:                     y = (unsigned char )y;
  2832  0EB6  083D               	movf	_y,w
  2833  0EB7  00E7               	movwf	??_thermometer_threshhold_settings
  2834  0EB8  01E8               	clrf	??_thermometer_threshhold_settings+1
  2835  0EB9  0867               	movf	??_thermometer_threshhold_settings,w
  2836  0EBA  00BD               	movwf	_y
  2837  0EBB  0868               	movf	??_thermometer_threshhold_settings+1,w
  2838  0EBC  00BE               	movwf	_y+1
  2839                           
  2840                           ;Button_src.c: 91:                     x = (unsigned char )(modulus_func(x,10));
  2841  0EBD  0840               	movf	_x+1,w
  2842  0EBE  00F8               	movwf	modulus_func@x+1
  2843  0EBF  083F               	movf	_x,w
  2844  0EC0  00F7               	movwf	modulus_func@x
  2845  0EC1  300A               	movlw	10
  2846  0EC2  00F9               	movwf	modulus_func@y
  2847  0EC3  3000               	movlw	0
  2848  0EC4  00FA               	movwf	modulus_func@y+1
  2849  0EC5  160A  118A  24C2  120A  158A  	fcall	_modulus_func
  2850  0ECA  0877               	movf	?_modulus_func,w
  2851  0ECB  00E7               	movwf	??_thermometer_threshhold_settings
  2852  0ECC  01E8               	clrf	??_thermometer_threshhold_settings+1
  2853  0ECD  0867               	movf	??_thermometer_threshhold_settings,w
  2854  0ECE  00BF               	movwf	_x
  2855  0ECF  0868               	movf	??_thermometer_threshhold_settings+1,w
  2856  0ED0  00C0               	movwf	_x+1
  2857                           
  2858                           ;Button_src.c: 92:                     write_char(y + '0');
  2859  0ED1  083D               	movf	_y,w
  2860  0ED2  3E30               	addlw	48
  2861  0ED3  160A  118A  251F  120A  158A  	fcall	_write_char
  2862                           
  2863                           ;Button_src.c: 93:                     write_char(x + '0');
  2864  0ED8  083F               	movf	_x,w
  2865  0ED9  3E30               	addlw	48
  2866  0EDA  160A  118A  251F  120A  158A  	fcall	_write_char
  2867                           
  2868                           ;Button_src.c: 94:                     y = incrementor(y,x,'9');
  2869  0EDF  083E               	movf	_y+1,w
  2870  0EE0  00E3               	movwf	incrementor@upper_val+1
  2871  0EE1  083D               	movf	_y,w
  2872  0EE2  00E2               	movwf	incrementor@upper_val
  2873  0EE3  0840               	movf	_x+1,w
  2874  0EE4  00E5               	movwf	incrementor@lower_val+1
  2875  0EE5  083F               	movf	_x,w
  2876  0EE6  00E4               	movwf	incrementor@lower_val
  2877  0EE7  3039               	movlw	57
  2878  0EE8  00E7               	movwf	??_thermometer_threshhold_settings
  2879  0EE9  0867               	movf	??_thermometer_threshhold_settings,w
  2880  0EEA  00E6               	movwf	incrementor@z
  2881  0EEB  160A  118A  25F2  120A  158A  	fcall	_incrementor
  2882  0EF0  00E8               	movwf	??_thermometer_threshhold_settings+1
  2883  0EF1  01E9               	clrf	??_thermometer_threshhold_settings+2
  2884  0EF2  0868               	movf	??_thermometer_threshhold_settings+1,w
  2885  0EF3  00BD               	movwf	_y
  2886  0EF4  0869               	movf	??_thermometer_threshhold_settings+2,w
  2887  0EF5  00BE               	movwf	_y+1
  2888                           
  2889                           ;Button_src.c: 95:                     t = x;
  2890  0EF6  0840               	movf	_x+1,w
  2891  0EF7  00C4               	movwf	_t+1
  2892  0EF8  083F               	movf	_x,w
  2893  0EF9  00C3               	movwf	_t
  2894                           
  2895                           ;Button_src.c: 96:                     w = y;
  2896  0EFA  083E               	movf	_y+1,w
  2897  0EFB  00C2               	movwf	_w+1
  2898  0EFC  083D               	movf	_y,w
  2899  0EFD  00C1               	movwf	_w
  2900                           
  2901                           ;Button_src.c: 97:                     button_delay();
  2902  0EFE  160A  118A  24E3  120A  158A  	fcall	_button_delay
  2903  0F03                     l3787:	
  2904                           
  2905                           ;Button_src.c: 99:                   RC0 = 0;
  2906  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0F05  1007               	bcf	7,0	;volatile
  2909                           
  2910                           ;Button_src.c: 100:                     RC1 = 1;
  2911  0F06  1487               	bsf	7,1	;volatile
  2912                           
  2913                           ;Button_src.c: 101:                     RC2 = 1;
  2914  0F07  1507               	bsf	7,2	;volatile
  2915                           
  2916                           ;Button_src.c: 102:                     RC3 = 1;
  2917  0F08  1587               	bsf	7,3	;volatile
  2918                           
  2919                           ;Button_src.c: 103:                     if(RC6 == 0){
  2920  0F09  1B07               	btfsc	7,6	;volatile
  2921  0F0A  2F4D               	goto	l594
  2922                           
  2923                           ;Button_src.c: 104:                         var1 = y;
  2924  0F0B  083D               	movf	_y,w
  2925  0F0C  00E7               	movwf	??_thermometer_threshhold_settings
  2926  0F0D  0867               	movf	??_thermometer_threshhold_settings,w
  2927  0F0E  00C9               	movwf	_var1
  2928                           
  2929                           ;Button_src.c: 105:                         var2 = x;
  2930  0F0F  083F               	movf	_x,w
  2931  0F10  00E7               	movwf	??_thermometer_threshhold_settings
  2932  0F11  0867               	movf	??_thermometer_threshhold_settings,w
  2933  0F12  00C8               	movwf	_var2
  2934                           
  2935                           ;Button_src.c: 107:                         write_cmd(0x1);
  2936  0F13  3001               	movlw	1
  2937  0F14  160A  118A  2536  120A  158A  	fcall	_write_cmd
  2938                           
  2939                           ;Button_src.c: 108:                         write_char('S');
  2940  0F19  3053               	movlw	83
  2941  0F1A  160A  118A  251F  120A  158A  	fcall	_write_char
  2942                           
  2943                           ;Button_src.c: 109:                         write_char('A');
  2944  0F1F  3041               	movlw	65
  2945  0F20  160A  118A  251F  120A  158A  	fcall	_write_char
  2946                           
  2947                           ;Button_src.c: 110:                         write_char('V');
  2948  0F25  3056               	movlw	86
  2949  0F26  160A  118A  251F  120A  158A  	fcall	_write_char
  2950                           
  2951                           ;Button_src.c: 111:                         write_char('E');
  2952  0F2B  3045               	movlw	69
  2953  0F2C  160A  118A  251F  120A  158A  	fcall	_write_char
  2954                           
  2955                           ;Button_src.c: 112:                         write_char('D');
  2956  0F31  3044               	movlw	68
  2957  0F32  160A  118A  251F  120A  158A  	fcall	_write_char
  2958                           
  2959                           ;Button_src.c: 113:                         for(int i=0;i<30000;i++);
  2960  0F37  01EA               	clrf	thermometer_threshhold_settings@i
  2961  0F38  01EB               	clrf	thermometer_threshhold_settings@i+1
  2962  0F39                     l3817:	
  2963  0F39  3001               	movlw	1
  2964  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0F3C  07EA               	addwf	thermometer_threshhold_settings@i,f
  2967  0F3D  1803               	skipnc
  2968  0F3E  0AEB               	incf	thermometer_threshhold_settings@i+1,f
  2969  0F3F  3000               	movlw	0
  2970  0F40  07EB               	addwf	thermometer_threshhold_settings@i+1,f
  2971  0F41  086B               	movf	thermometer_threshhold_settings@i+1,w
  2972  0F42  3A80               	xorlw	128
  2973  0F43  00FF               	movwf	127
  2974  0F44  30F5               	movlw	245
  2975  0F45  027F               	subwf	127,w
  2976  0F46  1D03               	skipz
  2977  0F47  2F4A               	goto	u3075
  2978  0F48  3030               	movlw	48
  2979  0F49  026A               	subwf	thermometer_threshhold_settings@i,w
  2980  0F4A                     u3075:	
  2981  0F4A  1803               	btfsc	3,0
  2982  0F4B  0008               	return
  2983  0F4C  2F39               	goto	l3817
  2984  0F4D                     l594:	
  2985                           ;Button_src.c: 115:                     }
  2986                           
  2987                           
  2988                           ;Button_src.c: 116:                  RC0 = 1;
  2989  0F4D  1407               	bsf	7,0	;volatile
  2990                           
  2991                           ;Button_src.c: 117:                  RC1 = 1;
  2992  0F4E  1487               	bsf	7,1	;volatile
  2993                           
  2994                           ;Button_src.c: 118:                  RC2 = 0;
  2995  0F4F  1107               	bcf	7,2	;volatile
  2996                           
  2997                           ;Button_src.c: 119:                  RC3 = 1;
  2998  0F50  1587               	bsf	7,3	;volatile
  2999                           
  3000                           ;Button_src.c: 121:                  if(RC7 == 0){
  3001  0F51  1B87               	btfsc	7,7	;volatile
  3002  0F52  2FBD               	goto	l3841
  3003                           
  3004                           ;Button_src.c: 122:                     write_cmd(0x98);
  3005  0F53  3098               	movlw	152
  3006  0F54  160A  118A  2536  120A  158A  	fcall	_write_cmd
  3007                           
  3008                           ;Button_src.c: 123:                       t--;
  3009  0F59  3001               	movlw	1
  3010  0F5A  02C3               	subwf	_t,f
  3011  0F5B  3000               	movlw	0
  3012  0F5C  1C03               	skipc
  3013  0F5D  03C4               	decf	_t+1,f
  3014  0F5E  02C4               	subwf	_t+1,f
  3015                           
  3016                           ;Button_src.c: 124:                     w = (unsigned char )w;
  3017  0F5F  0841               	movf	_w,w
  3018  0F60  00E7               	movwf	??_thermometer_threshhold_settings
  3019  0F61  01E8               	clrf	??_thermometer_threshhold_settings+1
  3020  0F62  0867               	movf	??_thermometer_threshhold_settings,w
  3021  0F63  00C1               	movwf	_w
  3022  0F64  0868               	movf	??_thermometer_threshhold_settings+1,w
  3023  0F65  00C2               	movwf	_w+1
  3024                           
  3025                           ;Button_src.c: 125:                     t = (unsigned char )(modulus_func(t,10));
  3026  0F66  0844               	movf	_t+1,w
  3027  0F67  00F8               	movwf	modulus_func@x+1
  3028  0F68  0843               	movf	_t,w
  3029  0F69  00F7               	movwf	modulus_func@x
  3030  0F6A  300A               	movlw	10
  3031  0F6B  00F9               	movwf	modulus_func@y
  3032  0F6C  3000               	movlw	0
  3033  0F6D  00FA               	movwf	modulus_func@y+1
  3034  0F6E  160A  118A  24C2  120A  158A  	fcall	_modulus_func
  3035  0F73  0877               	movf	?_modulus_func,w
  3036  0F74  00E7               	movwf	??_thermometer_threshhold_settings
  3037  0F75  01E8               	clrf	??_thermometer_threshhold_settings+1
  3038  0F76  0867               	movf	??_thermometer_threshhold_settings,w
  3039  0F77  00C3               	movwf	_t
  3040  0F78  0868               	movf	??_thermometer_threshhold_settings+1,w
  3041  0F79  00C4               	movwf	_t+1
  3042                           
  3043                           ;Button_src.c: 126:                     write_char(w + '0');
  3044  0F7A  0841               	movf	_w,w
  3045  0F7B  3E30               	addlw	48
  3046  0F7C  160A  118A  251F  120A  158A  	fcall	_write_char
  3047                           
  3048                           ;Button_src.c: 127:                     write_char(t + '0');
  3049  0F81  0843               	movf	_t,w
  3050  0F82  3E30               	addlw	48
  3051  0F83  160A  118A  251F  120A  158A  	fcall	_write_char
  3052                           
  3053                           ;Button_src.c: 128:                     w = decrementor(w,t,'0');
  3054  0F88  0842               	movf	_w+1,w
  3055  0F89  00E3               	movwf	decrementor@lower_val+1
  3056  0F8A  0841               	movf	_w,w
  3057  0F8B  00E2               	movwf	decrementor@lower_val
  3058  0F8C  0844               	movf	_t+1,w
  3059  0F8D  00E5               	movwf	decrementor@upper_val+1
  3060  0F8E  0843               	movf	_t,w
  3061  0F8F  00E4               	movwf	decrementor@upper_val
  3062  0F90  3030               	movlw	48
  3063  0F91  00E7               	movwf	??_thermometer_threshhold_settings
  3064  0F92  0867               	movf	??_thermometer_threshhold_settings,w
  3065  0F93  00E6               	movwf	decrementor@z
  3066  0F94  160A  118A  2616  120A  158A  	fcall	_decrementor
  3067  0F99  00E8               	movwf	??_thermometer_threshhold_settings+1
  3068  0F9A  01E9               	clrf	??_thermometer_threshhold_settings+2
  3069  0F9B  0868               	movf	??_thermometer_threshhold_settings+1,w
  3070  0F9C  00C1               	movwf	_w
  3071  0F9D  0869               	movf	??_thermometer_threshhold_settings+2,w
  3072  0F9E  00C2               	movwf	_w+1
  3073                           
  3074                           ;Button_src.c: 129:                     if((t + '0')=='0'){
  3075  0F9F  0843               	movf	_t,w
  3076  0FA0  3E30               	addlw	48
  3077  0FA1  00E7               	movwf	??_thermometer_threshhold_settings
  3078  0FA2  0844               	movf	_t+1,w
  3079  0FA3  1803               	skipnc
  3080  0FA4  3E01               	addlw	1
  3081  0FA5  3E00               	addlw	0
  3082  0FA6  00E8               	movwf	??_thermometer_threshhold_settings+1
  3083  0FA7  3030               	movlw	48
  3084  0FA8  0667               	xorwf	??_thermometer_threshhold_settings,w
  3085  0FA9  0468               	iorwf	??_thermometer_threshhold_settings+1,w
  3086  0FAA  1D03               	btfss	3,2
  3087  0FAB  2FB0               	goto	l599
  3088                           
  3089                           ;Button_src.c: 130:                         t = 10;
  3090  0FAC  300A               	movlw	10
  3091  0FAD  00C3               	movwf	_t
  3092  0FAE  3000               	movlw	0
  3093  0FAF  00C4               	movwf	_t+1
  3094  0FB0                     l599:	
  3095                           ;Button_src.c: 131:                     }
  3096                           
  3097                           
  3098                           ;Button_src.c: 133:                     x = t;
  3099  0FB0  0844               	movf	_t+1,w
  3100  0FB1  00C0               	movwf	_x+1
  3101  0FB2  0843               	movf	_t,w
  3102  0FB3  00BF               	movwf	_x
  3103                           
  3104                           ;Button_src.c: 134:                     y = w;
  3105  0FB4  0842               	movf	_w+1,w
  3106  0FB5  00BE               	movwf	_y+1
  3107  0FB6  0841               	movf	_w,w
  3108  0FB7  00BD               	movwf	_y
  3109                           
  3110                           ;Button_src.c: 135:                     button_delay();
  3111  0FB8  160A  118A  24E3  120A  158A  	fcall	_button_delay
  3112  0FBD                     l3841:	
  3113                           
  3114                           ;Button_src.c: 137:                 RC0 = 0;
  3115  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0FBF  1007               	bcf	7,0	;volatile
  3118                           
  3119                           ;Button_src.c: 138:                 RC1 = 1;
  3120  0FC0  1487               	bsf	7,1	;volatile
  3121                           
  3122                           ;Button_src.c: 139:                 RC2 = 1;
  3123  0FC1  1507               	bsf	7,2	;volatile
  3124                           
  3125                           ;Button_src.c: 140:                 RC3 = 1;
  3126  0FC2  1587               	bsf	7,3	;volatile
  3127                           
  3128                           ;Button_src.c: 141:                     if(RC6 == 0){
  3129  0FC3  1B07               	btfsc	7,6	;volatile
  3130  0FC4  2FF5               	goto	l600
  3131                           
  3132                           ;Button_src.c: 142:                         var1 = w;
  3133  0FC5  0841               	movf	_w,w
  3134  0FC6  00E7               	movwf	??_thermometer_threshhold_settings
  3135  0FC7  0867               	movf	??_thermometer_threshhold_settings,w
  3136  0FC8  00C9               	movwf	_var1
  3137                           
  3138                           ;Button_src.c: 143:                         var2 = t;
  3139  0FC9  0843               	movf	_t,w
  3140  0FCA  00E7               	movwf	??_thermometer_threshhold_settings
  3141  0FCB  0867               	movf	??_thermometer_threshhold_settings,w
  3142  0FCC  00C8               	movwf	_var2
  3143                           
  3144                           ;Button_src.c: 145:                         write_cmd(0x1);
  3145  0FCD  3001               	movlw	1
  3146  0FCE  160A  118A  2536  120A  158A  	fcall	_write_cmd
  3147                           
  3148                           ;Button_src.c: 146:                         write_char('S');
  3149  0FD3  3053               	movlw	83
  3150  0FD4  160A  118A  251F  120A  158A  	fcall	_write_char
  3151                           
  3152                           ;Button_src.c: 147:                         write_char('A');
  3153  0FD9  3041               	movlw	65
  3154  0FDA  160A  118A  251F  120A  158A  	fcall	_write_char
  3155                           
  3156                           ;Button_src.c: 148:                         write_char('V');
  3157  0FDF  3056               	movlw	86
  3158  0FE0  160A  118A  251F  120A  158A  	fcall	_write_char
  3159                           
  3160                           ;Button_src.c: 149:                         write_char('E');
  3161  0FE5  3045               	movlw	69
  3162  0FE6  160A  118A  251F  120A  158A  	fcall	_write_char
  3163                           
  3164                           ;Button_src.c: 150:                         write_char('D');
  3165  0FEB  3044               	movlw	68
  3166  0FEC  160A  118A  251F  120A  158A  	fcall	_write_char
  3167                           
  3168                           ;Button_src.c: 151:                         button_delay();
  3169  0FF1  160A  118A  24E3   	fcall	_button_delay
  3170  0FF4  0008               	return
  3171  0FF5                     l600:	
  3172                           ;Button_src.c: 153:                     }
  3173                           
  3174                           
  3175                           ;Button_src.c: 154:             RC0 = 0;
  3176  0FF5  1007               	bcf	7,0	;volatile
  3177                           
  3178                           ;Button_src.c: 155:             RC1 = 1;
  3179  0FF6  1487               	bsf	7,1	;volatile
  3180                           
  3181                           ;Button_src.c: 156:             RC2 = 1;
  3182  0FF7  1507               	bsf	7,2	;volatile
  3183                           
  3184                           ;Button_src.c: 157:             RC3 = 1;
  3185  0FF8  1587               	bsf	7,3	;volatile
  3186                           
  3187                           ;Button_src.c: 158:             if (RC7 == 0 ){
  3188  0FF9  1B87               	btfsc	7,7	;volatile
  3189  0FFA  2EA4               	goto	l3759
  3190                           
  3191                           ;Button_src.c: 159:             write_cmd(0x1);
  3192  0FFB  3001               	movlw	1
  3193  0FFC  160A  118A  2536   	fcall	_write_cmd
  3194  0FFF  0008               	return
  3195  1000                     __end_of_thermometer_threshhold_settings:	
  3196                           
  3197                           	psect	text3
  3198  1616                     __ptext3:	
  3199 ;; *************** function _decrementor *****************
  3200 ;; Defined at:
  3201 ;;		line 19 in file "math_src.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  lower_val       2    0[BANK0 ] int 
  3204 ;;  upper_val       2    2[BANK0 ] int 
  3205 ;;  z               1    4[BANK0 ] unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      unsigned char 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, pclath, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 300/0
  3214 ;;		On exit  : 300/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       5       0       0       0
  3218 ;;      Locals:         0       0       0       0       0
  3219 ;;      Temps:          2       0       0       0       0
  3220 ;;      Totals:         2       5       0       0       0
  3221 ;;Total ram usage:        7 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    2
  3224 ;; This function calls:
  3225 ;;		_modulus_func
  3226 ;; This function is called by:
  3227 ;;		_thermometer_threshhold_settings
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _decrementor
  3233  1616                     _decrementor:	
  3234                           
  3235                           ;math_src.c: 20:      if(z == (upper_val + '0')){
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in _decrementor: [wreg+status,2+status,0+pclath+cstack]
  3239  1616  0864               	movf	decrementor@upper_val,w
  3240  1617  3E30               	addlw	48
  3241  1618  00FB               	movwf	??_decrementor
  3242  1619  0865               	movf	decrementor@upper_val+1,w
  3243  161A  1803               	skipnc
  3244  161B  3E01               	addlw	1
  3245  161C  3E00               	addlw	0
  3246  161D  00FC               	movwf	??_decrementor+1
  3247  161E  0866               	movf	decrementor@z,w
  3248  161F  067B               	xorwf	??_decrementor,w
  3249  1620  047C               	iorwf	??_decrementor+1,w
  3250  1621  1D03               	skipz
  3251  1622  2E38               	goto	l3275
  3252                           
  3253                           ;math_src.c: 21:         lower_val--;
  3254  1623  30FF               	movlw	255
  3255  1624  07E2               	addwf	decrementor@lower_val,f
  3256  1625  1803               	skipnc
  3257  1626  0AE3               	incf	decrementor@lower_val+1,f
  3258  1627  30FF               	movlw	255
  3259  1628  07E3               	addwf	decrementor@lower_val+1,f
  3260                           
  3261                           ;math_src.c: 22:         lower_val = (modulus_func(lower_val,10));
  3262  1629  0863               	movf	decrementor@lower_val+1,w
  3263  162A  00F8               	movwf	modulus_func@x+1
  3264  162B  0862               	movf	decrementor@lower_val,w
  3265  162C  00F7               	movwf	modulus_func@x
  3266  162D  300A               	movlw	10
  3267  162E  00F9               	movwf	modulus_func@y
  3268  162F  3000               	movlw	0
  3269  1630  00FA               	movwf	modulus_func@y+1
  3270  1631  160A  118A  24C2   	fcall	_modulus_func
  3271  1634  0878               	movf	?_modulus_func+1,w
  3272  1635  00E3               	movwf	decrementor@lower_val+1
  3273  1636  0877               	movf	?_modulus_func,w
  3274  1637  00E2               	movwf	decrementor@lower_val
  3275  1638                     l3275:	
  3276                           
  3277                           ;math_src.c: 24:      return lower_val;
  3278  1638  0862               	movf	decrementor@lower_val,w
  3279  1639  0008               	return
  3280  163A                     __end_of_decrementor:	
  3281                           
  3282                           	psect	text4
  3283  178C                     __ptext4:	
  3284 ;; *************** function _set_upper_threshold *****************
  3285 ;; Defined at:
  3286 ;;		line 4 in file "threshold_src.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  upper_val       2    3[COMMON] int 
  3289 ;;  lower_val       2    5[COMMON] int 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 300/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         4       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0
  3303 ;;      Temps:          2       0       0       0       0
  3304 ;;      Totals:         6       0       0       0       0
  3305 ;;Total ram usage:        6 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    2
  3308 ;; This function calls:
  3309 ;;		_write_char
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _set_upper_threshold
  3317  178C                     _set_upper_threshold:	
  3318                           
  3319                           ;threshold_src.c: 5:     if(shi == upper_val && ge > lower_val && count == 2){
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _set_upper_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3323  178C  085D               	movf	_shi,w
  3324  178D  00F7               	movwf	??_set_upper_threshold
  3325  178E  01F8               	clrf	??_set_upper_threshold+1
  3326  178F  0874               	movf	set_upper_threshold@upper_val+1,w
  3327  1790  0678               	xorwf	??_set_upper_threshold+1,w
  3328  1791  1D03               	skipz
  3329  1792  2F95               	goto	u3755
  3330  1793  0873               	movf	set_upper_threshold@upper_val,w
  3331  1794  0677               	xorwf	??_set_upper_threshold,w
  3332  1795                     u3755:	
  3333  1795  1D03               	skipz
  3334  1796  0008               	return
  3335  1797  0876               	movf	set_upper_threshold@lower_val+1,w
  3336  1798  3A80               	xorlw	128
  3337  1799  00F7               	movwf	??_set_upper_threshold
  3338  179A  3080               	movlw	128
  3339  179B  0277               	subwf	??_set_upper_threshold,w
  3340  179C  1D03               	skipz
  3341  179D  2FA0               	goto	u3765
  3342  179E  085C               	movf	_ge,w
  3343  179F  0275               	subwf	set_upper_threshold@lower_val,w
  3344  17A0                     u3765:	
  3345  17A0  1803               	skipnc
  3346  17A1  0008               	return
  3347  17A2  3002               	movlw	2
  3348  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  3349  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  3350  17A5  062D               	xorwf	_count,w
  3351  17A6  042E               	iorwf	_count+1,w
  3352  17A7  1D03               	btfss	3,2
  3353  17A8  0008               	return
  3354                           
  3355                           ;threshold_src.c: 6:     buzzer_watcher = 'w';
  3356  17A9  3077               	movlw	119
  3357  17AA  00F7               	movwf	??_set_upper_threshold
  3358  17AB  0877               	movf	??_set_upper_threshold,w
  3359  17AC  00CB               	movwf	_buzzer_watcher
  3360                           
  3361                           ;threshold_src.c: 7:     write_char('W');
  3362  17AD  3057               	movlw	87
  3363  17AE  160A  118A  251F  160A  118A  	fcall	_write_char
  3364                           
  3365                           ;threshold_src.c: 8:     write_char('A');
  3366  17B3  3041               	movlw	65
  3367  17B4  160A  118A  251F  160A  118A  	fcall	_write_char
  3368                           
  3369                           ;threshold_src.c: 9:     write_char('R');
  3370  17B9  3052               	movlw	82
  3371  17BA  160A  118A  251F  160A  118A  	fcall	_write_char
  3372                           
  3373                           ;threshold_src.c: 10:     write_char('M');
  3374  17BF  304D               	movlw	77
  3375  17C0  160A  118A  251F   	fcall	_write_char
  3376  17C3  0008               	return
  3377  17C4                     __end_of_set_upper_threshold:	
  3378                           
  3379                           	psect	text5
  3380  0816                     __ptext5:	
  3381 ;; *************** function _set_lower_threshold *****************
  3382 ;; Defined at:
  3383 ;;		line 14 in file "threshold_src.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  upper_val       2    3[COMMON] int 
  3386 ;;  lower_val       2    5[COMMON] int 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 300/0
  3395 ;;		On exit  : 300/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         4       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0
  3400 ;;      Temps:          2       0       0       0       0
  3401 ;;      Totals:         6       0       0       0       0
  3402 ;;Total ram usage:        6 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    2
  3405 ;; This function calls:
  3406 ;;		_write_char
  3407 ;; This function is called by:
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           
  3413                           ;psect for function _set_lower_threshold
  3414  0816                     _set_lower_threshold:	
  3415                           
  3416                           ;threshold_src.c: 15:     if((shi == upper_val && ge <= lower_val)|| ge == lower_val)
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _set_lower_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3420  0816  085D               	movf	_shi,w
  3421  0817  00F7               	movwf	??_set_lower_threshold
  3422  0818  01F8               	clrf	??_set_lower_threshold+1
  3423  0819  0874               	movf	set_lower_threshold@upper_val+1,w
  3424  081A  0678               	xorwf	??_set_lower_threshold+1,w
  3425  081B  1D03               	skipz
  3426  081C  281F               	goto	u3725
  3427  081D  0873               	movf	set_lower_threshold@upper_val,w
  3428  081E  0677               	xorwf	??_set_lower_threshold,w
  3429  081F                     u3725:	
  3430  081F  1D03               	skipz
  3431  0820  282C               	goto	l4339
  3432  0821  0876               	movf	set_lower_threshold@lower_val+1,w
  3433  0822  3A80               	xorlw	128
  3434  0823  00F7               	movwf	??_set_lower_threshold
  3435  0824  3080               	movlw	128
  3436  0825  0277               	subwf	??_set_lower_threshold,w
  3437  0826  1D03               	skipz
  3438  0827  282A               	goto	u3735
  3439  0828  085C               	movf	_ge,w
  3440  0829  0275               	subwf	set_lower_threshold@lower_val,w
  3441  082A                     u3735:	
  3442  082A  1803               	skipnc
  3443  082B  2839               	goto	l4341
  3444  082C                     l4339:	
  3445  082C  1283               	bcf	3,5	;RP0=0, select bank0
  3446  082D  1303               	bcf	3,6	;RP1=0, select bank0
  3447  082E  085C               	movf	_ge,w
  3448  082F  00F7               	movwf	??_set_lower_threshold
  3449  0830  01F8               	clrf	??_set_lower_threshold+1
  3450  0831  0876               	movf	set_lower_threshold@lower_val+1,w
  3451  0832  0678               	xorwf	??_set_lower_threshold+1,w
  3452  0833  1D03               	skipz
  3453  0834  2837               	goto	u3745
  3454  0835  0875               	movf	set_lower_threshold@lower_val,w
  3455  0836  0677               	xorwf	??_set_lower_threshold,w
  3456  0837                     u3745:	
  3457  0837  1D03               	skipz
  3458  0838  0008               	return
  3459  0839                     l4341:	
  3460                           
  3461                           ;threshold_src.c: 16:     {;threshold_src.c: 17:     count = 2;
  3462  0839  3002               	movlw	2
  3463  083A  1283               	bcf	3,5	;RP0=0, select bank0
  3464  083B  1303               	bcf	3,6	;RP1=0, select bank0
  3465  083C  00AD               	movwf	_count
  3466  083D  3000               	movlw	0
  3467  083E  00AE               	movwf	_count+1
  3468                           
  3469                           ;threshold_src.c: 18:     buzzer_watcher = 'x';
  3470  083F  3078               	movlw	120
  3471  0840  00F7               	movwf	??_set_lower_threshold
  3472  0841  0877               	movf	??_set_lower_threshold,w
  3473  0842  00CB               	movwf	_buzzer_watcher
  3474                           
  3475                           ;threshold_src.c: 19:     write_char('O');
  3476  0843  304F               	movlw	79
  3477  0844  160A  118A  251F  120A  158A  	fcall	_write_char
  3478                           
  3479                           ;threshold_src.c: 20:     write_char('K');
  3480  0849  304B               	movlw	75
  3481  084A  160A  118A  251F  120A  158A  	fcall	_write_char
  3482                           
  3483                           ;threshold_src.c: 21:     write_char(' ');
  3484  084F  3020               	movlw	32
  3485  0850  160A  118A  251F  120A  158A  	fcall	_write_char
  3486                           
  3487                           ;threshold_src.c: 22:     write_char(' ');
  3488  0855  3020               	movlw	32
  3489  0856  160A  118A  251F   	fcall	_write_char
  3490  0859  0008               	return
  3491  085A                     __end_of_set_lower_threshold:	
  3492                           
  3493                           	psect	text6
  3494  154D                     __ptext6:	
  3495 ;; *************** function _set_beep_threshhold *****************
  3496 ;; Defined at:
  3497 ;;		line 5 in file "buzzer_src.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  x               1    wreg     unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  x               1    2[COMMON] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 300/0
  3508 ;;		On exit  : 300/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       0       0       0       0
  3512 ;;      Locals:         1       0       0       0       0
  3513 ;;      Temps:          0       0       0       0       0
  3514 ;;      Totals:         1       0       0       0       0
  3515 ;;Total ram usage:        1 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    1
  3518 ;; This function calls:
  3519 ;;		_button_delay
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           
  3526                           ;psect for function _set_beep_threshhold
  3527  154D                     _set_beep_threshhold:	
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _set_beep_threshhold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3531                           ;set_beep_threshhold@x stored from wreg
  3532  154D  00F2               	movwf	set_beep_threshhold@x
  3533                           
  3534                           ;buzzer_src.c: 6:     if (x == 'w'){
  3535  154E  3077               	movlw	119
  3536  154F  0672               	xorwf	set_beep_threshhold@x,w
  3537  1550  1D03               	btfss	3,2
  3538  1551  2D66               	goto	l4377
  3539                           
  3540                           ;buzzer_src.c: 7:         RE2 = 1;
  3541  1552  1509               	bsf	9,2	;volatile
  3542                           
  3543                           ;buzzer_src.c: 8:         button_delay();
  3544  1553  160A  118A  24E3  160A  118A  	fcall	_button_delay
  3545                           
  3546                           ;buzzer_src.c: 9:         RE2 = 0;
  3547  1558  1283               	bcf	3,5	;RP0=0, select bank0
  3548  1559  1303               	bcf	3,6	;RP1=0, select bank0
  3549  155A  1109               	bcf	9,2	;volatile
  3550                           
  3551                           ;buzzer_src.c: 10:         button_delay();
  3552  155B  160A  118A  24E3  160A  118A  	fcall	_button_delay
  3553                           
  3554                           ;buzzer_src.c: 11:         RE2 = 1;
  3555  1560  1283               	bcf	3,5	;RP0=0, select bank0
  3556  1561  1303               	bcf	3,6	;RP1=0, select bank0
  3557  1562  1509               	bsf	9,2	;volatile
  3558                           
  3559                           ;buzzer_src.c: 12:         button_delay();
  3560  1563  160A  118A  24E3   	fcall	_button_delay
  3561  1566                     l4377:	
  3562                           
  3563                           ;buzzer_src.c: 13:         RE2 = 0;
  3564  1566  1283               	bcf	3,5	;RP0=0, select bank0
  3565  1567  1303               	bcf	3,6	;RP1=0, select bank0
  3566  1568  1109               	bcf	9,2	;volatile
  3567  1569  0008               	return
  3568  156A                     __end_of_set_beep_threshhold:	
  3569                           
  3570                           	psect	text7
  3571  1489                     __ptext7:	
  3572 ;; *************** function _reset_alarm *****************
  3573 ;; Defined at:
  3574 ;;		line 26 in file "threshold_src.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2
  3583 ;; Tracked objects:
  3584 ;;		On entry : 300/0
  3585 ;;		On exit  : 300/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0
  3590 ;;      Temps:          1       0       0       0       0
  3591 ;;      Totals:         1       0       0       0       0
  3592 ;;Total ram usage:        1 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _reset_alarm
  3603  1489                     _reset_alarm:	
  3604                           
  3605                           ;threshold_src.c: 27:     RC0 = 1;
  3606                           
  3607                           ;incstack = 0
  3608                           ; Regs used in _reset_alarm: [wreg+status,2]
  3609  1489  1407               	bsf	7,0	;volatile
  3610                           
  3611                           ;threshold_src.c: 28:     RC1 = 1;
  3612  148A  1487               	bsf	7,1	;volatile
  3613                           
  3614                           ;threshold_src.c: 29:     RC2 = 1;
  3615  148B  1507               	bsf	7,2	;volatile
  3616                           
  3617                           ;threshold_src.c: 30:     RC3 = 0;
  3618  148C  1187               	bcf	7,3	;volatile
  3619                           
  3620                           ;threshold_src.c: 31:     if(RC4 == 0){
  3621  148D  1A07               	btfsc	7,4	;volatile
  3622  148E  0008               	return
  3623                           
  3624                           ;threshold_src.c: 32:         count = 0;
  3625  148F  01AD               	clrf	_count
  3626  1490  01AE               	clrf	_count+1
  3627                           
  3628                           ;threshold_src.c: 33:         buzzer_watcher = 'x';
  3629  1491  3078               	movlw	120
  3630  1492  00F0               	movwf	??_reset_alarm
  3631  1493  0870               	movf	??_reset_alarm,w
  3632  1494  00CB               	movwf	_buzzer_watcher
  3633  1495  0008               	return
  3634  1496                     __end_of_reset_alarm:	
  3635                           
  3636                           	psect	text8
  3637  15CF                     __ptext8:	
  3638 ;; *************** function _lcd_init *****************
  3639 ;; Defined at:
  3640 ;;		line 14 in file "LCD_src.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  i               2    0        int 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 300/100
  3651 ;;		On exit  : 300/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0
  3656 ;;      Temps:          0       0       0       0       0
  3657 ;;      Totals:         0       0       0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:    2
  3661 ;; This function calls:
  3662 ;;		_delay_screen
  3663 ;;		_write_cmd
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function _lcd_init
  3671  15CF                     _lcd_init:	
  3672                           
  3673                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  3674                           
  3675                           ;incstack = 0
  3676                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3677  15CF  0185               	clrf	5	;volatile
  3678                           
  3679                           ;LCD_src.c: 18:  RA0=0;
  3680  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  3681  15D1  1005               	bcf	5,0	;volatile
  3682                           
  3683                           ;LCD_src.c: 19:  delay_screen();
  3684  15D2  160A  118A  24F7  160A  118A  	fcall	_delay_screen
  3685                           
  3686                           ;LCD_src.c: 20:  RA0=1;
  3687  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  3688  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  3689  15D9  1405               	bsf	5,0	;volatile
  3690                           
  3691                           ;LCD_src.c: 21:  RA2=1;
  3692  15DA  1505               	bsf	5,2	;volatile
  3693                           
  3694                           ;LCD_src.c: 22:  write_cmd(0x30);
  3695  15DB  3030               	movlw	48
  3696  15DC  160A  118A  2536  160A  118A  	fcall	_write_cmd
  3697                           
  3698                           ;LCD_src.c: 23:  write_cmd(0x01);
  3699  15E1  3001               	movlw	1
  3700  15E2  160A  118A  2536  160A  118A  	fcall	_write_cmd
  3701                           
  3702                           ;LCD_src.c: 24:  write_cmd(0x06);
  3703  15E7  3006               	movlw	6
  3704  15E8  160A  118A  2536  160A  118A  	fcall	_write_cmd
  3705                           
  3706                           ;LCD_src.c: 25:  write_cmd(0x0c);
  3707  15ED  300C               	movlw	12
  3708  15EE  160A  118A  2536   	fcall	_write_cmd
  3709  15F1  0008               	return
  3710  15F2                     __end_of_lcd_init:	
  3711                           
  3712                           	psect	text9
  3713  0800                     __ptext9:	
  3714 ;; *************** function _initialise_buttons *****************
  3715 ;; Defined at:
  3716 ;;		line 11 in file "Button_src.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;		None
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  1    wreg      void 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2
  3725 ;; Tracked objects:
  3726 ;;		On entry : 300/0
  3727 ;;		On exit  : 300/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3730 ;;      Params:         0       0       0       0       0
  3731 ;;      Locals:         0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0
  3733 ;;      Totals:         0       0       0       0       0
  3734 ;;Total ram usage:        0 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _initialise_buttons
  3745  0800                     _initialise_buttons:	
  3746                           
  3747                           ;Button_src.c: 12:     ADCON1 = 0x06;
  3748                           
  3749                           ;incstack = 0
  3750                           ; Regs used in _initialise_buttons: [wreg+status,2]
  3751  0800  3006               	movlw	6
  3752  0801  1683               	bsf	3,5	;RP0=1, select bank1
  3753  0802  009F               	movwf	31	;volatile
  3754                           
  3755                           ;Button_src.c: 13:     TRISC = 0xf0;
  3756  0803  30F0               	movlw	240
  3757  0804  0087               	movwf	7	;volatile
  3758                           
  3759                           ;Button_src.c: 14:     a = 0x00;
  3760  0805  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0806  01D7               	clrf	_a
  3762                           
  3763                           ;Button_src.c: 15:     b = 0x00;
  3764  0807  01D6               	clrf	_b
  3765                           
  3766                           ;Button_src.c: 16:     c = 0x00;
  3767  0808  01D5               	clrf	_c
  3768                           
  3769                           ;Button_src.c: 17:     z = 0;
  3770  0809  01BB               	clrf	_z
  3771  080A  01BC               	clrf	_z+1
  3772                           
  3773                           ;Button_src.c: 18:     day_low = 12;
  3774  080B  300C               	movlw	12
  3775  080C  00B9               	movwf	_day_low
  3776  080D  3000               	movlw	0
  3777  080E  00BA               	movwf	_day_low+1
  3778                           
  3779                           ;Button_src.c: 19:     stats = 1;
  3780  080F  3001               	movlw	1
  3781  0810  00B3               	movwf	_stats
  3782  0811  3000               	movlw	0
  3783  0812  00B4               	movwf	_stats+1
  3784                           
  3785                           ;Button_src.c: 20:     p = 0;
  3786  0813  01AF               	clrf	_p
  3787  0814  01B0               	clrf	_p+1
  3788  0815  0008               	return
  3789  0816                     __end_of_initialise_buttons:	
  3790                           
  3791                           	psect	text10
  3792  146C                     __ptext10:	
  3793 ;; *************** function _init_temp *****************
  3794 ;; Defined at:
  3795 ;;		line 6 in file "Thermometer_src.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;		None
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;		None
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		status,2
  3804 ;; Tracked objects:
  3805 ;;		On entry : 200/100
  3806 ;;		On exit  : 300/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         0       0       0       0       0
  3810 ;;      Locals:         0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0
  3812 ;;      Totals:         0       0       0       0       0
  3813 ;;Total ram usage:        0 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_main
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function _init_temp
  3824  146C                     _init_temp:	
  3825                           
  3826                           ;Thermometer_src.c: 8:     TRISE=0X00;
  3827                           
  3828                           ;incstack = 0
  3829                           ; Regs used in _init_temp: [status,2]
  3830  146C  1683               	bsf	3,5	;RP0=1, select bank1
  3831  146D  0189               	clrf	9	;volatile
  3832                           
  3833                           ;Thermometer_src.c: 9:     PORTE = 0X00;
  3834  146E  1283               	bcf	3,5	;RP0=0, select bank0
  3835  146F  0189               	clrf	9	;volatile
  3836  1470  0008               	return
  3837  1471                     __end_of_init_temp:	
  3838                           
  3839                           	psect	text11
  3840  1471                     __ptext11:	
  3841 ;; *************** function _init *****************
  3842 ;; Defined at:
  3843 ;;		line 5 in file "LCD_src.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2
  3852 ;; Tracked objects:
  3853 ;;		On entry : 300/0
  3854 ;;		On exit  : 300/100
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3857 ;;      Params:         0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           
  3871                           ;psect for function _init
  3872  1471                     _init:	
  3873                           
  3874                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  3875                           
  3876                           ;incstack = 0
  3877                           ; Regs used in _init: [wreg+status,2]
  3878  1471  3007               	movlw	7
  3879  1472  1683               	bsf	3,5	;RP0=1, select bank1
  3880  1473  009F               	movwf	31	;volatile
  3881                           
  3882                           ;LCD_src.c: 8:  TRISA0=1;
  3883  1474  1405               	bsf	5,0	;volatile
  3884                           
  3885                           ;LCD_src.c: 9:  TRISD=0X00;
  3886  1475  0188               	clrf	8	;volatile
  3887                           
  3888                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  3889  1476  0181               	clrf	1	;volatile
  3890                           
  3891                           ;LCD_src.c: 11:  TRISE = 0X00;
  3892  1477  0189               	clrf	9	;volatile
  3893  1478  0008               	return
  3894  1479                     __end_of_init:	
  3895                           
  3896                           	psect	text12
  3897  1660                     __ptext12:	
  3898 ;; *************** function _get_time *****************
  3899 ;; Defined at:
  3900 ;;		line 26 in file "clock_src.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  i               2    6[COMMON] int 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 300/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3914 ;;      Params:         0       0       0       0       0
  3915 ;;      Locals:         2       0       0       0       0
  3916 ;;      Temps:          1       0       0       0       0
  3917 ;;      Totals:         3       0       0       0       0
  3918 ;;Total ram usage:        3 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    1
  3921 ;; This function calls:
  3922 ;;		_time_read_1
  3923 ;;		_time_write_1
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           
  3930                           ;psect for function _get_time
  3931  1660                     _get_time:	
  3932                           
  3933                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  3934                           
  3935                           ;incstack = 0
  3936                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3937  1660  1283               	bcf	3,5	;RP0=0, select bank0
  3938  1661  1303               	bcf	3,6	;RP1=0, select bank0
  3939  1662  1686               	bsf	6,5	;volatile
  3940                           
  3941                           ;clock_src.c: 30:    time_write_1(0xbf);
  3942  1663  30BF               	movlw	191
  3943  1664  160A  118A  263A  160A  118A  	fcall	_time_write_1
  3944                           
  3945                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  3946  1669  01F6               	clrf	get_time@i
  3947  166A  01F7               	clrf	get_time@i+1
  3948  166B                     l3653:	
  3949                           
  3950                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  3951  166B  160A  118A  268C  160A  118A  	fcall	_time_read_1
  3952  1670  00F5               	movwf	??_get_time
  3953  1671  0876               	movf	get_time@i,w
  3954  1672  3E20               	addlw	(low (_table1| 0))& (0+255)
  3955  1673  0084               	movwf	4
  3956  1674  0875               	movf	??_get_time,w
  3957  1675  1383               	bcf	3,7	;select IRP bank0
  3958  1676  0080               	movwf	0
  3959                           
  3960                           ;clock_src.c: 34:      }
  3961  1677  3001               	movlw	1
  3962  1678  07F6               	addwf	get_time@i,f
  3963  1679  1803               	skipnc
  3964  167A  0AF7               	incf	get_time@i+1,f
  3965  167B  3000               	movlw	0
  3966  167C  07F7               	addwf	get_time@i+1,f
  3967  167D  0877               	movf	get_time@i+1,w
  3968  167E  3A80               	xorlw	128
  3969  167F  00FF               	movwf	127
  3970  1680  3080               	movlw	128
  3971  1681  027F               	subwf	127,w
  3972  1682  1D03               	skipz
  3973  1683  2E86               	goto	u3015
  3974  1684  3007               	movlw	7
  3975  1685  0276               	subwf	get_time@i,w
  3976  1686                     u3015:	
  3977  1686  1C03               	skipc
  3978  1687  2E6B               	goto	l3653
  3979                           
  3980                           ;clock_src.c: 35:    RB5=0;
  3981  1688  1283               	bcf	3,5	;RP0=0, select bank0
  3982  1689  1303               	bcf	3,6	;RP1=0, select bank0
  3983  168A  1286               	bcf	6,5	;volatile
  3984  168B  0008               	return
  3985  168C                     __end_of_get_time:	
  3986                           
  3987                           	psect	text13
  3988  168C                     __ptext13:	
  3989 ;; *************** function _time_read_1 *****************
  3990 ;; Defined at:
  3991 ;;		line 132 in file "clock_src.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;		None
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  j               2    2[COMMON] int 
  3996 ;;  time_rx         1    4[COMMON] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      unsigned char 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0, btemp+1
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 300/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         0       0       0       0       0
  4007 ;;      Locals:         3       0       0       0       0
  4008 ;;      Temps:          2       0       0       0       0
  4009 ;;      Totals:         5       0       0       0       0
  4010 ;;Total ram usage:        5 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_get_time
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _time_read_1
  4021  168C                     _time_read_1:	
  4022                           
  4023                           ;clock_src.c: 134:    unsigned char time_rx=0;
  4024                           
  4025                           ;incstack = 0
  4026                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  4027  168C  01F4               	clrf	time_read_1@time_rx
  4028                           
  4029                           ;clock_src.c: 135:    int j;;clock_src.c: 136:    TRISB4=1;
  4030  168D  1683               	bsf	3,5	;RP0=1, select bank1
  4031  168E  1303               	bcf	3,6	;RP1=0, select bank1
  4032  168F  1606               	bsf	6,4	;volatile
  4033                           
  4034                           ;clock_src.c: 137:    for(j=0;j<8;j++)
  4035  1690  01F2               	clrf	time_read_1@j
  4036  1691  01F3               	clrf	time_read_1@j+1
  4037  1692                     l380:	
  4038                           
  4039                           ;clock_src.c: 138:       {;clock_src.c: 139:         RB0=0;
  4040  1692  1283               	bcf	3,5	;RP0=0, select bank0
  4041  1693  1303               	bcf	3,6	;RP1=0, select bank0
  4042  1694  1006               	bcf	6,0	;volatile
  4043                           
  4044                           ;clock_src.c: 140:         time_rx=time_rx>>1;
  4045  1695  0874               	movf	time_read_1@time_rx,w
  4046  1696  00F0               	movwf	??_time_read_1
  4047  1697  1003               	clrc
  4048  1698  0C70               	rrf	??_time_read_1,w
  4049  1699  00F1               	movwf	??_time_read_1+1
  4050  169A  0871               	movf	??_time_read_1+1,w
  4051  169B  00F4               	movwf	time_read_1@time_rx
  4052                           
  4053                           ;clock_src.c: 141:         if(RB4)time_rx=time_rx|0x80;
  4054  169C  1E06               	btfss	6,4	;volatile
  4055  169D  2EA3               	goto	l3239
  4056  169E  0874               	movf	time_read_1@time_rx,w
  4057  169F  3880               	iorlw	128
  4058  16A0  00F0               	movwf	??_time_read_1
  4059  16A1  0870               	movf	??_time_read_1,w
  4060  16A2  00F4               	movwf	time_read_1@time_rx
  4061  16A3                     l3239:	
  4062                           
  4063                           ;clock_src.c: 143:        RB0=1;
  4064  16A3  1406               	bsf	6,0	;volatile
  4065                           
  4066                           ;clock_src.c: 144:       }
  4067  16A4  3001               	movlw	1
  4068  16A5  07F2               	addwf	time_read_1@j,f
  4069  16A6  1803               	skipnc
  4070  16A7  0AF3               	incf	time_read_1@j+1,f
  4071  16A8  3000               	movlw	0
  4072  16A9  07F3               	addwf	time_read_1@j+1,f
  4073  16AA  0873               	movf	time_read_1@j+1,w
  4074  16AB  3A80               	xorlw	128
  4075  16AC  00FF               	movwf	127
  4076  16AD  3080               	movlw	128
  4077  16AE  027F               	subwf	127,w
  4078  16AF  1D03               	skipz
  4079  16B0  2EB3               	goto	u2185
  4080  16B1  3008               	movlw	8
  4081  16B2  0272               	subwf	time_read_1@j,w
  4082  16B3                     u2185:	
  4083  16B3  1C03               	skipc
  4084  16B4  2E92               	goto	l380
  4085                           
  4086                           ;clock_src.c: 145:     TRISB4=0;
  4087  16B5  1683               	bsf	3,5	;RP0=1, select bank1
  4088  16B6  1303               	bcf	3,6	;RP1=0, select bank1
  4089  16B7  1206               	bcf	6,4	;volatile
  4090                           
  4091                           ;clock_src.c: 146:     RB0=0;
  4092  16B8  1283               	bcf	3,5	;RP0=0, select bank0
  4093  16B9  1006               	bcf	6,0	;volatile
  4094                           
  4095                           ;clock_src.c: 147:     return(time_rx);
  4096  16BA  0874               	movf	time_read_1@time_rx,w
  4097  16BB  0008               	return
  4098  16BC                     __end_of_time_read_1:	
  4099                           
  4100                           	psect	text14
  4101  0A29                     __ptext14:	
  4102 ;; *************** function _get_temp *****************
  4103 ;; Defined at:
  4104 ;;		line 89 in file "Thermometer_src.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  i               2    0        int 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 300/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0
  4120 ;;      Temps:          0       4       0       0       0
  4121 ;;      Totals:         0       4       0       0       0
  4122 ;;Total ram usage:        4 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    2
  4125 ;; This function calls:
  4126 ;;		___lbdiv
  4127 ;;		___lbmod
  4128 ;;		___lwdiv
  4129 ;;		___lwmod
  4130 ;;		_delay2
  4131 ;;		_read_byte
  4132 ;;		_reset_temp
  4133 ;;		_write_byte
  4134 ;; This function is called by:
  4135 ;;		_main
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           
  4140                           ;psect for function _get_temp
  4141  0A29                     _get_temp:	
  4142                           
  4143                           ;Thermometer_src.c: 91: int i;;Thermometer_src.c: 92: TRISE0 =1;
  4144                           
  4145                           ;incstack = 0
  4146                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4147  0A29  1683               	bsf	3,5	;RP0=1, select bank1
  4148  0A2A  1409               	bsf	9,0	;volatile
  4149                           
  4150                           ;Thermometer_src.c: 93: reset_temp();
  4151  0A2B  160A  118A  2722  120A  158A  	fcall	_reset_temp
  4152                           
  4153                           ;Thermometer_src.c: 94: write_byte(0XCC);
  4154  0A30  30CC               	movlw	204
  4155  0A31  160A  118A  2756  120A  158A  	fcall	_write_byte
  4156                           
  4157                           ;Thermometer_src.c: 95: delay2();
  4158  0A36  160A  118A  250B  120A  158A  	fcall	_delay2
  4159                           
  4160                           ;Thermometer_src.c: 96: write_byte(0X44);
  4161  0A3B  3044               	movlw	68
  4162  0A3C  160A  118A  2756  120A  158A  	fcall	_write_byte
  4163                           
  4164                           ;Thermometer_src.c: 98: reset_temp();
  4165  0A41  160A  118A  2722  120A  158A  	fcall	_reset_temp
  4166                           
  4167                           ;Thermometer_src.c: 99: write_byte(0XCC);
  4168  0A46  30CC               	movlw	204
  4169  0A47  160A  118A  2756  120A  158A  	fcall	_write_byte
  4170                           
  4171                           ;Thermometer_src.c: 100: write_byte(0XBE);
  4172  0A4C  30BE               	movlw	190
  4173  0A4D  160A  118A  2756  120A  158A  	fcall	_write_byte
  4174                           
  4175                           ;Thermometer_src.c: 101: TLV=read_byte();
  4176  0A52  160A  118A  26EE  120A  158A  	fcall	_read_byte
  4177  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  4178  0A58  1303               	bcf	3,6	;RP1=0, select bank0
  4179  0A59  00E2               	movwf	??_get_temp
  4180  0A5A  0862               	movf	??_get_temp,w
  4181  0A5B  00E1               	movwf	_TLV
  4182                           
  4183                           ;Thermometer_src.c: 102: THV=read_byte();
  4184  0A5C  160A  118A  26EE  120A  158A  	fcall	_read_byte
  4185  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  4186  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  4187  0A63  00E2               	movwf	??_get_temp
  4188  0A64  0862               	movf	??_get_temp,w
  4189  0A65  00E0               	movwf	_THV
  4190                           
  4191                           ;Thermometer_src.c: 103: TRISE0 =1;
  4192  0A66  1683               	bsf	3,5	;RP0=1, select bank1
  4193  0A67  1409               	bsf	9,0	;volatile
  4194                           
  4195                           ;Thermometer_src.c: 104: TZ=(TLV>>4)|(THV<<4)&0X3f;
  4196  0A68  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0A69  0860               	movf	_THV,w
  4198  0A6A  00E2               	movwf	??_get_temp
  4199  0A6B  3004               	movlw	4
  4200  0A6C                     u2945:	
  4201  0A6C  1003               	clrc
  4202  0A6D  0DE2               	rlf	??_get_temp,f
  4203  0A6E  3EFF               	addlw	-1
  4204  0A6F  1D03               	skipz
  4205  0A70  2A6C               	goto	u2945
  4206  0A71  303F               	movlw	63
  4207  0A72  0562               	andwf	??_get_temp,w
  4208  0A73  00E3               	movwf	??_get_temp+1
  4209  0A74  0861               	movf	_TLV,w
  4210  0A75  00E4               	movwf	??_get_temp+2
  4211  0A76  3004               	movlw	4
  4212  0A77                     u2955:	
  4213  0A77  1003               	clrc
  4214  0A78  0CE4               	rrf	??_get_temp+2,f
  4215  0A79  3EFF               	addlw	-1
  4216  0A7A  1D03               	skipz
  4217  0A7B  2A77               	goto	u2955
  4218  0A7C  0864               	movf	??_get_temp+2,w
  4219  0A7D  0463               	iorwf	??_get_temp+1,w
  4220  0A7E  00E5               	movwf	??_get_temp+3
  4221  0A7F  0865               	movf	??_get_temp+3,w
  4222  0A80  00DF               	movwf	_TZ
  4223                           
  4224                           ;Thermometer_src.c: 105: TX=TLV<<4;
  4225  0A81  0861               	movf	_TLV,w
  4226  0A82  00E2               	movwf	??_get_temp
  4227  0A83  3003               	movlw	3
  4228  0A84                     u2965:	
  4229  0A84  1003               	clrc
  4230  0A85  0DE2               	rlf	??_get_temp,f
  4231  0A86  3EFF               	addlw	-1
  4232  0A87  1D03               	skipz
  4233  0A88  2A84               	goto	u2965
  4234  0A89  1003               	clrc
  4235  0A8A  0D62               	rlf	??_get_temp,w
  4236  0A8B  00E3               	movwf	??_get_temp+1
  4237  0A8C  0863               	movf	??_get_temp+1,w
  4238  0A8D  00DE               	movwf	_TX
  4239                           
  4240                           ;Thermometer_src.c: 107: ge=TZ%10;
  4241  0A8E  300A               	movlw	10
  4242  0A8F  00E2               	movwf	??_get_temp
  4243  0A90  0862               	movf	??_get_temp,w
  4244  0A91  00F0               	movwf	___lbmod@divisor
  4245  0A92  085F               	movf	_TZ,w
  4246  0A93  160A  118A  25AC  120A  158A  	fcall	___lbmod
  4247  0A98  00E3               	movwf	??_get_temp+1
  4248  0A99  0863               	movf	??_get_temp+1,w
  4249  0A9A  00DC               	movwf	_ge
  4250                           
  4251                           ;Thermometer_src.c: 108: shi=TZ/10;
  4252  0A9B  300A               	movlw	10
  4253  0A9C  00E2               	movwf	??_get_temp
  4254  0A9D  0862               	movf	??_get_temp,w
  4255  0A9E  00F0               	movwf	___lbdiv@divisor
  4256  0A9F  085F               	movf	_TZ,w
  4257  0AA0  160A  118A  258B  120A  158A  	fcall	___lbdiv
  4258  0AA5  00E3               	movwf	??_get_temp+1
  4259  0AA6  0863               	movf	??_get_temp+1,w
  4260  0AA7  00DD               	movwf	_shi
  4261                           
  4262                           ;Thermometer_src.c: 109: wd=0;
  4263  0AA8  01C5               	clrf	_wd
  4264  0AA9  01C6               	clrf	_wd+1
  4265                           
  4266                           ;Thermometer_src.c: 110: if (TX & 0x80) wd=wd+5000;
  4267  0AAA  1FDE               	btfss	_TX,7
  4268  0AAB  2AB4               	goto	l3621
  4269  0AAC  0845               	movf	_wd,w
  4270  0AAD  3E88               	addlw	136
  4271  0AAE  00C5               	movwf	_wd
  4272  0AAF  0846               	movf	_wd+1,w
  4273  0AB0  1803               	skipnc
  4274  0AB1  3E01               	addlw	1
  4275  0AB2  3E13               	addlw	19
  4276  0AB3  00C6               	movwf	_wd+1
  4277  0AB4                     l3621:	
  4278                           
  4279                           ;Thermometer_src.c: 111: if (TX & 0x40) wd=wd+2500;
  4280  0AB4  1F5E               	btfss	_TX,6
  4281  0AB5  2ABE               	goto	l3625
  4282  0AB6  0845               	movf	_wd,w
  4283  0AB7  3EC4               	addlw	196
  4284  0AB8  00C5               	movwf	_wd
  4285  0AB9  0846               	movf	_wd+1,w
  4286  0ABA  1803               	skipnc
  4287  0ABB  3E01               	addlw	1
  4288  0ABC  3E09               	addlw	9
  4289  0ABD  00C6               	movwf	_wd+1
  4290  0ABE                     l3625:	
  4291                           
  4292                           ;Thermometer_src.c: 112: if (TX & 0x20) wd=wd+1250;
  4293  0ABE  1EDE               	btfss	_TX,5
  4294  0ABF  2AC8               	goto	l3629
  4295  0AC0  0845               	movf	_wd,w
  4296  0AC1  3EE2               	addlw	226
  4297  0AC2  00C5               	movwf	_wd
  4298  0AC3  0846               	movf	_wd+1,w
  4299  0AC4  1803               	skipnc
  4300  0AC5  3E01               	addlw	1
  4301  0AC6  3E04               	addlw	4
  4302  0AC7  00C6               	movwf	_wd+1
  4303  0AC8                     l3629:	
  4304                           
  4305                           ;Thermometer_src.c: 113: if (TX & 0x10) wd=wd+625;
  4306  0AC8  1E5E               	btfss	_TX,4
  4307  0AC9  2AD2               	goto	l3633
  4308  0ACA  0845               	movf	_wd,w
  4309  0ACB  3E71               	addlw	113
  4310  0ACC  00C5               	movwf	_wd
  4311  0ACD  0846               	movf	_wd+1,w
  4312  0ACE  1803               	skipnc
  4313  0ACF  3E01               	addlw	1
  4314  0AD0  3E02               	addlw	2
  4315  0AD1  00C6               	movwf	_wd+1
  4316  0AD2                     l3633:	
  4317                           
  4318                           ;Thermometer_src.c: 114: shifen=wd/1000;
  4319  0AD2  30E8               	movlw	232
  4320  0AD3  00F6               	movwf	___lwdiv@divisor
  4321  0AD4  3003               	movlw	3
  4322  0AD5  00F7               	movwf	___lwdiv@divisor+1
  4323  0AD6  0846               	movf	_wd+1,w
  4324  0AD7  00F9               	movwf	___lwdiv@dividend+1
  4325  0AD8  0845               	movf	_wd,w
  4326  0AD9  00F8               	movwf	___lwdiv@dividend
  4327  0ADA  160A  118A  27C4  120A  158A  	fcall	___lwdiv
  4328  0ADF  0876               	movf	?___lwdiv,w
  4329  0AE0  00E2               	movwf	??_get_temp
  4330  0AE1  0862               	movf	??_get_temp,w
  4331  0AE2  00DB               	movwf	_shifen
  4332                           
  4333                           ;Thermometer_src.c: 115: baifen=(wd%1000)/100;
  4334  0AE3  3064               	movlw	100
  4335  0AE4  00F6               	movwf	___lwdiv@divisor
  4336  0AE5  3000               	movlw	0
  4337  0AE6  00F7               	movwf	___lwdiv@divisor+1
  4338  0AE7  0846               	movf	_wd+1,w
  4339  0AE8  00F3               	movwf	___lwmod@dividend+1
  4340  0AE9  0845               	movf	_wd,w
  4341  0AEA  00F2               	movwf	___lwmod@dividend
  4342  0AEB  30E8               	movlw	232
  4343  0AEC  00F0               	movwf	___lwmod@divisor
  4344  0AED  3003               	movlw	3
  4345  0AEE  00F1               	movwf	___lwmod@divisor+1
  4346  0AEF  160A  118A  26BC  120A  158A  	fcall	___lwmod
  4347  0AF4  0871               	movf	?___lwmod+1,w
  4348  0AF5  00F9               	movwf	___lwdiv@dividend+1
  4349  0AF6  0870               	movf	?___lwmod,w
  4350  0AF7  00F8               	movwf	___lwdiv@dividend
  4351  0AF8  160A  118A  27C4  120A  158A  	fcall	___lwdiv
  4352  0AFD  0876               	movf	?___lwdiv,w
  4353  0AFE  00E2               	movwf	??_get_temp
  4354  0AFF  0862               	movf	??_get_temp,w
  4355  0B00  00DA               	movwf	_baifen
  4356                           
  4357                           ;Thermometer_src.c: 116: qianfen=(wd%100)/10;
  4358  0B01  300A               	movlw	10
  4359  0B02  00F6               	movwf	___lwdiv@divisor
  4360  0B03  3000               	movlw	0
  4361  0B04  00F7               	movwf	___lwdiv@divisor+1
  4362  0B05  0846               	movf	_wd+1,w
  4363  0B06  00F3               	movwf	___lwmod@dividend+1
  4364  0B07  0845               	movf	_wd,w
  4365  0B08  00F2               	movwf	___lwmod@dividend
  4366  0B09  3064               	movlw	100
  4367  0B0A  00F0               	movwf	___lwmod@divisor
  4368  0B0B  3000               	movlw	0
  4369  0B0C  00F1               	movwf	___lwmod@divisor+1
  4370  0B0D  160A  118A  26BC  120A  158A  	fcall	___lwmod
  4371  0B12  0871               	movf	?___lwmod+1,w
  4372  0B13  00F9               	movwf	___lwdiv@dividend+1
  4373  0B14  0870               	movf	?___lwmod,w
  4374  0B15  00F8               	movwf	___lwdiv@dividend
  4375  0B16  160A  118A  27C4  120A  158A  	fcall	___lwdiv
  4376  0B1B  0876               	movf	?___lwdiv,w
  4377  0B1C  00E2               	movwf	??_get_temp
  4378  0B1D  0862               	movf	??_get_temp,w
  4379  0B1E  00D9               	movwf	_qianfen
  4380                           
  4381                           ;Thermometer_src.c: 117: wanfen=wd%10;
  4382  0B1F  300A               	movlw	10
  4383  0B20  00F0               	movwf	___lwmod@divisor
  4384  0B21  3000               	movlw	0
  4385  0B22  00F1               	movwf	___lwmod@divisor+1
  4386  0B23  0846               	movf	_wd+1,w
  4387  0B24  00F3               	movwf	___lwmod@dividend+1
  4388  0B25  0845               	movf	_wd,w
  4389  0B26  00F2               	movwf	___lwmod@dividend
  4390  0B27  160A  118A  26BC   	fcall	___lwmod
  4391  0B2A  0870               	movf	?___lwmod,w
  4392  0B2B  00E2               	movwf	??_get_temp
  4393  0B2C  0862               	movf	??_get_temp,w
  4394  0B2D  00D8               	movwf	_wanfen
  4395                           
  4396                           ;Thermometer_src.c: 118: __nop();
  4397  0B2E  0000               	nop
  4398  0B2F  0008               	return
  4399  0B30                     __end_of_get_temp:	
  4400                           
  4401                           	psect	text15
  4402  1756                     __ptext15:	
  4403 ;; *************** function _write_byte *****************
  4404 ;; Defined at:
  4405 ;;		line 40 in file "Thermometer_src.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  val             1    wreg     unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  val             1    7[COMMON] unsigned char 
  4410 ;;  i               1    8[COMMON] unsigned char 
  4411 ;;  temp            1    6[COMMON] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/100
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         0       0       0       0       0
  4422 ;;      Locals:         3       0       0       0       0
  4423 ;;      Temps:          2       0       0       0       0
  4424 ;;      Totals:         5       0       0       0       0
  4425 ;;Total ram usage:        5 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    1
  4428 ;; This function calls:
  4429 ;;		_delay_temp
  4430 ;; This function is called by:
  4431 ;;		_get_temp
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function _write_byte
  4437  1756                     _write_byte:	
  4438                           
  4439                           ;incstack = 0
  4440                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4441                           ;write_byte@val stored from wreg
  4442  1756  00F7               	movwf	write_byte@val
  4443                           
  4444                           ;Thermometer_src.c: 40: void write_byte(unsigned char val);Thermometer_src.c: 41: {;Ther
      +                          mometer_src.c: 42:  unsigned char i;;Thermometer_src.c: 43:  unsigned char temp;;Thermom
      +                          eter_src.c: 44:  for(i=8;i>0;i--)
  4445  1757  3008               	movlw	8
  4446  1758  00F4               	movwf	??_write_byte
  4447  1759  0874               	movf	??_write_byte,w
  4448  175A  00F8               	movwf	write_byte@i
  4449  175B                     l3127:	
  4450                           
  4451                           ;Thermometer_src.c: 45:  {;Thermometer_src.c: 46:    temp=val&0x01;
  4452  175B  0877               	movf	write_byte@val,w
  4453  175C  3901               	andlw	1
  4454  175D  00F4               	movwf	??_write_byte
  4455  175E  0874               	movf	??_write_byte,w
  4456  175F  00F6               	movwf	write_byte@temp
  4457                           
  4458                           ;Thermometer_src.c: 47:    RE0 = 0; TRISE0 = 0;
  4459  1760  1283               	bcf	3,5	;RP0=0, select bank0
  4460  1761  1303               	bcf	3,6	;RP1=0, select bank0
  4461  1762  1009               	bcf	9,0	;volatile
  4462  1763  1683               	bsf	3,5	;RP0=1, select bank1
  4463  1764  1009               	bcf	9,0	;volatile
  4464                           
  4465                           ;Thermometer_src.c: 48:    __nop();
  4466  1765  0000               	nop
  4467                           
  4468                           ;Thermometer_src.c: 49:    __nop();
  4469  1766  0000               	nop
  4470                           
  4471                           ;Thermometer_src.c: 50:    __nop();
  4472  1767  0000               	nop
  4473                           
  4474                           ;Thermometer_src.c: 51:    __nop();
  4475  1768  0000               	nop
  4476                           
  4477                           ;Thermometer_src.c: 52:    __nop();
  4478  1769  0000               	nop
  4479                           
  4480                           ;Thermometer_src.c: 53:    if(temp==1) TRISE0 =1;
  4481  176A  0376               	decf	write_byte@temp,w
  4482  176B  1D03               	btfss	3,2
  4483  176C  2F70               	goto	l3147
  4484  176D  1683               	bsf	3,5	;RP0=1, select bank1
  4485  176E  1303               	bcf	3,6	;RP1=0, select bank1
  4486  176F  1409               	bsf	9,0	;volatile
  4487  1770                     l3147:	
  4488                           
  4489                           ;Thermometer_src.c: 54:    delay_temp(2,7);
  4490  1770  3007               	movlw	7
  4491  1771  00F4               	movwf	??_write_byte
  4492  1772  0874               	movf	??_write_byte,w
  4493  1773  00F0               	movwf	delay_temp@y
  4494  1774  3002               	movlw	2
  4495  1775  160A  118A  2496  160A  118A  	fcall	_delay_temp
  4496                           
  4497                           ;Thermometer_src.c: 55:    TRISE0 =1;
  4498  177A  1683               	bsf	3,5	;RP0=1, select bank1
  4499  177B  1303               	bcf	3,6	;RP1=0, select bank1
  4500  177C  1409               	bsf	9,0	;volatile
  4501                           
  4502                           ;Thermometer_src.c: 56:    __nop();
  4503  177D  0000               	nop
  4504                           
  4505                           ;Thermometer_src.c: 57:    __nop();
  4506  177E  0000               	nop
  4507                           
  4508                           ;Thermometer_src.c: 58:    val=val>>1;
  4509  177F  0877               	movf	write_byte@val,w
  4510  1780  00F4               	movwf	??_write_byte
  4511  1781  1003               	clrc
  4512  1782  0C74               	rrf	??_write_byte,w
  4513  1783  00F5               	movwf	??_write_byte+1
  4514  1784  0875               	movf	??_write_byte+1,w
  4515  1785  00F7               	movwf	write_byte@val
  4516                           
  4517                           ;Thermometer_src.c: 59:   }
  4518  1786  3001               	movlw	1
  4519  1787  02F8               	subwf	write_byte@i,f
  4520  1788  0878               	movf	write_byte@i,w
  4521  1789  1903               	btfsc	3,2
  4522  178A  0008               	return
  4523  178B  2F5B               	goto	l3127
  4524  178C                     __end_of_write_byte:	
  4525                           
  4526                           	psect	text16
  4527  1722                     __ptext16:	
  4528 ;; *************** function _reset_temp *****************
  4529 ;; Defined at:
  4530 ;;		line 25 in file "Thermometer_src.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  presence        1    5[COMMON] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/100
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         0       0       0       0       0
  4545 ;;      Locals:         1       0       0       0       0
  4546 ;;      Temps:          1       0       0       0       0
  4547 ;;      Totals:         2       0       0       0       0
  4548 ;;Total ram usage:        2 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    1
  4551 ;; This function calls:
  4552 ;;		_delay_temp
  4553 ;; This function is called by:
  4554 ;;		_get_temp
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function _reset_temp
  4560  1722                     _reset_temp:	
  4561                           
  4562                           ;Thermometer_src.c: 27:   char presence=1;
  4563                           
  4564                           ;incstack = 0
  4565                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  4566  1722  01F5               	clrf	reset_temp@presence
  4567  1723  0AF5               	incf	reset_temp@presence,f
  4568  1724                     l3119:	
  4569                           ;Thermometer_src.c: 28:   while(presence)
  4570                           
  4571                           
  4572                           ;Thermometer_src.c: 28:   while(presence)
  4573  1724  0875               	movf	reset_temp@presence,w
  4574  1725  1903               	btfsc	3,2
  4575  1726  0008               	return
  4576                           
  4577                           ;Thermometer_src.c: 29:   {;Thermometer_src.c: 30:     RE0 = 0; TRISE0 = 0 ;
  4578  1727  1283               	bcf	3,5	;RP0=0, select bank0
  4579  1728  1303               	bcf	3,6	;RP1=0, select bank0
  4580  1729  1009               	bcf	9,0	;volatile
  4581  172A  1683               	bsf	3,5	;RP0=1, select bank1
  4582  172B  1009               	bcf	9,0	;volatile
  4583                           
  4584                           ;Thermometer_src.c: 31:     delay_temp(2,70);
  4585  172C  3046               	movlw	70
  4586  172D  00F4               	movwf	??_reset_temp
  4587  172E  0874               	movf	??_reset_temp,w
  4588  172F  00F0               	movwf	delay_temp@y
  4589  1730  3002               	movlw	2
  4590  1731  160A  118A  2496  160A  118A  	fcall	_delay_temp
  4591                           
  4592                           ;Thermometer_src.c: 32:     TRISE0 =1;
  4593  1736  1683               	bsf	3,5	;RP0=1, select bank1
  4594  1737  1303               	bcf	3,6	;RP1=0, select bank1
  4595  1738  1409               	bsf	9,0	;volatile
  4596                           
  4597                           ;Thermometer_src.c: 33:     delay_temp(2,8);
  4598  1739  3008               	movlw	8
  4599  173A  00F4               	movwf	??_reset_temp
  4600  173B  0874               	movf	??_reset_temp,w
  4601  173C  00F0               	movwf	delay_temp@y
  4602  173D  3002               	movlw	2
  4603  173E  160A  118A  2496  160A  118A  	fcall	_delay_temp
  4604                           
  4605                           ;Thermometer_src.c: 34:     if(RE0==1) presence=1;
  4606  1743  1283               	bcf	3,5	;RP0=0, select bank0
  4607  1744  1303               	bcf	3,6	;RP1=0, select bank0
  4608  1745  1C09               	btfss	9,0	;volatile
  4609  1746  2F4A               	goto	l3115
  4610  1747  01F5               	clrf	reset_temp@presence
  4611  1748  0AF5               	incf	reset_temp@presence,f
  4612  1749  2F4B               	goto	l3117
  4613  174A                     l3115:	
  4614  174A  01F5               	clrf	reset_temp@presence
  4615  174B                     l3117:	
  4616                           
  4617                           ;Thermometer_src.c: 36:     delay_temp(2,60);
  4618  174B  303C               	movlw	60
  4619  174C  00F4               	movwf	??_reset_temp
  4620  174D  0874               	movf	??_reset_temp,w
  4621  174E  00F0               	movwf	delay_temp@y
  4622  174F  3002               	movlw	2
  4623  1750  160A  118A  2496  160A  118A  	fcall	_delay_temp
  4624  1755  2F24               	goto	l3119
  4625  1756                     __end_of_reset_temp:	
  4626                           
  4627                           	psect	text17
  4628  16EE                     __ptext17:	
  4629 ;; *************** function _read_byte *****************
  4630 ;; Defined at:
  4631 ;;		line 62 in file "Thermometer_src.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  i               1    6[COMMON] unsigned char 
  4636 ;;  value           1    5[COMMON] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      unsigned char 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2, status,0, pclath, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/100
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4646 ;;      Params:         0       0       0       0       0
  4647 ;;      Locals:         2       0       0       0       0
  4648 ;;      Temps:          1       0       0       0       0
  4649 ;;      Totals:         3       0       0       0       0
  4650 ;;Total ram usage:        3 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    1
  4653 ;; This function calls:
  4654 ;;		_delay_temp
  4655 ;; This function is called by:
  4656 ;;		_get_temp
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           
  4661                           ;psect for function _read_byte
  4662  16EE                     _read_byte:	
  4663                           
  4664                           ;Thermometer_src.c: 64:  unsigned char i;;Thermometer_src.c: 65:  unsigned char value=0;
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  4668  16EE  01F5               	clrf	read_byte@value
  4669                           
  4670                           ;Thermometer_src.c: 66:  static _Bool j;;Thermometer_src.c: 67:  for(i=8;i>0;i--)
  4671  16EF  3008               	movlw	8
  4672  16F0  00F4               	movwf	??_read_byte
  4673  16F1  0874               	movf	??_read_byte,w
  4674  16F2  00F6               	movwf	read_byte@i
  4675  16F3                     l3169:	
  4676                           
  4677                           ;Thermometer_src.c: 68:  {;Thermometer_src.c: 69:    value>>=1;
  4678  16F3  1003               	clrc
  4679  16F4  0CF5               	rrf	read_byte@value,f
  4680                           
  4681                           ;Thermometer_src.c: 70:    RE0 = 0; TRISE0 = 0;
  4682  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  4683  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  4684  16F7  1009               	bcf	9,0	;volatile
  4685  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  4686  16F9  1009               	bcf	9,0	;volatile
  4687                           
  4688                           ;Thermometer_src.c: 71:    __nop();
  4689  16FA  0000               	nop
  4690                           
  4691                           ;Thermometer_src.c: 72:    __nop();
  4692  16FB  0000               	nop
  4693                           
  4694                           ;Thermometer_src.c: 73:    __nop();
  4695  16FC  0000               	nop
  4696                           
  4697                           ;Thermometer_src.c: 74:    __nop();
  4698  16FD  0000               	nop
  4699                           
  4700                           ;Thermometer_src.c: 75:    __nop();
  4701  16FE  0000               	nop
  4702                           
  4703                           ;Thermometer_src.c: 76:    __nop();
  4704  16FF  0000               	nop
  4705                           
  4706                           ;Thermometer_src.c: 77:    TRISE0 =1;
  4707  1700  1683               	bsf	3,5	;RP0=1, select bank1
  4708  1701  1303               	bcf	3,6	;RP1=0, select bank1
  4709  1702  1409               	bsf	9,0	;volatile
  4710                           
  4711                           ;Thermometer_src.c: 78:    __nop();
  4712  1703  0000               	nop
  4713                           
  4714                           ;Thermometer_src.c: 79:    __nop();
  4715  1704  0000               	nop
  4716                           
  4717                           ;Thermometer_src.c: 80:    __nop();
  4718  1705  0000               	nop
  4719                           
  4720                           ;Thermometer_src.c: 81:    __nop();
  4721  1706  0000               	nop
  4722                           
  4723                           ;Thermometer_src.c: 82:    __nop();
  4724  1707  0000               	nop
  4725                           
  4726                           ;Thermometer_src.c: 83:    j=RE0;
  4727  1708  3000               	movlw	0
  4728  1709  1283               	bcf	3,5	;RP0=0, select bank0
  4729  170A  1303               	bcf	3,6	;RP1=0, select bank0
  4730  170B  1809               	btfsc	9,0	;volatile
  4731  170C  3001               	movlw	1
  4732  170D  00C7               	movwf	read_byte@j
  4733                           
  4734                           ;Thermometer_src.c: 84:    if(j) value|=0x80;
  4735  170E  0847               	movf	read_byte@j,w
  4736  170F  1D03               	btfss	3,2
  4737  1710  17F5               	bsf	read_byte@value,7
  4738                           
  4739                           ;Thermometer_src.c: 85:    delay_temp(2,7);
  4740  1711  3007               	movlw	7
  4741  1712  00F4               	movwf	??_read_byte
  4742  1713  0874               	movf	??_read_byte,w
  4743  1714  00F0               	movwf	delay_temp@y
  4744  1715  3002               	movlw	2
  4745  1716  160A  118A  2496  160A  118A  	fcall	_delay_temp
  4746                           
  4747                           ;Thermometer_src.c: 86:   }
  4748  171B  3001               	movlw	1
  4749  171C  02F6               	subwf	read_byte@i,f
  4750  171D  0876               	movf	read_byte@i,w
  4751  171E  1D03               	btfss	3,2
  4752  171F  2EF3               	goto	l3169
  4753                           
  4754                           ;Thermometer_src.c: 87:   return(value);
  4755  1720  0875               	movf	read_byte@value,w
  4756  1721  0008               	return
  4757  1722                     __end_of_read_byte:	
  4758                           
  4759                           	psect	text18
  4760  1496                     __ptext18:	
  4761 ;; *************** function _delay_temp *****************
  4762 ;; Defined at:
  4763 ;;		line 121 in file "Thermometer_src.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  x               1    wreg     unsigned char 
  4766 ;;  y               1    0[COMMON] unsigned char 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  x               1    2[COMMON] unsigned char 
  4769 ;;  z               1    3[COMMON] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/100
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         1       0       0       0       0
  4780 ;;      Locals:         2       0       0       0       0
  4781 ;;      Temps:          1       0       0       0       0
  4782 ;;      Totals:         4       0       0       0       0
  4783 ;;Total ram usage:        4 bytes
  4784 ;; Hardware stack levels used:    1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_reset_temp
  4789 ;;		_write_byte
  4790 ;;		_read_byte
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function _delay_temp
  4796  1496                     _delay_temp:	
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  4800                           ;delay_temp@x stored from wreg
  4801  1496  00F2               	movwf	delay_temp@x
  4802  1497                     l321:	
  4803                           ;Thermometer_src.c: 121: void delay_temp(char x, char y);Thermometer_src.c: 122: {;Therm
      +                          ometer_src.c: 123:  char z;;Thermometer_src.c: 124:  do{
  4804                           
  4805                           
  4806                           ;Thermometer_src.c: 125:  z=y;
  4807  1497  0870               	movf	delay_temp@y,w
  4808  1498  00F1               	movwf	??_delay_temp
  4809  1499  0871               	movf	??_delay_temp,w
  4810  149A  00F3               	movwf	delay_temp@z
  4811  149B                     l3045:	
  4812  149B  3001               	movlw	1
  4813  149C  02F3               	subwf	delay_temp@z,f
  4814  149D  1D03               	btfss	3,2
  4815  149E  2C9B               	goto	l3045
  4816                           
  4817                           ;Thermometer_src.c: 127:  }while(--x);
  4818  149F  3001               	movlw	1
  4819  14A0  02F2               	subwf	delay_temp@x,f
  4820  14A1  1903               	btfsc	3,2
  4821  14A2  0008               	return
  4822  14A3  2C97               	goto	l321
  4823  14A4                     __end_of_delay_temp:	
  4824                           
  4825                           	psect	text19
  4826  150B                     __ptext19:	
  4827 ;; *************** function _delay2 *****************
  4828 ;; Defined at:
  4829 ;;		line 130 in file "Thermometer_src.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;  i               2    0[COMMON] int 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, btemp+1
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/100
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4843 ;;      Params:         0       0       0       0       0
  4844 ;;      Locals:         2       0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0
  4846 ;;      Totals:         2       0       0       0       0
  4847 ;;Total ram usage:        2 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_get_temp
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function _delay2
  4858  150B                     _delay2:	
  4859                           
  4860                           ;Thermometer_src.c: 131:  for (int i = 0; i<50;i++){
  4861                           
  4862                           ;incstack = 0
  4863                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  4864  150B  01F0               	clrf	delay2@i
  4865  150C  01F1               	clrf	delay2@i+1
  4866  150D                     l3221:	
  4867                           
  4868                           ;Thermometer_src.c: 132:  }
  4869  150D  3001               	movlw	1
  4870  150E  07F0               	addwf	delay2@i,f
  4871  150F  1803               	skipnc
  4872  1510  0AF1               	incf	delay2@i+1,f
  4873  1511  3000               	movlw	0
  4874  1512  07F1               	addwf	delay2@i+1,f
  4875  1513  0871               	movf	delay2@i+1,w
  4876  1514  3A80               	xorlw	128
  4877  1515  00FF               	movwf	127
  4878  1516  3080               	movlw	128
  4879  1517  027F               	subwf	127,w
  4880  1518  1D03               	skipz
  4881  1519  2D1C               	goto	u2165
  4882  151A  3032               	movlw	50
  4883  151B  0270               	subwf	delay2@i,w
  4884  151C                     u2165:	
  4885  151C  1803               	btfsc	3,0
  4886  151D  0008               	return
  4887  151E  2D0D               	goto	l3221
  4888  151F                     __end_of_delay2:	
  4889                           
  4890                           	psect	text20
  4891  16BC                     __ptext20:	
  4892 ;; *************** function ___lwmod *****************
  4893 ;; Defined at:
  4894 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  divisor         2    0[COMMON] unsigned int 
  4897 ;;  dividend        2    2[COMMON] unsigned int 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  counter         1    5[COMMON] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  2    0[COMMON] unsigned int 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0
  4904 ;; Tracked objects:
  4905 ;;		On entry : 300/0
  4906 ;;		On exit  : 300/0
  4907 ;;		Unchanged: 300/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4909 ;;      Params:         4       0       0       0       0
  4910 ;;      Locals:         1       0       0       0       0
  4911 ;;      Temps:          1       0       0       0       0
  4912 ;;      Totals:         6       0       0       0       0
  4913 ;;Total ram usage:        6 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_get_temp
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function ___lwmod
  4924  16BC                     ___lwmod:	
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4928  16BC  0870               	movf	___lwmod@divisor,w
  4929  16BD  0471               	iorwf	___lwmod@divisor+1,w
  4930  16BE  1903               	btfsc	3,2
  4931  16BF  2EE9               	goto	l3535
  4932  16C0  01F5               	clrf	___lwmod@counter
  4933  16C1  0AF5               	incf	___lwmod@counter,f
  4934  16C2                     l3525:	
  4935  16C2  1BF1               	btfsc	___lwmod@divisor+1,7
  4936  16C3  2ED0               	goto	l3527
  4937  16C4  3001               	movlw	1
  4938  16C5                     u2895:	
  4939  16C5  1003               	clrc
  4940  16C6  0DF0               	rlf	___lwmod@divisor,f
  4941  16C7  0DF1               	rlf	___lwmod@divisor+1,f
  4942  16C8  3EFF               	addlw	-1
  4943  16C9  1D03               	skipz
  4944  16CA  2EC5               	goto	u2895
  4945  16CB  3001               	movlw	1
  4946  16CC  00F4               	movwf	??___lwmod
  4947  16CD  0874               	movf	??___lwmod,w
  4948  16CE  07F5               	addwf	___lwmod@counter,f
  4949  16CF  2EC2               	goto	l3525
  4950  16D0                     l3527:	
  4951  16D0  0871               	movf	___lwmod@divisor+1,w
  4952  16D1  0273               	subwf	___lwmod@dividend+1,w
  4953  16D2  1D03               	skipz
  4954  16D3  2ED6               	goto	u2915
  4955  16D4  0870               	movf	___lwmod@divisor,w
  4956  16D5  0272               	subwf	___lwmod@dividend,w
  4957  16D6                     u2915:	
  4958  16D6  1C03               	skipc
  4959  16D7  2EDE               	goto	l3531
  4960  16D8  0870               	movf	___lwmod@divisor,w
  4961  16D9  02F2               	subwf	___lwmod@dividend,f
  4962  16DA  0871               	movf	___lwmod@divisor+1,w
  4963  16DB  1C03               	skipc
  4964  16DC  03F3               	decf	___lwmod@dividend+1,f
  4965  16DD  02F3               	subwf	___lwmod@dividend+1,f
  4966  16DE                     l3531:	
  4967  16DE  3001               	movlw	1
  4968  16DF                     u2925:	
  4969  16DF  1003               	clrc
  4970  16E0  0CF1               	rrf	___lwmod@divisor+1,f
  4971  16E1  0CF0               	rrf	___lwmod@divisor,f
  4972  16E2  3EFF               	addlw	-1
  4973  16E3  1D03               	skipz
  4974  16E4  2EDF               	goto	u2925
  4975  16E5  3001               	movlw	1
  4976  16E6  02F5               	subwf	___lwmod@counter,f
  4977  16E7  1D03               	btfss	3,2
  4978  16E8  2ED0               	goto	l3527
  4979  16E9                     l3535:	
  4980  16E9  0873               	movf	___lwmod@dividend+1,w
  4981  16EA  00F1               	movwf	?___lwmod+1
  4982  16EB  0872               	movf	___lwmod@dividend,w
  4983  16EC  00F0               	movwf	?___lwmod
  4984  16ED  0008               	return
  4985  16EE                     __end_of___lwmod:	
  4986                           
  4987                           	psect	text21
  4988  17C4                     __ptext21:	
  4989 ;; *************** function ___lwdiv *****************
  4990 ;; Defined at:
  4991 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;  divisor         2    6[COMMON] unsigned int 
  4994 ;;  dividend        2    8[COMMON] unsigned int 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  quotient        2   11[COMMON] unsigned int 
  4997 ;;  counter         1   13[COMMON] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  2    6[COMMON] unsigned int 
  5000 ;; Registers used:
  5001 ;;		wreg, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 300/0
  5004 ;;		On exit  : 300/0
  5005 ;;		Unchanged: 300/0
  5006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5007 ;;      Params:         4       0       0       0       0
  5008 ;;      Locals:         3       0       0       0       0
  5009 ;;      Temps:          1       0       0       0       0
  5010 ;;      Totals:         8       0       0       0       0
  5011 ;;Total ram usage:        8 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_get_temp
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           
  5021                           ;psect for function ___lwdiv
  5022  17C4                     ___lwdiv:	
  5023                           
  5024                           ;incstack = 0
  5025                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5026  17C4  01FB               	clrf	___lwdiv@quotient
  5027  17C5  01FC               	clrf	___lwdiv@quotient+1
  5028  17C6  0876               	movf	___lwdiv@divisor,w
  5029  17C7  0477               	iorwf	___lwdiv@divisor+1,w
  5030  17C8  1903               	btfsc	3,2
  5031  17C9  2FFB               	goto	l3513
  5032  17CA  01FD               	clrf	___lwdiv@counter
  5033  17CB  0AFD               	incf	___lwdiv@counter,f
  5034  17CC                     l3501:	
  5035  17CC  1BF7               	btfsc	___lwdiv@divisor+1,7
  5036  17CD  2FDA               	goto	l3503
  5037  17CE  3001               	movlw	1
  5038  17CF                     u2825:	
  5039  17CF  1003               	clrc
  5040  17D0  0DF6               	rlf	___lwdiv@divisor,f
  5041  17D1  0DF7               	rlf	___lwdiv@divisor+1,f
  5042  17D2  3EFF               	addlw	-1
  5043  17D3  1D03               	skipz
  5044  17D4  2FCF               	goto	u2825
  5045  17D5  3001               	movlw	1
  5046  17D6  00FA               	movwf	??___lwdiv
  5047  17D7  087A               	movf	??___lwdiv,w
  5048  17D8  07FD               	addwf	___lwdiv@counter,f
  5049  17D9  2FCC               	goto	l3501
  5050  17DA                     l3503:	
  5051  17DA  3001               	movlw	1
  5052  17DB                     u2845:	
  5053  17DB  1003               	clrc
  5054  17DC  0DFB               	rlf	___lwdiv@quotient,f
  5055  17DD  0DFC               	rlf	___lwdiv@quotient+1,f
  5056  17DE  3EFF               	addlw	-1
  5057  17DF  1D03               	skipz
  5058  17E0  2FDB               	goto	u2845
  5059  17E1  0877               	movf	___lwdiv@divisor+1,w
  5060  17E2  0279               	subwf	___lwdiv@dividend+1,w
  5061  17E3  1D03               	skipz
  5062  17E4  2FE7               	goto	u2855
  5063  17E5  0876               	movf	___lwdiv@divisor,w
  5064  17E6  0278               	subwf	___lwdiv@dividend,w
  5065  17E7                     u2855:	
  5066  17E7  1C03               	skipc
  5067  17E8  2FF0               	goto	l3509
  5068  17E9  0876               	movf	___lwdiv@divisor,w
  5069  17EA  02F8               	subwf	___lwdiv@dividend,f
  5070  17EB  0877               	movf	___lwdiv@divisor+1,w
  5071  17EC  1C03               	skipc
  5072  17ED  03F9               	decf	___lwdiv@dividend+1,f
  5073  17EE  02F9               	subwf	___lwdiv@dividend+1,f
  5074  17EF  147B               	bsf	___lwdiv@quotient,0
  5075  17F0                     l3509:	
  5076  17F0  3001               	movlw	1
  5077  17F1                     u2865:	
  5078  17F1  1003               	clrc
  5079  17F2  0CF7               	rrf	___lwdiv@divisor+1,f
  5080  17F3  0CF6               	rrf	___lwdiv@divisor,f
  5081  17F4  3EFF               	addlw	-1
  5082  17F5  1D03               	skipz
  5083  17F6  2FF1               	goto	u2865
  5084  17F7  3001               	movlw	1
  5085  17F8  02FD               	subwf	___lwdiv@counter,f
  5086  17F9  1D03               	btfss	3,2
  5087  17FA  2FDA               	goto	l3503
  5088  17FB                     l3513:	
  5089  17FB  087C               	movf	___lwdiv@quotient+1,w
  5090  17FC  00F7               	movwf	?___lwdiv+1
  5091  17FD  087B               	movf	___lwdiv@quotient,w
  5092  17FE  00F6               	movwf	?___lwdiv
  5093  17FF  0008               	return
  5094  1800                     __end_of___lwdiv:	
  5095                           
  5096                           	psect	text22
  5097  15AC                     __ptext22:	
  5098 ;; *************** function ___lbmod *****************
  5099 ;; Defined at:
  5100 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbmod.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  dividend        1    wreg     unsigned char 
  5103 ;;  divisor         1    0[COMMON] unsigned char 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  dividend        1    4[COMMON] unsigned char 
  5106 ;;  rem             1    6[COMMON] unsigned char 
  5107 ;;  counter         1    5[COMMON] unsigned char 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      unsigned char 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0
  5112 ;; Tracked objects:
  5113 ;;		On entry : 300/0
  5114 ;;		On exit  : 300/0
  5115 ;;		Unchanged: 300/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5117 ;;      Params:         1       0       0       0       0
  5118 ;;      Locals:         3       0       0       0       0
  5119 ;;      Temps:          3       0       0       0       0
  5120 ;;      Totals:         7       0       0       0       0
  5121 ;;Total ram usage:        7 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_get_temp
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           
  5131                           ;psect for function ___lbmod
  5132  15AC                     ___lbmod:	
  5133                           
  5134                           ;incstack = 0
  5135                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5136                           ;___lbmod@dividend stored from wreg
  5137  15AC  00F4               	movwf	___lbmod@dividend
  5138  15AD  3008               	movlw	8
  5139  15AE  00F1               	movwf	??___lbmod
  5140  15AF  0871               	movf	??___lbmod,w
  5141  15B0  00F5               	movwf	___lbmod@counter
  5142  15B1  01F6               	clrf	___lbmod@rem
  5143  15B2                     l3479:	
  5144  15B2  0874               	movf	___lbmod@dividend,w
  5145  15B3  00F1               	movwf	??___lbmod
  5146  15B4  3007               	movlw	7
  5147  15B5                     u2785:	
  5148  15B5  1003               	clrc
  5149  15B6  0CF1               	rrf	??___lbmod,f
  5150  15B7  3EFF               	addlw	-1
  5151  15B8  1D03               	skipz
  5152  15B9  2DB5               	goto	u2785
  5153  15BA  0876               	movf	___lbmod@rem,w
  5154  15BB  00F2               	movwf	??___lbmod+1
  5155  15BC  0772               	addwf	??___lbmod+1,w
  5156  15BD  0471               	iorwf	??___lbmod,w
  5157  15BE  00F3               	movwf	??___lbmod+2
  5158  15BF  0873               	movf	??___lbmod+2,w
  5159  15C0  00F6               	movwf	___lbmod@rem
  5160  15C1  1003               	clrc
  5161  15C2  0DF4               	rlf	___lbmod@dividend,f
  5162  15C3  0870               	movf	___lbmod@divisor,w
  5163  15C4  0276               	subwf	___lbmod@rem,w
  5164  15C5  1C03               	skipc
  5165  15C6  2DC9               	goto	l1167
  5166  15C7  0870               	movf	___lbmod@divisor,w
  5167  15C8  02F6               	subwf	___lbmod@rem,f
  5168  15C9                     l1167:	
  5169  15C9  3001               	movlw	1
  5170  15CA  02F5               	subwf	___lbmod@counter,f
  5171  15CB  1D03               	btfss	3,2
  5172  15CC  2DB2               	goto	l3479
  5173  15CD  0876               	movf	___lbmod@rem,w
  5174  15CE  0008               	return
  5175  15CF                     __end_of___lbmod:	
  5176                           
  5177                           	psect	text23
  5178  158B                     __ptext23:	
  5179 ;; *************** function ___lbdiv *****************
  5180 ;; Defined at:
  5181 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbdiv.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  dividend        1    wreg     unsigned char 
  5184 ;;  divisor         1    0[COMMON] unsigned char 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  dividend        1    2[COMMON] unsigned char 
  5187 ;;  quotient        1    4[COMMON] unsigned char 
  5188 ;;  counter         1    3[COMMON] unsigned char 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      unsigned char 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2, status,0
  5193 ;; Tracked objects:
  5194 ;;		On entry : 300/0
  5195 ;;		On exit  : 300/0
  5196 ;;		Unchanged: 300/0
  5197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5198 ;;      Params:         1       0       0       0       0
  5199 ;;      Locals:         3       0       0       0       0
  5200 ;;      Temps:          1       0       0       0       0
  5201 ;;      Totals:         5       0       0       0       0
  5202 ;;Total ram usage:        5 bytes
  5203 ;; Hardware stack levels used:    1
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_get_temp
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           
  5212                           ;psect for function ___lbdiv
  5213  158B                     ___lbdiv:	
  5214                           
  5215                           ;incstack = 0
  5216                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5217                           ;___lbdiv@dividend stored from wreg
  5218  158B  00F2               	movwf	___lbdiv@dividend
  5219  158C  01F4               	clrf	___lbdiv@quotient
  5220  158D  0870               	movf	___lbdiv@divisor,w
  5221  158E  1903               	btfsc	3,2
  5222  158F  2DAA               	goto	l3471
  5223  1590  01F3               	clrf	___lbdiv@counter
  5224  1591  0AF3               	incf	___lbdiv@counter,f
  5225  1592                     l3459:	
  5226  1592  1BF0               	btfsc	___lbdiv@divisor,7
  5227  1593  2D9B               	goto	l3461
  5228  1594  1003               	clrc
  5229  1595  0DF0               	rlf	___lbdiv@divisor,f
  5230  1596  3001               	movlw	1
  5231  1597  00F1               	movwf	??___lbdiv
  5232  1598  0871               	movf	??___lbdiv,w
  5233  1599  07F3               	addwf	___lbdiv@counter,f
  5234  159A  2D92               	goto	l3459
  5235  159B                     l3461:	
  5236  159B  1003               	clrc
  5237  159C  0DF4               	rlf	___lbdiv@quotient,f
  5238  159D  0870               	movf	___lbdiv@divisor,w
  5239  159E  0272               	subwf	___lbdiv@dividend,w
  5240  159F  1C03               	skipc
  5241  15A0  2DA5               	goto	L2
  5242  15A1  0870               	movf	___lbdiv@divisor,w
  5243  15A2  02F2               	subwf	___lbdiv@dividend,f
  5244  15A3  1474               	bsf	___lbdiv@quotient,0
  5245  15A4  1003               	clrc
  5246  15A5                     L2:	
  5247  15A5  0CF0               	rrf	___lbdiv@divisor,f
  5248  15A6  3001               	movlw	1
  5249  15A7  02F3               	subwf	___lbdiv@counter,f
  5250  15A8  1D03               	btfss	3,2
  5251  15A9  2D9B               	goto	l3461
  5252  15AA                     l3471:	
  5253  15AA  0874               	movf	___lbdiv@quotient,w
  5254  15AB  0008               	return
  5255  15AC                     __end_of___lbdiv:	
  5256                           
  5257                           	psect	text24
  5258  14B3                     __ptext24:	
  5259 ;; *************** function _ds1302_init *****************
  5260 ;; Defined at:
  5261 ;;		line 6 in file "clock_src.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;		None
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 300/0
  5272 ;;		On exit  : 300/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5275 ;;      Params:         0       0       0       0       0
  5276 ;;      Locals:         0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0
  5278 ;;      Totals:         0       0       0       0       0
  5279 ;;Total ram usage:        0 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    1
  5282 ;; This function calls:
  5283 ;;		_time_write_1
  5284 ;; This function is called by:
  5285 ;;		_main
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           
  5290                           ;psect for function _ds1302_init
  5291  14B3                     _ds1302_init:	
  5292                           
  5293                           ;clock_src.c: 8:    RB0=0;
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5297  14B3  1006               	bcf	6,0	;volatile
  5298                           
  5299                           ;clock_src.c: 9:    RB5 =0;
  5300  14B4  1286               	bcf	6,5	;volatile
  5301                           
  5302                           ;clock_src.c: 10:    RB5=1;
  5303  14B5  1686               	bsf	6,5	;volatile
  5304                           
  5305                           ;clock_src.c: 11:    time_write_1(0x8e);
  5306  14B6  308E               	movlw	142
  5307  14B7  160A  118A  263A  160A  118A  	fcall	_time_write_1
  5308                           
  5309                           ;clock_src.c: 12:    time_write_1(0);
  5310  14BC  3000               	movlw	0
  5311  14BD  160A  118A  263A   	fcall	_time_write_1
  5312                           
  5313                           ;clock_src.c: 13:    RB5=0;
  5314  14C0  1286               	bcf	6,5	;volatile
  5315  14C1  0008               	return
  5316  14C2                     __end_of_ds1302_init:	
  5317                           
  5318                           	psect	text25
  5319  156A                     __ptext25:	
  5320 ;; *************** function _display_temp *****************
  5321 ;; Defined at:
  5322 ;;		line 12 in file "Thermometer_src.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 300/0
  5333 ;;		On exit  : 300/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5336 ;;      Params:         0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0
  5339 ;;      Totals:         0       0       0       0       0
  5340 ;;Total ram usage:        0 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:    2
  5343 ;; This function calls:
  5344 ;;		_write_char
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function _display_temp
  5352  156A                     _display_temp:	
  5353                           
  5354                           ;Thermometer_src.c: 14:  write_char(shi + '0');
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5358  156A  085D               	movf	_shi,w
  5359  156B  3E30               	addlw	48
  5360  156C  160A  118A  251F  160A  118A  	fcall	_write_char
  5361                           
  5362                           ;Thermometer_src.c: 16:  write_char(ge + '0');
  5363  1571  085C               	movf	_ge,w
  5364  1572  3E30               	addlw	48
  5365  1573  160A  118A  251F  160A  118A  	fcall	_write_char
  5366                           
  5367                           ;Thermometer_src.c: 17:  write_char('.');
  5368  1578  302E               	movlw	46
  5369  1579  160A  118A  251F  160A  118A  	fcall	_write_char
  5370                           
  5371                           ;Thermometer_src.c: 19:  write_char(shifen + '0');
  5372  157E  085B               	movf	_shifen,w
  5373  157F  3E30               	addlw	48
  5374  1580  160A  118A  251F  160A  118A  	fcall	_write_char
  5375                           
  5376                           ;Thermometer_src.c: 21:  write_char(baifen + '0');
  5377  1585  085A               	movf	_baifen,w
  5378  1586  3E30               	addlw	48
  5379  1587  160A  118A  251F   	fcall	_write_char
  5380  158A  0008               	return
  5381  158B                     __end_of_display_temp:	
  5382                           
  5383                           	psect	text26
  5384  0986                     __ptext26:	
  5385 ;; *************** function _display_day *****************
  5386 ;; Defined at:
  5387 ;;		line 4 in file "Day_of_week_src.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  num             2    3[COMMON] int 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      void 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 300/0
  5398 ;;		On exit  : 300/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5401 ;;      Params:         2       0       0       0       0
  5402 ;;      Locals:         0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0
  5404 ;;      Totals:         2       0       0       0       0
  5405 ;;Total ram usage:        2 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    2
  5408 ;; This function calls:
  5409 ;;		_write_char
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           
  5416                           ;psect for function _display_day
  5417  0986                     _display_day:	
  5418                           
  5419                           ;Day_of_week_src.c: 5:     if(num == 1 || num == 0){
  5420                           
  5421                           ;incstack = 0
  5422                           ; Regs used in _display_day: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5423  0986  0373               	decf	display_day@num,w
  5424  0987  0474               	iorwf	display_day@num+1,w
  5425  0988  1903               	btfsc	3,2
  5426  0989  298E               	goto	l4393
  5427  098A  0873               	movf	display_day@num,w
  5428  098B  0474               	iorwf	display_day@num+1,w
  5429  098C  1D03               	btfss	3,2
  5430  098D  29A0               	goto	l4395
  5431  098E                     l4393:	
  5432                           
  5433                           ;Day_of_week_src.c: 6:     write_char('M');
  5434  098E  304D               	movlw	77
  5435  098F  160A  118A  251F  120A  158A  	fcall	_write_char
  5436                           
  5437                           ;Day_of_week_src.c: 7:     write_char('o');
  5438  0994  306F               	movlw	111
  5439  0995  160A  118A  251F  120A  158A  	fcall	_write_char
  5440                           
  5441                           ;Day_of_week_src.c: 8:     write_char('n');
  5442  099A  306E               	movlw	110
  5443  099B  160A  118A  251F  120A  158A  	fcall	_write_char
  5444  09A0                     l4395:	
  5445                           
  5446                           ;Day_of_week_src.c: 10:     if(num == 2){
  5447  09A0  3002               	movlw	2
  5448  09A1  0673               	xorwf	display_day@num,w
  5449  09A2  0474               	iorwf	display_day@num+1,w
  5450  09A3  1D03               	btfss	3,2
  5451  09A4  29B7               	goto	l4399
  5452                           
  5453                           ;Day_of_week_src.c: 11:     write_char('T');
  5454  09A5  3054               	movlw	84
  5455  09A6  160A  118A  251F  120A  158A  	fcall	_write_char
  5456                           
  5457                           ;Day_of_week_src.c: 12:     write_char('u');
  5458  09AB  3075               	movlw	117
  5459  09AC  160A  118A  251F  120A  158A  	fcall	_write_char
  5460                           
  5461                           ;Day_of_week_src.c: 13:     write_char('e');
  5462  09B1  3065               	movlw	101
  5463  09B2  160A  118A  251F  120A  158A  	fcall	_write_char
  5464  09B7                     l4399:	
  5465                           
  5466                           ;Day_of_week_src.c: 15:     if(num == 3){
  5467  09B7  3003               	movlw	3
  5468  09B8  0673               	xorwf	display_day@num,w
  5469  09B9  0474               	iorwf	display_day@num+1,w
  5470  09BA  1D03               	btfss	3,2
  5471  09BB  29CE               	goto	l4403
  5472                           
  5473                           ;Day_of_week_src.c: 16:     write_char('W');
  5474  09BC  3057               	movlw	87
  5475  09BD  160A  118A  251F  120A  158A  	fcall	_write_char
  5476                           
  5477                           ;Day_of_week_src.c: 17:     write_char('e');
  5478  09C2  3065               	movlw	101
  5479  09C3  160A  118A  251F  120A  158A  	fcall	_write_char
  5480                           
  5481                           ;Day_of_week_src.c: 18:     write_char('d');
  5482  09C8  3064               	movlw	100
  5483  09C9  160A  118A  251F  120A  158A  	fcall	_write_char
  5484  09CE                     l4403:	
  5485                           
  5486                           ;Day_of_week_src.c: 20:     if(num == 4){
  5487  09CE  3004               	movlw	4
  5488  09CF  0673               	xorwf	display_day@num,w
  5489  09D0  0474               	iorwf	display_day@num+1,w
  5490  09D1  1D03               	btfss	3,2
  5491  09D2  29E5               	goto	l4407
  5492                           
  5493                           ;Day_of_week_src.c: 21:     write_char('T');
  5494  09D3  3054               	movlw	84
  5495  09D4  160A  118A  251F  120A  158A  	fcall	_write_char
  5496                           
  5497                           ;Day_of_week_src.c: 22:     write_char('h');
  5498  09D9  3068               	movlw	104
  5499  09DA  160A  118A  251F  120A  158A  	fcall	_write_char
  5500                           
  5501                           ;Day_of_week_src.c: 23:     write_char('u');
  5502  09DF  3075               	movlw	117
  5503  09E0  160A  118A  251F  120A  158A  	fcall	_write_char
  5504  09E5                     l4407:	
  5505                           
  5506                           ;Day_of_week_src.c: 25:     if(num == 5){
  5507  09E5  3005               	movlw	5
  5508  09E6  0673               	xorwf	display_day@num,w
  5509  09E7  0474               	iorwf	display_day@num+1,w
  5510  09E8  1D03               	btfss	3,2
  5511  09E9  29FC               	goto	l4411
  5512                           
  5513                           ;Day_of_week_src.c: 26:     write_char('F');
  5514  09EA  3046               	movlw	70
  5515  09EB  160A  118A  251F  120A  158A  	fcall	_write_char
  5516                           
  5517                           ;Day_of_week_src.c: 27:     write_char('r');
  5518  09F0  3072               	movlw	114
  5519  09F1  160A  118A  251F  120A  158A  	fcall	_write_char
  5520                           
  5521                           ;Day_of_week_src.c: 28:     write_char('i');
  5522  09F6  3069               	movlw	105
  5523  09F7  160A  118A  251F  120A  158A  	fcall	_write_char
  5524  09FC                     l4411:	
  5525                           
  5526                           ;Day_of_week_src.c: 30:     if(num == 6){
  5527  09FC  3006               	movlw	6
  5528  09FD  0673               	xorwf	display_day@num,w
  5529  09FE  0474               	iorwf	display_day@num+1,w
  5530  09FF  1D03               	btfss	3,2
  5531  0A00  2A13               	goto	l4415
  5532                           
  5533                           ;Day_of_week_src.c: 31:     write_char('S');
  5534  0A01  3053               	movlw	83
  5535  0A02  160A  118A  251F  120A  158A  	fcall	_write_char
  5536                           
  5537                           ;Day_of_week_src.c: 32:     write_char('a');
  5538  0A07  3061               	movlw	97
  5539  0A08  160A  118A  251F  120A  158A  	fcall	_write_char
  5540                           
  5541                           ;Day_of_week_src.c: 33:     write_char('t');
  5542  0A0D  3074               	movlw	116
  5543  0A0E  160A  118A  251F  120A  158A  	fcall	_write_char
  5544  0A13                     l4415:	
  5545                           
  5546                           ;Day_of_week_src.c: 35:     if(num == 7){
  5547  0A13  3007               	movlw	7
  5548  0A14  0673               	xorwf	display_day@num,w
  5549  0A15  0474               	iorwf	display_day@num+1,w
  5550  0A16  1D03               	btfss	3,2
  5551  0A17  0008               	return
  5552                           
  5553                           ;Day_of_week_src.c: 36:     write_char('S');
  5554  0A18  3053               	movlw	83
  5555  0A19  160A  118A  251F  120A  158A  	fcall	_write_char
  5556                           
  5557                           ;Day_of_week_src.c: 37:     write_char('u');
  5558  0A1E  3075               	movlw	117
  5559  0A1F  160A  118A  251F  120A  158A  	fcall	_write_char
  5560                           
  5561                           ;Day_of_week_src.c: 38:     write_char('n');
  5562  0A24  306E               	movlw	110
  5563  0A25  160A  118A  251F   	fcall	_write_char
  5564  0A28  0008               	return
  5565  0A29                     __end_of_display_day:	
  5566                           
  5567                           	psect	text27
  5568  08F0                     __ptext27:	
  5569 ;; *************** function _display_date *****************
  5570 ;; Defined at:
  5571 ;;		line 79 in file "clock_src.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  i               2    5[COMMON] int 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 300/0
  5582 ;;		On exit  : 300/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5585 ;;      Params:         0       0       0       0       0
  5586 ;;      Locals:         2       0       0       0       0
  5587 ;;      Temps:          2       0       0       0       0
  5588 ;;      Totals:         4       0       0       0       0
  5589 ;;Total ram usage:        4 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    2
  5592 ;; This function calls:
  5593 ;;		_write_char
  5594 ;; This function is called by:
  5595 ;;		_main
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function _display_date
  5601  08F0                     _display_date:	
  5602                           
  5603                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5607  08F0  1886               	btfsc	6,1	;volatile
  5608  08F1  28FA               	goto	l3665
  5609                           
  5610                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  5611  08F2  0823               	movf	_table1+3,w
  5612  08F3  00F3               	movwf	??_display_date
  5613  08F4  0873               	movf	??_display_date,w
  5614  08F5  00A0               	movwf	_table1
  5615                           
  5616                           ;clock_src.c: 85:           table1[1]=table1[4];
  5617  08F6  0824               	movf	_table1+4,w
  5618  08F7  00F3               	movwf	??_display_date
  5619  08F8  0873               	movf	??_display_date,w
  5620  08F9  00A1               	movwf	_table1+1
  5621  08FA                     l3665:	
  5622                           
  5623                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  5624  08FA  0823               	movf	_table1+3,w
  5625  08FB  39F0               	andlw	240
  5626  08FC  00F3               	movwf	??_display_date
  5627  08FD  01F4               	clrf	??_display_date+1
  5628  08FE  0873               	movf	??_display_date,w
  5629  08FF  00F5               	movwf	display_date@i
  5630  0900  0874               	movf	??_display_date+1,w
  5631  0901  00F6               	movwf	display_date@i+1
  5632                           
  5633                           ;clock_src.c: 88:      i=i>>4;
  5634  0902  0E75               	swapf	display_date@i,w
  5635  0903  390F               	andlw	15
  5636  0904  00F5               	movwf	display_date@i
  5637  0905  0E76               	swapf	display_date@i+1,w
  5638  0906  39F0               	andlw	240
  5639  0907  04F5               	iorwf	display_date@i,f
  5640  0908  0E76               	swapf	display_date@i+1,w
  5641  0909  390F               	andlw	15
  5642  090A  00F6               	movwf	display_date@i+1
  5643  090B  30F0               	movlw	240
  5644  090C  1DF6               	btfss	display_date@i+1,3
  5645  090D  3000               	movlw	0
  5646  090E  04F6               	iorwf	display_date@i+1,f
  5647                           
  5648                           ;clock_src.c: 89:      write_char(i + '0');
  5649  090F  0875               	movf	display_date@i,w
  5650  0910  3E30               	addlw	48
  5651  0911  160A  118A  251F  120A  158A  	fcall	_write_char
  5652                           
  5653                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  5654  0916  0823               	movf	_table1+3,w
  5655  0917  390F               	andlw	15
  5656  0918  00F3               	movwf	??_display_date
  5657  0919  01F4               	clrf	??_display_date+1
  5658  091A  0873               	movf	??_display_date,w
  5659  091B  00F5               	movwf	display_date@i
  5660  091C  0874               	movf	??_display_date+1,w
  5661  091D  00F6               	movwf	display_date@i+1
  5662                           
  5663                           ;clock_src.c: 92:      write_char(i + '0');
  5664  091E  0875               	movf	display_date@i,w
  5665  091F  3E30               	addlw	48
  5666  0920  160A  118A  251F  120A  158A  	fcall	_write_char
  5667                           
  5668                           ;clock_src.c: 93:      write_char('/');
  5669  0925  302F               	movlw	47
  5670  0926  160A  118A  251F  120A  158A  	fcall	_write_char
  5671                           
  5672                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  5673  092B  0824               	movf	_table1+4,w
  5674  092C  39F0               	andlw	240
  5675  092D  00F3               	movwf	??_display_date
  5676  092E  01F4               	clrf	??_display_date+1
  5677  092F  0873               	movf	??_display_date,w
  5678  0930  00F5               	movwf	display_date@i
  5679  0931  0874               	movf	??_display_date+1,w
  5680  0932  00F6               	movwf	display_date@i+1
  5681                           
  5682                           ;clock_src.c: 98:      i=i>>4;
  5683  0933  0E75               	swapf	display_date@i,w
  5684  0934  390F               	andlw	15
  5685  0935  00F5               	movwf	display_date@i
  5686  0936  0E76               	swapf	display_date@i+1,w
  5687  0937  39F0               	andlw	240
  5688  0938  04F5               	iorwf	display_date@i,f
  5689  0939  0E76               	swapf	display_date@i+1,w
  5690  093A  390F               	andlw	15
  5691  093B  00F6               	movwf	display_date@i+1
  5692  093C  30F0               	movlw	240
  5693  093D  1DF6               	btfss	display_date@i+1,3
  5694  093E  3000               	movlw	0
  5695  093F  04F6               	iorwf	display_date@i+1,f
  5696                           
  5697                           ;clock_src.c: 99:      write_char(i + '0');
  5698  0940  0875               	movf	display_date@i,w
  5699  0941  3E30               	addlw	48
  5700  0942  160A  118A  251F  120A  158A  	fcall	_write_char
  5701                           
  5702                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  5703  0947  0824               	movf	_table1+4,w
  5704  0948  390F               	andlw	15
  5705  0949  00F3               	movwf	??_display_date
  5706  094A  01F4               	clrf	??_display_date+1
  5707  094B  0873               	movf	??_display_date,w
  5708  094C  00F5               	movwf	display_date@i
  5709  094D  0874               	movf	??_display_date+1,w
  5710  094E  00F6               	movwf	display_date@i+1
  5711                           
  5712                           ;clock_src.c: 102:      write_char(i + '0');
  5713  094F  0875               	movf	display_date@i,w
  5714  0950  3E30               	addlw	48
  5715  0951  160A  118A  251F  120A  158A  	fcall	_write_char
  5716                           
  5717                           ;clock_src.c: 103:      write_char('/');
  5718  0956  302F               	movlw	47
  5719  0957  160A  118A  251F  120A  158A  	fcall	_write_char
  5720                           
  5721                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  5722  095C  0826               	movf	_table1+6,w
  5723  095D  39F0               	andlw	240
  5724  095E  00F3               	movwf	??_display_date
  5725  095F  01F4               	clrf	??_display_date+1
  5726  0960  0873               	movf	??_display_date,w
  5727  0961  00F5               	movwf	display_date@i
  5728  0962  0874               	movf	??_display_date+1,w
  5729  0963  00F6               	movwf	display_date@i+1
  5730                           
  5731                           ;clock_src.c: 108:      i=i>>4;
  5732  0964  0E75               	swapf	display_date@i,w
  5733  0965  390F               	andlw	15
  5734  0966  00F5               	movwf	display_date@i
  5735  0967  0E76               	swapf	display_date@i+1,w
  5736  0968  39F0               	andlw	240
  5737  0969  04F5               	iorwf	display_date@i,f
  5738  096A  0E76               	swapf	display_date@i+1,w
  5739  096B  390F               	andlw	15
  5740  096C  00F6               	movwf	display_date@i+1
  5741  096D  30F0               	movlw	240
  5742  096E  1DF6               	btfss	display_date@i+1,3
  5743  096F  3000               	movlw	0
  5744  0970  04F6               	iorwf	display_date@i+1,f
  5745                           
  5746                           ;clock_src.c: 109:      write_char(i + '0');
  5747  0971  0875               	movf	display_date@i,w
  5748  0972  3E30               	addlw	48
  5749  0973  160A  118A  251F  120A  158A  	fcall	_write_char
  5750                           
  5751                           ;clock_src.c: 111:      i=table1[6]&0x0f;
  5752  0978  0826               	movf	_table1+6,w
  5753  0979  390F               	andlw	15
  5754  097A  00F3               	movwf	??_display_date
  5755  097B  01F4               	clrf	??_display_date+1
  5756  097C  0873               	movf	??_display_date,w
  5757  097D  00F5               	movwf	display_date@i
  5758  097E  0874               	movf	??_display_date+1,w
  5759  097F  00F6               	movwf	display_date@i+1
  5760                           
  5761                           ;clock_src.c: 112:      write_char(i + '0');
  5762  0980  0875               	movf	display_date@i,w
  5763  0981  3E30               	addlw	48
  5764  0982  160A  118A  251F   	fcall	_write_char
  5765  0985  0008               	return
  5766  0986                     __end_of_display_date:	
  5767                           
  5768                           	psect	text28
  5769  085A                     __ptext28:	
  5770 ;; *************** function _display_clock *****************
  5771 ;; Defined at:
  5772 ;;		line 37 in file "clock_src.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  i               2    5[COMMON] int 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 300/0
  5783 ;;		On exit  : 300/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5786 ;;      Params:         0       0       0       0       0
  5787 ;;      Locals:         2       0       0       0       0
  5788 ;;      Temps:          2       0       0       0       0
  5789 ;;      Totals:         4       0       0       0       0
  5790 ;;Total ram usage:        4 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    2
  5793 ;; This function calls:
  5794 ;;		_write_char
  5795 ;; This function is called by:
  5796 ;;		_main
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           
  5801                           ;psect for function _display_clock
  5802  085A                     _display_clock:	
  5803                           
  5804                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  5805                           
  5806                           ;incstack = 0
  5807                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5808  085A  1886               	btfsc	6,1	;volatile
  5809  085B  2864               	goto	l3703
  5810                           
  5811                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  5812  085C  0823               	movf	_table1+3,w
  5813  085D  00F3               	movwf	??_display_clock
  5814  085E  0873               	movf	??_display_clock,w
  5815  085F  00A0               	movwf	_table1
  5816                           
  5817                           ;clock_src.c: 43:           table1[1]=table1[4];
  5818  0860  0824               	movf	_table1+4,w
  5819  0861  00F3               	movwf	??_display_clock
  5820  0862  0873               	movf	??_display_clock,w
  5821  0863  00A1               	movwf	_table1+1
  5822  0864                     l3703:	
  5823                           
  5824                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  5825  0864  0822               	movf	_table1+2,w
  5826  0865  39F0               	andlw	240
  5827  0866  00F3               	movwf	??_display_clock
  5828  0867  01F4               	clrf	??_display_clock+1
  5829  0868  0873               	movf	??_display_clock,w
  5830  0869  00F5               	movwf	display_clock@i
  5831  086A  0874               	movf	??_display_clock+1,w
  5832  086B  00F6               	movwf	display_clock@i+1
  5833                           
  5834                           ;clock_src.c: 47:      i=i>>4;
  5835  086C  0E75               	swapf	display_clock@i,w
  5836  086D  390F               	andlw	15
  5837  086E  00F5               	movwf	display_clock@i
  5838  086F  0E76               	swapf	display_clock@i+1,w
  5839  0870  39F0               	andlw	240
  5840  0871  04F5               	iorwf	display_clock@i,f
  5841  0872  0E76               	swapf	display_clock@i+1,w
  5842  0873  390F               	andlw	15
  5843  0874  00F6               	movwf	display_clock@i+1
  5844  0875  30F0               	movlw	240
  5845  0876  1DF6               	btfss	display_clock@i+1,3
  5846  0877  3000               	movlw	0
  5847  0878  04F6               	iorwf	display_clock@i+1,f
  5848                           
  5849                           ;clock_src.c: 48:      write_char(i + '0');
  5850  0879  0875               	movf	display_clock@i,w
  5851  087A  3E30               	addlw	48
  5852  087B  160A  118A  251F  120A  158A  	fcall	_write_char
  5853                           
  5854                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  5855  0880  0822               	movf	_table1+2,w
  5856  0881  390F               	andlw	15
  5857  0882  00F3               	movwf	??_display_clock
  5858  0883  01F4               	clrf	??_display_clock+1
  5859  0884  0873               	movf	??_display_clock,w
  5860  0885  00F5               	movwf	display_clock@i
  5861  0886  0874               	movf	??_display_clock+1,w
  5862  0887  00F6               	movwf	display_clock@i+1
  5863                           
  5864                           ;clock_src.c: 53:      write_char(i + '0');
  5865  0888  0875               	movf	display_clock@i,w
  5866  0889  3E30               	addlw	48
  5867  088A  160A  118A  251F  120A  158A  	fcall	_write_char
  5868                           
  5869                           ;clock_src.c: 54:      write_char(':');
  5870  088F  303A               	movlw	58
  5871  0890  160A  118A  251F  120A  158A  	fcall	_write_char
  5872                           
  5873                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  5874  0895  0821               	movf	_table1+1,w
  5875  0896  39F0               	andlw	240
  5876  0897  00F3               	movwf	??_display_clock
  5877  0898  01F4               	clrf	??_display_clock+1
  5878  0899  0873               	movf	??_display_clock,w
  5879  089A  00F5               	movwf	display_clock@i
  5880  089B  0874               	movf	??_display_clock+1,w
  5881  089C  00F6               	movwf	display_clock@i+1
  5882                           
  5883                           ;clock_src.c: 59:      i=i>>4;
  5884  089D  0E75               	swapf	display_clock@i,w
  5885  089E  390F               	andlw	15
  5886  089F  00F5               	movwf	display_clock@i
  5887  08A0  0E76               	swapf	display_clock@i+1,w
  5888  08A1  39F0               	andlw	240
  5889  08A2  04F5               	iorwf	display_clock@i,f
  5890  08A3  0E76               	swapf	display_clock@i+1,w
  5891  08A4  390F               	andlw	15
  5892  08A5  00F6               	movwf	display_clock@i+1
  5893  08A6  30F0               	movlw	240
  5894  08A7  1DF6               	btfss	display_clock@i+1,3
  5895  08A8  3000               	movlw	0
  5896  08A9  04F6               	iorwf	display_clock@i+1,f
  5897                           
  5898                           ;clock_src.c: 60:      write_char(i + '0');
  5899  08AA  0875               	movf	display_clock@i,w
  5900  08AB  3E30               	addlw	48
  5901  08AC  160A  118A  251F  120A  158A  	fcall	_write_char
  5902                           
  5903                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  5904  08B1  0821               	movf	_table1+1,w
  5905  08B2  390F               	andlw	15
  5906  08B3  00F3               	movwf	??_display_clock
  5907  08B4  01F4               	clrf	??_display_clock+1
  5908  08B5  0873               	movf	??_display_clock,w
  5909  08B6  00F5               	movwf	display_clock@i
  5910  08B7  0874               	movf	??_display_clock+1,w
  5911  08B8  00F6               	movwf	display_clock@i+1
  5912                           
  5913                           ;clock_src.c: 64:      write_char(i + '0');
  5914  08B9  0875               	movf	display_clock@i,w
  5915  08BA  3E30               	addlw	48
  5916  08BB  160A  118A  251F  120A  158A  	fcall	_write_char
  5917                           
  5918                           ;clock_src.c: 65:      write_char(':');
  5919  08C0  303A               	movlw	58
  5920  08C1  160A  118A  251F  120A  158A  	fcall	_write_char
  5921                           
  5922                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  5923  08C6  0820               	movf	_table1,w
  5924  08C7  39F0               	andlw	240
  5925  08C8  00F3               	movwf	??_display_clock
  5926  08C9  01F4               	clrf	??_display_clock+1
  5927  08CA  0873               	movf	??_display_clock,w
  5928  08CB  00F5               	movwf	display_clock@i
  5929  08CC  0874               	movf	??_display_clock+1,w
  5930  08CD  00F6               	movwf	display_clock@i+1
  5931                           
  5932                           ;clock_src.c: 69:      i=i>>4;
  5933  08CE  0E75               	swapf	display_clock@i,w
  5934  08CF  390F               	andlw	15
  5935  08D0  00F5               	movwf	display_clock@i
  5936  08D1  0E76               	swapf	display_clock@i+1,w
  5937  08D2  39F0               	andlw	240
  5938  08D3  04F5               	iorwf	display_clock@i,f
  5939  08D4  0E76               	swapf	display_clock@i+1,w
  5940  08D5  390F               	andlw	15
  5941  08D6  00F6               	movwf	display_clock@i+1
  5942  08D7  30F0               	movlw	240
  5943  08D8  1DF6               	btfss	display_clock@i+1,3
  5944  08D9  3000               	movlw	0
  5945  08DA  04F6               	iorwf	display_clock@i+1,f
  5946                           
  5947                           ;clock_src.c: 70:      write_char(i + '0');
  5948  08DB  0875               	movf	display_clock@i,w
  5949  08DC  3E30               	addlw	48
  5950  08DD  160A  118A  251F  120A  158A  	fcall	_write_char
  5951                           
  5952                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  5953  08E2  0820               	movf	_table1,w
  5954  08E3  390F               	andlw	15
  5955  08E4  00F3               	movwf	??_display_clock
  5956  08E5  01F4               	clrf	??_display_clock+1
  5957  08E6  0873               	movf	??_display_clock,w
  5958  08E7  00F5               	movwf	display_clock@i
  5959  08E8  0874               	movf	??_display_clock+1,w
  5960  08E9  00F6               	movwf	display_clock@i+1
  5961                           
  5962                           ;clock_src.c: 74:      write_char(i + '0');
  5963  08EA  0875               	movf	display_clock@i,w
  5964  08EB  3E30               	addlw	48
  5965  08EC  160A  118A  251F   	fcall	_write_char
  5966  08EF  0008               	return
  5967  08F0                     __end_of_display_clock:	
  5968                           
  5969                           	psect	text29
  5970  038F                     __ptext29:	
  5971 ;; *************** function _date_settings *****************
  5972 ;; Defined at:
  5973 ;;		line 356 in file "Button_src.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;		None
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;		None
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      void 
  5980 ;; Registers used:
  5981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 300/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5987 ;;      Params:         0       0       0       0       0
  5988 ;;      Locals:         0       0       0       0       0
  5989 ;;      Temps:          0       3       0       0       0
  5990 ;;      Totals:         0       3       0       0       0
  5991 ;;Total ram usage:        3 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    3
  5994 ;; This function calls:
  5995 ;;		_button_delay
  5996 ;;		_incrementor
  5997 ;;		_modulus_func
  5998 ;;		_set_time
  5999 ;;		_time_date_delimiter
  6000 ;;		_time_date_hex_terminator
  6001 ;;		_write_char
  6002 ;;		_write_cmd
  6003 ;; This function is called by:
  6004 ;;		_main
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           
  6009                           ;psect for function _date_settings
  6010  038F                     _date_settings:	
  6011                           
  6012                           ;Button_src.c: 357:  RC0 = 0;
  6013                           
  6014                           ;incstack = 0
  6015                           ; Regs used in _date_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6016  038F  1283               	bcf	3,5	;RP0=0, select bank0
  6017  0390  1303               	bcf	3,6	;RP1=0, select bank0
  6018  0391  1007               	bcf	7,0	;volatile
  6019                           
  6020                           ;Button_src.c: 358:  RC1 = 1;
  6021  0392  1487               	bsf	7,1	;volatile
  6022                           
  6023                           ;Button_src.c: 359:  RC2 = 1;
  6024  0393  1507               	bsf	7,2	;volatile
  6025                           
  6026                           ;Button_src.c: 360:  RC3 = 1;
  6027  0394  1587               	bsf	7,3	;volatile
  6028                           
  6029                           ;Button_src.c: 361:   if (RC4 == 0){
  6030  0395  1A07               	btfsc	7,4	;volatile
  6031  0396  0008               	return
  6032                           
  6033                           ;Button_src.c: 362:       write_cmd(0x1);
  6034  0397  3001               	movlw	1
  6035  0398  160A  118A  2536  120A  118A  	fcall	_write_cmd
  6036  039D                     l633:	
  6037                           ;Button_src.c: 363:       for(;;){
  6038                           
  6039                           
  6040                           ;Button_src.c: 364:             write_cmd(0x80);
  6041  039D  3080               	movlw	128
  6042  039E  160A  118A  2536  120A  118A  	fcall	_write_cmd
  6043                           
  6044                           ;Button_src.c: 365:             write_char('D');
  6045  03A3  3044               	movlw	68
  6046  03A4  160A  118A  251F  120A  118A  	fcall	_write_char
  6047                           
  6048                           ;Button_src.c: 366:             write_char('a');
  6049  03A9  3061               	movlw	97
  6050  03AA  160A  118A  251F  120A  118A  	fcall	_write_char
  6051                           
  6052                           ;Button_src.c: 367:             write_char('t');
  6053  03AF  3074               	movlw	116
  6054  03B0  160A  118A  251F  120A  118A  	fcall	_write_char
  6055                           
  6056                           ;Button_src.c: 368:             write_char('e');
  6057  03B5  3065               	movlw	101
  6058  03B6  160A  118A  251F  120A  118A  	fcall	_write_char
  6059                           
  6060                           ;Button_src.c: 369:             write_char('_');
  6061  03BB  305F               	movlw	95
  6062  03BC  160A  118A  251F  120A  118A  	fcall	_write_char
  6063                           
  6064                           ;Button_src.c: 370:             write_char('S');
  6065  03C1  3053               	movlw	83
  6066  03C2  160A  118A  251F  120A  118A  	fcall	_write_char
  6067                           
  6068                           ;Button_src.c: 371:             write_char('e');
  6069  03C7  3065               	movlw	101
  6070  03C8  160A  118A  251F  120A  118A  	fcall	_write_char
  6071                           
  6072                           ;Button_src.c: 372:             write_char('t');
  6073  03CD  3074               	movlw	116
  6074  03CE  160A  118A  251F  120A  118A  	fcall	_write_char
  6075                           
  6076                           ;Button_src.c: 373:             write_char('t');
  6077  03D3  3074               	movlw	116
  6078  03D4  160A  118A  251F  120A  118A  	fcall	_write_char
  6079                           
  6080                           ;Button_src.c: 374:             write_char('i');
  6081  03D9  3069               	movlw	105
  6082  03DA  160A  118A  251F  120A  118A  	fcall	_write_char
  6083                           
  6084                           ;Button_src.c: 375:             write_char('n');
  6085  03DF  306E               	movlw	110
  6086  03E0  160A  118A  251F  120A  118A  	fcall	_write_char
  6087                           
  6088                           ;Button_src.c: 376:             write_char('g');
  6089  03E5  3067               	movlw	103
  6090  03E6  160A  118A  251F  120A  118A  	fcall	_write_char
  6091                           
  6092                           ;Button_src.c: 377:             write_char('s');
  6093  03EB  3073               	movlw	115
  6094  03EC  160A  118A  251F  120A  118A  	fcall	_write_char
  6095                           
  6096                           ;Button_src.c: 378:             RC0 = 1;
  6097  03F1  1407               	bsf	7,0	;volatile
  6098                           
  6099                           ;Button_src.c: 379:             RC1 = 0;
  6100  03F2  1087               	bcf	7,1	;volatile
  6101                           
  6102                           ;Button_src.c: 380:             RC2 = 1;
  6103  03F3  1507               	bsf	7,2	;volatile
  6104                           
  6105                           ;Button_src.c: 381:             RC3 = 1;
  6106  03F4  1587               	bsf	7,3	;volatile
  6107                           
  6108                           ;Button_src.c: 382:             if(RC7 == 0 && b =='x'){
  6109  03F5  1B87               	btfsc	7,7	;volatile
  6110  03F6  2C67               	goto	l3917
  6111  03F7  3078               	movlw	120
  6112  03F8  0656               	xorwf	_b,w
  6113  03F9  1D03               	btfss	3,2
  6114  03FA  2C67               	goto	l3917
  6115                           
  6116                           ;Button_src.c: 383:                 if(stats == 1)
  6117  03FB  0333               	decf	_stats,w
  6118  03FC  0434               	iorwf	_stats+1,w
  6119  03FD  1D03               	btfss	3,2
  6120  03FE  2C03               	goto	l635
  6121                           
  6122                           ;Button_src.c: 384:                     a++;
  6123  03FF  3001               	movlw	1
  6124  0400  00E7               	movwf	??_date_settings
  6125  0401  0867               	movf	??_date_settings,w
  6126  0402  07D7               	addwf	_a,f
  6127  0403                     l635:	
  6128                           
  6129                           ;Button_src.c: 385:                 if(stats == 0){
  6130  0403  0833               	movf	_stats,w
  6131  0404  0434               	iorwf	_stats+1,w
  6132  0405  1D03               	btfss	3,2
  6133  0406  2C0B               	goto	l636
  6134                           
  6135                           ;Button_src.c: 386:                     stats = 1;
  6136  0407  3001               	movlw	1
  6137  0408  00B3               	movwf	_stats
  6138  0409  3000               	movlw	0
  6139  040A  00B4               	movwf	_stats+1
  6140  040B                     l636:	
  6141                           ;Button_src.c: 387:                 }
  6142                           
  6143                           
  6144                           ;Button_src.c: 389:                     x++ ;
  6145  040B  3001               	movlw	1
  6146  040C  07BF               	addwf	_x,f
  6147  040D  1803               	skipnc
  6148  040E  0AC0               	incf	_x+1,f
  6149  040F  3000               	movlw	0
  6150  0410  07C0               	addwf	_x+1,f
  6151                           
  6152                           ;Button_src.c: 390:                     x = modulus_func(x,10);
  6153  0411  0840               	movf	_x+1,w
  6154  0412  00F8               	movwf	modulus_func@x+1
  6155  0413  083F               	movf	_x,w
  6156  0414  00F7               	movwf	modulus_func@x
  6157  0415  300A               	movlw	10
  6158  0416  00F9               	movwf	modulus_func@y
  6159  0417  3000               	movlw	0
  6160  0418  00FA               	movwf	modulus_func@y+1
  6161  0419  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  6162  041E  0878               	movf	?_modulus_func+1,w
  6163  041F  00C0               	movwf	_x+1
  6164  0420  0877               	movf	?_modulus_func,w
  6165  0421  00BF               	movwf	_x
  6166                           
  6167                           ;Button_src.c: 391:                      if (p == 1){
  6168  0422  032F               	decf	_p,w
  6169  0423  0430               	iorwf	_p+1,w
  6170  0424  1D03               	btfss	3,2
  6171  0425  2C3F               	goto	l3903
  6172                           
  6173                           ;Button_src.c: 392:                         y = incrementor(y,x,'0');
  6174  0426  083E               	movf	_y+1,w
  6175  0427  00E3               	movwf	incrementor@upper_val+1
  6176  0428  083D               	movf	_y,w
  6177  0429  00E2               	movwf	incrementor@upper_val
  6178  042A  0840               	movf	_x+1,w
  6179  042B  00E5               	movwf	incrementor@lower_val+1
  6180  042C  083F               	movf	_x,w
  6181  042D  00E4               	movwf	incrementor@lower_val
  6182  042E  3030               	movlw	48
  6183  042F  00E7               	movwf	??_date_settings
  6184  0430  0867               	movf	??_date_settings,w
  6185  0431  00E6               	movwf	incrementor@z
  6186  0432  160A  118A  25F2  120A  118A  	fcall	_incrementor
  6187  0437  00E8               	movwf	??_date_settings+1
  6188  0438  01E9               	clrf	??_date_settings+2
  6189  0439  0868               	movf	??_date_settings+1,w
  6190  043A  00BD               	movwf	_y
  6191  043B  0869               	movf	??_date_settings+2,w
  6192  043C  00BE               	movwf	_y+1
  6193                           
  6194                           ;Button_src.c: 393:                         p = 0;
  6195  043D  01AF               	clrf	_p
  6196  043E  01B0               	clrf	_p+1
  6197  043F                     l3903:	
  6198                           
  6199                           ;Button_src.c: 395:                     if (x == 9){
  6200  043F  3009               	movlw	9
  6201  0440  063F               	xorwf	_x,w
  6202  0441  0440               	iorwf	_x+1,w
  6203  0442  1D03               	btfss	3,2
  6204  0443  2C48               	goto	l3907
  6205                           
  6206                           ;Button_src.c: 396:                         p = 1;
  6207  0444  3001               	movlw	1
  6208  0445  00AF               	movwf	_p
  6209  0446  3000               	movlw	0
  6210  0447  00B0               	movwf	_p+1
  6211  0448                     l3907:	
  6212                           
  6213                           ;Button_src.c: 398:                     a = time_date_hex_terminator(a,'C');
  6214  0448  3043               	movlw	67
  6215  0449  00E7               	movwf	??_date_settings
  6216  044A  0867               	movf	??_date_settings,w
  6217  044B  00F0               	movwf	time_date_hex_terminator@limiter
  6218  044C  0857               	movf	_a,w
  6219  044D  160A  118A  24A4  120A  118A  	fcall	_time_date_hex_terminator
  6220  0452  00E8               	movwf	??_date_settings+1
  6221  0453  0868               	movf	??_date_settings+1,w
  6222  0454  00D7               	movwf	_a
  6223                           
  6224                           ;Button_src.c: 400:                     if(y == 1 && x == 3){
  6225  0455  033D               	decf	_y,w
  6226  0456  043E               	iorwf	_y+1,w
  6227  0457  1D03               	btfss	3,2
  6228  0458  2C62               	goto	l3915
  6229  0459  3003               	movlw	3
  6230  045A  063F               	xorwf	_x,w
  6231  045B  0440               	iorwf	_x+1,w
  6232  045C  1D03               	btfss	3,2
  6233  045D  2C62               	goto	l3915
  6234                           
  6235                           ;Button_src.c: 401:                         x = 0;
  6236  045E  01BF               	clrf	_x
  6237  045F  01C0               	clrf	_x+1
  6238                           
  6239                           ;Button_src.c: 402:                         y = 0;
  6240  0460  01BD               	clrf	_y
  6241  0461  01BE               	clrf	_y+1
  6242  0462                     l3915:	
  6243                           
  6244                           ;Button_src.c: 404:                     button_delay();
  6245  0462  160A  118A  24E3  120A  118A  	fcall	_button_delay
  6246  0467                     l3917:	
  6247                           
  6248                           ;Button_src.c: 406:             if(RC7==0 && b == 'y'){
  6249  0467  1283               	bcf	3,5	;RP0=0, select bank0
  6250  0468  1303               	bcf	3,6	;RP1=0, select bank0
  6251  0469  1B87               	btfsc	7,7	;volatile
  6252  046A  2CED               	goto	l3951
  6253  046B  3079               	movlw	121
  6254  046C  0656               	xorwf	_b,w
  6255  046D  1D03               	btfss	3,2
  6256  046E  2CED               	goto	l3951
  6257                           
  6258                           ;Button_src.c: 407:                  if(stats == 1)
  6259  046F  0333               	decf	_stats,w
  6260  0470  0434               	iorwf	_stats+1,w
  6261  0471  1D03               	btfss	3,2
  6262  0472  2C77               	goto	l641
  6263                           
  6264                           ;Button_src.c: 408:                     day_hex++;
  6265  0473  3001               	movlw	1
  6266  0474  00E7               	movwf	??_date_settings
  6267  0475  0867               	movf	??_date_settings,w
  6268  0476  07D4               	addwf	_day_hex,f
  6269  0477                     l641:	
  6270                           
  6271                           ;Button_src.c: 409:                 if(stats == 0){
  6272  0477  0833               	movf	_stats,w
  6273  0478  0434               	iorwf	_stats+1,w
  6274  0479  1D03               	btfss	3,2
  6275  047A  2C7F               	goto	l642
  6276                           
  6277                           ;Button_src.c: 410:                     stats = 1;
  6278  047B  3001               	movlw	1
  6279  047C  00B3               	movwf	_stats
  6280  047D  3000               	movlw	0
  6281  047E  00B4               	movwf	_stats+1
  6282  047F                     l642:	
  6283                           ;Button_src.c: 411:                 }
  6284                           
  6285                           
  6286                           ;Button_src.c: 413:                     day_low++;
  6287  047F  3001               	movlw	1
  6288  0480  07B9               	addwf	_day_low,f
  6289  0481  1803               	skipnc
  6290  0482  0ABA               	incf	_day_low+1,f
  6291  0483  3000               	movlw	0
  6292  0484  07BA               	addwf	_day_low+1,f
  6293                           
  6294                           ;Button_src.c: 414:                     day_low = modulus_func(day_low,10);
  6295  0485  083A               	movf	_day_low+1,w
  6296  0486  00F8               	movwf	modulus_func@x+1
  6297  0487  0839               	movf	_day_low,w
  6298  0488  00F7               	movwf	modulus_func@x
  6299  0489  300A               	movlw	10
  6300  048A  00F9               	movwf	modulus_func@y
  6301  048B  3000               	movlw	0
  6302  048C  00FA               	movwf	modulus_func@y+1
  6303  048D  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  6304  0492  0878               	movf	?_modulus_func+1,w
  6305  0493  00BA               	movwf	_day_low+1
  6306  0494  0877               	movf	?_modulus_func,w
  6307  0495  00B9               	movwf	_day_low
  6308                           
  6309                           ;Button_src.c: 415:                     day_counter = modulus_func(day_low,8);
  6310  0496  083A               	movf	_day_low+1,w
  6311  0497  00F8               	movwf	modulus_func@x+1
  6312  0498  0839               	movf	_day_low,w
  6313  0499  00F7               	movwf	modulus_func@x
  6314  049A  3008               	movlw	8
  6315  049B  00F9               	movwf	modulus_func@y
  6316  049C  3000               	movlw	0
  6317  049D  00FA               	movwf	modulus_func@y+1
  6318  049E  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  6319  04A3  0878               	movf	?_modulus_func+1,w
  6320  04A4  00A8               	movwf	_day_counter+1
  6321  04A5  0877               	movf	?_modulus_func,w
  6322  04A6  00A7               	movwf	_day_counter
  6323                           
  6324                           ;Button_src.c: 416:                     if (p == 1){
  6325  04A7  032F               	decf	_p,w
  6326  04A8  0430               	iorwf	_p+1,w
  6327  04A9  1D03               	btfss	3,2
  6328  04AA  2CC4               	goto	l3937
  6329                           
  6330                           ;Button_src.c: 417:                         day_high = incrementor(day_high,day_low,'0')
      +                          ;
  6331  04AB  0838               	movf	_day_high+1,w
  6332  04AC  00E3               	movwf	incrementor@upper_val+1
  6333  04AD  0837               	movf	_day_high,w
  6334  04AE  00E2               	movwf	incrementor@upper_val
  6335  04AF  083A               	movf	_day_low+1,w
  6336  04B0  00E5               	movwf	incrementor@lower_val+1
  6337  04B1  0839               	movf	_day_low,w
  6338  04B2  00E4               	movwf	incrementor@lower_val
  6339  04B3  3030               	movlw	48
  6340  04B4  00E7               	movwf	??_date_settings
  6341  04B5  0867               	movf	??_date_settings,w
  6342  04B6  00E6               	movwf	incrementor@z
  6343  04B7  160A  118A  25F2  120A  118A  	fcall	_incrementor
  6344  04BC  00E8               	movwf	??_date_settings+1
  6345  04BD  01E9               	clrf	??_date_settings+2
  6346  04BE  0868               	movf	??_date_settings+1,w
  6347  04BF  00B7               	movwf	_day_high
  6348  04C0  0869               	movf	??_date_settings+2,w
  6349  04C1  00B8               	movwf	_day_high+1
  6350                           
  6351                           ;Button_src.c: 418:                         p = 0;
  6352  04C2  01AF               	clrf	_p
  6353  04C3  01B0               	clrf	_p+1
  6354  04C4                     l3937:	
  6355                           
  6356                           ;Button_src.c: 420:                     if (day_low == 9){
  6357  04C4  3009               	movlw	9
  6358  04C5  0639               	xorwf	_day_low,w
  6359  04C6  043A               	iorwf	_day_low+1,w
  6360  04C7  1D03               	btfss	3,2
  6361  04C8  2CCD               	goto	l3941
  6362                           
  6363                           ;Button_src.c: 421:                         p = 1;
  6364  04C9  3001               	movlw	1
  6365  04CA  00AF               	movwf	_p
  6366  04CB  3000               	movlw	0
  6367  04CC  00B0               	movwf	_p+1
  6368  04CD                     l3941:	
  6369                           
  6370                           ;Button_src.c: 423:                     day_hex = time_date_hex_terminator(day_hex,'c');
  6371  04CD  3063               	movlw	99
  6372  04CE  00E7               	movwf	??_date_settings
  6373  04CF  0867               	movf	??_date_settings,w
  6374  04D0  00F0               	movwf	time_date_hex_terminator@limiter
  6375  04D1  0854               	movf	_day_hex,w
  6376  04D2  160A  118A  24A4  120A  118A  	fcall	_time_date_hex_terminator
  6377  04D7  00E8               	movwf	??_date_settings+1
  6378  04D8  0868               	movf	??_date_settings+1,w
  6379  04D9  00D4               	movwf	_day_hex
  6380                           
  6381                           ;Button_src.c: 424:                     if(day_high == 3 && day_low==2 ){
  6382  04DA  3003               	movlw	3
  6383  04DB  0637               	xorwf	_day_high,w
  6384  04DC  0438               	iorwf	_day_high+1,w
  6385  04DD  1D03               	btfss	3,2
  6386  04DE  2CE8               	goto	l3949
  6387  04DF  3002               	movlw	2
  6388  04E0  0639               	xorwf	_day_low,w
  6389  04E1  043A               	iorwf	_day_low+1,w
  6390  04E2  1D03               	btfss	3,2
  6391  04E3  2CE8               	goto	l3949
  6392                           
  6393                           ;Button_src.c: 425:                         day_high = 0;
  6394  04E4  01B7               	clrf	_day_high
  6395  04E5  01B8               	clrf	_day_high+1
  6396                           
  6397                           ;Button_src.c: 426:                         day_low = 0;
  6398  04E6  01B9               	clrf	_day_low
  6399  04E7  01BA               	clrf	_day_low+1
  6400  04E8                     l3949:	
  6401                           
  6402                           ;Button_src.c: 428:                     button_delay();
  6403  04E8  160A  118A  24E3  120A  118A  	fcall	_button_delay
  6404  04ED                     l3951:	
  6405                           
  6406                           ;Button_src.c: 430:             if(RC7==0 && b == 'z'){
  6407  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  6408  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  6409  04EF  1B87               	btfsc	7,7	;volatile
  6410  04F0  2D54               	goto	l3983
  6411  04F1  307A               	movlw	122
  6412  04F2  0656               	xorwf	_b,w
  6413  04F3  1D03               	btfss	3,2
  6414  04F4  2D54               	goto	l3983
  6415                           
  6416                           ;Button_src.c: 431:                 if(stats == 1)
  6417  04F5  0333               	decf	_stats,w
  6418  04F6  0434               	iorwf	_stats+1,w
  6419  04F7  1D03               	btfss	3,2
  6420  04F8  2CFD               	goto	l647
  6421                           
  6422                           ;Button_src.c: 432:                    c++;
  6423  04F9  3001               	movlw	1
  6424  04FA  00E7               	movwf	??_date_settings
  6425  04FB  0867               	movf	??_date_settings,w
  6426  04FC  07D5               	addwf	_c,f
  6427  04FD                     l647:	
  6428                           
  6429                           ;Button_src.c: 433:                 if(stats == 0){
  6430  04FD  0833               	movf	_stats,w
  6431  04FE  0434               	iorwf	_stats+1,w
  6432  04FF  1D03               	btfss	3,2
  6433  0500  2D05               	goto	l648
  6434                           
  6435                           ;Button_src.c: 434:                     stats = 1;
  6436  0501  3001               	movlw	1
  6437  0502  00B3               	movwf	_stats
  6438  0503  3000               	movlw	0
  6439  0504  00B4               	movwf	_stats+1
  6440  0505                     l648:	
  6441                           ;Button_src.c: 435:                 }
  6442                           
  6443                           
  6444                           ;Button_src.c: 437:                     t++;
  6445  0505  3001               	movlw	1
  6446  0506  07C3               	addwf	_t,f
  6447  0507  1803               	skipnc
  6448  0508  0AC4               	incf	_t+1,f
  6449  0509  3000               	movlw	0
  6450  050A  07C4               	addwf	_t+1,f
  6451                           
  6452                           ;Button_src.c: 438:                     t = modulus_func(t,10);
  6453  050B  0844               	movf	_t+1,w
  6454  050C  00F8               	movwf	modulus_func@x+1
  6455  050D  0843               	movf	_t,w
  6456  050E  00F7               	movwf	modulus_func@x
  6457  050F  300A               	movlw	10
  6458  0510  00F9               	movwf	modulus_func@y
  6459  0511  3000               	movlw	0
  6460  0512  00FA               	movwf	modulus_func@y+1
  6461  0513  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  6462  0518  0878               	movf	?_modulus_func+1,w
  6463  0519  00C4               	movwf	_t+1
  6464  051A  0877               	movf	?_modulus_func,w
  6465  051B  00C3               	movwf	_t
  6466                           
  6467                           ;Button_src.c: 439:                      if (p == 1){
  6468  051C  032F               	decf	_p,w
  6469  051D  0430               	iorwf	_p+1,w
  6470  051E  1D03               	btfss	3,2
  6471  051F  2D39               	goto	l3969
  6472                           
  6473                           ;Button_src.c: 440:                         w = incrementor(w,t,'0');
  6474  0520  0842               	movf	_w+1,w
  6475  0521  00E3               	movwf	incrementor@upper_val+1
  6476  0522  0841               	movf	_w,w
  6477  0523  00E2               	movwf	incrementor@upper_val
  6478  0524  0844               	movf	_t+1,w
  6479  0525  00E5               	movwf	incrementor@lower_val+1
  6480  0526  0843               	movf	_t,w
  6481  0527  00E4               	movwf	incrementor@lower_val
  6482  0528  3030               	movlw	48
  6483  0529  00E7               	movwf	??_date_settings
  6484  052A  0867               	movf	??_date_settings,w
  6485  052B  00E6               	movwf	incrementor@z
  6486  052C  160A  118A  25F2  120A  118A  	fcall	_incrementor
  6487  0531  00E8               	movwf	??_date_settings+1
  6488  0532  01E9               	clrf	??_date_settings+2
  6489  0533  0868               	movf	??_date_settings+1,w
  6490  0534  00C1               	movwf	_w
  6491  0535  0869               	movf	??_date_settings+2,w
  6492  0536  00C2               	movwf	_w+1
  6493                           
  6494                           ;Button_src.c: 441:                         p = 0;
  6495  0537  01AF               	clrf	_p
  6496  0538  01B0               	clrf	_p+1
  6497  0539                     l3969:	
  6498                           
  6499                           ;Button_src.c: 443:                     if (t == 9){
  6500  0539  3009               	movlw	9
  6501  053A  0643               	xorwf	_t,w
  6502  053B  0444               	iorwf	_t+1,w
  6503  053C  1D03               	btfss	3,2
  6504  053D  2D42               	goto	l3973
  6505                           
  6506                           ;Button_src.c: 444:                         p = 1;
  6507  053E  3001               	movlw	1
  6508  053F  00AF               	movwf	_p
  6509  0540  3000               	movlw	0
  6510  0541  00B0               	movwf	_p+1
  6511  0542                     l3973:	
  6512                           
  6513                           ;Button_src.c: 447:                      if(c == (0x59 + 1)){
  6514  0542  305A               	movlw	90
  6515  0543  0655               	xorwf	_c,w
  6516  0544  1903               	btfsc	3,2
  6517                           
  6518                           ;Button_src.c: 448:                         c = 0x00;
  6519  0545  01D5               	clrf	_c
  6520                           
  6521                           ;Button_src.c: 450:                     if(w == 6){
  6522  0546  3006               	movlw	6
  6523  0547  0641               	xorwf	_w,w
  6524  0548  0442               	iorwf	_w+1,w
  6525  0549  1D03               	btfss	3,2
  6526  054A  2D4F               	goto	l3981
  6527                           
  6528                           ;Button_src.c: 451:                         w = 0;
  6529  054B  01C1               	clrf	_w
  6530  054C  01C2               	clrf	_w+1
  6531                           
  6532                           ;Button_src.c: 452:                         t = 0;
  6533  054D  01C3               	clrf	_t
  6534  054E  01C4               	clrf	_t+1
  6535  054F                     l3981:	
  6536                           
  6537                           ;Button_src.c: 454:                     button_delay();
  6538  054F  160A  118A  24E3  120A  118A  	fcall	_button_delay
  6539  0554                     l3983:	
  6540                           
  6541                           ;Button_src.c: 461:                     a = time_date_delimiter(a,0x11,'9',1);
  6542  0554  3011               	movlw	17
  6543  0555  1283               	bcf	3,5	;RP0=0, select bank0
  6544  0556  1303               	bcf	3,6	;RP1=0, select bank0
  6545  0557  00E7               	movwf	??_date_settings
  6546  0558  0867               	movf	??_date_settings,w
  6547  0559  00F0               	movwf	time_date_delimiter@hex
  6548  055A  3039               	movlw	57
  6549  055B  00E8               	movwf	??_date_settings+1
  6550  055C  0868               	movf	??_date_settings+1,w
  6551  055D  00F1               	movwf	time_date_delimiter@limiter
  6552  055E  3001               	movlw	1
  6553  055F  00F2               	movwf	time_date_delimiter@type
  6554  0560  3000               	movlw	0
  6555  0561  00F3               	movwf	time_date_delimiter@type+1
  6556  0562  0857               	movf	_a,w
  6557  0563  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6558  0568  00E9               	movwf	??_date_settings+2
  6559  0569  0869               	movf	??_date_settings+2,w
  6560  056A  00D7               	movwf	_a
  6561                           
  6562                           ;Button_src.c: 463:                     day_hex = time_date_delimiter(day_hex,0x11,'9',2
      +                          );
  6563  056B  3011               	movlw	17
  6564  056C  00E7               	movwf	??_date_settings
  6565  056D  0867               	movf	??_date_settings,w
  6566  056E  00F0               	movwf	time_date_delimiter@hex
  6567  056F  3039               	movlw	57
  6568  0570  00E8               	movwf	??_date_settings+1
  6569  0571  0868               	movf	??_date_settings+1,w
  6570  0572  00F1               	movwf	time_date_delimiter@limiter
  6571  0573  3002               	movlw	2
  6572  0574  00F2               	movwf	time_date_delimiter@type
  6573  0575  3000               	movlw	0
  6574  0576  00F3               	movwf	time_date_delimiter@type+1
  6575  0577  0854               	movf	_day_hex,w
  6576  0578  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6577  057D  00E9               	movwf	??_date_settings+2
  6578  057E  0869               	movf	??_date_settings+2,w
  6579  057F  00D4               	movwf	_day_hex
  6580                           
  6581                           ;Button_src.c: 464:                     day_hex = time_date_delimiter(day_hex,0x21,'J',2
      +                          );
  6582  0580  3021               	movlw	33
  6583  0581  00E7               	movwf	??_date_settings
  6584  0582  0867               	movf	??_date_settings,w
  6585  0583  00F0               	movwf	time_date_delimiter@hex
  6586  0584  304A               	movlw	74
  6587  0585  00E8               	movwf	??_date_settings+1
  6588  0586  0868               	movf	??_date_settings+1,w
  6589  0587  00F1               	movwf	time_date_delimiter@limiter
  6590  0588  3002               	movlw	2
  6591  0589  00F2               	movwf	time_date_delimiter@type
  6592  058A  3000               	movlw	0
  6593  058B  00F3               	movwf	time_date_delimiter@type+1
  6594  058C  0854               	movf	_day_hex,w
  6595  058D  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6596  0592  00E9               	movwf	??_date_settings+2
  6597  0593  0869               	movf	??_date_settings+2,w
  6598  0594  00D4               	movwf	_day_hex
  6599                           
  6600                           ;Button_src.c: 465:                     day_hex = time_date_delimiter(day_hex,0x11,'9',2
      +                          );
  6601  0595  3011               	movlw	17
  6602  0596  00E7               	movwf	??_date_settings
  6603  0597  0867               	movf	??_date_settings,w
  6604  0598  00F0               	movwf	time_date_delimiter@hex
  6605  0599  3039               	movlw	57
  6606  059A  00E8               	movwf	??_date_settings+1
  6607  059B  0868               	movf	??_date_settings+1,w
  6608  059C  00F1               	movwf	time_date_delimiter@limiter
  6609  059D  3002               	movlw	2
  6610  059E  00F2               	movwf	time_date_delimiter@type
  6611  059F  3000               	movlw	0
  6612  05A0  00F3               	movwf	time_date_delimiter@type+1
  6613  05A1  0854               	movf	_day_hex,w
  6614  05A2  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6615  05A7  00E9               	movwf	??_date_settings+2
  6616  05A8  0869               	movf	??_date_settings+2,w
  6617  05A9  00D4               	movwf	_day_hex
  6618                           
  6619                           ;Button_src.c: 466:                     day_hex = time_date_delimiter(day_hex,0x21,'J',2
      +                          );
  6620  05AA  3021               	movlw	33
  6621  05AB  00E7               	movwf	??_date_settings
  6622  05AC  0867               	movf	??_date_settings,w
  6623  05AD  00F0               	movwf	time_date_delimiter@hex
  6624  05AE  304A               	movlw	74
  6625  05AF  00E8               	movwf	??_date_settings+1
  6626  05B0  0868               	movf	??_date_settings+1,w
  6627  05B1  00F1               	movwf	time_date_delimiter@limiter
  6628  05B2  3002               	movlw	2
  6629  05B3  00F2               	movwf	time_date_delimiter@type
  6630  05B4  3000               	movlw	0
  6631  05B5  00F3               	movwf	time_date_delimiter@type+1
  6632  05B6  0854               	movf	_day_hex,w
  6633  05B7  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6634  05BC  00E9               	movwf	??_date_settings+2
  6635  05BD  0869               	movf	??_date_settings+2,w
  6636  05BE  00D4               	movwf	_day_hex
  6637                           
  6638                           ;Button_src.c: 467:                     day_hex = time_date_delimiter(day_hex,0x31,'Y',2
      +                          );
  6639  05BF  3031               	movlw	49
  6640  05C0  00E7               	movwf	??_date_settings
  6641  05C1  0867               	movf	??_date_settings,w
  6642  05C2  00F0               	movwf	time_date_delimiter@hex
  6643  05C3  3059               	movlw	89
  6644  05C4  00E8               	movwf	??_date_settings+1
  6645  05C5  0868               	movf	??_date_settings+1,w
  6646  05C6  00F1               	movwf	time_date_delimiter@limiter
  6647  05C7  3002               	movlw	2
  6648  05C8  00F2               	movwf	time_date_delimiter@type
  6649  05C9  3000               	movlw	0
  6650  05CA  00F3               	movwf	time_date_delimiter@type+1
  6651  05CB  0854               	movf	_day_hex,w
  6652  05CC  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6653  05D1  00E9               	movwf	??_date_settings+2
  6654  05D2  0869               	movf	??_date_settings+2,w
  6655  05D3  00D4               	movwf	_day_hex
  6656                           
  6657                           ;Button_src.c: 469:                     c = time_date_delimiter(c,0x11,'9',3);
  6658  05D4  3011               	movlw	17
  6659  05D5  00E7               	movwf	??_date_settings
  6660  05D6  0867               	movf	??_date_settings,w
  6661  05D7  00F0               	movwf	time_date_delimiter@hex
  6662  05D8  3039               	movlw	57
  6663  05D9  00E8               	movwf	??_date_settings+1
  6664  05DA  0868               	movf	??_date_settings+1,w
  6665  05DB  00F1               	movwf	time_date_delimiter@limiter
  6666  05DC  3003               	movlw	3
  6667  05DD  00F2               	movwf	time_date_delimiter@type
  6668  05DE  3000               	movlw	0
  6669  05DF  00F3               	movwf	time_date_delimiter@type+1
  6670  05E0  0855               	movf	_c,w
  6671  05E1  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6672  05E6  00E9               	movwf	??_date_settings+2
  6673  05E7  0869               	movf	??_date_settings+2,w
  6674  05E8  00D5               	movwf	_c
  6675                           
  6676                           ;Button_src.c: 470:                     c = time_date_delimiter(c,0x21,'J',3);
  6677  05E9  3021               	movlw	33
  6678  05EA  00E7               	movwf	??_date_settings
  6679  05EB  0867               	movf	??_date_settings,w
  6680  05EC  00F0               	movwf	time_date_delimiter@hex
  6681  05ED  304A               	movlw	74
  6682  05EE  00E8               	movwf	??_date_settings+1
  6683  05EF  0868               	movf	??_date_settings+1,w
  6684  05F0  00F1               	movwf	time_date_delimiter@limiter
  6685  05F1  3003               	movlw	3
  6686  05F2  00F2               	movwf	time_date_delimiter@type
  6687  05F3  3000               	movlw	0
  6688  05F4  00F3               	movwf	time_date_delimiter@type+1
  6689  05F5  0855               	movf	_c,w
  6690  05F6  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6691  05FB  00E9               	movwf	??_date_settings+2
  6692  05FC  0869               	movf	??_date_settings+2,w
  6693  05FD  00D5               	movwf	_c
  6694                           
  6695                           ;Button_src.c: 471:                     c = time_date_delimiter(c,0x11,'9',3);
  6696  05FE  3011               	movlw	17
  6697  05FF  00E7               	movwf	??_date_settings
  6698  0600  0867               	movf	??_date_settings,w
  6699  0601  00F0               	movwf	time_date_delimiter@hex
  6700  0602  3039               	movlw	57
  6701  0603  00E8               	movwf	??_date_settings+1
  6702  0604  0868               	movf	??_date_settings+1,w
  6703  0605  00F1               	movwf	time_date_delimiter@limiter
  6704  0606  3003               	movlw	3
  6705  0607  00F2               	movwf	time_date_delimiter@type
  6706  0608  3000               	movlw	0
  6707  0609  00F3               	movwf	time_date_delimiter@type+1
  6708  060A  0855               	movf	_c,w
  6709  060B  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6710  0610  00E9               	movwf	??_date_settings+2
  6711  0611  0869               	movf	??_date_settings+2,w
  6712  0612  00D5               	movwf	_c
  6713                           
  6714                           ;Button_src.c: 472:                     c = time_date_delimiter(c,0x21,'J',3);
  6715  0613  3021               	movlw	33
  6716  0614  00E7               	movwf	??_date_settings
  6717  0615  0867               	movf	??_date_settings,w
  6718  0616  00F0               	movwf	time_date_delimiter@hex
  6719  0617  304A               	movlw	74
  6720  0618  00E8               	movwf	??_date_settings+1
  6721  0619  0868               	movf	??_date_settings+1,w
  6722  061A  00F1               	movwf	time_date_delimiter@limiter
  6723  061B  3003               	movlw	3
  6724  061C  00F2               	movwf	time_date_delimiter@type
  6725  061D  3000               	movlw	0
  6726  061E  00F3               	movwf	time_date_delimiter@type+1
  6727  061F  0855               	movf	_c,w
  6728  0620  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6729  0625  00E9               	movwf	??_date_settings+2
  6730  0626  0869               	movf	??_date_settings+2,w
  6731  0627  00D5               	movwf	_c
  6732                           
  6733                           ;Button_src.c: 473:                     c = time_date_delimiter(c,0x31,'Y',3);
  6734  0628  3031               	movlw	49
  6735  0629  00E7               	movwf	??_date_settings
  6736  062A  0867               	movf	??_date_settings,w
  6737  062B  00F0               	movwf	time_date_delimiter@hex
  6738  062C  3059               	movlw	89
  6739  062D  00E8               	movwf	??_date_settings+1
  6740  062E  0868               	movf	??_date_settings+1,w
  6741  062F  00F1               	movwf	time_date_delimiter@limiter
  6742  0630  3003               	movlw	3
  6743  0631  00F2               	movwf	time_date_delimiter@type
  6744  0632  3000               	movlw	0
  6745  0633  00F3               	movwf	time_date_delimiter@type+1
  6746  0634  0855               	movf	_c,w
  6747  0635  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6748  063A  00E9               	movwf	??_date_settings+2
  6749  063B  0869               	movf	??_date_settings+2,w
  6750  063C  00D5               	movwf	_c
  6751                           
  6752                           ;Button_src.c: 474:                     c = time_date_delimiter(c,0x41,'j',3);
  6753  063D  3041               	movlw	65
  6754  063E  00E7               	movwf	??_date_settings
  6755  063F  0867               	movf	??_date_settings,w
  6756  0640  00F0               	movwf	time_date_delimiter@hex
  6757  0641  306A               	movlw	106
  6758  0642  00E8               	movwf	??_date_settings+1
  6759  0643  0868               	movf	??_date_settings+1,w
  6760  0644  00F1               	movwf	time_date_delimiter@limiter
  6761  0645  3003               	movlw	3
  6762  0646  00F2               	movwf	time_date_delimiter@type
  6763  0647  3000               	movlw	0
  6764  0648  00F3               	movwf	time_date_delimiter@type+1
  6765  0649  0855               	movf	_c,w
  6766  064A  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6767  064F  00E9               	movwf	??_date_settings+2
  6768  0650  0869               	movf	??_date_settings+2,w
  6769  0651  00D5               	movwf	_c
  6770                           
  6771                           ;Button_src.c: 475:                     c = time_date_delimiter(c,0x51,'z',3);
  6772  0652  3051               	movlw	81
  6773  0653  00E7               	movwf	??_date_settings
  6774  0654  0867               	movf	??_date_settings,w
  6775  0655  00F0               	movwf	time_date_delimiter@hex
  6776  0656  307A               	movlw	122
  6777  0657  00E8               	movwf	??_date_settings+1
  6778  0658  0868               	movf	??_date_settings+1,w
  6779  0659  00F1               	movwf	time_date_delimiter@limiter
  6780  065A  3003               	movlw	3
  6781  065B  00F2               	movwf	time_date_delimiter@type
  6782  065C  3000               	movlw	0
  6783  065D  00F3               	movwf	time_date_delimiter@type+1
  6784  065E  0855               	movf	_c,w
  6785  065F  120A  158A  2453  120A  118A  	fcall	_time_date_delimiter
  6786  0664  00E9               	movwf	??_date_settings+2
  6787  0665  0869               	movf	??_date_settings+2,w
  6788  0666  00D5               	movwf	_c
  6789                           
  6790                           ;Button_src.c: 477:               if(stats==0){
  6791  0667  0833               	movf	_stats,w
  6792  0668  0434               	iorwf	_stats+1,w
  6793  0669  1D03               	btfss	3,2
  6794  066A  2E79               	goto	l4013
  6795                           
  6796                           ;Button_src.c: 478:                   table[4] = prev_hex;
  6797  066B  0852               	movf	_prev_hex,w
  6798  066C  00E7               	movwf	??_date_settings
  6799  066D  0867               	movf	??_date_settings,w
  6800  066E  1683               	bsf	3,5	;RP0=1, select bank1
  6801  066F  00A4               	movwf	(_table^(0+128)+4)
  6802                           
  6803                           ;Button_src.c: 479:                   table[6] = prev_hex_year;
  6804  0670  1283               	bcf	3,5	;RP0=0, select bank0
  6805  0671  0850               	movf	_prev_hex_year,w
  6806  0672  00E7               	movwf	??_date_settings
  6807  0673  0867               	movf	??_date_settings,w
  6808  0674  1683               	bsf	3,5	;RP0=1, select bank1
  6809  0675  00A6               	movwf	(_table^(0+128)+6)
  6810                           
  6811                           ;Button_src.c: 480:                   table[3] = prev_hex_day;
  6812  0676  1283               	bcf	3,5	;RP0=0, select bank0
  6813  0677  0851               	movf	_prev_hex_day,w
  6814  0678  2E8A               	goto	L3
  6815  0679                     l4013:	
  6816                           ;Button_src.c: 481:               }
  6817                           
  6818  0679  0333               	decf	_stats,w
  6819  067A  0434               	iorwf	_stats+1,w
  6820  067B  1D03               	btfss	3,2
  6821  067C  2E8E               	goto	l4017
  6822                           
  6823                           ;Button_src.c: 483:               {;Button_src.c: 484:                  table[4]= a;
  6824  067D  0857               	movf	_a,w
  6825  067E  00E7               	movwf	??_date_settings
  6826  067F  0867               	movf	??_date_settings,w
  6827  0680  1683               	bsf	3,5	;RP0=1, select bank1
  6828  0681  00A4               	movwf	(_table^(0+128)+4)
  6829                           
  6830                           ;Button_src.c: 485:                  table[6] = c;
  6831  0682  1283               	bcf	3,5	;RP0=0, select bank0
  6832  0683  0855               	movf	_c,w
  6833  0684  00E7               	movwf	??_date_settings
  6834  0685  0867               	movf	??_date_settings,w
  6835  0686  1683               	bsf	3,5	;RP0=1, select bank1
  6836  0687  00A6               	movwf	(_table^(0+128)+6)
  6837                           
  6838                           ;Button_src.c: 486:                  table[3] = day_hex;
  6839  0688  1283               	bcf	3,5	;RP0=0, select bank0
  6840  0689  0854               	movf	_day_hex,w
  6841  068A                     L3:	
  6842  068A  00E7               	movwf	??_date_settings
  6843  068B  0867               	movf	??_date_settings,w
  6844  068C  1683               	bsf	3,5	;RP0=1, select bank1
  6845  068D  00A3               	movwf	(_table^(0+128)+3)
  6846  068E                     l4017:	
  6847                           
  6848                           ;Button_src.c: 489:              write_cmd(0x88);
  6849  068E  3088               	movlw	136
  6850  068F  160A  118A  2536  120A  118A  	fcall	_write_cmd
  6851                           
  6852                           ;Button_src.c: 491:                   RC0 = 0;
  6853  0694  1007               	bcf	7,0	;volatile
  6854                           
  6855                           ;Button_src.c: 492:                   RC1 = 1;
  6856  0695  1487               	bsf	7,1	;volatile
  6857                           
  6858                           ;Button_src.c: 493:                   RC2 = 1;
  6859  0696  1507               	bsf	7,2	;volatile
  6860                           
  6861                           ;Button_src.c: 494:                   RC3 = 1;
  6862  0697  1587               	bsf	7,3	;volatile
  6863                           
  6864                           ;Button_src.c: 496:                     if (RC6 == 0 ){
  6865  0698  1B07               	btfsc	7,6	;volatile
  6866  0699  2EB3               	goto	l656
  6867                           
  6868                           ;Button_src.c: 497:                           a = 0x00;
  6869  069A  01D7               	clrf	_a
  6870                           
  6871                           ;Button_src.c: 498:                           c = 0x00;
  6872  069B  01D5               	clrf	_c
  6873                           
  6874                           ;Button_src.c: 499:                           day_hex = 0x00;
  6875  069C  01D4               	clrf	_day_hex
  6876                           
  6877                           ;Button_src.c: 500:                           day_high = 0;
  6878  069D  01B7               	clrf	_day_high
  6879  069E  01B8               	clrf	_day_high+1
  6880                           
  6881                           ;Button_src.c: 501:                           day_low = 0;
  6882  069F  01B9               	clrf	_day_low
  6883  06A0  01BA               	clrf	_day_low+1
  6884                           
  6885                           ;Button_src.c: 502:                           x = 0;
  6886  06A1  01BF               	clrf	_x
  6887  06A2  01C0               	clrf	_x+1
  6888                           
  6889                           ;Button_src.c: 503:                           y = 0;
  6890  06A3  01BD               	clrf	_y
  6891  06A4  01BE               	clrf	_y+1
  6892                           
  6893                           ;Button_src.c: 504:                           w = 0;
  6894  06A5  01C1               	clrf	_w
  6895  06A6  01C2               	clrf	_w+1
  6896                           
  6897                           ;Button_src.c: 505:                           t = 0;
  6898  06A7  01C3               	clrf	_t
  6899  06A8  01C4               	clrf	_t+1
  6900                           
  6901                           ;Button_src.c: 506:                           write_cmd(0x1);
  6902  06A9  3001               	movlw	1
  6903  06AA  160A  118A  2536  120A  118A  	fcall	_write_cmd
  6904                           
  6905                           ;Button_src.c: 507:                           set_time();
  6906  06AF  120A  118A  2006   	fcall	_set_time
  6907  06B2  0008               	return
  6908  06B3                     l656:	
  6909                           ;Button_src.c: 509:                             }
  6910                           
  6911                           
  6912                           ;Button_src.c: 510:                   RC0 = 0;
  6913  06B3  1007               	bcf	7,0	;volatile
  6914                           
  6915                           ;Button_src.c: 511:                   RC1 = 1;
  6916  06B4  1487               	bsf	7,1	;volatile
  6917                           
  6918                           ;Button_src.c: 512:                   RC2 = 1;
  6919  06B5  1507               	bsf	7,2	;volatile
  6920                           
  6921                           ;Button_src.c: 513:                   RC3 = 1;
  6922  06B6  1587               	bsf	7,3	;volatile
  6923                           
  6924                           ;Button_src.c: 514:                   z = modulus_func(z,3);
  6925  06B7  083C               	movf	_z+1,w
  6926  06B8  00F8               	movwf	modulus_func@x+1
  6927  06B9  083B               	movf	_z,w
  6928  06BA  00F7               	movwf	modulus_func@x
  6929  06BB  3003               	movlw	3
  6930  06BC  00F9               	movwf	modulus_func@y
  6931  06BD  3000               	movlw	0
  6932  06BE  00FA               	movwf	modulus_func@y+1
  6933  06BF  160A  118A  24C2  120A  118A  	fcall	_modulus_func
  6934  06C4  0878               	movf	?_modulus_func+1,w
  6935  06C5  00BC               	movwf	_z+1
  6936  06C6  0877               	movf	?_modulus_func,w
  6937  06C7  00BB               	movwf	_z
  6938                           
  6939                           ;Button_src.c: 515:                   if(RC4 == 0 && z ==0){
  6940  06C8  1A07               	btfsc	7,4	;volatile
  6941  06C9  2F09               	goto	l4049
  6942  06CA  083B               	movf	_z,w
  6943  06CB  043C               	iorwf	_z+1,w
  6944  06CC  1D03               	btfss	3,2
  6945  06CD  2F09               	goto	l4049
  6946                           
  6947                           ;Button_src.c: 516:                       write_cmd(0x90);
  6948  06CE  3090               	movlw	144
  6949  06CF  160A  118A  2536  120A  118A  	fcall	_write_cmd
  6950                           
  6951                           ;Button_src.c: 517:                       write_char('D');
  6952  06D4  3044               	movlw	68
  6953  06D5  160A  118A  251F  120A  118A  	fcall	_write_char
  6954                           
  6955                           ;Button_src.c: 518:                       write_char('a');
  6956  06DA  3061               	movlw	97
  6957  06DB  160A  118A  251F  120A  118A  	fcall	_write_char
  6958                           
  6959                           ;Button_src.c: 519:                       write_char('y');
  6960  06E0  3079               	movlw	121
  6961  06E1  160A  118A  251F  120A  118A  	fcall	_write_char
  6962                           
  6963                           ;Button_src.c: 520:                       write_char(':');
  6964  06E6  303A               	movlw	58
  6965  06E7  160A  118A  251F  120A  118A  	fcall	_write_char
  6966                           
  6967                           ;Button_src.c: 521:                       write_char(' ');
  6968  06EC  3020               	movlw	32
  6969  06ED  160A  118A  251F  120A  118A  	fcall	_write_char
  6970                           
  6971                           ;Button_src.c: 522:                       write_char(' ');
  6972  06F2  3020               	movlw	32
  6973  06F3  160A  118A  251F  120A  118A  	fcall	_write_char
  6974                           
  6975                           ;Button_src.c: 523:                       b = 'y';
  6976  06F8  3079               	movlw	121
  6977  06F9  00E7               	movwf	??_date_settings
  6978  06FA  0867               	movf	??_date_settings,w
  6979  06FB  00D6               	movwf	_b
  6980                           
  6981                           ;Button_src.c: 525:                       button_delay();
  6982  06FC  160A  118A  24E3  120A  118A  	fcall	_button_delay
  6983                           
  6984                           ;Button_src.c: 526:                       z++;
  6985  0701  3001               	movlw	1
  6986  0702  1283               	bcf	3,5	;RP0=0, select bank0
  6987  0703  1303               	bcf	3,6	;RP1=0, select bank0
  6988  0704  07BB               	addwf	_z,f
  6989  0705  1803               	skipnc
  6990  0706  0ABC               	incf	_z+1,f
  6991  0707  3000               	movlw	0
  6992  0708  07BC               	addwf	_z+1,f
  6993  0709                     l4049:	
  6994                           
  6995                           ;Button_src.c: 528:                   RC0 = 0;
  6996  0709  1007               	bcf	7,0	;volatile
  6997                           
  6998                           ;Button_src.c: 529:                   RC1 = 1;
  6999  070A  1487               	bsf	7,1	;volatile
  7000                           
  7001                           ;Button_src.c: 530:                   RC2 = 1;
  7002  070B  1507               	bsf	7,2	;volatile
  7003                           
  7004                           ;Button_src.c: 531:                   RC3 = 1;
  7005  070C  1587               	bsf	7,3	;volatile
  7006                           
  7007                           ;Button_src.c: 532:                   if(RC4 == 0&& z ==1){
  7008  070D  1A07               	btfsc	7,4	;volatile
  7009  070E  2F4C               	goto	l4079
  7010  070F  033B               	decf	_z,w
  7011  0710  043C               	iorwf	_z+1,w
  7012  0711  1D03               	btfss	3,2
  7013  0712  2F4C               	goto	l4079
  7014                           
  7015                           ;Button_src.c: 533:                       z++;
  7016  0713  3001               	movlw	1
  7017  0714  07BB               	addwf	_z,f
  7018  0715  1803               	skipnc
  7019  0716  0ABC               	incf	_z+1,f
  7020  0717  3000               	movlw	0
  7021  0718  07BC               	addwf	_z+1,f
  7022                           
  7023                           ;Button_src.c: 534:                       button_delay();
  7024  0719  160A  118A  24E3  120A  118A  	fcall	_button_delay
  7025                           
  7026                           ;Button_src.c: 536:                       write_cmd(0x90);
  7027  071E  3090               	movlw	144
  7028  071F  160A  118A  2536  120A  118A  	fcall	_write_cmd
  7029                           
  7030                           ;Button_src.c: 537:                       write_char('M');
  7031  0724  304D               	movlw	77
  7032  0725  160A  118A  251F  120A  118A  	fcall	_write_char
  7033                           
  7034                           ;Button_src.c: 538:                       write_char('o');
  7035  072A  306F               	movlw	111
  7036  072B  160A  118A  251F  120A  118A  	fcall	_write_char
  7037                           
  7038                           ;Button_src.c: 539:                       write_char('n');
  7039  0730  306E               	movlw	110
  7040  0731  160A  118A  251F  120A  118A  	fcall	_write_char
  7041                           
  7042                           ;Button_src.c: 540:                       write_char('t');
  7043  0736  3074               	movlw	116
  7044  0737  160A  118A  251F  120A  118A  	fcall	_write_char
  7045                           
  7046                           ;Button_src.c: 541:                       write_char('h');
  7047  073C  3068               	movlw	104
  7048  073D  160A  118A  251F  120A  118A  	fcall	_write_char
  7049                           
  7050                           ;Button_src.c: 542:                       write_char(':');
  7051  0742  303A               	movlw	58
  7052  0743  160A  118A  251F  120A  118A  	fcall	_write_char
  7053                           
  7054                           ;Button_src.c: 543:                       b = 'x';
  7055  0748  3078               	movlw	120
  7056  0749  00E7               	movwf	??_date_settings
  7057  074A  0867               	movf	??_date_settings,w
  7058  074B  00D6               	movwf	_b
  7059  074C                     l4079:	
  7060                           
  7061                           ;Button_src.c: 546:                   RC0 = 0;
  7062  074C  1007               	bcf	7,0	;volatile
  7063                           
  7064                           ;Button_src.c: 547:                   RC1 = 1;
  7065  074D  1487               	bsf	7,1	;volatile
  7066                           
  7067                           ;Button_src.c: 548:                   RC2 = 1;
  7068  074E  1507               	bsf	7,2	;volatile
  7069                           
  7070                           ;Button_src.c: 549:                   RC3 = 1;
  7071  074F  1587               	bsf	7,3	;volatile
  7072                           
  7073                           ;Button_src.c: 550:                   if(RC4 == 0&& z ==2){
  7074  0750  1A07               	btfsc	7,4	;volatile
  7075  0751  2F92               	goto	l4109
  7076  0752  3002               	movlw	2
  7077  0753  063B               	xorwf	_z,w
  7078  0754  043C               	iorwf	_z+1,w
  7079  0755  1D03               	btfss	3,2
  7080  0756  2F92               	goto	l4109
  7081                           
  7082                           ;Button_src.c: 551:                       button_delay();
  7083  0757  160A  118A  24E3  120A  118A  	fcall	_button_delay
  7084                           
  7085                           ;Button_src.c: 552:                       z++;
  7086  075C  3001               	movlw	1
  7087  075D  1283               	bcf	3,5	;RP0=0, select bank0
  7088  075E  1303               	bcf	3,6	;RP1=0, select bank0
  7089  075F  07BB               	addwf	_z,f
  7090  0760  1803               	skipnc
  7091  0761  0ABC               	incf	_z+1,f
  7092  0762  3000               	movlw	0
  7093  0763  07BC               	addwf	_z+1,f
  7094                           
  7095                           ;Button_src.c: 554:                       write_cmd(0x90);
  7096  0764  3090               	movlw	144
  7097  0765  160A  118A  2536  120A  118A  	fcall	_write_cmd
  7098                           
  7099                           ;Button_src.c: 555:                       write_char('Y');
  7100  076A  3059               	movlw	89
  7101  076B  160A  118A  251F  120A  118A  	fcall	_write_char
  7102                           
  7103                           ;Button_src.c: 556:                       write_char('e');
  7104  0770  3065               	movlw	101
  7105  0771  160A  118A  251F  120A  118A  	fcall	_write_char
  7106                           
  7107                           ;Button_src.c: 557:                       write_char('a');
  7108  0776  3061               	movlw	97
  7109  0777  160A  118A  251F  120A  118A  	fcall	_write_char
  7110                           
  7111                           ;Button_src.c: 558:                       write_char('r');
  7112  077C  3072               	movlw	114
  7113  077D  160A  118A  251F  120A  118A  	fcall	_write_char
  7114                           
  7115                           ;Button_src.c: 559:                       write_char(':');
  7116  0782  303A               	movlw	58
  7117  0783  160A  118A  251F  120A  118A  	fcall	_write_char
  7118                           
  7119                           ;Button_src.c: 560:                       write_char(' ');
  7120  0788  3020               	movlw	32
  7121  0789  160A  118A  251F  120A  118A  	fcall	_write_char
  7122                           
  7123                           ;Button_src.c: 561:                       b = 'z';
  7124  078E  307A               	movlw	122
  7125  078F  00E7               	movwf	??_date_settings
  7126  0790  0867               	movf	??_date_settings,w
  7127  0791  00D6               	movwf	_b
  7128  0792                     l4109:	
  7129                           
  7130                           ;Button_src.c: 564:               write_cmd(0x88);
  7131  0792  3088               	movlw	136
  7132  0793  160A  118A  2536  120A  118A  	fcall	_write_cmd
  7133                           
  7134                           ;Button_src.c: 565:               write_char(day_high + '0');
  7135  0798  0837               	movf	_day_high,w
  7136  0799  3E30               	addlw	48
  7137  079A  160A  118A  251F  120A  118A  	fcall	_write_char
  7138                           
  7139                           ;Button_src.c: 566:               write_char(day_low + '0');
  7140  079F  0839               	movf	_day_low,w
  7141  07A0  3E30               	addlw	48
  7142  07A1  160A  118A  251F  120A  118A  	fcall	_write_char
  7143                           
  7144                           ;Button_src.c: 567:               write_char('/');
  7145  07A6  302F               	movlw	47
  7146  07A7  160A  118A  251F  120A  118A  	fcall	_write_char
  7147                           
  7148                           ;Button_src.c: 568:               write_char(y + '0');
  7149  07AC  083D               	movf	_y,w
  7150  07AD  3E30               	addlw	48
  7151  07AE  160A  118A  251F  120A  118A  	fcall	_write_char
  7152                           
  7153                           ;Button_src.c: 569:               write_char(x + '0');
  7154  07B3  083F               	movf	_x,w
  7155  07B4  3E30               	addlw	48
  7156  07B5  160A  118A  251F  120A  118A  	fcall	_write_char
  7157                           
  7158                           ;Button_src.c: 570:               write_char('/');
  7159  07BA  302F               	movlw	47
  7160  07BB  160A  118A  251F  120A  118A  	fcall	_write_char
  7161                           
  7162                           ;Button_src.c: 571:               write_char(w+ '0');
  7163  07C0  0841               	movf	_w,w
  7164  07C1  3E30               	addlw	48
  7165  07C2  160A  118A  251F  120A  118A  	fcall	_write_char
  7166                           
  7167                           ;Button_src.c: 572:               write_char(t+ '0');
  7168  07C7  0843               	movf	_t,w
  7169  07C8  3E30               	addlw	48
  7170  07C9  160A  118A  251F  120A  118A  	fcall	_write_char
  7171                           
  7172                           ;Button_src.c: 575:             RC0 = 0;
  7173  07CE  1007               	bcf	7,0	;volatile
  7174                           
  7175                           ;Button_src.c: 576:             RC1 = 1;
  7176  07CF  1487               	bsf	7,1	;volatile
  7177                           
  7178                           ;Button_src.c: 577:             RC2 = 1;
  7179  07D0  1507               	bsf	7,2	;volatile
  7180                           
  7181                           ;Button_src.c: 578:             RC3 = 1;
  7182  07D1  1587               	bsf	7,3	;volatile
  7183                           
  7184                           ;Button_src.c: 579:             if (RC7 == 0 ){
  7185  07D2  1B87               	btfsc	7,7	;volatile
  7186  07D3  2B9D               	goto	l633
  7187                           
  7188                           ;Button_src.c: 580:             a = 0x00;
  7189  07D4  01D7               	clrf	_a
  7190                           
  7191                           ;Button_src.c: 581:             c = 0x00;
  7192  07D5  01D5               	clrf	_c
  7193                           
  7194                           ;Button_src.c: 582:             day_hex = 0x00;
  7195  07D6  01D4               	clrf	_day_hex
  7196                           
  7197                           ;Button_src.c: 583:             x = 0;
  7198  07D7  01BF               	clrf	_x
  7199  07D8  01C0               	clrf	_x+1
  7200                           
  7201                           ;Button_src.c: 584:             y = 0;
  7202  07D9  01BD               	clrf	_y
  7203  07DA  01BE               	clrf	_y+1
  7204                           
  7205                           ;Button_src.c: 585:             w = 0;
  7206  07DB  01C1               	clrf	_w
  7207  07DC  01C2               	clrf	_w+1
  7208                           
  7209                           ;Button_src.c: 586:             t = 0;
  7210  07DD  01C3               	clrf	_t
  7211  07DE  01C4               	clrf	_t+1
  7212                           
  7213                           ;Button_src.c: 587:             day_high = 0;
  7214  07DF  01B7               	clrf	_day_high
  7215  07E0  01B8               	clrf	_day_high+1
  7216                           
  7217                           ;Button_src.c: 588:             day_low = 0;
  7218  07E1  01B9               	clrf	_day_low
  7219  07E2  01BA               	clrf	_day_low+1
  7220                           
  7221                           ;Button_src.c: 589:             write_cmd(0x1);
  7222  07E3  3001               	movlw	1
  7223  07E4  160A  118A  2536   	fcall	_write_cmd
  7224                           
  7225                           ;Button_src.c: 590:             break;
  7226  07E7  0008               	return
  7227  07E8                     __end_of_date_settings:	
  7228                           
  7229                           	psect	text30
  7230  1536                     __ptext30:	
  7231 ;; *************** function _write_cmd *****************
  7232 ;; Defined at:
  7233 ;;		line 41 in file "LCD_src.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  x               1    wreg     unsigned char 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  x               1    2[COMMON] unsigned char 
  7238 ;;  i               2    0        int 
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  1    wreg      void 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 300/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7248 ;;      Params:         0       0       0       0       0
  7249 ;;      Locals:         1       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0
  7251 ;;      Totals:         1       0       0       0       0
  7252 ;;Total ram usage:        1 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; Hardware stack levels required when called:    1
  7255 ;; This function calls:
  7256 ;;		_delay_screen
  7257 ;; This function is called by:
  7258 ;;		_main
  7259 ;;		_lcd_init
  7260 ;;		_thermometer_threshhold_settings
  7261 ;;		_time_settings
  7262 ;;		_date_settings
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           
  7266                           
  7267                           ;psect for function _write_cmd
  7268  1536                     _write_cmd:	
  7269                           
  7270                           ;incstack = 0
  7271                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7272                           ;write_cmd@x stored from wreg
  7273  1536  00F2               	movwf	write_cmd@x
  7274                           
  7275                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  7276  1537  1283               	bcf	3,5	;RP0=0, select bank0
  7277  1538  1303               	bcf	3,6	;RP1=0, select bank0
  7278  1539  1285               	bcf	5,5	;volatile
  7279                           
  7280                           ;LCD_src.c: 45:  RA4=0;
  7281  153A  1205               	bcf	5,4	;volatile
  7282                           
  7283                           ;LCD_src.c: 46:  RA3=0;
  7284  153B  1185               	bcf	5,3	;volatile
  7285                           
  7286                           ;LCD_src.c: 47:  delay_screen();
  7287  153C  160A  118A  24F7  160A  118A  	fcall	_delay_screen
  7288                           
  7289                           ;LCD_src.c: 48:  RA3=1;
  7290  1541  1283               	bcf	3,5	;RP0=0, select bank0
  7291  1542  1303               	bcf	3,6	;RP1=0, select bank0
  7292  1543  1585               	bsf	5,3	;volatile
  7293                           
  7294                           ;LCD_src.c: 49:  PORTD=x;
  7295  1544  0872               	movf	write_cmd@x,w
  7296  1545  0088               	movwf	8	;volatile
  7297                           
  7298                           ;LCD_src.c: 50:  delay_screen();
  7299  1546  160A  118A  24F7   	fcall	_delay_screen
  7300                           
  7301                           ;LCD_src.c: 51:  RA3=0;
  7302  1549  1283               	bcf	3,5	;RP0=0, select bank0
  7303  154A  1303               	bcf	3,6	;RP1=0, select bank0
  7304  154B  1185               	bcf	5,3	;volatile
  7305  154C  0008               	return
  7306  154D                     __end_of_write_cmd:	
  7307                           
  7308                           	psect	text31
  7309  151F                     __ptext31:	
  7310 ;; *************** function _write_char *****************
  7311 ;; Defined at:
  7312 ;;		line 28 in file "LCD_src.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  x               1    wreg     unsigned char 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  x               1    2[COMMON] unsigned char 
  7317 ;;  i               2    0        int 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  1    wreg      void 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 300/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7327 ;;      Params:         0       0       0       0       0
  7328 ;;      Locals:         1       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0
  7330 ;;      Totals:         1       0       0       0       0
  7331 ;;Total ram usage:        1 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:    1
  7334 ;; This function calls:
  7335 ;;		_delay_screen
  7336 ;; This function is called by:
  7337 ;;		_main
  7338 ;;		_display_temp
  7339 ;;		_display_clock
  7340 ;;		_display_date
  7341 ;;		_thermometer_threshhold_settings
  7342 ;;		_time_settings
  7343 ;;		_date_settings
  7344 ;;		_set_upper_threshold
  7345 ;;		_set_lower_threshold
  7346 ;;		_display_day
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _write_char
  7352  151F                     _write_char:	
  7353                           
  7354                           ;incstack = 0
  7355                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7356                           ;write_char@x stored from wreg
  7357  151F  00F2               	movwf	write_char@x
  7358                           
  7359                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  7360  1520  1283               	bcf	3,5	;RP0=0, select bank0
  7361  1521  1303               	bcf	3,6	;RP1=0, select bank0
  7362  1522  1685               	bsf	5,5	;volatile
  7363                           
  7364                           ;LCD_src.c: 32:  RA4=0;
  7365  1523  1205               	bcf	5,4	;volatile
  7366                           
  7367                           ;LCD_src.c: 33:  RA3=0;
  7368  1524  1185               	bcf	5,3	;volatile
  7369                           
  7370                           ;LCD_src.c: 34:  delay_screen();
  7371  1525  160A  118A  24F7  160A  118A  	fcall	_delay_screen
  7372                           
  7373                           ;LCD_src.c: 35:  RA3=1;
  7374  152A  1283               	bcf	3,5	;RP0=0, select bank0
  7375  152B  1303               	bcf	3,6	;RP1=0, select bank0
  7376  152C  1585               	bsf	5,3	;volatile
  7377                           
  7378                           ;LCD_src.c: 36:  PORTD= x;
  7379  152D  0872               	movf	write_char@x,w
  7380  152E  0088               	movwf	8	;volatile
  7381                           
  7382                           ;LCD_src.c: 37:  delay_screen();
  7383  152F  160A  118A  24F7   	fcall	_delay_screen
  7384                           
  7385                           ;LCD_src.c: 38:  RA3=0;
  7386  1532  1283               	bcf	3,5	;RP0=0, select bank0
  7387  1533  1303               	bcf	3,6	;RP1=0, select bank0
  7388  1534  1185               	bcf	5,3	;volatile
  7389  1535  0008               	return
  7390  1536                     __end_of_write_char:	
  7391                           
  7392                           	psect	text32
  7393  14F7                     __ptext32:	
  7394 ;; *************** function _delay_screen *****************
  7395 ;; Defined at:
  7396 ;;		line 70 in file "LCD_src.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;		None
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  i               2    0[COMMON] int 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, btemp+1
  7405 ;; Tracked objects:
  7406 ;;		On entry : 300/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7410 ;;      Params:         0       0       0       0       0
  7411 ;;      Locals:         2       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0
  7413 ;;      Totals:         2       0       0       0       0
  7414 ;;Total ram usage:        2 bytes
  7415 ;; Hardware stack levels used:    1
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_lcd_init
  7420 ;;		_write_char
  7421 ;;		_write_cmd
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           
  7426                           ;psect for function _delay_screen
  7427  14F7                     _delay_screen:	
  7428                           
  7429                           ;LCD_src.c: 71:     int i;;LCD_src.c: 72:  for(i=0;i<5;i++);
  7430                           
  7431                           ;incstack = 0
  7432                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  7433  14F7  01F0               	clrf	delay_screen@i
  7434  14F8  01F1               	clrf	delay_screen@i+1
  7435  14F9                     l3039:	
  7436  14F9  3001               	movlw	1
  7437  14FA  07F0               	addwf	delay_screen@i,f
  7438  14FB  1803               	skipnc
  7439  14FC  0AF1               	incf	delay_screen@i+1,f
  7440  14FD  3000               	movlw	0
  7441  14FE  07F1               	addwf	delay_screen@i+1,f
  7442  14FF  0871               	movf	delay_screen@i+1,w
  7443  1500  3A80               	xorlw	128
  7444  1501  00FF               	movwf	127
  7445  1502  3080               	movlw	128
  7446  1503  027F               	subwf	127,w
  7447  1504  1D03               	skipz
  7448  1505  2D08               	goto	u2045
  7449  1506  3005               	movlw	5
  7450  1507  0270               	subwf	delay_screen@i,w
  7451  1508                     u2045:	
  7452  1508  1803               	btfsc	3,0
  7453  1509  0008               	return
  7454  150A  2CF9               	goto	l3039
  7455  150B                     __end_of_delay_screen:	
  7456                           
  7457                           	psect	text33
  7458  14A4                     __ptext33:	
  7459 ;; *************** function _time_date_hex_terminator *****************
  7460 ;; Defined at:
  7461 ;;		line 91 in file "math_src.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  val             1    wreg     unsigned char 
  7464 ;;  limiter         1    0[COMMON] unsigned char 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  val             1    3[COMMON] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      unsigned char 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2
  7471 ;; Tracked objects:
  7472 ;;		On entry : 300/0
  7473 ;;		On exit  : 300/0
  7474 ;;		Unchanged: 300/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7476 ;;      Params:         1       0       0       0       0
  7477 ;;      Locals:         1       0       0       0       0
  7478 ;;      Temps:          2       0       0       0       0
  7479 ;;      Totals:         4       0       0       0       0
  7480 ;;Total ram usage:        4 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_time_settings
  7486 ;;		_date_settings
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           
  7491                           ;psect for function _time_date_hex_terminator
  7492  14A4                     _time_date_hex_terminator:	
  7493                           
  7494                           ;incstack = 0
  7495                           ; Regs used in _time_date_hex_terminator: [wreg+status,2]
  7496                           ;time_date_hex_terminator@val stored from wreg
  7497  14A4  00F3               	movwf	time_date_hex_terminator@val
  7498                           
  7499                           ;math_src.c: 92:     if((val + '0') == limiter){
  7500  14A5  0873               	movf	time_date_hex_terminator@val,w
  7501  14A6  3E30               	addlw	48
  7502  14A7  00F1               	movwf	??_time_date_hex_terminator
  7503  14A8  3000               	movlw	0
  7504  14A9  1803               	skipnc
  7505  14AA  3001               	movlw	1
  7506  14AB  00F2               	movwf	??_time_date_hex_terminator+1
  7507  14AC  0870               	movf	time_date_hex_terminator@limiter,w
  7508  14AD  0671               	xorwf	??_time_date_hex_terminator,w
  7509  14AE  0472               	iorwf	??_time_date_hex_terminator+1,w
  7510  14AF  1903               	btfsc	3,2
  7511                           
  7512                           ;math_src.c: 93:     val = 0x00;
  7513  14B0  01F3               	clrf	time_date_hex_terminator@val
  7514                           
  7515                           ;math_src.c: 95:     return val;
  7516  14B1  0873               	movf	time_date_hex_terminator@val,w
  7517  14B2  0008               	return
  7518  14B3                     __end_of_time_date_hex_terminator:	
  7519                           
  7520                           	psect	text34
  7521  0C53                     __ptext34:	
  7522 ;; *************** function _time_date_delimiter *****************
  7523 ;; Defined at:
  7524 ;;		line 32 in file "math_src.c"
  7525 ;; Parameters:    Size  Location     Type
  7526 ;;  val             1    wreg     unsigned char 
  7527 ;;  hex             1    0[COMMON] unsigned char 
  7528 ;;  limiter         1    1[COMMON] unsigned char 
  7529 ;;  type            2    2[COMMON] int 
  7530 ;; Auto vars:     Size  Location     Type
  7531 ;;  val             1    6[COMMON] unsigned char 
  7532 ;; Return value:  Size  Location     Type
  7533 ;;                  1    wreg      unsigned char 
  7534 ;; Registers used:
  7535 ;;		wreg, status,2, status,0
  7536 ;; Tracked objects:
  7537 ;;		On entry : 300/0
  7538 ;;		On exit  : 300/0
  7539 ;;		Unchanged: 0/0
  7540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7541 ;;      Params:         4       0       0       0       0
  7542 ;;      Locals:         1       0       0       0       0
  7543 ;;      Temps:          2       0       0       0       0
  7544 ;;      Totals:         7       0       0       0       0
  7545 ;;Total ram usage:        7 bytes
  7546 ;; Hardware stack levels used:    1
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_time_settings
  7551 ;;		_date_settings
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           
  7556                           ;psect for function _time_date_delimiter
  7557  0C53                     _time_date_delimiter:	
  7558                           
  7559                           ;incstack = 0
  7560                           ; Regs used in _time_date_delimiter: [wreg+status,2+status,0]
  7561                           ;time_date_delimiter@val stored from wreg
  7562  0C53  00F6               	movwf	time_date_delimiter@val
  7563                           
  7564                           ;math_src.c: 33:     if((val + '0') == limiter){
  7565  0C54  0876               	movf	time_date_delimiter@val,w
  7566  0C55  3E30               	addlw	48
  7567  0C56  00F4               	movwf	??_time_date_delimiter
  7568  0C57  3000               	movlw	0
  7569  0C58  1803               	skipnc
  7570  0C59  3001               	movlw	1
  7571  0C5A  00F5               	movwf	??_time_date_delimiter+1
  7572  0C5B  0871               	movf	time_date_delimiter@limiter,w
  7573  0C5C  0674               	xorwf	??_time_date_delimiter,w
  7574  0C5D  0475               	iorwf	??_time_date_delimiter+1,w
  7575  0C5E  1D03               	skipz
  7576  0C5F  2DA8               	goto	l3445
  7577                           
  7578                           ;math_src.c: 34:     val = hex;
  7579  0C60  0870               	movf	time_date_delimiter@hex,w
  7580  0C61  00F4               	movwf	??_time_date_delimiter
  7581  0C62  0874               	movf	??_time_date_delimiter,w
  7582  0C63  00F6               	movwf	time_date_delimiter@val
  7583                           
  7584                           ;math_src.c: 35:     stats=0;
  7585  0C64  01B3               	clrf	_stats
  7586  0C65  01B4               	clrf	_stats+1
  7587                           
  7588                           ;math_src.c: 36:     if(limiter == '9' && type ==1)
  7589  0C66  3039               	movlw	57
  7590  0C67  0671               	xorwf	time_date_delimiter@limiter,w
  7591  0C68  1D03               	btfss	3,2
  7592  0C69  2C72               	goto	l3299
  7593  0C6A  0372               	decf	time_date_delimiter@type,w
  7594  0C6B  0473               	iorwf	time_date_delimiter@type+1,w
  7595  0C6C  1D03               	btfss	3,2
  7596  0C6D  2C72               	goto	l3299
  7597                           
  7598                           ;math_src.c: 37:         prev_hex= 0x09;
  7599  0C6E  3009               	movlw	9
  7600  0C6F  00F4               	movwf	??_time_date_delimiter
  7601  0C70  0874               	movf	??_time_date_delimiter,w
  7602  0C71  00D2               	movwf	_prev_hex
  7603  0C72                     l3299:	
  7604                           
  7605                           ;math_src.c: 38:     if(limiter == 'J'&& type ==1)
  7606  0C72  304A               	movlw	74
  7607  0C73  0671               	xorwf	time_date_delimiter@limiter,w
  7608  0C74  1D03               	btfss	3,2
  7609  0C75  2C7E               	goto	l3305
  7610  0C76  0372               	decf	time_date_delimiter@type,w
  7611  0C77  0473               	iorwf	time_date_delimiter@type+1,w
  7612  0C78  1D03               	btfss	3,2
  7613  0C79  2C7E               	goto	l3305
  7614                           
  7615                           ;math_src.c: 39:         prev_hex = 0x19;
  7616  0C7A  3019               	movlw	25
  7617  0C7B  00F4               	movwf	??_time_date_delimiter
  7618  0C7C  0874               	movf	??_time_date_delimiter,w
  7619  0C7D  00D2               	movwf	_prev_hex
  7620  0C7E                     l3305:	
  7621                           
  7622                           ;math_src.c: 40:     if(limiter == 'Y'&& type ==1)
  7623  0C7E  3059               	movlw	89
  7624  0C7F  0671               	xorwf	time_date_delimiter@limiter,w
  7625  0C80  1D03               	btfss	3,2
  7626  0C81  2C8A               	goto	l3311
  7627  0C82  0372               	decf	time_date_delimiter@type,w
  7628  0C83  0473               	iorwf	time_date_delimiter@type+1,w
  7629  0C84  1D03               	btfss	3,2
  7630  0C85  2C8A               	goto	l3311
  7631                           
  7632                           ;math_src.c: 41:         prev_hex = 0x29;
  7633  0C86  3029               	movlw	41
  7634  0C87  00F4               	movwf	??_time_date_delimiter
  7635  0C88  0874               	movf	??_time_date_delimiter,w
  7636  0C89  00D2               	movwf	_prev_hex
  7637  0C8A                     l3311:	
  7638                           
  7639                           ;math_src.c: 42:     if(limiter == 'j'&& type ==1)
  7640  0C8A  306A               	movlw	106
  7641  0C8B  0671               	xorwf	time_date_delimiter@limiter,w
  7642  0C8C  1D03               	btfss	3,2
  7643  0C8D  2C96               	goto	l3317
  7644  0C8E  0372               	decf	time_date_delimiter@type,w
  7645  0C8F  0473               	iorwf	time_date_delimiter@type+1,w
  7646  0C90  1D03               	btfss	3,2
  7647  0C91  2C96               	goto	l3317
  7648                           
  7649                           ;math_src.c: 43:         prev_hex =0x39;
  7650  0C92  3039               	movlw	57
  7651  0C93  00F4               	movwf	??_time_date_delimiter
  7652  0C94  0874               	movf	??_time_date_delimiter,w
  7653  0C95  00D2               	movwf	_prev_hex
  7654  0C96                     l3317:	
  7655                           
  7656                           ;math_src.c: 44:     if(limiter == 'z'&& type ==1)
  7657  0C96  307A               	movlw	122
  7658  0C97  0671               	xorwf	time_date_delimiter@limiter,w
  7659  0C98  1D03               	btfss	3,2
  7660  0C99  2CA2               	goto	l3323
  7661  0C9A  0372               	decf	time_date_delimiter@type,w
  7662  0C9B  0473               	iorwf	time_date_delimiter@type+1,w
  7663  0C9C  1D03               	btfss	3,2
  7664  0C9D  2CA2               	goto	l3323
  7665                           
  7666                           ;math_src.c: 45:         prev_hex = 0x49;
  7667  0C9E  3049               	movlw	73
  7668  0C9F  00F4               	movwf	??_time_date_delimiter
  7669  0CA0  0874               	movf	??_time_date_delimiter,w
  7670  0CA1  00D2               	movwf	_prev_hex
  7671  0CA2                     l3323:	
  7672                           
  7673                           ;math_src.c: 46:     if(limiter == '9' && type ==2)
  7674  0CA2  3039               	movlw	57
  7675  0CA3  0671               	xorwf	time_date_delimiter@limiter,w
  7676  0CA4  1D03               	btfss	3,2
  7677  0CA5  2CAF               	goto	l3329
  7678  0CA6  3002               	movlw	2
  7679  0CA7  0672               	xorwf	time_date_delimiter@type,w
  7680  0CA8  0473               	iorwf	time_date_delimiter@type+1,w
  7681  0CA9  1D03               	btfss	3,2
  7682  0CAA  2CAF               	goto	l3329
  7683                           
  7684                           ;math_src.c: 47:         prev_hex_day= 0x09;
  7685  0CAB  3009               	movlw	9
  7686  0CAC  00F4               	movwf	??_time_date_delimiter
  7687  0CAD  0874               	movf	??_time_date_delimiter,w
  7688  0CAE  00D1               	movwf	_prev_hex_day
  7689  0CAF                     l3329:	
  7690                           
  7691                           ;math_src.c: 48:     if(limiter == 'J'&& type ==2)
  7692  0CAF  304A               	movlw	74
  7693  0CB0  0671               	xorwf	time_date_delimiter@limiter,w
  7694  0CB1  1D03               	btfss	3,2
  7695  0CB2  2CBC               	goto	l3335
  7696  0CB3  3002               	movlw	2
  7697  0CB4  0672               	xorwf	time_date_delimiter@type,w
  7698  0CB5  0473               	iorwf	time_date_delimiter@type+1,w
  7699  0CB6  1D03               	btfss	3,2
  7700  0CB7  2CBC               	goto	l3335
  7701                           
  7702                           ;math_src.c: 49:         prev_hex_day = 0x19;
  7703  0CB8  3019               	movlw	25
  7704  0CB9  00F4               	movwf	??_time_date_delimiter
  7705  0CBA  0874               	movf	??_time_date_delimiter,w
  7706  0CBB  00D1               	movwf	_prev_hex_day
  7707  0CBC                     l3335:	
  7708                           
  7709                           ;math_src.c: 50:     if(limiter == 'Y'&& type ==2)
  7710  0CBC  3059               	movlw	89
  7711  0CBD  0671               	xorwf	time_date_delimiter@limiter,w
  7712  0CBE  1D03               	btfss	3,2
  7713  0CBF  2CC9               	goto	l3341
  7714  0CC0  3002               	movlw	2
  7715  0CC1  0672               	xorwf	time_date_delimiter@type,w
  7716  0CC2  0473               	iorwf	time_date_delimiter@type+1,w
  7717  0CC3  1D03               	btfss	3,2
  7718  0CC4  2CC9               	goto	l3341
  7719                           
  7720                           ;math_src.c: 51:         prev_hex_day = 0x29;
  7721  0CC5  3029               	movlw	41
  7722  0CC6  00F4               	movwf	??_time_date_delimiter
  7723  0CC7  0874               	movf	??_time_date_delimiter,w
  7724  0CC8  00D1               	movwf	_prev_hex_day
  7725  0CC9                     l3341:	
  7726                           
  7727                           ;math_src.c: 52:     if(limiter == 'j'&& type ==2)
  7728  0CC9  306A               	movlw	106
  7729  0CCA  0671               	xorwf	time_date_delimiter@limiter,w
  7730  0CCB  1D03               	btfss	3,2
  7731  0CCC  2CD6               	goto	l3347
  7732  0CCD  3002               	movlw	2
  7733  0CCE  0672               	xorwf	time_date_delimiter@type,w
  7734  0CCF  0473               	iorwf	time_date_delimiter@type+1,w
  7735  0CD0  1D03               	btfss	3,2
  7736  0CD1  2CD6               	goto	l3347
  7737                           
  7738                           ;math_src.c: 53:         prev_hex_day =0x39;
  7739  0CD2  3039               	movlw	57
  7740  0CD3  00F4               	movwf	??_time_date_delimiter
  7741  0CD4  0874               	movf	??_time_date_delimiter,w
  7742  0CD5  00D1               	movwf	_prev_hex_day
  7743  0CD6                     l3347:	
  7744                           
  7745                           ;math_src.c: 54:     if(limiter == 'z'&& type ==2)
  7746  0CD6  307A               	movlw	122
  7747  0CD7  0671               	xorwf	time_date_delimiter@limiter,w
  7748  0CD8  1D03               	btfss	3,2
  7749  0CD9  2CE3               	goto	l3353
  7750  0CDA  3002               	movlw	2
  7751  0CDB  0672               	xorwf	time_date_delimiter@type,w
  7752  0CDC  0473               	iorwf	time_date_delimiter@type+1,w
  7753  0CDD  1D03               	btfss	3,2
  7754  0CDE  2CE3               	goto	l3353
  7755                           
  7756                           ;math_src.c: 55:         prev_hex_day = 0x49;
  7757  0CDF  3049               	movlw	73
  7758  0CE0  00F4               	movwf	??_time_date_delimiter
  7759  0CE1  0874               	movf	??_time_date_delimiter,w
  7760  0CE2  00D1               	movwf	_prev_hex_day
  7761  0CE3                     l3353:	
  7762                           
  7763                           ;math_src.c: 56:     if(limiter == '9' && type ==3)
  7764  0CE3  3039               	movlw	57
  7765  0CE4  0671               	xorwf	time_date_delimiter@limiter,w
  7766  0CE5  1D03               	btfss	3,2
  7767  0CE6  2CF0               	goto	l3359
  7768  0CE7  3003               	movlw	3
  7769  0CE8  0672               	xorwf	time_date_delimiter@type,w
  7770  0CE9  0473               	iorwf	time_date_delimiter@type+1,w
  7771  0CEA  1D03               	btfss	3,2
  7772  0CEB  2CF0               	goto	l3359
  7773                           
  7774                           ;math_src.c: 57:         prev_hex_year= 0x09;
  7775  0CEC  3009               	movlw	9
  7776  0CED  00F4               	movwf	??_time_date_delimiter
  7777  0CEE  0874               	movf	??_time_date_delimiter,w
  7778  0CEF  00D0               	movwf	_prev_hex_year
  7779  0CF0                     l3359:	
  7780                           
  7781                           ;math_src.c: 58:     if(limiter == 'J'&& type ==3)
  7782  0CF0  304A               	movlw	74
  7783  0CF1  0671               	xorwf	time_date_delimiter@limiter,w
  7784  0CF2  1D03               	btfss	3,2
  7785  0CF3  2CFD               	goto	l3365
  7786  0CF4  3003               	movlw	3
  7787  0CF5  0672               	xorwf	time_date_delimiter@type,w
  7788  0CF6  0473               	iorwf	time_date_delimiter@type+1,w
  7789  0CF7  1D03               	btfss	3,2
  7790  0CF8  2CFD               	goto	l3365
  7791                           
  7792                           ;math_src.c: 59:         prev_hex_year = 0x19;
  7793  0CF9  3019               	movlw	25
  7794  0CFA  00F4               	movwf	??_time_date_delimiter
  7795  0CFB  0874               	movf	??_time_date_delimiter,w
  7796  0CFC  00D0               	movwf	_prev_hex_year
  7797  0CFD                     l3365:	
  7798                           
  7799                           ;math_src.c: 60:     if(limiter == 'Y'&& type ==3)
  7800  0CFD  3059               	movlw	89
  7801  0CFE  0671               	xorwf	time_date_delimiter@limiter,w
  7802  0CFF  1D03               	btfss	3,2
  7803  0D00  2D0A               	goto	l3371
  7804  0D01  3003               	movlw	3
  7805  0D02  0672               	xorwf	time_date_delimiter@type,w
  7806  0D03  0473               	iorwf	time_date_delimiter@type+1,w
  7807  0D04  1D03               	btfss	3,2
  7808  0D05  2D0A               	goto	l3371
  7809                           
  7810                           ;math_src.c: 61:         prev_hex_year = 0x29;
  7811  0D06  3029               	movlw	41
  7812  0D07  00F4               	movwf	??_time_date_delimiter
  7813  0D08  0874               	movf	??_time_date_delimiter,w
  7814  0D09  00D0               	movwf	_prev_hex_year
  7815  0D0A                     l3371:	
  7816                           
  7817                           ;math_src.c: 62:     if(limiter == 'j'&& type ==3)
  7818  0D0A  306A               	movlw	106
  7819  0D0B  0671               	xorwf	time_date_delimiter@limiter,w
  7820  0D0C  1D03               	btfss	3,2
  7821  0D0D  2D17               	goto	l3377
  7822  0D0E  3003               	movlw	3
  7823  0D0F  0672               	xorwf	time_date_delimiter@type,w
  7824  0D10  0473               	iorwf	time_date_delimiter@type+1,w
  7825  0D11  1D03               	btfss	3,2
  7826  0D12  2D17               	goto	l3377
  7827                           
  7828                           ;math_src.c: 63:         prev_hex_year =0x39;
  7829  0D13  3039               	movlw	57
  7830  0D14  00F4               	movwf	??_time_date_delimiter
  7831  0D15  0874               	movf	??_time_date_delimiter,w
  7832  0D16  00D0               	movwf	_prev_hex_year
  7833  0D17                     l3377:	
  7834                           
  7835                           ;math_src.c: 64:     if(limiter == 'z'&& type ==3)
  7836  0D17  307A               	movlw	122
  7837  0D18  0671               	xorwf	time_date_delimiter@limiter,w
  7838  0D19  1D03               	btfss	3,2
  7839  0D1A  2D24               	goto	l3383
  7840  0D1B  3003               	movlw	3
  7841  0D1C  0672               	xorwf	time_date_delimiter@type,w
  7842  0D1D  0473               	iorwf	time_date_delimiter@type+1,w
  7843  0D1E  1D03               	btfss	3,2
  7844  0D1F  2D24               	goto	l3383
  7845                           
  7846                           ;math_src.c: 65:         prev_hex_year = 0x49;
  7847  0D20  3049               	movlw	73
  7848  0D21  00F4               	movwf	??_time_date_delimiter
  7849  0D22  0874               	movf	??_time_date_delimiter,w
  7850  0D23  00D0               	movwf	_prev_hex_year
  7851  0D24                     l3383:	
  7852                           
  7853                           ;math_src.c: 66:      if(limiter == '9' && type ==4)
  7854  0D24  3039               	movlw	57
  7855  0D25  0671               	xorwf	time_date_delimiter@limiter,w
  7856  0D26  1D03               	btfss	3,2
  7857  0D27  2D31               	goto	l3389
  7858  0D28  3004               	movlw	4
  7859  0D29  0672               	xorwf	time_date_delimiter@type,w
  7860  0D2A  0473               	iorwf	time_date_delimiter@type+1,w
  7861  0D2B  1D03               	btfss	3,2
  7862  0D2C  2D31               	goto	l3389
  7863                           
  7864                           ;math_src.c: 67:         prev_hex_hours= 0x09;
  7865  0D2D  3009               	movlw	9
  7866  0D2E  00F4               	movwf	??_time_date_delimiter
  7867  0D2F  0874               	movf	??_time_date_delimiter,w
  7868  0D30  00CF               	movwf	_prev_hex_hours
  7869  0D31                     l3389:	
  7870                           
  7871                           ;math_src.c: 68:     if(limiter == 'J'&& type ==4)
  7872  0D31  304A               	movlw	74
  7873  0D32  0671               	xorwf	time_date_delimiter@limiter,w
  7874  0D33  1D03               	btfss	3,2
  7875  0D34  2D3E               	goto	l3395
  7876  0D35  3004               	movlw	4
  7877  0D36  0672               	xorwf	time_date_delimiter@type,w
  7878  0D37  0473               	iorwf	time_date_delimiter@type+1,w
  7879  0D38  1D03               	btfss	3,2
  7880  0D39  2D3E               	goto	l3395
  7881                           
  7882                           ;math_src.c: 69:         prev_hex_hours = 0x19;
  7883  0D3A  3019               	movlw	25
  7884  0D3B  00F4               	movwf	??_time_date_delimiter
  7885  0D3C  0874               	movf	??_time_date_delimiter,w
  7886  0D3D  00CF               	movwf	_prev_hex_hours
  7887  0D3E                     l3395:	
  7888                           
  7889                           ;math_src.c: 70:     if(limiter == 'Y'&& type ==4)
  7890  0D3E  3059               	movlw	89
  7891  0D3F  0671               	xorwf	time_date_delimiter@limiter,w
  7892  0D40  1D03               	btfss	3,2
  7893  0D41  2D4B               	goto	l3401
  7894  0D42  3004               	movlw	4
  7895  0D43  0672               	xorwf	time_date_delimiter@type,w
  7896  0D44  0473               	iorwf	time_date_delimiter@type+1,w
  7897  0D45  1D03               	btfss	3,2
  7898  0D46  2D4B               	goto	l3401
  7899                           
  7900                           ;math_src.c: 71:         prev_hex_hours = 0x29;
  7901  0D47  3029               	movlw	41
  7902  0D48  00F4               	movwf	??_time_date_delimiter
  7903  0D49  0874               	movf	??_time_date_delimiter,w
  7904  0D4A  00CF               	movwf	_prev_hex_hours
  7905  0D4B                     l3401:	
  7906                           
  7907                           ;math_src.c: 72:     if(limiter == 'j'&& type ==4)
  7908  0D4B  306A               	movlw	106
  7909  0D4C  0671               	xorwf	time_date_delimiter@limiter,w
  7910  0D4D  1D03               	btfss	3,2
  7911  0D4E  2D58               	goto	l3407
  7912  0D4F  3004               	movlw	4
  7913  0D50  0672               	xorwf	time_date_delimiter@type,w
  7914  0D51  0473               	iorwf	time_date_delimiter@type+1,w
  7915  0D52  1D03               	btfss	3,2
  7916  0D53  2D58               	goto	l3407
  7917                           
  7918                           ;math_src.c: 73:         prev_hex_hours =0x39;
  7919  0D54  3039               	movlw	57
  7920  0D55  00F4               	movwf	??_time_date_delimiter
  7921  0D56  0874               	movf	??_time_date_delimiter,w
  7922  0D57  00CF               	movwf	_prev_hex_hours
  7923  0D58                     l3407:	
  7924                           
  7925                           ;math_src.c: 74:     if(limiter == 'z'&& type ==4)
  7926  0D58  307A               	movlw	122
  7927  0D59  0671               	xorwf	time_date_delimiter@limiter,w
  7928  0D5A  1D03               	btfss	3,2
  7929  0D5B  2D65               	goto	l3413
  7930  0D5C  3004               	movlw	4
  7931  0D5D  0672               	xorwf	time_date_delimiter@type,w
  7932  0D5E  0473               	iorwf	time_date_delimiter@type+1,w
  7933  0D5F  1D03               	btfss	3,2
  7934  0D60  2D65               	goto	l3413
  7935                           
  7936                           ;math_src.c: 75:         prev_hex_hours = 0x49;
  7937  0D61  3049               	movlw	73
  7938  0D62  00F4               	movwf	??_time_date_delimiter
  7939  0D63  0874               	movf	??_time_date_delimiter,w
  7940  0D64  00CF               	movwf	_prev_hex_hours
  7941  0D65                     l3413:	
  7942                           
  7943                           ;math_src.c: 76:      if(limiter == '9' && type ==5)
  7944  0D65  3039               	movlw	57
  7945  0D66  0671               	xorwf	time_date_delimiter@limiter,w
  7946  0D67  1D03               	btfss	3,2
  7947  0D68  2D72               	goto	l3419
  7948  0D69  3005               	movlw	5
  7949  0D6A  0672               	xorwf	time_date_delimiter@type,w
  7950  0D6B  0473               	iorwf	time_date_delimiter@type+1,w
  7951  0D6C  1D03               	btfss	3,2
  7952  0D6D  2D72               	goto	l3419
  7953                           
  7954                           ;math_src.c: 77:         prev_hex_mins= 0x09;
  7955  0D6E  3009               	movlw	9
  7956  0D6F  00F4               	movwf	??_time_date_delimiter
  7957  0D70  0874               	movf	??_time_date_delimiter,w
  7958  0D71  00CE               	movwf	_prev_hex_mins
  7959  0D72                     l3419:	
  7960                           
  7961                           ;math_src.c: 78:     if(limiter == 'J'&& type ==5)
  7962  0D72  304A               	movlw	74
  7963  0D73  0671               	xorwf	time_date_delimiter@limiter,w
  7964  0D74  1D03               	btfss	3,2
  7965  0D75  2D7F               	goto	l3425
  7966  0D76  3005               	movlw	5
  7967  0D77  0672               	xorwf	time_date_delimiter@type,w
  7968  0D78  0473               	iorwf	time_date_delimiter@type+1,w
  7969  0D79  1D03               	btfss	3,2
  7970  0D7A  2D7F               	goto	l3425
  7971                           
  7972                           ;math_src.c: 79:         prev_hex_mins = 0x19;
  7973  0D7B  3019               	movlw	25
  7974  0D7C  00F4               	movwf	??_time_date_delimiter
  7975  0D7D  0874               	movf	??_time_date_delimiter,w
  7976  0D7E  00CE               	movwf	_prev_hex_mins
  7977  0D7F                     l3425:	
  7978                           
  7979                           ;math_src.c: 80:     if(limiter == 'Y'&& type ==5)
  7980  0D7F  3059               	movlw	89
  7981  0D80  0671               	xorwf	time_date_delimiter@limiter,w
  7982  0D81  1D03               	btfss	3,2
  7983  0D82  2D8C               	goto	l3431
  7984  0D83  3005               	movlw	5
  7985  0D84  0672               	xorwf	time_date_delimiter@type,w
  7986  0D85  0473               	iorwf	time_date_delimiter@type+1,w
  7987  0D86  1D03               	btfss	3,2
  7988  0D87  2D8C               	goto	l3431
  7989                           
  7990                           ;math_src.c: 81:         prev_hex_mins = 0x29;
  7991  0D88  3029               	movlw	41
  7992  0D89  00F4               	movwf	??_time_date_delimiter
  7993  0D8A  0874               	movf	??_time_date_delimiter,w
  7994  0D8B  00CE               	movwf	_prev_hex_mins
  7995  0D8C                     l3431:	
  7996                           
  7997                           ;math_src.c: 82:     if(limiter == 'j'&& type ==5)
  7998  0D8C  306A               	movlw	106
  7999  0D8D  0671               	xorwf	time_date_delimiter@limiter,w
  8000  0D8E  1D03               	btfss	3,2
  8001  0D8F  2D99               	goto	l3437
  8002  0D90  3005               	movlw	5
  8003  0D91  0672               	xorwf	time_date_delimiter@type,w
  8004  0D92  0473               	iorwf	time_date_delimiter@type+1,w
  8005  0D93  1D03               	btfss	3,2
  8006  0D94  2D99               	goto	l3437
  8007                           
  8008                           ;math_src.c: 83:         prev_hex_mins =0x39;
  8009  0D95  3039               	movlw	57
  8010  0D96  00F4               	movwf	??_time_date_delimiter
  8011  0D97  0874               	movf	??_time_date_delimiter,w
  8012  0D98  00CE               	movwf	_prev_hex_mins
  8013  0D99                     l3437:	
  8014                           
  8015                           ;math_src.c: 84:     if(limiter == 'z'&& type ==5)
  8016  0D99  307A               	movlw	122
  8017  0D9A  0671               	xorwf	time_date_delimiter@limiter,w
  8018  0D9B  1D03               	btfss	3,2
  8019  0D9C  2DA6               	goto	l3443
  8020  0D9D  3005               	movlw	5
  8021  0D9E  0672               	xorwf	time_date_delimiter@type,w
  8022  0D9F  0473               	iorwf	time_date_delimiter@type+1,w
  8023  0DA0  1D03               	btfss	3,2
  8024  0DA1  2DA6               	goto	l3443
  8025                           
  8026                           ;math_src.c: 85:         prev_hex_mins = 0x49;
  8027  0DA2  3049               	movlw	73
  8028  0DA3  00F4               	movwf	??_time_date_delimiter
  8029  0DA4  0874               	movf	??_time_date_delimiter,w
  8030  0DA5  00CE               	movwf	_prev_hex_mins
  8031  0DA6                     l3443:	
  8032                           
  8033                           ;math_src.c: 86:     val--;
  8034  0DA6  3001               	movlw	1
  8035  0DA7  02F6               	subwf	time_date_delimiter@val,f
  8036  0DA8                     l3445:	
  8037                           
  8038                           ;math_src.c: 88:     return val;
  8039  0DA8  0876               	movf	time_date_delimiter@val,w
  8040  0DA9  0008               	return
  8041  0DAA                     __end_of_time_date_delimiter:	
  8042                           
  8043                           	psect	text35
  8044  0006                     __ptext35:	
  8045 ;; *************** function _set_time *****************
  8046 ;; Defined at:
  8047 ;;		line 15 in file "clock_src.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  i               2    5[COMMON] int 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      void 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 300/0
  8058 ;;		On exit  : 300/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8061 ;;      Params:         0       0       0       0       0
  8062 ;;      Locals:         2       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0
  8064 ;;      Totals:         2       0       0       0       0
  8065 ;;Total ram usage:        2 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    1
  8068 ;; This function calls:
  8069 ;;		_time_write_1
  8070 ;; This function is called by:
  8071 ;;		_main
  8072 ;;		_time_settings
  8073 ;;		_date_settings
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _set_time
  8079  0006                     _set_time:	
  8080                           
  8081                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8085  0006  1686               	bsf	6,5	;volatile
  8086                           
  8087                           ;clock_src.c: 19:    time_write_1(0xbe);
  8088  0007  30BE               	movlw	190
  8089  0008  160A  118A  263A  120A  118A  	fcall	_time_write_1
  8090                           
  8091                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  8092  000D  01F5               	clrf	set_time@i
  8093  000E  01F6               	clrf	set_time@i+1
  8094  000F                     l3075:	
  8095                           
  8096                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  8097  000F  0875               	movf	set_time@i,w
  8098  0010  3EA0               	addlw	(low (_table| 0))& (0+255)
  8099  0011  0084               	movwf	4
  8100  0012  1383               	bcf	3,7	;select IRP bank1
  8101  0013  0800               	movf	0,w
  8102  0014  160A  118A  263A  120A  118A  	fcall	_time_write_1
  8103                           
  8104                           ;clock_src.c: 23:      }
  8105  0019  3001               	movlw	1
  8106  001A  07F5               	addwf	set_time@i,f
  8107  001B  1803               	skipnc
  8108  001C  0AF6               	incf	set_time@i+1,f
  8109  001D  3000               	movlw	0
  8110  001E  07F6               	addwf	set_time@i+1,f
  8111  001F  0876               	movf	set_time@i+1,w
  8112  0020  3A80               	xorlw	128
  8113  0021  00FF               	movwf	127
  8114  0022  3080               	movlw	128
  8115  0023  027F               	subwf	127,w
  8116  0024  1D03               	skipz
  8117  0025  2828               	goto	u2095
  8118  0026  3008               	movlw	8
  8119  0027  0275               	subwf	set_time@i,w
  8120  0028                     u2095:	
  8121  0028  1C03               	skipc
  8122  0029  280F               	goto	l3075
  8123                           
  8124                           ;clock_src.c: 24:    RB5=0;
  8125  002A  1283               	bcf	3,5	;RP0=0, select bank0
  8126  002B  1303               	bcf	3,6	;RP1=0, select bank0
  8127  002C  1286               	bcf	6,5	;volatile
  8128  002D  0008               	return
  8129  002E                     __end_of_set_time:	
  8130                           
  8131                           	psect	text36
  8132  163A                     __ptext36:	
  8133 ;; *************** function _time_write_1 *****************
  8134 ;; Defined at:
  8135 ;;		line 116 in file "clock_src.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  time_tx         1    wreg     unsigned char 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  time_tx         1    4[COMMON] unsigned char 
  8140 ;;  j               2    2[COMMON] int 
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  1    wreg      void 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0, btemp+1
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 300/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8150 ;;      Params:         0       0       0       0       0
  8151 ;;      Locals:         3       0       0       0       0
  8152 ;;      Temps:          2       0       0       0       0
  8153 ;;      Totals:         5       0       0       0       0
  8154 ;;Total ram usage:        5 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_ds1302_init
  8160 ;;		_set_time
  8161 ;;		_get_time
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function _time_write_1
  8167  163A                     _time_write_1:	
  8168                           
  8169                           ;incstack = 0
  8170                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  8171                           ;time_write_1@time_tx stored from wreg
  8172  163A  00F4               	movwf	time_write_1@time_tx
  8173                           
  8174                           ;clock_src.c: 116: void time_write_1(unsigned char time_tx);clock_src.c: 117: {;clock_sr
      +                          c.c: 118:     int j;;clock_src.c: 119:     for(j=0;j<8;j++)
  8175  163B  01F2               	clrf	time_write_1@j
  8176  163C  01F3               	clrf	time_write_1@j+1
  8177  163D                     l374:	
  8178                           
  8179                           ;clock_src.c: 120:    {;clock_src.c: 121:         RB4=0;
  8180  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8181  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8182  163F  1206               	bcf	6,4	;volatile
  8183                           
  8184                           ;clock_src.c: 122:         RB0=0;
  8185  1640  1006               	bcf	6,0	;volatile
  8186                           
  8187                           ;clock_src.c: 123:         if(time_tx&0x01)
  8188  1641  1874               	btfsc	time_write_1@time_tx,0
  8189                           
  8190                           ;clock_src.c: 124:           {;clock_src.c: 125:             RB4=1;
  8191  1642  1606               	bsf	6,4	;volatile
  8192                           
  8193                           ;clock_src.c: 127:         time_tx=time_tx>>1;
  8194  1643  0874               	movf	time_write_1@time_tx,w
  8195  1644  00F0               	movwf	??_time_write_1
  8196  1645  1003               	clrc
  8197  1646  0C70               	rrf	??_time_write_1,w
  8198  1647  00F1               	movwf	??_time_write_1+1
  8199  1648  0871               	movf	??_time_write_1+1,w
  8200  1649  00F4               	movwf	time_write_1@time_tx
  8201                           
  8202                           ;clock_src.c: 128:         RB0=1;
  8203  164A  1406               	bsf	6,0	;volatile
  8204                           
  8205                           ;clock_src.c: 129:     }
  8206  164B  3001               	movlw	1
  8207  164C  07F2               	addwf	time_write_1@j,f
  8208  164D  1803               	skipnc
  8209  164E  0AF3               	incf	time_write_1@j+1,f
  8210  164F  3000               	movlw	0
  8211  1650  07F3               	addwf	time_write_1@j+1,f
  8212  1651  0873               	movf	time_write_1@j+1,w
  8213  1652  3A80               	xorlw	128
  8214  1653  00FF               	movwf	127
  8215  1654  3080               	movlw	128
  8216  1655  027F               	subwf	127,w
  8217  1656  1D03               	skipz
  8218  1657  2E5A               	goto	u2085
  8219  1658  3008               	movlw	8
  8220  1659  0272               	subwf	time_write_1@j,w
  8221  165A                     u2085:	
  8222  165A  1C03               	skipc
  8223  165B  2E3D               	goto	l374
  8224                           
  8225                           ;clock_src.c: 130:       RB0=0;
  8226  165C  1283               	bcf	3,5	;RP0=0, select bank0
  8227  165D  1303               	bcf	3,6	;RP1=0, select bank0
  8228  165E  1006               	bcf	6,0	;volatile
  8229  165F  0008               	return
  8230  1660                     __end_of_time_write_1:	
  8231                           
  8232                           	psect	text37
  8233  15F2                     __ptext37:	
  8234 ;; *************** function _incrementor *****************
  8235 ;; Defined at:
  8236 ;;		line 10 in file "math_src.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  upper_val       2    0[BANK0 ] int 
  8239 ;;  lower_val       2    2[BANK0 ] int 
  8240 ;;  z               1    4[BANK0 ] unsigned char 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;		None
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1    wreg      unsigned char 
  8245 ;; Registers used:
  8246 ;;		wreg, status,2, status,0, pclath, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 300/0
  8249 ;;		On exit  : 300/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8252 ;;      Params:         0       5       0       0       0
  8253 ;;      Locals:         0       0       0       0       0
  8254 ;;      Temps:          2       0       0       0       0
  8255 ;;      Totals:         2       5       0       0       0
  8256 ;;Total ram usage:        7 bytes
  8257 ;; Hardware stack levels used:    1
  8258 ;; Hardware stack levels required when called:    2
  8259 ;; This function calls:
  8260 ;;		_modulus_func
  8261 ;; This function is called by:
  8262 ;;		_thermometer_threshhold_settings
  8263 ;;		_time_settings
  8264 ;;		_date_settings
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function _incrementor
  8270  15F2                     _incrementor:	
  8271                           
  8272                           ;math_src.c: 11:      if(z == (lower_val + '0')){
  8273                           
  8274                           ;incstack = 0
  8275                           ; Regs used in _incrementor: [wreg+status,2+status,0+pclath+cstack]
  8276  15F2  0864               	movf	incrementor@lower_val,w
  8277  15F3  3E30               	addlw	48
  8278  15F4  00FB               	movwf	??_incrementor
  8279  15F5  0865               	movf	incrementor@lower_val+1,w
  8280  15F6  1803               	skipnc
  8281  15F7  3E01               	addlw	1
  8282  15F8  3E00               	addlw	0
  8283  15F9  00FC               	movwf	??_incrementor+1
  8284  15FA  0866               	movf	incrementor@z,w
  8285  15FB  067B               	xorwf	??_incrementor,w
  8286  15FC  047C               	iorwf	??_incrementor+1,w
  8287  15FD  1D03               	skipz
  8288  15FE  2E14               	goto	l3265
  8289                           
  8290                           ;math_src.c: 12:      upper_val++;
  8291  15FF  3001               	movlw	1
  8292  1600  07E2               	addwf	incrementor@upper_val,f
  8293  1601  1803               	skipnc
  8294  1602  0AE3               	incf	incrementor@upper_val+1,f
  8295  1603  3000               	movlw	0
  8296  1604  07E3               	addwf	incrementor@upper_val+1,f
  8297                           
  8298                           ;math_src.c: 13:      upper_val =(modulus_func(upper_val,10));
  8299  1605  0863               	movf	incrementor@upper_val+1,w
  8300  1606  00F8               	movwf	modulus_func@x+1
  8301  1607  0862               	movf	incrementor@upper_val,w
  8302  1608  00F7               	movwf	modulus_func@x
  8303  1609  300A               	movlw	10
  8304  160A  00F9               	movwf	modulus_func@y
  8305  160B  3000               	movlw	0
  8306  160C  00FA               	movwf	modulus_func@y+1
  8307  160D  160A  118A  24C2   	fcall	_modulus_func
  8308  1610  0878               	movf	?_modulus_func+1,w
  8309  1611  00E3               	movwf	incrementor@upper_val+1
  8310  1612  0877               	movf	?_modulus_func,w
  8311  1613  00E2               	movwf	incrementor@upper_val
  8312  1614                     l3265:	
  8313                           
  8314                           ;math_src.c: 15:      return upper_val;
  8315  1614  0862               	movf	incrementor@upper_val,w
  8316  1615  0008               	return
  8317  1616                     __end_of_incrementor:	
  8318                           
  8319                           	psect	text38
  8320  14C2                     __ptext38:	
  8321 ;; *************** function _modulus_func *****************
  8322 ;; Defined at:
  8323 ;;		line 5 in file "math_src.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  x               2    7[COMMON] int 
  8326 ;;  y               2    9[COMMON] int 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;		None
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  2    7[COMMON] int 
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0, pclath, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 300/0
  8335 ;;		On exit  : 300/0
  8336 ;;		Unchanged: 300/0
  8337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8338 ;;      Params:         4       0       0       0       0
  8339 ;;      Locals:         0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0
  8341 ;;      Totals:         4       0       0       0       0
  8342 ;;Total ram usage:        4 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    1
  8345 ;; This function calls:
  8346 ;;		___awmod
  8347 ;; This function is called by:
  8348 ;;		_main
  8349 ;;		_thermometer_threshhold_settings
  8350 ;;		_time_settings
  8351 ;;		_date_settings
  8352 ;;		_incrementor
  8353 ;;		_decrementor
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           
  8358                           ;psect for function _modulus_func
  8359  14C2                     _modulus_func:	
  8360                           
  8361                           ;math_src.c: 6:     x = x % y;
  8362                           
  8363                           ;incstack = 0
  8364                           ; Regs used in _modulus_func: [wreg+status,2+status,0+pclath+cstack]
  8365  14C2  087A               	movf	modulus_func@y+1,w
  8366  14C3  00F1               	movwf	___awmod@divisor+1
  8367  14C4  0879               	movf	modulus_func@y,w
  8368  14C5  00F0               	movwf	___awmod@divisor
  8369  14C6  0878               	movf	modulus_func@x+1,w
  8370  14C7  00F3               	movwf	___awmod@dividend+1
  8371  14C8  0877               	movf	modulus_func@x,w
  8372  14C9  00F2               	movwf	___awmod@dividend
  8373  14CA  120A  118A  202E   	fcall	___awmod
  8374  14CD  0871               	movf	?___awmod+1,w
  8375  14CE  00F8               	movwf	modulus_func@x+1
  8376  14CF  0870               	movf	?___awmod,w
  8377  14D0  00F7               	movwf	modulus_func@x
  8378                           
  8379                           ;math_src.c: 7:     return x;
  8380  14D1  0008               	return
  8381  14D2                     __end_of_modulus_func:	
  8382                           
  8383                           	psect	text39
  8384  002E                     __ptext39:	
  8385 ;; *************** function ___awmod *****************
  8386 ;; Defined at:
  8387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  divisor         2    0[COMMON] int 
  8390 ;;  dividend        2    2[COMMON] int 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  sign            1    6[COMMON] unsigned char 
  8393 ;;  counter         1    5[COMMON] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  2    0[COMMON] int 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 300/0
  8400 ;;		On exit  : 300/0
  8401 ;;		Unchanged: 300/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         4       0       0       0       0
  8404 ;;      Locals:         2       0       0       0       0
  8405 ;;      Temps:          1       0       0       0       0
  8406 ;;      Totals:         7       0       0       0       0
  8407 ;;Total ram usage:        7 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_modulus_func
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           
  8417                           ;psect for function ___awmod
  8418  002E                     ___awmod:	
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8422  002E  01F6               	clrf	___awmod@sign
  8423  002F  1FF3               	btfss	___awmod@dividend+1,7
  8424  0030  2838               	goto	l2997
  8425  0031  09F2               	comf	___awmod@dividend,f
  8426  0032  09F3               	comf	___awmod@dividend+1,f
  8427  0033  0AF2               	incf	___awmod@dividend,f
  8428  0034  1903               	skipnz
  8429  0035  0AF3               	incf	___awmod@dividend+1,f
  8430  0036  01F6               	clrf	___awmod@sign
  8431  0037  0AF6               	incf	___awmod@sign,f
  8432  0038                     l2997:	
  8433  0038  1FF1               	btfss	___awmod@divisor+1,7
  8434  0039  283F               	goto	l3001
  8435  003A  09F0               	comf	___awmod@divisor,f
  8436  003B  09F1               	comf	___awmod@divisor+1,f
  8437  003C  0AF0               	incf	___awmod@divisor,f
  8438  003D  1903               	skipnz
  8439  003E  0AF1               	incf	___awmod@divisor+1,f
  8440  003F                     l3001:	
  8441  003F  0870               	movf	___awmod@divisor,w
  8442  0040  0471               	iorwf	___awmod@divisor+1,w
  8443  0041  1903               	btfsc	3,2
  8444  0042  286C               	goto	l3019
  8445  0043  01F5               	clrf	___awmod@counter
  8446  0044  0AF5               	incf	___awmod@counter,f
  8447  0045                     l3009:	
  8448  0045  1BF1               	btfsc	___awmod@divisor+1,7
  8449  0046  2853               	goto	l3011
  8450  0047  3001               	movlw	1
  8451  0048                     u1985:	
  8452  0048  1003               	clrc
  8453  0049  0DF0               	rlf	___awmod@divisor,f
  8454  004A  0DF1               	rlf	___awmod@divisor+1,f
  8455  004B  3EFF               	addlw	-1
  8456  004C  1D03               	skipz
  8457  004D  2848               	goto	u1985
  8458  004E  3001               	movlw	1
  8459  004F  00F4               	movwf	??___awmod
  8460  0050  0874               	movf	??___awmod,w
  8461  0051  07F5               	addwf	___awmod@counter,f
  8462  0052  2845               	goto	l3009
  8463  0053                     l3011:	
  8464  0053  0871               	movf	___awmod@divisor+1,w
  8465  0054  0273               	subwf	___awmod@dividend+1,w
  8466  0055  1D03               	skipz
  8467  0056  2859               	goto	u2005
  8468  0057  0870               	movf	___awmod@divisor,w
  8469  0058  0272               	subwf	___awmod@dividend,w
  8470  0059                     u2005:	
  8471  0059  1C03               	skipc
  8472  005A  2861               	goto	l3015
  8473  005B  0870               	movf	___awmod@divisor,w
  8474  005C  02F2               	subwf	___awmod@dividend,f
  8475  005D  0871               	movf	___awmod@divisor+1,w
  8476  005E  1C03               	skipc
  8477  005F  03F3               	decf	___awmod@dividend+1,f
  8478  0060  02F3               	subwf	___awmod@dividend+1,f
  8479  0061                     l3015:	
  8480  0061  3001               	movlw	1
  8481  0062                     u2015:	
  8482  0062  1003               	clrc
  8483  0063  0CF1               	rrf	___awmod@divisor+1,f
  8484  0064  0CF0               	rrf	___awmod@divisor,f
  8485  0065  3EFF               	addlw	-1
  8486  0066  1D03               	skipz
  8487  0067  2862               	goto	u2015
  8488  0068  3001               	movlw	1
  8489  0069  02F5               	subwf	___awmod@counter,f
  8490  006A  1D03               	btfss	3,2
  8491  006B  2853               	goto	l3011
  8492  006C                     l3019:	
  8493  006C  0876               	movf	___awmod@sign,w
  8494  006D  1903               	btfsc	3,2
  8495  006E  2874               	goto	l3023
  8496  006F  09F2               	comf	___awmod@dividend,f
  8497  0070  09F3               	comf	___awmod@dividend+1,f
  8498  0071  0AF2               	incf	___awmod@dividend,f
  8499  0072  1903               	skipnz
  8500  0073  0AF3               	incf	___awmod@dividend+1,f
  8501  0074                     l3023:	
  8502  0074  0873               	movf	___awmod@dividend+1,w
  8503  0075  00F1               	movwf	?___awmod+1
  8504  0076  0872               	movf	___awmod@dividend,w
  8505  0077  00F0               	movwf	?___awmod
  8506  0078  0008               	return
  8507  0079                     __end_of___awmod:	
  8508                           
  8509                           	psect	text40
  8510  14E3                     __ptext40:	
  8511 ;; *************** function _button_delay *****************
  8512 ;; Defined at:
  8513 ;;		line 596 in file "Button_src.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;  i               2    0[COMMON] int 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, btemp+1
  8522 ;; Tracked objects:
  8523 ;;		On entry : 300/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8527 ;;      Params:         0       0       0       0       0
  8528 ;;      Locals:         2       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0
  8530 ;;      Totals:         2       0       0       0       0
  8531 ;;Total ram usage:        2 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; This function calls:
  8534 ;;		Nothing
  8535 ;; This function is called by:
  8536 ;;		_set_beep_threshhold
  8537 ;;		_thermometer_threshhold_settings
  8538 ;;		_time_settings
  8539 ;;		_date_settings
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           
  8544                           ;psect for function _button_delay
  8545  14E3                     _button_delay:	
  8546                           
  8547                           ;Button_src.c: 597:     for(int i=0;i<10000;i++);
  8548                           
  8549                           ;incstack = 0
  8550                           ; Regs used in _button_delay: [wreg+status,2+btemp+1]
  8551  14E3  01F0               	clrf	button_delay@i
  8552  14E4  01F1               	clrf	button_delay@i+1
  8553  14E5                     l3255:	
  8554  14E5  3001               	movlw	1
  8555  14E6  07F0               	addwf	button_delay@i,f
  8556  14E7  1803               	skipnc
  8557  14E8  0AF1               	incf	button_delay@i+1,f
  8558  14E9  3000               	movlw	0
  8559  14EA  07F1               	addwf	button_delay@i+1,f
  8560  14EB  0871               	movf	button_delay@i+1,w
  8561  14EC  3A80               	xorlw	128
  8562  14ED  00FF               	movwf	127
  8563  14EE  30A7               	movlw	167
  8564  14EF  027F               	subwf	127,w
  8565  14F0  1D03               	skipz
  8566  14F1  2CF4               	goto	u2195
  8567  14F2  3010               	movlw	16
  8568  14F3  0270               	subwf	button_delay@i,w
  8569  14F4                     u2195:	
  8570  14F4  1803               	btfsc	3,0
  8571  14F5  0008               	return
  8572  14F6  2CE5               	goto	l3255
  8573  14F7                     __end_of_button_delay:	
  8574  007E                     btemp	set	126	;btemp
  8575  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         66
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      78
    BANK1            80      0       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _decrementor->_modulus_func
    _set_upper_threshold->_write_char
    _set_lower_threshold->_write_char
    _set_beep_threshhold->_button_delay
    _lcd_init->_write_cmd
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_write_char
    _display_day->_write_char
    _display_date->_write_char
    _display_clock->_write_char
    _date_settings->_incrementor
    _write_cmd->_delay_screen
    _write_char->_delay_screen
    _set_time->_time_write_1
    _incrementor->_modulus_func
    _modulus_func->___awmod

Critical Paths under _main in BANK0

    _main->_thermometer_threshhold_settings
    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _date_settings->_incrementor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   43983
                                             10 BANK0      2     2      0
                      _date_settings
                      _display_clock
                       _display_date
                        _display_day
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                 _initialise_buttons
                           _lcd_init
                       _modulus_func
                        _reset_alarm
                _set_beep_threshhold
                _set_lower_threshold
                           _set_time
                _set_upper_threshold
    _thermometer_threshhold_settings
                      _time_settings
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _time_settings                                        3     3      0   13054
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _thermometer_threshhold_settings                      5     5      0    9705
                                              5 BANK0      5     5      0
                       _button_delay
                        _decrementor
                        _incrementor
                       _modulus_func
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _decrementor                                          7     2      5    2809
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (1) _set_upper_threshold                                  6     2      4     264
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_lower_threshold                                  6     2      4     286
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_beep_threshhold                                  1     1      0      68
                                              2 COMMON     1     1      0
                       _button_delay
 ---------------------------------------------------------------------------------
 (1) _reset_alarm                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _initialise_buttons                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    3303
                                              0 BANK0      4     4      0
                            ___lbdiv
                            ___lbmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              7     6      1     235
                                              0 COMMON     7     6      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              5     4      1     238
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0      68
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_day                                          2     0      2     320
                                              3 COMMON     2     0      2
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _date_settings                                        3     3      0   13054
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _time_date_hex_terminator                             4     3      1     295
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _time_date_delimiter                                  7     3      4    5750
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (3) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _incrementor                                          7     2      5    4177
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (2) _modulus_func                                         4     0      4    2491
                                              7 COMMON     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _button_delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _date_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _display_clock
     _write_char
       _delay_screen
   _display_date
     _write_char
       _delay_screen
   _display_day
     _write_char
       _delay_screen
   _display_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___lbdiv
     ___lbmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _initialise_buttons
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _modulus_func
     ___awmod
   _reset_alarm
   _set_beep_threshhold
     _button_delay
   _set_lower_threshold
     _write_char
       _delay_screen
   _set_time
     _time_write_1
   _set_upper_threshold
     _write_char
       _delay_screen
   _thermometer_threshhold_settings
     _button_delay
     _decrementor
       _modulus_func
         ___awmod
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _time_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       8       7       10.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 11 12:22:35 2019

                                       _a 0057                                         _b 0056  
                                       _c 0055                                         _p 002F  
                                       _t 0043                                         _w 0041  
                                       _x 003F                                         _y 003D  
                                       _z 003B                                         pc 0002  
            set_lower_threshold@lower_val 0075                              ?_display_day 0073  
                                      _TX 005E                                        _TZ 005F  
                                      _ge 005C                                        _wd 0045  
                                      fsr 0004         __size_of_time_date_hex_terminator 000F  
               ?_time_date_hex_terminator 0070                       _set_beep_threshhold 154D  
                           ?_display_date 0070                                       l321 1497  
                                     l600 0FF5                                       l610 00F3  
                                     l380 1692                                       l374 163D  
                                     l615 0160                                       l607 0085  
                                     l624 029D                                       l616 0168  
                                     l641 0477                                       l633 039D  
                                     l609 00EB                                       l642 047F  
                                     l635 0403                                       l627 032A  
                                     l636 040B                                       l647 04FD  
                                     l656 06B3                                       l648 0505  
                                     l594 0F4D                                       l599 0FB0  
                                     _RA0 0028                                       _RA2 002A  
                                     _RB0 0030                                       _RA3 002B  
                                     _RB1 0031                                       _RA4 002C  
                                     _RC0 0038                                       _RA5 002D  
                                     _RC1 0039                                       _RB4 0034  
                                     _RC2 003A                                       _RB5 0035  
                                     _RC3 003B                                       _RE0 0048  
                                     _RC4 003C                                       _RE2 004A  
                                     _RC6 003E                                       _RC7 003F  
                                     _THV 0060                             ?_display_temp 0070  
                                     _TLV 0061                                       _shi 005D  
                                     fsr0 0004                                       indf 0000  
                            ___awmod@sign 0076                              __CFG_FOSC$HS 0000  
                         ??_time_settings 0067                              __CFG_LVP$OFF 0000  
            set_lower_threshold@upper_val 0073                                      l3001 003F  
                                    l3011 0053                                      l3023 0074  
                                    l3015 0061                                      l1167 15C9  
                                    l3009 0045                                      l3019 006C  
                                    l3115 174A                                      l4013 0679  
                                    l3221 150D                                      l3045 149B  
                                    l3117 174B                                      l3311 0C8A  
                                    l3039 14F9                                      l3119 1724  
                                    l3127 175B                                      l3401 0D4B  
                                    l3305 0C7E                                      l4017 068E  
                                    l3075 000F                                      l3323 0CA2  
                                    l3147 1770                                      l4203 019C  
                                    l3413 0D65                                      l3341 0CC9  
                                    l3317 0C96                                      l4109 0792  
                                    l3501 17CC                                      l3255 14E5  
                                    l3431 0D8C                                      l3407 0D58  
                                    l3335 0CBC                                      l3503 17DA  
                                    l3239 16A3                                      l4207 01A5  
                                    l3265 1614                                      l3425 0D7F  
                                    l3353 0CE3                                      l3329 0CAF  
                                    l4049 0709                                      l3513 17FB  
                                    l3169 16F3                                      l4225 01E0  
                                    l4217 01C9                                      l3443 0DA6  
                                    l3419 0D72                                      l3371 0D0A  
                                    l3347 0CD6                                      l4411 09FC  
                                    l4403 09CE                                      l3531 16DE  
                                    l3275 1638                                      l4219 01CE  
                                    l4171 0127                                      l3437 0D99  
                                    l3365 0CFD                                      l3445 0DA8  
                                    l3461 159B                                      l3509 17F0  
                                    l3525 16C2                                      l3621 0AB4  
                                    l4341 0839                                      l4229 01EF  
                                    l3383 0D24                                      l3359 0CF0  
                                    l4079 074C                                      l3703 0864  
                                    l4415 0A13                                      l4407 09E5  
                                    l3471 15AA                                      l3527 16D0  
                                    l3535 16E9                                      l4183 014B  
                                    l4175 0130                                      l3377 0D17  
                                    l3633 0AD2                                      l3625 0ABE  
                                    l4185 0150                                      l4505 0C1F  
                                    l3395 0D3E                                      l3299 0C72  
                                    l3459 1592                                      l4339 082C  
                                    l4283 02ED                                      l4435 0B56  
                                    l3389 0D31                                      l3629 0AC8  
                                    l3653 166B                                      l3903 043F  
                                    l3479 15B2                                      l3665 08FA  
                                    l4393 098E                                      l4377 1566  
                                    l3841 0FBD                                      l3817 0F39  
                                    l3915 0462                                      l3907 0448  
                                    l4395 09A0                                      l3941 04CD  
                                    l3917 0467                                      l3951 04ED  
                                    l4399 09B7                                      l3759 0EA4  
                                    l3937 04C4                                      l3787 0F03  
                                    l2997 0038                                      l3981 054F  
                                    l3973 0542                                      l3949 04E8  
                                    l3983 0554                                      l3969 0539  
                          ?_display_clock 0070                                      u2005 0059  
                                    u2015 0062                                      u2045 1508  
                                    u3015 1686                                      u2085 165A  
                                    u2165 151C                                      u2095 0028  
                                    u2185 16B3                                      u2195 14F4  
                                    u3075 0F4A                                      u2825 17CF  
                                    u2915 16D6                                      u2845 17DB  
                                    u2925 16DF                                      u3725 081F  
                                    u2855 17E7                                      u3735 082A  
                                    u1985 0048                                      u2785 15B5  
                                    u2865 17F1                                      u2945 0A6C  
                                    u3745 0837                                      u2955 0A77  
                                    u3755 1795                                      u2965 0A84  
                                    u3765 17A0                                      u2895 16C5  
                                    u3885 0C34               time_date_hex_terminator@val 0073  
                    ?_set_beep_threshhold 0070                                      _main 0B30  
                                    _init 1471                                      _var1 0049  
                                    _var2 0048                                      btemp 007E  
         time_date_hex_terminator@limiter 0070                             write_byte@val 0077  
                                    start 0000                    time_date_delimiter@hex 0070  
                  time_date_delimiter@val 0076                              ?_incrementor 0062  
             __size_of_initialise_buttons 0016                            ??_display_date 0073  
                                   ?_main 0070                            ??_display_temp 0073  
                                   ?_init 0070                           __end_of___lbdiv 15AC  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0079  
                         __end_of___lbmod 15CF                      __end_of_delay_screen 150B  
                         __end_of___lwdiv 1800                           __end_of___lwmod 16EE  
                                   _PORTD 0008                                     _PORTE 0009  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                                     _TRISD 0088  
                                   _TRISE 0089                             __CFG_PWRTE$ON 0000  
                                   _count 002D                                     _table 00A0  
                                   _stats 0033                                     main@i 006C  
                          write_byte@temp 0076                       _set_lower_threshold 0816  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                   ??_set_beep_threshhold 0072                                     status 0003  
                    __size_of_decrementor 0024                                     wtemp0 007E  
                         ___lbdiv@divisor 0070                           ___lbdiv@counter 0073  
                           ??_ds1302_init 0075                           __initialization 07E8  
                            __end_of_main 0C53                              __end_of_init 1479  
                 time_date_delimiter@type 0072                     __end_of_date_settings 07E8  
                    ?_set_lower_threshold 0073                                    ??_main 007E  
                                  ??_init 0070                      incrementor@lower_val 0064  
                         ??_display_clock 0073                                    _ADCON1 009F  
                                  _TRISA0 0428                                    _TRISB4 0434  
                                  _TRISE0 0448                             ?_button_delay 0070  
                            ?_reset_alarm 0070                      incrementor@upper_val 0062  
                        __end_of_lcd_init 15F2                          __end_of_get_temp 0B30  
                        __end_of_get_time 168C                                    _baifen 005A  
                               ??___lbdiv 0071                                 ??___awmod 0074  
                                  _delay2 150B                                 ??___lbmod 0071  
                   ??_set_lower_threshold 0077                                    _d_type 0031  
                               ??___lwdiv 007A                                 ??___lwmod 0074  
                     __end_of_ds1302_init 14C2                       _set_upper_threshold 178C  
                                  _table1 0020                           ___awmod@divisor 0070  
                                  _shifen 005B                                    _wanfen 0058  
                         ___awmod@counter 0075                      __size_of_display_day 00A3  
                            ?_time_read_1 0070                       time_write_1@time_tx 0074  
                           display_date@i 0075                          __end_of_set_time 002E  
                      reset_temp@presence 0075                          ___lbdiv@dividend 0072  
                    ?_set_upper_threshold 0073                           ___lbmod@divisor 0070  
                 __end_of__initialization 07FC                           ___lbmod@counter 0075  
                          ??_button_delay 0070              __size_of_time_date_delimiter 0157  
                    __end_of_display_date 0986                      __end_of_display_temp 158B  
                          __pcstackCOMMON 0070                              __pidataBANK1 1481  
                   __size_of_delay_screen 0014                      __size_of_incrementor 0024  
                        ___lbdiv@quotient 0074                     ??_set_upper_threshold 0077  
                              __pbssBANK0 0020                              _delay_screen 14F7  
                      __size_of_init_temp 0005                        __size_of_read_byte 0034  
                             _ds1302_init 14B3                                _delay_temp 1496  
                              __pmaintext 0B30                                   ?_delay2 0070  
                           ?_modulus_func 0077                        time_read_1@time_rx 0074  
                            incrementor@z 0066                                 ?_lcd_init 0070  
                               ?_get_temp 0070                     __end_of_time_settings 038F  
                               ?_get_time 0070                        __size_of_write_cmd 0017  
                               ?_set_time 0070                      __size_of_reset_alarm 000D  
                          ??_modulus_func 007B              set_upper_threshold@lower_val 0075  
              __end_of_initialise_buttons 0816                  _time_date_hex_terminator 14A4  
                                 ___lbdiv 158B                                   ___awmod 002E  
                                 ___lbmod 15AC                           __size_of_delay2 0014  
                                 ___lwdiv 17C4                                   ___lwmod 16BC  
                                 _day_hex 0054                                   _day_low 0039  
                                 __ptext1 0079                                   __ptext2 0DAA  
                                 __ptext3 1616                                   __ptext4 178C  
                                 __ptext5 0816                                   __ptext6 154D  
                                 __ptext7 1489                                   __ptext8 15CF  
                                 __ptext9 0800                      __end_of_button_delay 14F7  
                                 delay2@i 0070                         __end_of_init_temp 1471  
                        ___awmod@dividend 0072                         __end_of_read_byte 1722  
                                 _qianfen 0059                      __size_of_time_read_1 0030  
                                 _lower_t 004C               __end_of_set_beep_threshhold 156A  
            set_upper_threshold@upper_val 0073                     __size_of_display_date 0096  
                                 clrloop0 147A                                ??_lcd_init 0073  
                                 _upper_t 004D                             ??_decrementor 007B  
                              ??_get_temp 0062                                ??_get_time 0075  
                   __size_of_display_temp 0021                      end_of_initialization 07FC  
                          display_day@num 0073                            display_clock@i 0075  
                           ?_time_write_1 0070                               ?_delay_temp 0070  
                              _reset_temp 1722                                ??_set_time 0075  
                     _time_date_delimiter 0C53                      decrementor@lower_val 0062  
                            _display_date 08F0                              _display_temp 156A  
                       __end_of_write_cmd 154D                          ___lbmod@dividend 0074  
                           modulus_func@x 0077                             modulus_func@y 0079  
                   __end_of_display_clock 08F0                    __size_of_date_settings 0459  
                             ___lbmod@rem 0076                      ?_time_date_delimiter 0070  
                    decrementor@upper_val 0064                            ??_time_write_1 0070  
             __end_of_set_lower_threshold 085A                       __end_of_decrementor 163A  
                           ??_display_day 0075                            __end_of_delay2 151F  
                              _write_char 151F                                _write_byte 1756  
                          _var_night_high 0029                       start_initialization 07E8  
                           delay_screen@i 0070                       __size_of_delay_temp 000E  
                    __end_of_modulus_func 14D2                     ??_time_date_delimiter 0074  
                            ?_ds1302_init 0070                               ?_reset_temp 0070  
                           ??_incrementor 007B                                init_fetch0 14D2  
                                ??_delay2 0070                     __size_of_button_delay 0014  
                           _date_settings 038F                               __pdataBANK1 00A0  
                              read_byte@i 0076                                read_byte@j 0047  
             __end_of_set_upper_threshold 17C4                       __end_of_display_day 0A29  
                               ___latbits 0002                             __pcstackBANK0 0062  
                             _decrementor 1616                      set_beep_threshhold@x 0072  
                       __size_of_lcd_init 0023                         __size_of_get_temp 0107  
                       __size_of_get_time 002C                ??_time_date_hex_terminator 0071  
                            _button_delay 14E3                          ___lwdiv@dividend 0078  
                             _day_counter 0027                                  ?___lbdiv 0070  
                          ?_date_settings 0070                                  ?___awmod 0070  
                                ?___lbmod 0070                                  ?___lwdiv 0076  
                                ?___lwmod 0070                         __size_of_set_time 0028  
                             ?_write_char 0070                               ?_write_byte 0070  
                     __end_of_incrementor 1616                      __end_of_time_write_1 1660  
                      _initialise_buttons 0800                           _day_of_week_var 0035  
                     __size_of_reset_temp 0034                          ___lwdiv@quotient 007B  
                               _init_temp 146C                                 _read_byte 16EE  
                            decrementor@z 0066                       ?_initialise_buttons 0070  
                               clear_ram0 1479                             ??_reset_alarm 0070  
                          _prev_hex_hours 004F                              ??_delay_temp 0071  
                             _display_day 0986   __end_of_thermometer_threshhold_settings 1000  
__size_of_thermometer_threshhold_settings 0256         ??_thermometer_threshhold_settings 0067  
        ?_thermometer_threshhold_settings 0070           _thermometer_threshhold_settings 0DAA  
                    ??_initialise_buttons 0070                    __size_of_time_settings 0316  
        thermometer_threshhold_settings@i 006A                             ??_time_read_1 0070  
                             write_char@x 0072                     __size_of_modulus_func 0010  
                               get_time@i 0076                               write_byte@i 0078  
                      __end_of_delay_temp 14A4                                 _write_cmd 1536  
                              ?_init_temp 0070                                ?_read_byte 0070  
                           _var_night_low 002B                           _buzzer_watcher1 004A  
                     __size_of_write_char 0017              __size_of_set_beep_threshhold 001D  
                     __size_of_write_byte 0036                           ??_date_settings 0067  
                    __size_of_ds1302_init 000F                               _incrementor 15F2  
                            _modulus_func 14C2                       __end_of_reset_alarm 1496  
                        __size_of___lbdiv 0021                          __size_of___awmod 004B  
                        __size_of___lbmod 0023                          __size_of___lwdiv 003C  
                        __size_of___lwmod 0032                                  _day_high 0037  
                         ___lwdiv@divisor 0076                           ___lwdiv@counter 007D  
                                __ptext10 146C                                  __ptext11 1471  
                                __ptext20 16BC                                  __ptext12 1660  
                                __ptext21 17C4                                  __ptext13 168C  
                                __ptext30 1536                                  __ptext22 15AC  
                                __ptext14 0A29                                  __ptext31 151F  
                                __ptext23 158B                                  __ptext15 1756  
                                __ptext40 14E3                                  __ptext32 14F7  
                                __ptext24 14B3                                  __ptext16 1722  
                                __ptext33 14A4                                  __ptext25 156A  
                                __ptext17 16EE                                  __ptext34 0C53  
                                __ptext26 0986                                  __ptext18 1496  
                                __ptext35 0006                                  __ptext27 08F0  
                                __ptext19 150B                                  __ptext36 163A  
                                __ptext28 085A                                  __ptext37 15F2  
                                __ptext29 038F                                  __ptext38 14C2  
                                __ptext39 002E                       __end_of_time_read_1 16BC  
                              ?_write_cmd 0070                                  _lcd_init 15CF  
                                _get_temp 0A29                                  _get_time 1660  
                           _time_settings 0079          __end_of_time_date_hex_terminator 14B3  
                           __size_of_main 0123                             __size_of_init 0008  
                           ?_delay_screen 0070                               _hrs_limiter 0053  
                               set_time@i 0075                             _prev_hex_mins 004E  
                           _prev_hex_year 0050                              ??_reset_temp 0074  
                                _set_time 0006                                  _prev_hex 0052  
              time_date_delimiter@limiter 0071              __size_of_set_lower_threshold 0044  
                              write_cmd@x 0072                     __size_of_time_write_1 0026  
                  __size_of_display_clock 0096                            _buzzer_watcher 004B  
                             delay_temp@x 0072                               delay_temp@y 0070  
                             delay_temp@z 0073                            read_byte@value 0075  
             __end_of_time_date_delimiter 0DAA                                  init_ram0 14D6  
                           button_delay@i 0070                               ??_init_temp 0070  
                      __end_of_reset_temp 1756                               ??_read_byte 0074  
                          ?_time_settings 0070                              ?_decrementor 0062  
                        ___lwmod@dividend 0072                            ??_delay_screen 0070  
                             _reset_alarm 1489                              _time_write_1 163A  
                            _prev_hex_day 0051                              ??_write_char 0072  
                            ??_write_byte 0074                                _OPTION_REG 0081  
                             _time_read_1 168C                              time_read_1@j 0072  
                         ___lwmod@divisor 0070                           ___lwmod@counter 0075  
                             ??_write_cmd 0072              __size_of_set_upper_threshold 0038  
                           _display_clock 085A                             time_write_1@j 0072  
                      __end_of_write_char 1536                        __end_of_write_byte 178C  
