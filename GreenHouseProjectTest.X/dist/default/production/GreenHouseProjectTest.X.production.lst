

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 04 04:38:32 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.10
    55                           ; Generated 31/07/2019 GMT
    56                           ; 
    57                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F877A Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  009F                     	;# 
   262  010C                     	;# 
   263  010D                     	;# 
   264  010E                     	;# 
   265  010F                     	;# 
   266  018C                     	;# 
   267  018D                     	;# 
   268  0000                     	;# 
   269  0001                     	;# 
   270  0002                     	;# 
   271  0003                     	;# 
   272  0004                     	;# 
   273  0005                     	;# 
   274  0006                     	;# 
   275  0007                     	;# 
   276  0008                     	;# 
   277  0009                     	;# 
   278  000A                     	;# 
   279  000B                     	;# 
   280  000C                     	;# 
   281  000D                     	;# 
   282  000E                     	;# 
   283  000E                     	;# 
   284  000F                     	;# 
   285  0010                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0014                     	;# 
   290  0015                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001D                     	;# 
   301  001E                     	;# 
   302  001F                     	;# 
   303  0081                     	;# 
   304  0085                     	;# 
   305  0086                     	;# 
   306  0087                     	;# 
   307  0088                     	;# 
   308  0089                     	;# 
   309  008C                     	;# 
   310  008D                     	;# 
   311  008E                     	;# 
   312  0091                     	;# 
   313  0092                     	;# 
   314  0093                     	;# 
   315  0094                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009C                     	;# 
   319  009D                     	;# 
   320  009E                     	;# 
   321  009F                     	;# 
   322  010C                     	;# 
   323  010D                     	;# 
   324  010E                     	;# 
   325  010F                     	;# 
   326  018C                     	;# 
   327  018D                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000D                     	;# 
   342  000E                     	;# 
   343  000E                     	;# 
   344  000F                     	;# 
   345  0010                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0013                     	;# 
   349  0014                     	;# 
   350  0015                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001B                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  0081                     	;# 
   364  0085                     	;# 
   365  0086                     	;# 
   366  0087                     	;# 
   367  0088                     	;# 
   368  0089                     	;# 
   369  008C                     	;# 
   370  008D                     	;# 
   371  008E                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  010C                     	;# 
   383  010D                     	;# 
   384  010E                     	;# 
   385  010F                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  0000                     	;# 
   389  0001                     	;# 
   390  0002                     	;# 
   391  0003                     	;# 
   392  0004                     	;# 
   393  0005                     	;# 
   394  0006                     	;# 
   395  0007                     	;# 
   396  0008                     	;# 
   397  0009                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001B                     	;# 
   419  001C                     	;# 
   420  001D                     	;# 
   421  001E                     	;# 
   422  001F                     	;# 
   423  0081                     	;# 
   424  0085                     	;# 
   425  0086                     	;# 
   426  0087                     	;# 
   427  0088                     	;# 
   428  0089                     	;# 
   429  008C                     	;# 
   430  008D                     	;# 
   431  008E                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0000                     	;# 
   449  0001                     	;# 
   450  0002                     	;# 
   451  0003                     	;# 
   452  0004                     	;# 
   453  0005                     	;# 
   454  0006                     	;# 
   455  0007                     	;# 
   456  0008                     	;# 
   457  0009                     	;# 
   458  000A                     	;# 
   459  000B                     	;# 
   460  000C                     	;# 
   461  000D                     	;# 
   462  000E                     	;# 
   463  000E                     	;# 
   464  000F                     	;# 
   465  0010                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0013                     	;# 
   469  0014                     	;# 
   470  0015                     	;# 
   471  0015                     	;# 
   472  0016                     	;# 
   473  0017                     	;# 
   474  0018                     	;# 
   475  0019                     	;# 
   476  001A                     	;# 
   477  001B                     	;# 
   478  001B                     	;# 
   479  001C                     	;# 
   480  001D                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  0081                     	;# 
   484  0085                     	;# 
   485  0086                     	;# 
   486  0087                     	;# 
   487  0088                     	;# 
   488  0089                     	;# 
   489  008C                     	;# 
   490  008D                     	;# 
   491  008E                     	;# 
   492  0091                     	;# 
   493  0092                     	;# 
   494  0093                     	;# 
   495  0094                     	;# 
   496  0098                     	;# 
   497  0099                     	;# 
   498  009C                     	;# 
   499  009D                     	;# 
   500  009E                     	;# 
   501  009F                     	;# 
   502  010C                     	;# 
   503  010D                     	;# 
   504  010E                     	;# 
   505  010F                     	;# 
   506  018C                     	;# 
   507  018D                     	;# 
   508  0000                     	;# 
   509  0001                     	;# 
   510  0002                     	;# 
   511  0003                     	;# 
   512  0004                     	;# 
   513  0005                     	;# 
   514  0006                     	;# 
   515  0007                     	;# 
   516  0008                     	;# 
   517  0009                     	;# 
   518  000A                     	;# 
   519  000B                     	;# 
   520  000C                     	;# 
   521  000D                     	;# 
   522  000E                     	;# 
   523  000E                     	;# 
   524  000F                     	;# 
   525  0010                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0014                     	;# 
   530  0015                     	;# 
   531  0015                     	;# 
   532  0016                     	;# 
   533  0017                     	;# 
   534  0018                     	;# 
   535  0019                     	;# 
   536  001A                     	;# 
   537  001B                     	;# 
   538  001B                     	;# 
   539  001C                     	;# 
   540  001D                     	;# 
   541  001E                     	;# 
   542  001F                     	;# 
   543  0081                     	;# 
   544  0085                     	;# 
   545  0086                     	;# 
   546  0087                     	;# 
   547  0088                     	;# 
   548  0089                     	;# 
   549  008C                     	;# 
   550  008D                     	;# 
   551  008E                     	;# 
   552  0091                     	;# 
   553  0092                     	;# 
   554  0093                     	;# 
   555  0094                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  009F                     	;# 
   562  010C                     	;# 
   563  010D                     	;# 
   564  010E                     	;# 
   565  010F                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568                           
   569                           	psect	idataBANK0
   570  14D9                     __pidataBANK0:	
   571                           
   572                           ;initializer for _table
   573  14D9  3400               	retlw	0
   574  14DA  3400               	retlw	0
   575  14DB  3440               	retlw	64
   576  14DC  3412               	retlw	18
   577  14DD  3412               	retlw	18
   578  14DE  3406               	retlw	6
   579  14DF  3419               	retlw	25
   580  14E0  3400               	retlw	0
   581  0009                     _PORTE	set	9
   582  0008                     _PORTD	set	8
   583  003E                     _RC6	set	62
   584  003F                     _RC7	set	63
   585  003C                     _RC4	set	60
   586  003B                     _RC3	set	59
   587  003A                     _RC2	set	58
   588  0039                     _RC1	set	57
   589  0038                     _RC0	set	56
   590  004A                     _RE2	set	74
   591  0034                     _RB4	set	52
   592  0031                     _RB1	set	49
   593  0035                     _RB5	set	53
   594  0030                     _RB0	set	48
   595  0048                     _RE0	set	72
   596  002B                     _RA3	set	43
   597  002C                     _RA4	set	44
   598  002D                     _RA5	set	45
   599  002A                     _RA2	set	42
   600  0028                     _RA0	set	40
   601  0087                     _TRISC	set	135
   602  0085                     _TRISA	set	133
   603  0089                     _TRISE	set	137
   604  0081                     _OPTION_REG	set	129
   605  0088                     _TRISD	set	136
   606  009F                     _ADCON1	set	159
   607  0086                     _TRISB	set	134
   608  0434                     _TRISB4	set	1076
   609  0448                     _TRISE0	set	1096
   610  0428                     _TRISA0	set	1064
   611                           
   612                           ; #config settings
   613  0000                     
   614                           	psect	cinit
   615  07E6                     start_initialization:	
   616  07E6                     __initialization:	
   617                           
   618                           ; Initialize objects allocated to BANK0
   619  07E6  1383               	bcf	3,7	;select IRP bank0
   620  07E7  3067               	movlw	low (__pdataBANK0+8)
   621  07E8  00FD               	movwf	btemp+-1
   622  07E9  3014               	movlw	high __pidataBANK0
   623  07EA  00FE               	movwf	btemp
   624  07EB  30D9               	movlw	low __pidataBANK0
   625  07EC  00FF               	movwf	btemp+1
   626  07ED  305F               	movlw	low __pdataBANK0
   627  07EE  0084               	movwf	4
   628  07EF  160A  118A  2547  120A  118A  	fcall	init_ram0
   629                           
   630                           ; Clear objects allocated to BANK0
   631  07F4  3020               	movlw	low __pbssBANK0
   632  07F5  0084               	movwf	4
   633  07F6  3053               	movlw	low (__pbssBANK0+51)
   634  07F7  160A  118A  24D1  120A  118A  	fcall	clear_ram0
   635  07FC                     end_of_initialization:	
   636                           ;End of C runtime variable initialization code
   637                           
   638  07FC                     __end_of__initialization:	
   639  07FC  0183               	clrf	3
   640  07FD  120A  158A  2C49   	ljmp	_main	;jump to C main() function
   641                           
   642                           	psect	bssBANK0
   643  0020                     __pbssBANK0:	
   644  0020                     _table1:	
   645  0020                     	ds	7
   646  0027                     _day_counter:	
   647  0027                     	ds	2
   648  0029                     _count:	
   649  0029                     	ds	2
   650  002B                     _day_of_week_var:	
   651  002B                     	ds	2
   652  002D                     _day_high:	
   653  002D                     	ds	2
   654  002F                     _day_low:	
   655  002F                     	ds	2
   656  0031                     _z:	
   657  0031                     	ds	2
   658  0033                     _y:	
   659  0033                     	ds	2
   660  0035                     _x:	
   661  0035                     	ds	2
   662  0037                     _w:	
   663  0037                     	ds	2
   664  0039                     _t:	
   665  0039                     	ds	2
   666  003B                     _wd:	
   667  003B                     	ds	2
   668  003D                     read_byte@j:	
   669  003D                     	ds	1
   670  003E                     _var2:	
   671  003E                     	ds	1
   672  003F                     _var1:	
   673  003F                     	ds	1
   674  0040                     _buzzer_watcher1:	
   675  0040                     	ds	1
   676  0041                     _buzzer_watcher:	
   677  0041                     	ds	1
   678  0042                     _lower_t:	
   679  0042                     	ds	1
   680  0043                     _upper_t:	
   681  0043                     	ds	1
   682  0044                     _hrs_limiter:	
   683  0044                     	ds	1
   684  0045                     _day_hex:	
   685  0045                     	ds	1
   686  0046                     _c:	
   687  0046                     	ds	1
   688  0047                     _b:	
   689  0047                     	ds	1
   690  0048                     _a:	
   691  0048                     	ds	1
   692  0049                     _wanfen:	
   693  0049                     	ds	1
   694  004A                     _qianfen:	
   695  004A                     	ds	1
   696  004B                     _baifen:	
   697  004B                     	ds	1
   698  004C                     _shifen:	
   699  004C                     	ds	1
   700  004D                     _ge:	
   701  004D                     	ds	1
   702  004E                     _shi:	
   703  004E                     	ds	1
   704  004F                     _TX:	
   705  004F                     	ds	1
   706  0050                     _TZ:	
   707  0050                     	ds	1
   708  0051                     _THV:	
   709  0051                     	ds	1
   710  0052                     _TLV:	
   711  0052                     	ds	1
   712                           
   713                           	psect	dataBANK0
   714  005F                     __pdataBANK0:	
   715  005F                     _table:	
   716  005F                     	ds	8
   717                           
   718                           	psect	inittext
   719  1543                     init_fetch0:	
   720                           ;	Called with low address in FSR and high address in W
   721                           
   722  1543  087E               	movf	btemp,w
   723  1544  008A               	movwf	10
   724  1545  087F               	movf	btemp+1,w
   725  1546  0082               	movwf	2
   726  1547                     init_ram0:	
   727                           ;Called with:
   728                           ;	high address of idata address in btemp 
   729                           ;	low address of idata address in btemp+1 
   730                           ;	low address of data in FSR
   731                           ;	high address + 1 of data in btemp-1
   732                           
   733  1547  160A  118A  2543  160A  118A  	fcall	init_fetch0
   734  154C  0080               	movwf	0
   735  154D  0A84               	incf	4,f
   736  154E  0804               	movf	4,w
   737  154F  067D               	xorwf	btemp+-1,w
   738  1550  1903               	btfsc	3,2
   739  1551  3400               	retlw	0
   740  1552  0AFF               	incf	btemp+1,f
   741  1553  1903               	btfsc	3,2
   742  1554  0AFE               	incf	btemp,f
   743  1555  2D47               	goto	init_ram0
   744                           
   745                           	psect	clrtext
   746  14D1                     clear_ram0:	
   747                           ;	Called with FSR containing the base address, and
   748                           ;	W with the last address+1
   749                           
   750  14D1  0064               	clrwdt	;clear the watchdog before getting into this loop
   751  14D2                     clrloop0:	
   752  14D2  0180               	clrf	0	;clear RAM location pointed to by FSR
   753  14D3  0A84               	incf	4,f	;increment pointer
   754  14D4  0604               	xorwf	4,w	;XOR with final address
   755  14D5  1903               	btfsc	3,2	;have we reached the end yet?
   756  14D6  3400               	retlw	0	;all done for this memory range, return
   757  14D7  0604               	xorwf	4,w	;XOR again to restore value
   758  14D8  2CD2               	goto	clrloop0	;do the next byte
   759                           
   760                           	psect	cstackCOMMON
   761  0070                     __pcstackCOMMON:	
   762  0070                     ?_init_temp:	
   763  0070                     ??_init_temp:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_set_time:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_ds1302_init:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_init:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ??_init:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_lcd_init:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_initialise_buttons:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ??_initialise_buttons:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_get_temp:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_get_time:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_write_cmd:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_write_char:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_display_temp:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_display_date:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_display_clock:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_thermometer_threshhold_settings:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_date_settings:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_time_settings:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_set_beep_threshhold:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_reset_alarm:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ??_reset_alarm:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_delay_screen:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ??_delay_screen:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_delay_temp:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_delay2:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ??_delay2:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_time_write_1:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ??_time_write_1:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_time_read_1:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ??_time_read_1:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_button_delay:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ??_button_delay:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_time_date_hex_terminator:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_time_date_delimiter:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_main:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_reset_temp:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_write_byte:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_read_byte:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?___awdiv:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?___awmod:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0070                     ?___lwmod:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0070                     delay_temp@y:	
   887                           ; 2 bytes @ 0x0
   888                           
   889  0070                     time_date_delimiter@hex:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     time_date_hex_terminator@limiter:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     delay_screen@i:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     delay2@i:	
   899                           ; 2 bytes @ 0x0
   900                           
   901  0070                     button_delay@i:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0070                     ___awdiv@divisor:	
   905                           ; 2 bytes @ 0x0
   906                           
   907  0070                     ___awmod@divisor:	
   908                           ; 2 bytes @ 0x0
   909                           
   910  0070                     ___lwmod@divisor:	
   911                           ; 2 bytes @ 0x0
   912                           
   913                           
   914                           ; 2 bytes @ 0x0
   915  0070                     	ds	1
   916  0071                     ??_delay_temp:	
   917  0071                     ??_time_date_hex_terminator:	
   918                           ; 1 bytes @ 0x1
   919                           
   920  0071                     time_date_delimiter@limiter:	
   921                           ; 1 bytes @ 0x1
   922                           
   923                           
   924                           ; 1 bytes @ 0x1
   925  0071                     	ds	1
   926  0072                     ??_write_cmd:	
   927  0072                     ??_write_char:	
   928                           ; 1 bytes @ 0x2
   929                           
   930  0072                     ??_set_beep_threshhold:	
   931                           ; 1 bytes @ 0x2
   932                           
   933  0072                     ??_time_date_delimiter:	
   934                           ; 1 bytes @ 0x2
   935                           
   936  0072                     write_char@x:	
   937                           ; 1 bytes @ 0x2
   938                           
   939  0072                     write_cmd@x:	
   940                           ; 1 bytes @ 0x2
   941                           
   942  0072                     delay_temp@x:	
   943                           ; 1 bytes @ 0x2
   944                           
   945  0072                     set_beep_threshhold@x:	
   946                           ; 1 bytes @ 0x2
   947                           
   948  0072                     time_write_1@j:	
   949                           ; 1 bytes @ 0x2
   950                           
   951  0072                     time_read_1@j:	
   952                           ; 2 bytes @ 0x2
   953                           
   954  0072                     ___awdiv@dividend:	
   955                           ; 2 bytes @ 0x2
   956                           
   957  0072                     ___awmod@dividend:	
   958                           ; 2 bytes @ 0x2
   959                           
   960  0072                     ___lwmod@dividend:	
   961                           ; 2 bytes @ 0x2
   962                           
   963                           
   964                           ; 2 bytes @ 0x2
   965  0072                     	ds	1
   966  0073                     ??_lcd_init:	
   967  0073                     ??_display_temp:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     ??_display_date:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     ??_display_clock:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0073                     ?_set_lower_threshold:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0073                     ?_set_upper_threshold:	
   980                           ; 1 bytes @ 0x3
   981                           
   982  0073                     ?_display_day:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0073                     delay_temp@z:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0073                     time_date_hex_terminator@val:	
   989                           ; 1 bytes @ 0x3
   990                           
   991  0073                     set_upper_threshold@upper_val:	
   992                           ; 1 bytes @ 0x3
   993                           
   994  0073                     set_lower_threshold@upper_val:	
   995                           ; 2 bytes @ 0x3
   996                           
   997  0073                     display_day@num:	
   998                           ; 2 bytes @ 0x3
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x3
  1002  0073                     	ds	1
  1003  0074                     ??_reset_temp:	
  1004  0074                     ??_write_byte:	
  1005                           ; 1 bytes @ 0x4
  1006                           
  1007  0074                     ??_read_byte:	
  1008                           ; 1 bytes @ 0x4
  1009                           
  1010  0074                     ??___awdiv:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0074                     ??___awmod:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0074                     ??___lwmod:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019  0074                     time_write_1@time_tx:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022  0074                     time_read_1@time_rx:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025  0074                     time_date_delimiter@val:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0x4
  1030  0074                     	ds	1
  1031  0075                     ??_set_time:	
  1032  0075                     ??_ds1302_init:	
  1033                           ; 1 bytes @ 0x5
  1034                           
  1035  0075                     ??_get_time:	
  1036                           ; 1 bytes @ 0x5
  1037                           
  1038  0075                     ??_display_day:	
  1039                           ; 1 bytes @ 0x5
  1040                           
  1041  0075                     reset_temp@presence:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044  0075                     read_byte@value:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047  0075                     ___awdiv@counter:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050  0075                     ___awmod@counter:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053  0075                     ___lwmod@counter:	
  1054                           ; 1 bytes @ 0x5
  1055                           
  1056  0075                     set_time@i:	
  1057                           ; 1 bytes @ 0x5
  1058                           
  1059  0075                     display_clock@i:	
  1060                           ; 2 bytes @ 0x5
  1061                           
  1062  0075                     display_date@i:	
  1063                           ; 2 bytes @ 0x5
  1064                           
  1065  0075                     set_upper_threshold@lower_val:	
  1066                           ; 2 bytes @ 0x5
  1067                           
  1068  0075                     set_lower_threshold@lower_val:	
  1069                           ; 2 bytes @ 0x5
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x5
  1073  0075                     	ds	1
  1074  0076                     ?___lwdiv:	
  1075  0076                     write_byte@temp:	
  1076                           ; 2 bytes @ 0x6
  1077                           
  1078  0076                     read_byte@i:	
  1079                           ; 1 bytes @ 0x6
  1080                           
  1081  0076                     ___awdiv@sign:	
  1082                           ; 1 bytes @ 0x6
  1083                           
  1084  0076                     ___awmod@sign:	
  1085                           ; 1 bytes @ 0x6
  1086                           
  1087  0076                     get_time@i:	
  1088                           ; 1 bytes @ 0x6
  1089                           
  1090  0076                     ___lwdiv@divisor:	
  1091                           ; 2 bytes @ 0x6
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x6
  1095  0076                     	ds	1
  1096  0077                     ??_set_lower_threshold:	
  1097  0077                     ??_set_upper_threshold:	
  1098                           ; 1 bytes @ 0x7
  1099                           
  1100  0077                     ?_modulus_func:	
  1101                           ; 1 bytes @ 0x7
  1102                           
  1103  0077                     write_byte@val:	
  1104                           ; 2 bytes @ 0x7
  1105                           
  1106  0077                     modulus_func@x:	
  1107                           ; 1 bytes @ 0x7
  1108                           
  1109  0077                     ___awdiv@quotient:	
  1110                           ; 2 bytes @ 0x7
  1111                           
  1112                           
  1113                           ; 2 bytes @ 0x7
  1114  0077                     	ds	1
  1115  0078                     write_byte@i:	
  1116  0078                     ___lwdiv@dividend:	
  1117                           ; 1 bytes @ 0x8
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x8
  1121  0078                     	ds	1
  1122  0079                     modulus_func@y:	
  1123                           
  1124                           ; 2 bytes @ 0x9
  1125  0079                     	ds	1
  1126  007A                     ??___lwdiv:	
  1127                           
  1128                           ; 1 bytes @ 0xA
  1129  007A                     	ds	1
  1130  007B                     ??_modulus_func:	
  1131  007B                     ??_incrementor:	
  1132                           ; 1 bytes @ 0xB
  1133                           
  1134  007B                     ??_decrementor:	
  1135                           ; 1 bytes @ 0xB
  1136                           
  1137  007B                     ___lwdiv@quotient:	
  1138                           ; 1 bytes @ 0xB
  1139                           
  1140                           
  1141                           ; 2 bytes @ 0xB
  1142  007B                     	ds	2
  1143  007D                     ___lwdiv@counter:	
  1144                           
  1145                           ; 1 bytes @ 0xD
  1146  007D                     	ds	1
  1147  007E                     ??_main:	
  1148                           
  1149                           	psect	cstackBANK0
  1150  0053                     __pcstackBANK0:	
  1151                           ; 1 bytes @ 0xE
  1152                           
  1153  0053                     ??_get_temp:	
  1154  0053                     ?_incrementor:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0053                     ?_decrementor:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0053                     incrementor@upper_val:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0053                     decrementor@lower_val:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x0
  1168  0053                     	ds	2
  1169  0055                     incrementor@lower_val:	
  1170  0055                     decrementor@upper_val:	
  1171                           ; 2 bytes @ 0x2
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0x2
  1175  0055                     	ds	2
  1176  0057                     incrementor@z:	
  1177  0057                     decrementor@z:	
  1178                           ; 1 bytes @ 0x4
  1179                           
  1180                           
  1181                           ; 1 bytes @ 0x4
  1182  0057                     	ds	1
  1183  0058                     ??_thermometer_threshhold_settings:	
  1184  0058                     ??_date_settings:	
  1185                           ; 1 bytes @ 0x5
  1186                           
  1187  0058                     ??_time_settings:	
  1188                           ; 1 bytes @ 0x5
  1189                           
  1190                           
  1191                           ; 1 bytes @ 0x5
  1192  0058                     	ds	3
  1193  005B                     thermometer_threshhold_settings@i:	
  1194                           
  1195                           ; 2 bytes @ 0x8
  1196  005B                     	ds	2
  1197  005D                     main@i:	
  1198                           
  1199                           ; 2 bytes @ 0xA
  1200  005D                     	ds	2
  1201                           
  1202                           	psect	maintext
  1203  0C49                     __pmaintext:	
  1204 ;;
  1205 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1206 ;;
  1207 ;; *************** function _main *****************
  1208 ;; Defined at:
  1209 ;;		line 10 in file "mainLogic.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  i               2   10[BANK0 ] int 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : B00/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       2       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       2       0       0       0
  1227 ;;Total ram usage:        2 bytes
  1228 ;; Hardware stack levels required when called:    4
  1229 ;; This function calls:
  1230 ;;		_date_settings
  1231 ;;		_display_clock
  1232 ;;		_display_date
  1233 ;;		_display_day
  1234 ;;		_display_temp
  1235 ;;		_ds1302_init
  1236 ;;		_get_temp
  1237 ;;		_get_time
  1238 ;;		_init
  1239 ;;		_init_temp
  1240 ;;		_initialise_buttons
  1241 ;;		_lcd_init
  1242 ;;		_modulus_func
  1243 ;;		_reset_alarm
  1244 ;;		_set_beep_threshhold
  1245 ;;		_set_lower_threshold
  1246 ;;		_set_time
  1247 ;;		_set_upper_threshold
  1248 ;;		_thermometer_threshhold_settings
  1249 ;;		_time_settings
  1250 ;;		_write_char
  1251 ;;		_write_cmd
  1252 ;; This function is called by:
  1253 ;;		Startup code after reset
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _main
  1259  0C49                     _main:	
  1260  0C49                     l3778:	
  1261                           ;incstack = 0
  1262                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1263                           
  1264                           
  1265                           ;mainLogic.c: 11:     TRISB=0X02;
  1266  0C49  3002               	movlw	2
  1267  0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0C4C  0086               	movwf	6	;volatile
  1270  0C4D                     l3780:	
  1271                           
  1272                           ;mainLogic.c: 12:     init_temp();
  1273  0C4D  160A  118A  24CA  120A  158A  	fcall	_init_temp
  1274  0C52                     l3782:	
  1275                           
  1276                           ;mainLogic.c: 13:     set_time();
  1277  0C52  160A  118A  26C3  120A  158A  	fcall	_set_time
  1278  0C57                     l3784:	
  1279                           
  1280                           ;mainLogic.c: 14:     ds1302_init();
  1281  0C57  160A  118A  2556  120A  158A  	fcall	_ds1302_init
  1282  0C5C                     l3786:	
  1283                           
  1284                           ;mainLogic.c: 16:     init();
  1285  0C5C  160A  118A  24E1  120A  158A  	fcall	_init
  1286  0C61                     l3788:	
  1287                           
  1288                           ;mainLogic.c: 17:     lcd_init();
  1289  0C61  160A  118A  2619  120A  158A  	fcall	_lcd_init
  1290  0C66                     l3790:	
  1291                           
  1292                           ;mainLogic.c: 18:     init_temp();
  1293  0C66  160A  118A  24CA  120A  158A  	fcall	_init_temp
  1294  0C6B                     l3792:	
  1295                           
  1296                           ;mainLogic.c: 19:     initialise_buttons();
  1297  0C6B  160A  118A  2531  120A  158A  	fcall	_initialise_buttons
  1298  0C70                     l3794:	
  1299                           
  1300                           ;mainLogic.c: 24:     get_temp();
  1301  0C70  120A  158A  231B  120A  158A  	fcall	_get_temp
  1302  0C75                     l3796:	
  1303                           
  1304                           ;mainLogic.c: 25:     get_time();
  1305  0C75  160A  118A  26EF  120A  158A  	fcall	_get_time
  1306  0C7A                     l3798:	
  1307                           
  1308                           ;mainLogic.c: 26:     write_cmd(0x80);
  1309  0C7A  3080               	movlw	128
  1310  0C7B  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  1311  0C80                     l3800:	
  1312                           
  1313                           ;mainLogic.c: 27:     write_char('T');
  1314  0C80  3054               	movlw	84
  1315  0C81  160A  118A  25C4  120A  158A  	fcall	_write_char
  1316  0C86                     l3802:	
  1317                           
  1318                           ;mainLogic.c: 28:     write_char('e');
  1319  0C86  3065               	movlw	101
  1320  0C87  160A  118A  25C4  120A  158A  	fcall	_write_char
  1321  0C8C                     l3804:	
  1322                           
  1323                           ;mainLogic.c: 29:     write_char('m');
  1324  0C8C  306D               	movlw	109
  1325  0C8D  160A  118A  25C4  120A  158A  	fcall	_write_char
  1326  0C92                     l3806:	
  1327                           
  1328                           ;mainLogic.c: 30:     write_char('p');
  1329  0C92  3070               	movlw	112
  1330  0C93  160A  118A  25C4  120A  158A  	fcall	_write_char
  1331  0C98                     l3808:	
  1332                           
  1333                           ;mainLogic.c: 31:     write_char(':');
  1334  0C98  303A               	movlw	58
  1335  0C99  160A  118A  25C4  120A  158A  	fcall	_write_char
  1336  0C9E                     l3810:	
  1337                           
  1338                           ;mainLogic.c: 32:     display_temp();
  1339  0C9E  160A  118A  266C  120A  158A  	fcall	_display_temp
  1340  0CA3                     l3812:	
  1341                           
  1342                           ;mainLogic.c: 34:     write_cmd(0x90);
  1343  0CA3  3090               	movlw	144
  1344  0CA4  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  1345  0CA9                     l3814:	
  1346                           
  1347                           ;mainLogic.c: 35:     write_char('D');
  1348  0CA9  3044               	movlw	68
  1349  0CAA  160A  118A  25C4  120A  158A  	fcall	_write_char
  1350  0CAF                     l3816:	
  1351                           
  1352                           ;mainLogic.c: 36:     write_char('a');
  1353  0CAF  3061               	movlw	97
  1354  0CB0  160A  118A  25C4  120A  158A  	fcall	_write_char
  1355  0CB5                     l3818:	
  1356                           
  1357                           ;mainLogic.c: 37:     write_char('t');
  1358  0CB5  3074               	movlw	116
  1359  0CB6  160A  118A  25C4  120A  158A  	fcall	_write_char
  1360  0CBB                     l3820:	
  1361                           
  1362                           ;mainLogic.c: 38:     write_char('e');
  1363  0CBB  3065               	movlw	101
  1364  0CBC  160A  118A  25C4  120A  158A  	fcall	_write_char
  1365  0CC1                     l3822:	
  1366                           
  1367                           ;mainLogic.c: 39:     write_char(':');
  1368  0CC1  303A               	movlw	58
  1369  0CC2  160A  118A  25C4  120A  158A  	fcall	_write_char
  1370  0CC7                     l3824:	
  1371                           
  1372                           ;mainLogic.c: 40:     write_char(' ');
  1373  0CC7  3020               	movlw	32
  1374  0CC8  160A  118A  25C4  120A  158A  	fcall	_write_char
  1375  0CCD                     l3826:	
  1376                           
  1377                           ;mainLogic.c: 42:     display_date();
  1378  0CCD  120A  158A  2275  120A  158A  	fcall	_display_date
  1379  0CD2                     l3828:	
  1380                           
  1381                           ;mainLogic.c: 44:     write_cmd(0x88);
  1382  0CD2  3088               	movlw	136
  1383  0CD3  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  1384  0CD8                     l3830:	
  1385                           
  1386                           ;mainLogic.c: 45:     write_char('T');
  1387  0CD8  3054               	movlw	84
  1388  0CD9  160A  118A  25C4  120A  158A  	fcall	_write_char
  1389  0CDE                     l3832:	
  1390                           
  1391                           ;mainLogic.c: 46:     write_char('i');
  1392  0CDE  3069               	movlw	105
  1393  0CDF  160A  118A  25C4  120A  158A  	fcall	_write_char
  1394  0CE4                     l3834:	
  1395                           
  1396                           ;mainLogic.c: 47:     write_char('m');
  1397  0CE4  306D               	movlw	109
  1398  0CE5  160A  118A  25C4  120A  158A  	fcall	_write_char
  1399  0CEA                     l3836:	
  1400                           
  1401                           ;mainLogic.c: 48:     write_char('e');
  1402  0CEA  3065               	movlw	101
  1403  0CEB  160A  118A  25C4  120A  158A  	fcall	_write_char
  1404  0CF0                     l3838:	
  1405                           
  1406                           ;mainLogic.c: 49:     write_char(':');
  1407  0CF0  303A               	movlw	58
  1408  0CF1  160A  118A  25C4  120A  158A  	fcall	_write_char
  1409  0CF6                     l3840:	
  1410                           
  1411                           ;mainLogic.c: 50:     display_clock();
  1412  0CF6  120A  158A  21CF  120A  158A  	fcall	_display_clock
  1413  0CFB                     l3842:	
  1414                           
  1415                           ;mainLogic.c: 51:     thermometer_threshhold_settings();
  1416  0CFB  120A  158A  2578  120A  158A  	fcall	_thermometer_threshhold_settings
  1417  0D00                     l3844:	
  1418                           
  1419                           ;mainLogic.c: 52:     date_settings();
  1420  0D00  120A  118A  23D3  120A  158A  	fcall	_date_settings
  1421  0D05                     l3846:	
  1422                           
  1423                           ;mainLogic.c: 53:     time_settings();
  1424  0D05  120A  118A  20E5  120A  158A  	fcall	_time_settings
  1425  0D0A                     l3848:	
  1426                           
  1427                           ;mainLogic.c: 54:     write_cmd(0x98);
  1428  0D0A  3098               	movlw	152
  1429  0D0B  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  1430  0D10                     l3850:	
  1431                           
  1432                           ;mainLogic.c: 55:     set_lower_threshold(2,7);
  1433  0D10  3002               	movlw	2
  1434  0D11  00F3               	movwf	set_lower_threshold@upper_val
  1435  0D12  3000               	movlw	0
  1436  0D13  00F4               	movwf	set_lower_threshold@upper_val+1
  1437  0D14  3007               	movlw	7
  1438  0D15  00F5               	movwf	set_lower_threshold@lower_val
  1439  0D16  3000               	movlw	0
  1440  0D17  00F6               	movwf	set_lower_threshold@lower_val+1
  1441  0D18  120A  158A  20C3  120A  158A  	fcall	_set_lower_threshold
  1442  0D1D                     l3852:	
  1443                           
  1444                           ;mainLogic.c: 56:     set_upper_threshold(2,7);
  1445  0D1D  3002               	movlw	2
  1446  0D1E  00F3               	movwf	set_upper_threshold@upper_val
  1447  0D1F  3000               	movlw	0
  1448  0D20  00F4               	movwf	set_upper_threshold@upper_val+1
  1449  0D21  3007               	movlw	7
  1450  0D22  00F5               	movwf	set_upper_threshold@lower_val
  1451  0D23  3000               	movlw	0
  1452  0D24  00F6               	movwf	set_upper_threshold@lower_val+1
  1453  0D25  120A  158A  2041  120A  158A  	fcall	_set_upper_threshold
  1454  0D2A                     l3854:	
  1455                           
  1456                           ;mainLogic.c: 57:     set_beep_threshhold(buzzer_watcher);
  1457  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0D2C  0841               	movf	_buzzer_watcher,w
  1460  0D2D  160A  118A  25F6  120A  158A  	fcall	_set_beep_threshhold
  1461  0D32                     l3856:	
  1462                           
  1463                           ;mainLogic.c: 58:     reset_alarm();
  1464  0D32  160A  118A  24EA  120A  158A  	fcall	_reset_alarm
  1465  0D37                     l3858:	
  1466                           
  1467                           ;mainLogic.c: 59:     for(int i = 0; i < 7; i++)
  1468  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0D39  01DD               	clrf	main@i
  1471  0D3A  01DE               	clrf	main@i+1
  1472  0D3B                     l3864:	
  1473                           
  1474                           ;mainLogic.c: 60:     write_char(' ');
  1475  0D3B  3020               	movlw	32
  1476  0D3C  160A  118A  25C4  120A  158A  	fcall	_write_char
  1477  0D41                     l3866:	
  1478  0D41  3001               	movlw	1
  1479  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0D44  07DD               	addwf	main@i,f
  1482  0D45  1803               	skipnc
  1483  0D46  0ADE               	incf	main@i+1,f
  1484  0D47  3000               	movlw	0
  1485  0D48  07DE               	addwf	main@i+1,f
  1486  0D49                     l3868:	
  1487  0D49  085E               	movf	main@i+1,w
  1488  0D4A  3A80               	xorlw	128
  1489  0D4B  00FF               	movwf	btemp+1
  1490  0D4C  3080               	movlw	128
  1491  0D4D  027F               	subwf	btemp+1,w
  1492  0D4E  1D03               	skipz
  1493  0D4F  2D52               	goto	u2485
  1494  0D50  3007               	movlw	7
  1495  0D51  025D               	subwf	main@i,w
  1496  0D52                     u2485:	
  1497  0D52  1C03               	skipc
  1498  0D53  2D55               	goto	u2481
  1499  0D54  2D56               	goto	u2480
  1500  0D55                     u2481:	
  1501  0D55  2D3B               	goto	l3864
  1502  0D56                     u2480:	
  1503  0D56                     l3870:	
  1504                           
  1505                           ;mainLogic.c: 61:     day_counter = modulus_func(day_low,8);
  1506  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  1507  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  1508  0D58  0830               	movf	_day_low+1,w
  1509  0D59  00F8               	movwf	modulus_func@x+1
  1510  0D5A  082F               	movf	_day_low,w
  1511  0D5B  00F7               	movwf	modulus_func@x
  1512  0D5C  3008               	movlw	8
  1513  0D5D  00F9               	movwf	modulus_func@y
  1514  0D5E  3000               	movlw	0
  1515  0D5F  00FA               	movwf	modulus_func@y+1
  1516  0D60  160A  118A  24FB  120A  158A  	fcall	_modulus_func
  1517  0D65  0878               	movf	?_modulus_func+1,w
  1518  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0D68  00A8               	movwf	_day_counter+1
  1521  0D69  0877               	movf	?_modulus_func,w
  1522  0D6A  00A7               	movwf	_day_counter
  1523  0D6B                     l3872:	
  1524                           
  1525                           ;mainLogic.c: 62:     display_day(day_counter);
  1526  0D6B  0828               	movf	_day_counter+1,w
  1527  0D6C  00F4               	movwf	display_day@num+1
  1528  0D6D  0827               	movf	_day_counter,w
  1529  0D6E  00F3               	movwf	display_day@num
  1530  0D6F  120A  118A  2030  120A  158A  	fcall	_display_day
  1531  0D74  2C70               	goto	l3794
  1532  0D75  120A  118A  2800   	ljmp	start
  1533  0D78                     __end_of_main:	
  1534                           
  1535                           	psect	text1
  1536  00E5                     __ptext1:	
  1537 ;; *************** function _time_settings *****************
  1538 ;; Defined at:
  1539 ;;		line 165 in file "Button_src.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0
  1555 ;;      Temps:          0       3       0       0       0
  1556 ;;      Totals:         0       3       0       0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    3
  1560 ;; This function calls:
  1561 ;;		_button_delay
  1562 ;;		_incrementor
  1563 ;;		_modulus_func
  1564 ;;		_set_time
  1565 ;;		_time_date_delimiter
  1566 ;;		_time_date_hex_terminator
  1567 ;;		_write_char
  1568 ;;		_write_cmd
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _time_settings
  1576  00E5                     _time_settings:	
  1577  00E5                     l3534:	
  1578                           ;incstack = 0
  1579                           ; Regs used in _time_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1580                           
  1581                           
  1582                           ;Button_src.c: 166:  RC0 = 1;
  1583  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1584  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1585  00E7  1407               	bsf	7,0	;volatile
  1586                           
  1587                           ;Button_src.c: 167:  RC1 = 1;
  1588  00E8  1487               	bsf	7,1	;volatile
  1589                           
  1590                           ;Button_src.c: 168:  RC2 = 0;
  1591  00E9  1107               	bcf	7,2	;volatile
  1592                           
  1593                           ;Button_src.c: 169:  RC3 = 1;
  1594  00EA  1587               	bsf	7,3	;volatile
  1595                           
  1596                           ;Button_src.c: 170:   if (RC4 == 0){
  1597  00EB  1A07               	btfsc	7,4	;volatile
  1598  00EC  28EE               	goto	u2171
  1599  00ED  28EF               	goto	u2170
  1600  00EE                     u2171:	
  1601  00EE  2BD2               	goto	l534
  1602  00EF                     u2170:	
  1603  00EF                     l3536:	
  1604                           
  1605                           ;Button_src.c: 171:       write_cmd(0x1);
  1606  00EF  3001               	movlw	1
  1607  00F0  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  1608  00F5                     l527:	
  1609                           ;Button_src.c: 172:       for(;;){
  1610                           
  1611                           
  1612                           ;Button_src.c: 173:             write_cmd(0x80);
  1613  00F5  3080               	movlw	128
  1614  00F6  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  1615                           
  1616                           ;Button_src.c: 174:             write_char('T');
  1617  00FB  3054               	movlw	84
  1618  00FC  160A  118A  25C4  120A  118A  	fcall	_write_char
  1619                           
  1620                           ;Button_src.c: 175:             write_char('i');
  1621  0101  3069               	movlw	105
  1622  0102  160A  118A  25C4  120A  118A  	fcall	_write_char
  1623                           
  1624                           ;Button_src.c: 176:             write_char('m');
  1625  0107  306D               	movlw	109
  1626  0108  160A  118A  25C4  120A  118A  	fcall	_write_char
  1627                           
  1628                           ;Button_src.c: 177:             write_char('e');
  1629  010D  3065               	movlw	101
  1630  010E  160A  118A  25C4  120A  118A  	fcall	_write_char
  1631                           
  1632                           ;Button_src.c: 178:             write_char('_');
  1633  0113  305F               	movlw	95
  1634  0114  160A  118A  25C4  120A  118A  	fcall	_write_char
  1635                           
  1636                           ;Button_src.c: 179:             write_char('S');
  1637  0119  3053               	movlw	83
  1638  011A  160A  118A  25C4  120A  118A  	fcall	_write_char
  1639                           
  1640                           ;Button_src.c: 180:             write_char('e');
  1641  011F  3065               	movlw	101
  1642  0120  160A  118A  25C4  120A  118A  	fcall	_write_char
  1643                           
  1644                           ;Button_src.c: 181:             write_char('t');
  1645  0125  3074               	movlw	116
  1646  0126  160A  118A  25C4  120A  118A  	fcall	_write_char
  1647                           
  1648                           ;Button_src.c: 182:             write_char('t');
  1649  012B  3074               	movlw	116
  1650  012C  160A  118A  25C4  120A  118A  	fcall	_write_char
  1651                           
  1652                           ;Button_src.c: 183:             write_char('i');
  1653  0131  3069               	movlw	105
  1654  0132  160A  118A  25C4  120A  118A  	fcall	_write_char
  1655                           
  1656                           ;Button_src.c: 184:             write_char('n');
  1657  0137  306E               	movlw	110
  1658  0138  160A  118A  25C4  120A  118A  	fcall	_write_char
  1659                           
  1660                           ;Button_src.c: 185:             write_char('g');
  1661  013D  3067               	movlw	103
  1662  013E  160A  118A  25C4  120A  118A  	fcall	_write_char
  1663                           
  1664                           ;Button_src.c: 186:             write_char('s');
  1665  0143  3073               	movlw	115
  1666  0144  160A  118A  25C4  120A  118A  	fcall	_write_char
  1667  0149                     l3538:	
  1668                           
  1669                           ;Button_src.c: 188:             RC0 = 1;
  1670  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1671  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1672  014B  1407               	bsf	7,0	;volatile
  1673  014C                     l3540:	
  1674                           
  1675                           ;Button_src.c: 189:             RC1 = 0;
  1676  014C  1087               	bcf	7,1	;volatile
  1677  014D                     l3542:	
  1678                           
  1679                           ;Button_src.c: 190:             RC2 = 1;
  1680  014D  1507               	bsf	7,2	;volatile
  1681  014E                     l3544:	
  1682                           
  1683                           ;Button_src.c: 191:             RC3 = 1;
  1684  014E  1587               	bsf	7,3	;volatile
  1685  014F                     l3546:	
  1686                           
  1687                           ;Button_src.c: 193:             if(RC7 == 0 && b =='x'){
  1688  014F  1B87               	btfsc	7,7	;volatile
  1689  0150  2952               	goto	u2181
  1690  0151  2953               	goto	u2180
  1691  0152                     u2181:	
  1692  0152  29B5               	goto	l3568
  1693  0153                     u2180:	
  1694  0153                     l3548:	
  1695  0153  3078               	movlw	120
  1696  0154  0647               	xorwf	_b,w
  1697  0155  1D03               	btfss	3,2
  1698  0156  2958               	goto	u2191
  1699  0157  2959               	goto	u2190
  1700  0158                     u2191:	
  1701  0158  29B5               	goto	l3568
  1702  0159                     u2190:	
  1703  0159                     l3550:	
  1704                           
  1705                           ;Button_src.c: 194:                     a++;
  1706  0159  3001               	movlw	1
  1707  015A  00D8               	movwf	??_time_settings
  1708  015B  0858               	movf	??_time_settings,w
  1709  015C  07C8               	addwf	_a,f
  1710  015D                     l3552:	
  1711                           
  1712                           ;Button_src.c: 195:                     x++ ;
  1713  015D  3001               	movlw	1
  1714  015E  07B5               	addwf	_x,f
  1715  015F  1803               	skipnc
  1716  0160  0AB6               	incf	_x+1,f
  1717  0161  3000               	movlw	0
  1718  0162  07B6               	addwf	_x+1,f
  1719  0163                     l3554:	
  1720                           
  1721                           ;Button_src.c: 196:                     x = modulus_func(x,10);
  1722  0163  0836               	movf	_x+1,w
  1723  0164  00F8               	movwf	modulus_func@x+1
  1724  0165  0835               	movf	_x,w
  1725  0166  00F7               	movwf	modulus_func@x
  1726  0167  300A               	movlw	10
  1727  0168  00F9               	movwf	modulus_func@y
  1728  0169  3000               	movlw	0
  1729  016A  00FA               	movwf	modulus_func@y+1
  1730  016B  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  1731  0170  0878               	movf	?_modulus_func+1,w
  1732  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0173  00B6               	movwf	_x+1
  1735  0174  0877               	movf	?_modulus_func,w
  1736  0175  00B5               	movwf	_x
  1737  0176                     l3556:	
  1738                           
  1739                           ;Button_src.c: 197:                     y = incrementor(y,x,'9');
  1740  0176  0834               	movf	_y+1,w
  1741  0177  00D4               	movwf	incrementor@upper_val+1
  1742  0178  0833               	movf	_y,w
  1743  0179  00D3               	movwf	incrementor@upper_val
  1744  017A  0836               	movf	_x+1,w
  1745  017B  00D6               	movwf	incrementor@lower_val+1
  1746  017C  0835               	movf	_x,w
  1747  017D  00D5               	movwf	incrementor@lower_val
  1748  017E  3039               	movlw	57
  1749  017F  00D8               	movwf	??_time_settings
  1750  0180  0858               	movf	??_time_settings,w
  1751  0181  00D7               	movwf	incrementor@z
  1752  0182  160A  118A  2697  120A  118A  	fcall	_incrementor
  1753  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0189  00D9               	movwf	??_time_settings+1
  1756  018A  01DA               	clrf	??_time_settings+2
  1757  018B  0859               	movf	??_time_settings+1,w
  1758  018C  00B3               	movwf	_y
  1759  018D  085A               	movf	??_time_settings+2,w
  1760  018E  00B4               	movwf	_y+1
  1761  018F                     l3558:	
  1762                           
  1763                           ;Button_src.c: 199:                     a = time_date_hex_terminator(a,'T');
  1764  018F  3054               	movlw	84
  1765  0190  00D8               	movwf	??_time_settings
  1766  0191  0858               	movf	??_time_settings,w
  1767  0192  00F0               	movwf	time_date_hex_terminator@limiter
  1768  0193  0848               	movf	_a,w
  1769  0194  160A  118A  250D  120A  118A  	fcall	_time_date_hex_terminator
  1770  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1771  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1772  019B  00D9               	movwf	??_time_settings+1
  1773  019C  0859               	movf	??_time_settings+1,w
  1774  019D  00C8               	movwf	_a
  1775  019E                     l3560:	
  1776                           
  1777                           ;Button_src.c: 200:                     if(y == 2 && x == 4){
  1778  019E  3002               	movlw	2
  1779  019F  0633               	xorwf	_y,w
  1780  01A0  0434               	iorwf	_y+1,w
  1781  01A1  1D03               	btfss	3,2
  1782  01A2  29A4               	goto	u2201
  1783  01A3  29A5               	goto	u2200
  1784  01A4                     u2201:	
  1785  01A4  29B0               	goto	l3566
  1786  01A5                     u2200:	
  1787  01A5                     l3562:	
  1788  01A5  3004               	movlw	4
  1789  01A6  0635               	xorwf	_x,w
  1790  01A7  0436               	iorwf	_x+1,w
  1791  01A8  1D03               	btfss	3,2
  1792  01A9  29AB               	goto	u2211
  1793  01AA  29AC               	goto	u2210
  1794  01AB                     u2211:	
  1795  01AB  29B0               	goto	l3566
  1796  01AC                     u2210:	
  1797  01AC                     l3564:	
  1798                           
  1799                           ;Button_src.c: 201:                         x = 0;
  1800  01AC  01B5               	clrf	_x
  1801  01AD  01B6               	clrf	_x+1
  1802                           
  1803                           ;Button_src.c: 202:                         y = 0;
  1804  01AE  01B3               	clrf	_y
  1805  01AF  01B4               	clrf	_y+1
  1806  01B0                     l3566:	
  1807                           
  1808                           ;Button_src.c: 204:                     button_delay();
  1809  01B0  160A  118A  256B  120A  118A  	fcall	_button_delay
  1810  01B5                     l3568:	
  1811                           
  1812                           ;Button_src.c: 206:             if(RC7==0 && b == 'y'){
  1813  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1814  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1815  01B7  1B87               	btfsc	7,7	;volatile
  1816  01B8  29BA               	goto	u2221
  1817  01B9  29BB               	goto	u2220
  1818  01BA                     u2221:	
  1819  01BA  2A0E               	goto	l3590
  1820  01BB                     u2220:	
  1821  01BB                     l3570:	
  1822  01BB  3079               	movlw	121
  1823  01BC  0647               	xorwf	_b,w
  1824  01BD  1D03               	btfss	3,2
  1825  01BE  29C0               	goto	u2231
  1826  01BF  29C1               	goto	u2230
  1827  01C0                     u2231:	
  1828  01C0  2A0E               	goto	l3590
  1829  01C1                     u2230:	
  1830  01C1                     l3572:	
  1831                           
  1832                           ;Button_src.c: 207:                     c++;
  1833  01C1  3001               	movlw	1
  1834  01C2  00D8               	movwf	??_time_settings
  1835  01C3  0858               	movf	??_time_settings,w
  1836  01C4  07C6               	addwf	_c,f
  1837  01C5                     l3574:	
  1838                           
  1839                           ;Button_src.c: 208:                     t++;
  1840  01C5  3001               	movlw	1
  1841  01C6  07B9               	addwf	_t,f
  1842  01C7  1803               	skipnc
  1843  01C8  0ABA               	incf	_t+1,f
  1844  01C9  3000               	movlw	0
  1845  01CA  07BA               	addwf	_t+1,f
  1846  01CB                     l3576:	
  1847                           
  1848                           ;Button_src.c: 209:                     t = modulus_func(t,10);
  1849  01CB  083A               	movf	_t+1,w
  1850  01CC  00F8               	movwf	modulus_func@x+1
  1851  01CD  0839               	movf	_t,w
  1852  01CE  00F7               	movwf	modulus_func@x
  1853  01CF  300A               	movlw	10
  1854  01D0  00F9               	movwf	modulus_func@y
  1855  01D1  3000               	movlw	0
  1856  01D2  00FA               	movwf	modulus_func@y+1
  1857  01D3  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  1858  01D8  0878               	movf	?_modulus_func+1,w
  1859  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1860  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1861  01DB  00BA               	movwf	_t+1
  1862  01DC  0877               	movf	?_modulus_func,w
  1863  01DD  00B9               	movwf	_t
  1864  01DE                     l3578:	
  1865                           
  1866                           ;Button_src.c: 210:                     w = incrementor(w,t,'9');
  1867  01DE  0838               	movf	_w+1,w
  1868  01DF  00D4               	movwf	incrementor@upper_val+1
  1869  01E0  0837               	movf	_w,w
  1870  01E1  00D3               	movwf	incrementor@upper_val
  1871  01E2  083A               	movf	_t+1,w
  1872  01E3  00D6               	movwf	incrementor@lower_val+1
  1873  01E4  0839               	movf	_t,w
  1874  01E5  00D5               	movwf	incrementor@lower_val
  1875  01E6  3039               	movlw	57
  1876  01E7  00D8               	movwf	??_time_settings
  1877  01E8  0858               	movf	??_time_settings,w
  1878  01E9  00D7               	movwf	incrementor@z
  1879  01EA  160A  118A  2697  120A  118A  	fcall	_incrementor
  1880  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1881  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1882  01F1  00D9               	movwf	??_time_settings+1
  1883  01F2  01DA               	clrf	??_time_settings+2
  1884  01F3  0859               	movf	??_time_settings+1,w
  1885  01F4  00B7               	movwf	_w
  1886  01F5  085A               	movf	??_time_settings+2,w
  1887  01F6  00B8               	movwf	_w+1
  1888  01F7                     l3580:	
  1889                           
  1890                           ;Button_src.c: 211:                     if(c == (0x59 + 1)){
  1891  01F7  305A               	movlw	90
  1892  01F8  0646               	xorwf	_c,w
  1893  01F9  1D03               	btfss	3,2
  1894  01FA  29FC               	goto	u2241
  1895  01FB  29FD               	goto	u2240
  1896  01FC                     u2241:	
  1897  01FC  29FE               	goto	l3584
  1898  01FD                     u2240:	
  1899  01FD                     l3582:	
  1900                           
  1901                           ;Button_src.c: 212:                         c = 0x00;
  1902  01FD  01C6               	clrf	_c
  1903  01FE                     l3584:	
  1904                           
  1905                           ;Button_src.c: 214:                     if(w == 6){
  1906  01FE  3006               	movlw	6
  1907  01FF  0637               	xorwf	_w,w
  1908  0200  0438               	iorwf	_w+1,w
  1909  0201  1D03               	btfss	3,2
  1910  0202  2A04               	goto	u2251
  1911  0203  2A05               	goto	u2250
  1912  0204                     u2251:	
  1913  0204  2A09               	goto	l3588
  1914  0205                     u2250:	
  1915  0205                     l3586:	
  1916                           
  1917                           ;Button_src.c: 215:                         w = 0;
  1918  0205  01B7               	clrf	_w
  1919  0206  01B8               	clrf	_w+1
  1920                           
  1921                           ;Button_src.c: 216:                         t = 0;
  1922  0207  01B9               	clrf	_t
  1923  0208  01BA               	clrf	_t+1
  1924  0209                     l3588:	
  1925                           
  1926                           ;Button_src.c: 218:                     button_delay();
  1927  0209  160A  118A  256B  120A  118A  	fcall	_button_delay
  1928  020E                     l3590:	
  1929                           
  1930                           ;Button_src.c: 221:              write_cmd(0x88);
  1931  020E  3088               	movlw	136
  1932  020F  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  1933  0214                     l3592:	
  1934                           
  1935                           ;Button_src.c: 222:                     table[2] = a;
  1936  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0216  0848               	movf	_a,w
  1939  0217  00D8               	movwf	??_time_settings
  1940  0218  0858               	movf	??_time_settings,w
  1941  0219  00E1               	movwf	_table+2
  1942  021A                     l3594:	
  1943                           
  1944                           ;Button_src.c: 223:                     table[1] = c;
  1945  021A  0846               	movf	_c,w
  1946  021B  00D8               	movwf	??_time_settings
  1947  021C  0858               	movf	??_time_settings,w
  1948  021D  00E0               	movwf	_table+1
  1949  021E                     l3596:	
  1950                           
  1951                           ;Button_src.c: 228:                     a = time_date_delimiter(a,0x11,'9');
  1952  021E  3011               	movlw	17
  1953  021F  00D8               	movwf	??_time_settings
  1954  0220  0858               	movf	??_time_settings,w
  1955  0221  00F0               	movwf	time_date_delimiter@hex
  1956  0222  3039               	movlw	57
  1957  0223  00D9               	movwf	??_time_settings+1
  1958  0224  0859               	movf	??_time_settings+1,w
  1959  0225  00F1               	movwf	time_date_delimiter@limiter
  1960  0226  0848               	movf	_a,w
  1961  0227  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  1962  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1963  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1964  022E  00DA               	movwf	??_time_settings+2
  1965  022F  085A               	movf	??_time_settings+2,w
  1966  0230  00C8               	movwf	_a
  1967  0231                     l3598:	
  1968                           
  1969                           ;Button_src.c: 229:                     a = time_date_delimiter(a,0x21,'J');
  1970  0231  3021               	movlw	33
  1971  0232  00D8               	movwf	??_time_settings
  1972  0233  0858               	movf	??_time_settings,w
  1973  0234  00F0               	movwf	time_date_delimiter@hex
  1974  0235  304A               	movlw	74
  1975  0236  00D9               	movwf	??_time_settings+1
  1976  0237  0859               	movf	??_time_settings+1,w
  1977  0238  00F1               	movwf	time_date_delimiter@limiter
  1978  0239  0848               	movf	_a,w
  1979  023A  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  1980  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0241  00DA               	movwf	??_time_settings+2
  1983  0242  085A               	movf	??_time_settings+2,w
  1984  0243  00C8               	movwf	_a
  1985  0244                     l3600:	
  1986                           
  1987                           ;Button_src.c: 231:                     c = time_date_delimiter(c,0x11,'9');
  1988  0244  3011               	movlw	17
  1989  0245  00D8               	movwf	??_time_settings
  1990  0246  0858               	movf	??_time_settings,w
  1991  0247  00F0               	movwf	time_date_delimiter@hex
  1992  0248  3039               	movlw	57
  1993  0249  00D9               	movwf	??_time_settings+1
  1994  024A  0859               	movf	??_time_settings+1,w
  1995  024B  00F1               	movwf	time_date_delimiter@limiter
  1996  024C  0846               	movf	_c,w
  1997  024D  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  1998  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0254  00DA               	movwf	??_time_settings+2
  2001  0255  085A               	movf	??_time_settings+2,w
  2002  0256  00C6               	movwf	_c
  2003  0257                     l3602:	
  2004                           
  2005                           ;Button_src.c: 232:                     c = time_date_delimiter(c,0x21,'J');
  2006  0257  3021               	movlw	33
  2007  0258  00D8               	movwf	??_time_settings
  2008  0259  0858               	movf	??_time_settings,w
  2009  025A  00F0               	movwf	time_date_delimiter@hex
  2010  025B  304A               	movlw	74
  2011  025C  00D9               	movwf	??_time_settings+1
  2012  025D  0859               	movf	??_time_settings+1,w
  2013  025E  00F1               	movwf	time_date_delimiter@limiter
  2014  025F  0846               	movf	_c,w
  2015  0260  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  2016  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0267  00DA               	movwf	??_time_settings+2
  2019  0268  085A               	movf	??_time_settings+2,w
  2020  0269  00C6               	movwf	_c
  2021  026A                     l3604:	
  2022                           
  2023                           ;Button_src.c: 233:                     c = time_date_delimiter(c,0x31,'Y');
  2024  026A  3031               	movlw	49
  2025  026B  00D8               	movwf	??_time_settings
  2026  026C  0858               	movf	??_time_settings,w
  2027  026D  00F0               	movwf	time_date_delimiter@hex
  2028  026E  3059               	movlw	89
  2029  026F  00D9               	movwf	??_time_settings+1
  2030  0270  0859               	movf	??_time_settings+1,w
  2031  0271  00F1               	movwf	time_date_delimiter@limiter
  2032  0272  0846               	movf	_c,w
  2033  0273  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  2034  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2036  027A  00DA               	movwf	??_time_settings+2
  2037  027B  085A               	movf	??_time_settings+2,w
  2038  027C  00C6               	movwf	_c
  2039  027D                     l3606:	
  2040                           
  2041                           ;Button_src.c: 234:                     c = time_date_delimiter(c,0x41,'j');
  2042  027D  3041               	movlw	65
  2043  027E  00D8               	movwf	??_time_settings
  2044  027F  0858               	movf	??_time_settings,w
  2045  0280  00F0               	movwf	time_date_delimiter@hex
  2046  0281  306A               	movlw	106
  2047  0282  00D9               	movwf	??_time_settings+1
  2048  0283  0859               	movf	??_time_settings+1,w
  2049  0284  00F1               	movwf	time_date_delimiter@limiter
  2050  0285  0846               	movf	_c,w
  2051  0286  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  2052  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2053  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2054  028D  00DA               	movwf	??_time_settings+2
  2055  028E  085A               	movf	??_time_settings+2,w
  2056  028F  00C6               	movwf	_c
  2057  0290                     l3608:	
  2058                           
  2059                           ;Button_src.c: 235:                     c = time_date_delimiter(c,0x51,'z');
  2060  0290  3051               	movlw	81
  2061  0291  00D8               	movwf	??_time_settings
  2062  0292  0858               	movf	??_time_settings,w
  2063  0293  00F0               	movwf	time_date_delimiter@hex
  2064  0294  307A               	movlw	122
  2065  0295  00D9               	movwf	??_time_settings+1
  2066  0296  0859               	movf	??_time_settings+1,w
  2067  0297  00F1               	movwf	time_date_delimiter@limiter
  2068  0298  0846               	movf	_c,w
  2069  0299  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  2070  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2071  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2072  02A0  00DA               	movwf	??_time_settings+2
  2073  02A1  085A               	movf	??_time_settings+2,w
  2074  02A2  00C6               	movwf	_c
  2075  02A3                     l3610:	
  2076                           
  2077                           ;Button_src.c: 237:                   RC0 = 0;
  2078  02A3  1007               	bcf	7,0	;volatile
  2079  02A4                     l3612:	
  2080                           
  2081                           ;Button_src.c: 238:                   RC1 = 1;
  2082  02A4  1487               	bsf	7,1	;volatile
  2083  02A5                     l3614:	
  2084                           
  2085                           ;Button_src.c: 239:                   RC2 = 1;
  2086  02A5  1507               	bsf	7,2	;volatile
  2087  02A6                     l3616:	
  2088                           
  2089                           ;Button_src.c: 240:                   RC3 = 1;
  2090  02A6  1587               	bsf	7,3	;volatile
  2091  02A7                     l3618:	
  2092                           
  2093                           ;Button_src.c: 241:                     if (RC6 == 0 ){
  2094  02A7  1B07               	btfsc	7,6	;volatile
  2095  02A8  2AAA               	goto	u2261
  2096  02A9  2AAB               	goto	u2260
  2097  02AA                     u2261:	
  2098  02AA  2AC3               	goto	l533
  2099  02AB                     u2260:	
  2100  02AB                     l3620:	
  2101                           
  2102                           ;Button_src.c: 242:                           write_cmd(0x1);
  2103  02AB  3001               	movlw	1
  2104  02AC  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  2105  02B1                     l3622:	
  2106                           
  2107                           ;Button_src.c: 243:                           a = 0x00;
  2108  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2109  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2110  02B3  01C8               	clrf	_a
  2111  02B4                     l3624:	
  2112                           
  2113                           ;Button_src.c: 244:                           c = 0x00;
  2114  02B4  01C6               	clrf	_c
  2115  02B5                     l3626:	
  2116                           
  2117                           ;Button_src.c: 245:                           x = 0;
  2118  02B5  01B5               	clrf	_x
  2119  02B6  01B6               	clrf	_x+1
  2120  02B7                     l3628:	
  2121                           
  2122                           ;Button_src.c: 246:                           y = 0;
  2123  02B7  01B3               	clrf	_y
  2124  02B8  01B4               	clrf	_y+1
  2125  02B9                     l3630:	
  2126                           
  2127                           ;Button_src.c: 247:                           w = 0;
  2128  02B9  01B7               	clrf	_w
  2129  02BA  01B8               	clrf	_w+1
  2130  02BB                     l3632:	
  2131                           
  2132                           ;Button_src.c: 248:                           t = 0;
  2133  02BB  01B9               	clrf	_t
  2134  02BC  01BA               	clrf	_t+1
  2135  02BD                     l3634:	
  2136                           
  2137                           ;Button_src.c: 249:                           set_time();
  2138  02BD  160A  118A  26C3  120A  118A  	fcall	_set_time
  2139  02C2  2BD2               	goto	l534
  2140  02C3                     l533:	
  2141                           ;Button_src.c: 251:                             }
  2142                           
  2143                           
  2144                           ;Button_src.c: 252:                   RC0 = 1;
  2145  02C3  1407               	bsf	7,0	;volatile
  2146                           
  2147                           ;Button_src.c: 253:                   RC1 = 1;
  2148  02C4  1487               	bsf	7,1	;volatile
  2149                           
  2150                           ;Button_src.c: 254:                   RC2 = 0;
  2151  02C5  1107               	bcf	7,2	;volatile
  2152                           
  2153                           ;Button_src.c: 255:                   RC3 = 1;
  2154  02C6  1587               	bsf	7,3	;volatile
  2155  02C7                     l3638:	
  2156                           
  2157                           ;Button_src.c: 256:                   z = modulus_func(z,2);
  2158  02C7  0832               	movf	_z+1,w
  2159  02C8  00F8               	movwf	modulus_func@x+1
  2160  02C9  0831               	movf	_z,w
  2161  02CA  00F7               	movwf	modulus_func@x
  2162  02CB  3002               	movlw	2
  2163  02CC  00F9               	movwf	modulus_func@y
  2164  02CD  3000               	movlw	0
  2165  02CE  00FA               	movwf	modulus_func@y+1
  2166  02CF  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  2167  02D4  0878               	movf	?_modulus_func+1,w
  2168  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2169  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2170  02D7  00B2               	movwf	_z+1
  2171  02D8  0877               	movf	?_modulus_func,w
  2172  02D9  00B1               	movwf	_z
  2173  02DA                     l3640:	
  2174                           
  2175                           ;Button_src.c: 257:                   if(RC4 == 0 && z ==0){
  2176  02DA  1A07               	btfsc	7,4	;volatile
  2177  02DB  2ADD               	goto	u2271
  2178  02DC  2ADE               	goto	u2270
  2179  02DD                     u2271:	
  2180  02DD  2B1B               	goto	l3650
  2181  02DE                     u2270:	
  2182  02DE                     l3642:	
  2183  02DE  0831               	movf	_z,w
  2184  02DF  0432               	iorwf	_z+1,w
  2185  02E0  1D03               	btfss	3,2
  2186  02E1  2AE3               	goto	u2281
  2187  02E2  2AE4               	goto	u2280
  2188  02E3                     u2281:	
  2189  02E3  2B1B               	goto	l3650
  2190  02E4                     u2280:	
  2191  02E4                     l3644:	
  2192                           
  2193                           ;Button_src.c: 258:                       write_cmd(0x90);
  2194  02E4  3090               	movlw	144
  2195  02E5  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  2196                           
  2197                           ;Button_src.c: 259:                       write_char('H');
  2198  02EA  3048               	movlw	72
  2199  02EB  160A  118A  25C4  120A  118A  	fcall	_write_char
  2200                           
  2201                           ;Button_src.c: 260:                       write_char('o');
  2202  02F0  306F               	movlw	111
  2203  02F1  160A  118A  25C4  120A  118A  	fcall	_write_char
  2204                           
  2205                           ;Button_src.c: 261:                       write_char('u');
  2206  02F6  3075               	movlw	117
  2207  02F7  160A  118A  25C4  120A  118A  	fcall	_write_char
  2208                           
  2209                           ;Button_src.c: 262:                       write_char('r');
  2210  02FC  3072               	movlw	114
  2211  02FD  160A  118A  25C4  120A  118A  	fcall	_write_char
  2212                           
  2213                           ;Button_src.c: 263:                       write_char(':');
  2214  0302  303A               	movlw	58
  2215  0303  160A  118A  25C4  120A  118A  	fcall	_write_char
  2216  0308                     l3646:	
  2217                           
  2218                           ;Button_src.c: 264:                       b = 'x';
  2219  0308  3078               	movlw	120
  2220  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2221  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2222  030B  00D8               	movwf	??_time_settings
  2223  030C  0858               	movf	??_time_settings,w
  2224  030D  00C7               	movwf	_b
  2225  030E                     l3648:	
  2226                           
  2227                           ;Button_src.c: 265:                       button_delay();
  2228  030E  160A  118A  256B  120A  118A  	fcall	_button_delay
  2229                           
  2230                           ;Button_src.c: 266:                       z++;
  2231  0313  3001               	movlw	1
  2232  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2233  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2234  0316  07B1               	addwf	_z,f
  2235  0317  1803               	skipnc
  2236  0318  0AB2               	incf	_z+1,f
  2237  0319  3000               	movlw	0
  2238  031A  07B2               	addwf	_z+1,f
  2239  031B                     l3650:	
  2240                           
  2241                           ;Button_src.c: 268:                   RC0 = 1;
  2242  031B  1407               	bsf	7,0	;volatile
  2243  031C                     l3652:	
  2244                           
  2245                           ;Button_src.c: 269:                   RC1 = 1;
  2246  031C  1487               	bsf	7,1	;volatile
  2247  031D                     l3654:	
  2248                           
  2249                           ;Button_src.c: 270:                   RC2 = 0;
  2250  031D  1107               	bcf	7,2	;volatile
  2251  031E                     l3656:	
  2252                           
  2253                           ;Button_src.c: 271:                   RC3 = 1;
  2254  031E  1587               	bsf	7,3	;volatile
  2255  031F                     l3658:	
  2256                           
  2257                           ;Button_src.c: 273:                   if(RC4 == 0&& z ==1){
  2258  031F  1A07               	btfsc	7,4	;volatile
  2259  0320  2B22               	goto	u2291
  2260  0321  2B23               	goto	u2290
  2261  0322                     u2291:	
  2262  0322  2B5E               	goto	l536
  2263  0323                     u2290:	
  2264  0323                     l3660:	
  2265  0323  0331               	decf	_z,w
  2266  0324  0432               	iorwf	_z+1,w
  2267  0325  1D03               	btfss	3,2
  2268  0326  2B28               	goto	u2301
  2269  0327  2B29               	goto	u2300
  2270  0328                     u2301:	
  2271  0328  2B5E               	goto	l536
  2272  0329                     u2300:	
  2273  0329                     l3662:	
  2274                           
  2275                           ;Button_src.c: 274:                     z++;
  2276  0329  3001               	movlw	1
  2277  032A  07B1               	addwf	_z,f
  2278  032B  1803               	skipnc
  2279  032C  0AB2               	incf	_z+1,f
  2280  032D  3000               	movlw	0
  2281  032E  07B2               	addwf	_z+1,f
  2282  032F                     l3664:	
  2283                           
  2284                           ;Button_src.c: 275:                     button_delay();
  2285  032F  160A  118A  256B  120A  118A  	fcall	_button_delay
  2286  0334                     l3666:	
  2287                           
  2288                           ;Button_src.c: 276:                     write_cmd(0x90);
  2289  0334  3090               	movlw	144
  2290  0335  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  2291  033A                     l3668:	
  2292                           
  2293                           ;Button_src.c: 277:                     write_char('M');
  2294  033A  304D               	movlw	77
  2295  033B  160A  118A  25C4  120A  118A  	fcall	_write_char
  2296  0340                     l3670:	
  2297                           
  2298                           ;Button_src.c: 278:                     write_char('i');
  2299  0340  3069               	movlw	105
  2300  0341  160A  118A  25C4  120A  118A  	fcall	_write_char
  2301  0346                     l3672:	
  2302                           
  2303                           ;Button_src.c: 279:                     write_char('n');
  2304  0346  306E               	movlw	110
  2305  0347  160A  118A  25C4  120A  118A  	fcall	_write_char
  2306  034C                     l3674:	
  2307                           
  2308                           ;Button_src.c: 280:                     write_char('s');
  2309  034C  3073               	movlw	115
  2310  034D  160A  118A  25C4  120A  118A  	fcall	_write_char
  2311  0352                     l3676:	
  2312                           
  2313                           ;Button_src.c: 281:                     write_char(':');
  2314  0352  303A               	movlw	58
  2315  0353  160A  118A  25C4  120A  118A  	fcall	_write_char
  2316  0358                     l3678:	
  2317                           
  2318                           ;Button_src.c: 282:                     b = 'y';
  2319  0358  3079               	movlw	121
  2320  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2321  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2322  035B  00D8               	movwf	??_time_settings
  2323  035C  0858               	movf	??_time_settings,w
  2324  035D  00C7               	movwf	_b
  2325  035E                     l536:	
  2326                           ;Button_src.c: 283:                   }
  2327                           
  2328                           
  2329                           ;Button_src.c: 284:                    write_cmd(0x88);
  2330  035E  3088               	movlw	136
  2331  035F  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  2332  0364                     l3680:	
  2333                           
  2334                           ;Button_src.c: 291:                   RC0 = 1;
  2335  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2336  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2337  0366  1407               	bsf	7,0	;volatile
  2338  0367                     l3682:	
  2339                           
  2340                           ;Button_src.c: 292:                   RC1 = 1;
  2341  0367  1487               	bsf	7,1	;volatile
  2342  0368                     l3684:	
  2343                           
  2344                           ;Button_src.c: 293:                   RC2 = 0;
  2345  0368  1107               	bcf	7,2	;volatile
  2346  0369                     l3686:	
  2347                           
  2348                           ;Button_src.c: 294:                   RC3 = 1;
  2349  0369  1587               	bsf	7,3	;volatile
  2350                           
  2351                           ;Button_src.c: 296:              write_cmd(0x88);
  2352  036A  3088               	movlw	136
  2353  036B  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  2354                           
  2355                           ;Button_src.c: 297:              write_char('T');
  2356  0370  3054               	movlw	84
  2357  0371  160A  118A  25C4  120A  118A  	fcall	_write_char
  2358                           
  2359                           ;Button_src.c: 298:              write_char('i');
  2360  0376  3069               	movlw	105
  2361  0377  160A  118A  25C4  120A  118A  	fcall	_write_char
  2362                           
  2363                           ;Button_src.c: 299:              write_char('m');
  2364  037C  306D               	movlw	109
  2365  037D  160A  118A  25C4  120A  118A  	fcall	_write_char
  2366                           
  2367                           ;Button_src.c: 300:              write_char('e');
  2368  0382  3065               	movlw	101
  2369  0383  160A  118A  25C4  120A  118A  	fcall	_write_char
  2370                           
  2371                           ;Button_src.c: 301:              write_char(':');
  2372  0388  303A               	movlw	58
  2373  0389  160A  118A  25C4  120A  118A  	fcall	_write_char
  2374                           
  2375                           ;Button_src.c: 302:              write_char(y + '0');
  2376  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2377  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0390  0833               	movf	_y,w
  2379  0391  3E30               	addlw	48
  2380  0392  160A  118A  25C4  120A  118A  	fcall	_write_char
  2381                           
  2382                           ;Button_src.c: 303:              write_char(x + '0');
  2383  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0399  0835               	movf	_x,w
  2386  039A  3E30               	addlw	48
  2387  039B  160A  118A  25C4  120A  118A  	fcall	_write_char
  2388                           
  2389                           ;Button_src.c: 304:              write_char(':');
  2390  03A0  303A               	movlw	58
  2391  03A1  160A  118A  25C4  120A  118A  	fcall	_write_char
  2392                           
  2393                           ;Button_src.c: 305:              write_char(w + '0');
  2394  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2395  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2396  03A8  0837               	movf	_w,w
  2397  03A9  3E30               	addlw	48
  2398  03AA  160A  118A  25C4  120A  118A  	fcall	_write_char
  2399                           
  2400                           ;Button_src.c: 306:              write_char(t + '0');
  2401  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2402  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2403  03B1  0839               	movf	_t,w
  2404  03B2  3E30               	addlw	48
  2405  03B3  160A  118A  25C4  120A  118A  	fcall	_write_char
  2406  03B8                     l3688:	
  2407                           
  2408                           ;Button_src.c: 308:             RC0 = 0;
  2409  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2410  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2411  03BA  1007               	bcf	7,0	;volatile
  2412  03BB                     l3690:	
  2413                           
  2414                           ;Button_src.c: 309:             RC1 = 1;
  2415  03BB  1487               	bsf	7,1	;volatile
  2416  03BC                     l3692:	
  2417                           
  2418                           ;Button_src.c: 310:             RC2 = 1;
  2419  03BC  1507               	bsf	7,2	;volatile
  2420  03BD                     l3694:	
  2421                           
  2422                           ;Button_src.c: 311:             RC3 = 1;
  2423  03BD  1587               	bsf	7,3	;volatile
  2424  03BE                     l3696:	
  2425                           
  2426                           ;Button_src.c: 312:             if (RC7 == 0 ){
  2427  03BE  1B87               	btfsc	7,7	;volatile
  2428  03BF  2BC1               	goto	u2311
  2429  03C0  2BC2               	goto	u2310
  2430  03C1                     u2311:	
  2431  03C1  28F5               	goto	l527
  2432  03C2                     u2310:	
  2433  03C2                     l3698:	
  2434                           
  2435                           ;Button_src.c: 313:             a = 0x00;
  2436  03C2  01C8               	clrf	_a
  2437                           
  2438                           ;Button_src.c: 314:             c = 0x00;
  2439  03C3  01C6               	clrf	_c
  2440                           
  2441                           ;Button_src.c: 315:             x = 0;
  2442  03C4  01B5               	clrf	_x
  2443  03C5  01B6               	clrf	_x+1
  2444                           
  2445                           ;Button_src.c: 316:             y = 0;
  2446  03C6  01B3               	clrf	_y
  2447  03C7  01B4               	clrf	_y+1
  2448                           
  2449                           ;Button_src.c: 317:             w = 0;
  2450  03C8  01B7               	clrf	_w
  2451  03C9  01B8               	clrf	_w+1
  2452                           
  2453                           ;Button_src.c: 318:             t = 0;
  2454  03CA  01B9               	clrf	_t
  2455  03CB  01BA               	clrf	_t+1
  2456  03CC                     l3700:	
  2457                           
  2458                           ;Button_src.c: 319:             write_cmd(0x1);
  2459  03CC  3001               	movlw	1
  2460  03CD  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  2461  03D2                     l534:	
  2462                           ;Button_src.c: 320:             break;
  2463                           
  2464  03D2  0008               	return
  2465  03D3                     __end_of_time_settings:	
  2466                           
  2467                           	psect	text2
  2468  0D78                     __ptext2:	
  2469 ;; *************** function _thermometer_threshhold_settings *****************
  2470 ;; Defined at:
  2471 ;;		line 21 in file "Button_src.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  i               2    8[BANK0 ] int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         0       2       0       0       0
  2487 ;;      Temps:          0       3       0       0       0
  2488 ;;      Totals:         0       5       0       0       0
  2489 ;;Total ram usage:        5 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    3
  2492 ;; This function calls:
  2493 ;;		_button_delay
  2494 ;;		_decrementor
  2495 ;;		_incrementor
  2496 ;;		_modulus_func
  2497 ;;		_write_char
  2498 ;;		_write_cmd
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           
  2505                           ;psect for function _thermometer_threshhold_settings
  2506  0D78                     _thermometer_threshhold_settings:	
  2507  0D78                     l3164:	
  2508                           ;incstack = 0
  2509                           ; Regs used in _thermometer_threshhold_settings: [wreg+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2510                           
  2511                           
  2512                           ;Button_src.c: 22:  RC0 = 1;
  2513  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0D7A  1407               	bsf	7,0	;volatile
  2516                           
  2517                           ;Button_src.c: 23:  RC1 = 0;
  2518  0D7B  1087               	bcf	7,1	;volatile
  2519                           
  2520                           ;Button_src.c: 24:  RC2 = 1;
  2521  0D7C  1507               	bsf	7,2	;volatile
  2522                           
  2523                           ;Button_src.c: 25:  RC3 = 1;
  2524  0D7D  1587               	bsf	7,3	;volatile
  2525                           
  2526                           ;Button_src.c: 26:   if (RC4 == 0){
  2527  0D7E  1A07               	btfsc	7,4	;volatile
  2528  0D7F  2D81               	goto	u1881
  2529  0D80  2D82               	goto	u1880
  2530  0D81                     u1881:	
  2531  0D81  2FFF               	goto	l517
  2532  0D82                     u1880:	
  2533  0D82                     l3166:	
  2534                           
  2535                           ;Button_src.c: 27:       write_cmd(0x1);
  2536  0D82  3001               	movlw	1
  2537  0D83  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2538  0D88                     l511:	
  2539                           ;Button_src.c: 28:       for(;;){
  2540                           
  2541                           
  2542                           ;Button_src.c: 29:             write_cmd(0x80);
  2543  0D88  3080               	movlw	128
  2544  0D89  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2545                           
  2546                           ;Button_src.c: 30:             write_char('t');
  2547  0D8E  3074               	movlw	116
  2548  0D8F  160A  118A  25C4  120A  158A  	fcall	_write_char
  2549                           
  2550                           ;Button_src.c: 31:             write_char('h');
  2551  0D94  3068               	movlw	104
  2552  0D95  160A  118A  25C4  120A  158A  	fcall	_write_char
  2553                           
  2554                           ;Button_src.c: 32:             write_char('r');
  2555  0D9A  3072               	movlw	114
  2556  0D9B  160A  118A  25C4  120A  158A  	fcall	_write_char
  2557                           
  2558                           ;Button_src.c: 33:             write_char('e');
  2559  0DA0  3065               	movlw	101
  2560  0DA1  160A  118A  25C4  120A  158A  	fcall	_write_char
  2561                           
  2562                           ;Button_src.c: 34:             write_char('s');
  2563  0DA6  3073               	movlw	115
  2564  0DA7  160A  118A  25C4  120A  158A  	fcall	_write_char
  2565                           
  2566                           ;Button_src.c: 35:             write_char('h');
  2567  0DAC  3068               	movlw	104
  2568  0DAD  160A  118A  25C4  120A  158A  	fcall	_write_char
  2569                           
  2570                           ;Button_src.c: 36:             write_char('o');
  2571  0DB2  306F               	movlw	111
  2572  0DB3  160A  118A  25C4  120A  158A  	fcall	_write_char
  2573                           
  2574                           ;Button_src.c: 37:             write_char('l');
  2575  0DB8  306C               	movlw	108
  2576  0DB9  160A  118A  25C4  120A  158A  	fcall	_write_char
  2577                           
  2578                           ;Button_src.c: 38:             write_char('d');
  2579  0DBE  3064               	movlw	100
  2580  0DBF  160A  118A  25C4  120A  158A  	fcall	_write_char
  2581                           
  2582                           ;Button_src.c: 40:             write_cmd(0x90);
  2583  0DC4  3090               	movlw	144
  2584  0DC5  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2585                           
  2586                           ;Button_src.c: 41:             write_char('C');
  2587  0DCA  3043               	movlw	67
  2588  0DCB  160A  118A  25C4  120A  158A  	fcall	_write_char
  2589                           
  2590                           ;Button_src.c: 42:             write_char('u');
  2591  0DD0  3075               	movlw	117
  2592  0DD1  160A  118A  25C4  120A  158A  	fcall	_write_char
  2593                           
  2594                           ;Button_src.c: 43:             write_char('r');
  2595  0DD6  3072               	movlw	114
  2596  0DD7  160A  118A  25C4  120A  158A  	fcall	_write_char
  2597                           
  2598                           ;Button_src.c: 44:             write_char('r');
  2599  0DDC  3072               	movlw	114
  2600  0DDD  160A  118A  25C4  120A  158A  	fcall	_write_char
  2601                           
  2602                           ;Button_src.c: 45:             write_char('e');
  2603  0DE2  3065               	movlw	101
  2604  0DE3  160A  118A  25C4  120A  158A  	fcall	_write_char
  2605                           
  2606                           ;Button_src.c: 46:             write_char('n');
  2607  0DE8  306E               	movlw	110
  2608  0DE9  160A  118A  25C4  120A  158A  	fcall	_write_char
  2609                           
  2610                           ;Button_src.c: 47:             write_char('t');
  2611  0DEE  3074               	movlw	116
  2612  0DEF  160A  118A  25C4  120A  158A  	fcall	_write_char
  2613                           
  2614                           ;Button_src.c: 48:             write_char(':');
  2615  0DF4  303A               	movlw	58
  2616  0DF5  160A  118A  25C4  120A  158A  	fcall	_write_char
  2617                           
  2618                           ;Button_src.c: 50:             write_char(var1 + '0');
  2619  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0DFC  083F               	movf	_var1,w
  2622  0DFD  3E30               	addlw	48
  2623  0DFE  160A  118A  25C4  120A  158A  	fcall	_write_char
  2624                           
  2625                           ;Button_src.c: 51:             write_char(var2 + '0');
  2626  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0E05  083E               	movf	_var2,w
  2629  0E06  3E30               	addlw	48
  2630  0E07  160A  118A  25C4  120A  158A  	fcall	_write_char
  2631                           
  2632                           ;Button_src.c: 53:             write_cmd(0x88);
  2633  0E0C  3088               	movlw	136
  2634  0E0D  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2635                           
  2636                           ;Button_src.c: 54:             write_char('S');
  2637  0E12  3053               	movlw	83
  2638  0E13  160A  118A  25C4  120A  158A  	fcall	_write_char
  2639                           
  2640                           ;Button_src.c: 55:             write_char('e');
  2641  0E18  3065               	movlw	101
  2642  0E19  160A  118A  25C4  120A  158A  	fcall	_write_char
  2643                           
  2644                           ;Button_src.c: 56:             write_char('t');
  2645  0E1E  3074               	movlw	116
  2646  0E1F  160A  118A  25C4  120A  158A  	fcall	_write_char
  2647                           
  2648                           ;Button_src.c: 57:             write_char('_');
  2649  0E24  305F               	movlw	95
  2650  0E25  160A  118A  25C4  120A  158A  	fcall	_write_char
  2651                           
  2652                           ;Button_src.c: 58:             write_char('t');
  2653  0E2A  3074               	movlw	116
  2654  0E2B  160A  118A  25C4  120A  158A  	fcall	_write_char
  2655                           
  2656                           ;Button_src.c: 59:             write_char('h');
  2657  0E30  3068               	movlw	104
  2658  0E31  160A  118A  25C4  120A  158A  	fcall	_write_char
  2659                           
  2660                           ;Button_src.c: 60:             write_char('r');
  2661  0E36  3072               	movlw	114
  2662  0E37  160A  118A  25C4  120A  158A  	fcall	_write_char
  2663                           
  2664                           ;Button_src.c: 61:             write_char('e');
  2665  0E3C  3065               	movlw	101
  2666  0E3D  160A  118A  25C4  120A  158A  	fcall	_write_char
  2667                           
  2668                           ;Button_src.c: 62:             write_char('s');
  2669  0E42  3073               	movlw	115
  2670  0E43  160A  118A  25C4  120A  158A  	fcall	_write_char
  2671                           
  2672                           ;Button_src.c: 63:             write_char('h');
  2673  0E48  3068               	movlw	104
  2674  0E49  160A  118A  25C4  120A  158A  	fcall	_write_char
  2675                           
  2676                           ;Button_src.c: 64:             write_char('o');
  2677  0E4E  306F               	movlw	111
  2678  0E4F  160A  118A  25C4  120A  158A  	fcall	_write_char
  2679                           
  2680                           ;Button_src.c: 65:             write_char('l');
  2681  0E54  306C               	movlw	108
  2682  0E55  160A  118A  25C4  120A  158A  	fcall	_write_char
  2683                           
  2684                           ;Button_src.c: 66:             write_char('d');
  2685  0E5A  3064               	movlw	100
  2686  0E5B  160A  118A  25C4  120A  158A  	fcall	_write_char
  2687                           
  2688                           ;Button_src.c: 67:             write_char(':');
  2689  0E60  303A               	movlw	58
  2690  0E61  160A  118A  25C4  120A  158A  	fcall	_write_char
  2691                           
  2692                           ;Button_src.c: 69:             write_cmd(0x98);
  2693  0E66  3098               	movlw	152
  2694  0E67  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2695  0E6C                     l3168:	
  2696                           
  2697                           ;Button_src.c: 70:             RC0 = 1;
  2698  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0E6E  1407               	bsf	7,0	;volatile
  2701  0E6F                     l3170:	
  2702                           
  2703                           ;Button_src.c: 71:             RC1 = 0;
  2704  0E6F  1087               	bcf	7,1	;volatile
  2705  0E70                     l3172:	
  2706                           
  2707                           ;Button_src.c: 72:             RC2 = 1;
  2708  0E70  1507               	bsf	7,2	;volatile
  2709  0E71                     l3174:	
  2710                           
  2711                           ;Button_src.c: 73:             RC3 = 1;
  2712  0E71  1587               	bsf	7,3	;volatile
  2713  0E72                     l3176:	
  2714                           
  2715                           ;Button_src.c: 74:             t = 0;
  2716  0E72  01B9               	clrf	_t
  2717  0E73  01BA               	clrf	_t+1
  2718  0E74                     l3178:	
  2719                           
  2720                           ;Button_src.c: 75:             w = 0;
  2721  0E74  01B7               	clrf	_w
  2722  0E75  01B8               	clrf	_w+1
  2723  0E76                     l3180:	
  2724                           
  2725                           ;Button_src.c: 76:             x = 0;
  2726  0E76  01B5               	clrf	_x
  2727  0E77  01B6               	clrf	_x+1
  2728  0E78                     l3182:	
  2729                           
  2730                           ;Button_src.c: 77:             y = 0;
  2731  0E78  01B3               	clrf	_y
  2732  0E79  01B4               	clrf	_y+1
  2733  0E7A                     l3184:	
  2734                           
  2735                           ;Button_src.c: 78:             x = 0x00;
  2736  0E7A  01B5               	clrf	_x
  2737  0E7B  01B6               	clrf	_x+1
  2738  0E7C                     l3186:	
  2739                           
  2740                           ;Button_src.c: 80:                  RC0 = 1;
  2741  0E7C  1407               	bsf	7,0	;volatile
  2742  0E7D                     l3188:	
  2743                           
  2744                           ;Button_src.c: 81:                  RC1 = 0;
  2745  0E7D  1087               	bcf	7,1	;volatile
  2746  0E7E                     l3190:	
  2747                           
  2748                           ;Button_src.c: 82:                  RC2 = 1;
  2749  0E7E  1507               	bsf	7,2	;volatile
  2750  0E7F                     l3192:	
  2751                           
  2752                           ;Button_src.c: 83:                  RC3 = 1;
  2753  0E7F  1587               	bsf	7,3	;volatile
  2754  0E80                     l3194:	
  2755                           
  2756                           ;Button_src.c: 85:                 if(RC7==0){
  2757  0E80  1B87               	btfsc	7,7	;volatile
  2758  0E81  2E83               	goto	u1891
  2759  0E82  2E84               	goto	u1890
  2760  0E83                     u1891:	
  2761  0E83  2EE7               	goto	l3214
  2762  0E84                     u1890:	
  2763  0E84                     l3196:	
  2764                           
  2765                           ;Button_src.c: 86:                     write_cmd(0x98);
  2766  0E84  3098               	movlw	152
  2767  0E85  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2768  0E8A                     l3198:	
  2769                           
  2770                           ;Button_src.c: 87:                     x++;
  2771  0E8A  3001               	movlw	1
  2772  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0E8D  07B5               	addwf	_x,f
  2775  0E8E  1803               	skipnc
  2776  0E8F  0AB6               	incf	_x+1,f
  2777  0E90  3000               	movlw	0
  2778  0E91  07B6               	addwf	_x+1,f
  2779  0E92                     l3200:	
  2780                           
  2781                           ;Button_src.c: 88:                     y = (unsigned char )y;
  2782  0E92  0833               	movf	_y,w
  2783  0E93  00D8               	movwf	??_thermometer_threshhold_settings
  2784  0E94  01D9               	clrf	??_thermometer_threshhold_settings+1
  2785  0E95  0858               	movf	??_thermometer_threshhold_settings,w
  2786  0E96  00B3               	movwf	_y
  2787  0E97  0859               	movf	??_thermometer_threshhold_settings+1,w
  2788  0E98  00B4               	movwf	_y+1
  2789  0E99                     l3202:	
  2790                           
  2791                           ;Button_src.c: 89:                     x = (unsigned char )(modulus_func(x,10));
  2792  0E99  0836               	movf	_x+1,w
  2793  0E9A  00F8               	movwf	modulus_func@x+1
  2794  0E9B  0835               	movf	_x,w
  2795  0E9C  00F7               	movwf	modulus_func@x
  2796  0E9D  300A               	movlw	10
  2797  0E9E  00F9               	movwf	modulus_func@y
  2798  0E9F  3000               	movlw	0
  2799  0EA0  00FA               	movwf	modulus_func@y+1
  2800  0EA1  160A  118A  24FB  120A  158A  	fcall	_modulus_func
  2801  0EA6  0877               	movf	?_modulus_func,w
  2802  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2804  0EA9  00D8               	movwf	??_thermometer_threshhold_settings
  2805  0EAA  01D9               	clrf	??_thermometer_threshhold_settings+1
  2806  0EAB  0858               	movf	??_thermometer_threshhold_settings,w
  2807  0EAC  00B5               	movwf	_x
  2808  0EAD  0859               	movf	??_thermometer_threshhold_settings+1,w
  2809  0EAE  00B6               	movwf	_x+1
  2810  0EAF                     l3204:	
  2811                           
  2812                           ;Button_src.c: 90:                     write_char(y + '0');
  2813  0EAF  0833               	movf	_y,w
  2814  0EB0  3E30               	addlw	48
  2815  0EB1  160A  118A  25C4  120A  158A  	fcall	_write_char
  2816  0EB6                     l3206:	
  2817                           
  2818                           ;Button_src.c: 91:                     write_char(x + '0');
  2819  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0EB8  0835               	movf	_x,w
  2822  0EB9  3E30               	addlw	48
  2823  0EBA  160A  118A  25C4  120A  158A  	fcall	_write_char
  2824  0EBF                     l3208:	
  2825                           
  2826                           ;Button_src.c: 92:                     y = incrementor(y,x,'9');
  2827  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0EC1  0834               	movf	_y+1,w
  2830  0EC2  00D4               	movwf	incrementor@upper_val+1
  2831  0EC3  0833               	movf	_y,w
  2832  0EC4  00D3               	movwf	incrementor@upper_val
  2833  0EC5  0836               	movf	_x+1,w
  2834  0EC6  00D6               	movwf	incrementor@lower_val+1
  2835  0EC7  0835               	movf	_x,w
  2836  0EC8  00D5               	movwf	incrementor@lower_val
  2837  0EC9  3039               	movlw	57
  2838  0ECA  00D8               	movwf	??_thermometer_threshhold_settings
  2839  0ECB  0858               	movf	??_thermometer_threshhold_settings,w
  2840  0ECC  00D7               	movwf	incrementor@z
  2841  0ECD  160A  118A  2697  120A  158A  	fcall	_incrementor
  2842  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0ED4  00D9               	movwf	??_thermometer_threshhold_settings+1
  2845  0ED5  01DA               	clrf	??_thermometer_threshhold_settings+2
  2846  0ED6  0859               	movf	??_thermometer_threshhold_settings+1,w
  2847  0ED7  00B3               	movwf	_y
  2848  0ED8  085A               	movf	??_thermometer_threshhold_settings+2,w
  2849  0ED9  00B4               	movwf	_y+1
  2850  0EDA                     l3210:	
  2851                           
  2852                           ;Button_src.c: 93:                     t = x;
  2853  0EDA  0836               	movf	_x+1,w
  2854  0EDB  00BA               	movwf	_t+1
  2855  0EDC  0835               	movf	_x,w
  2856  0EDD  00B9               	movwf	_t
  2857  0EDE                     l3212:	
  2858                           
  2859                           ;Button_src.c: 94:                     w = y;
  2860  0EDE  0834               	movf	_y+1,w
  2861  0EDF  00B8               	movwf	_w+1
  2862  0EE0  0833               	movf	_y,w
  2863  0EE1  00B7               	movwf	_w
  2864                           
  2865                           ;Button_src.c: 95:                     button_delay();
  2866  0EE2  160A  118A  256B  120A  158A  	fcall	_button_delay
  2867  0EE7                     l3214:	
  2868                           
  2869                           ;Button_src.c: 97:                   RC0 = 0;
  2870  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0EE9  1007               	bcf	7,0	;volatile
  2873  0EEA                     l3216:	
  2874                           
  2875                           ;Button_src.c: 98:                     RC1 = 1;
  2876  0EEA  1487               	bsf	7,1	;volatile
  2877  0EEB                     l3218:	
  2878                           
  2879                           ;Button_src.c: 99:                     RC2 = 1;
  2880  0EEB  1507               	bsf	7,2	;volatile
  2881  0EEC                     l3220:	
  2882                           
  2883                           ;Button_src.c: 100:                     RC3 = 1;
  2884  0EEC  1587               	bsf	7,3	;volatile
  2885  0EED                     l3222:	
  2886                           
  2887                           ;Button_src.c: 101:                     if(RC6 == 0){
  2888  0EED  1B07               	btfsc	7,6	;volatile
  2889  0EEE  2EF0               	goto	u1901
  2890  0EEF  2EF1               	goto	u1900
  2891  0EF0                     u1901:	
  2892  0EF0  2F37               	goto	l514
  2893  0EF1                     u1900:	
  2894  0EF1                     l3224:	
  2895                           
  2896                           ;Button_src.c: 102:                         var1 = y;
  2897  0EF1  0833               	movf	_y,w
  2898  0EF2  00D8               	movwf	??_thermometer_threshhold_settings
  2899  0EF3  0858               	movf	??_thermometer_threshhold_settings,w
  2900  0EF4  00BF               	movwf	_var1
  2901                           
  2902                           ;Button_src.c: 103:                         var2 = x;
  2903  0EF5  0835               	movf	_x,w
  2904  0EF6  00D8               	movwf	??_thermometer_threshhold_settings
  2905  0EF7  0858               	movf	??_thermometer_threshhold_settings,w
  2906  0EF8  00BE               	movwf	_var2
  2907  0EF9                     l3226:	
  2908                           
  2909                           ;Button_src.c: 105:                         write_cmd(0x1);
  2910  0EF9  3001               	movlw	1
  2911  0EFA  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2912  0EFF                     l3228:	
  2913                           
  2914                           ;Button_src.c: 106:                         write_char('S');
  2915  0EFF  3053               	movlw	83
  2916  0F00  160A  118A  25C4  120A  158A  	fcall	_write_char
  2917  0F05                     l3230:	
  2918                           
  2919                           ;Button_src.c: 107:                         write_char('A');
  2920  0F05  3041               	movlw	65
  2921  0F06  160A  118A  25C4  120A  158A  	fcall	_write_char
  2922  0F0B                     l3232:	
  2923                           
  2924                           ;Button_src.c: 108:                         write_char('V');
  2925  0F0B  3056               	movlw	86
  2926  0F0C  160A  118A  25C4  120A  158A  	fcall	_write_char
  2927  0F11                     l3234:	
  2928                           
  2929                           ;Button_src.c: 109:                         write_char('E');
  2930  0F11  3045               	movlw	69
  2931  0F12  160A  118A  25C4  120A  158A  	fcall	_write_char
  2932  0F17                     l3236:	
  2933                           
  2934                           ;Button_src.c: 110:                         write_char('D');
  2935  0F17  3044               	movlw	68
  2936  0F18  160A  118A  25C4  120A  158A  	fcall	_write_char
  2937  0F1D                     l3238:	
  2938                           
  2939                           ;Button_src.c: 111:                         for(int i=0;i<30000;i++);
  2940  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  2942  0F1F  01DB               	clrf	thermometer_threshhold_settings@i
  2943  0F20  01DC               	clrf	thermometer_threshhold_settings@i+1
  2944  0F21                     l3244:	
  2945  0F21  3001               	movlw	1
  2946  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0F24  07DB               	addwf	thermometer_threshhold_settings@i,f
  2949  0F25  1803               	skipnc
  2950  0F26  0ADC               	incf	thermometer_threshhold_settings@i+1,f
  2951  0F27  3000               	movlw	0
  2952  0F28  07DC               	addwf	thermometer_threshhold_settings@i+1,f
  2953  0F29                     l3246:	
  2954  0F29  085C               	movf	thermometer_threshhold_settings@i+1,w
  2955  0F2A  3A80               	xorlw	128
  2956  0F2B  00FF               	movwf	btemp+1
  2957  0F2C  30F5               	movlw	245
  2958  0F2D  027F               	subwf	btemp+1,w
  2959  0F2E  1D03               	skipz
  2960  0F2F  2F32               	goto	u1915
  2961  0F30  3030               	movlw	48
  2962  0F31  025B               	subwf	thermometer_threshhold_settings@i,w
  2963  0F32                     u1915:	
  2964  0F32  1C03               	skipc
  2965  0F33  2F35               	goto	u1911
  2966  0F34  2F36               	goto	u1910
  2967  0F35                     u1911:	
  2968  0F35  2F21               	goto	l3244
  2969  0F36                     u1910:	
  2970  0F36  2FFF               	goto	l517
  2971  0F37                     l514:	
  2972                           ;Button_src.c: 113:                     }
  2973                           
  2974                           
  2975                           ;Button_src.c: 114:                  RC0 = 1;
  2976  0F37  1407               	bsf	7,0	;volatile
  2977                           
  2978                           ;Button_src.c: 115:                  RC1 = 1;
  2979  0F38  1487               	bsf	7,1	;volatile
  2980                           
  2981                           ;Button_src.c: 116:                  RC2 = 0;
  2982  0F39  1107               	bcf	7,2	;volatile
  2983                           
  2984                           ;Button_src.c: 117:                  RC3 = 1;
  2985  0F3A  1587               	bsf	7,3	;volatile
  2986                           
  2987                           ;Button_src.c: 119:                  if(RC7 == 0){
  2988  0F3B  1B87               	btfsc	7,7	;volatile
  2989  0F3C  2F3E               	goto	u1921
  2990  0F3D  2F3F               	goto	u1920
  2991  0F3E                     u1921:	
  2992  0F3E  2FB5               	goto	l3268
  2993  0F3F                     u1920:	
  2994  0F3F                     l3248:	
  2995                           
  2996                           ;Button_src.c: 120:                     write_cmd(0x98);
  2997  0F3F  3098               	movlw	152
  2998  0F40  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  2999  0F45                     l3250:	
  3000                           
  3001                           ;Button_src.c: 121:                       t--;
  3002  0F45  3001               	movlw	1
  3003  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3004  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3005  0F48  02B9               	subwf	_t,f
  3006  0F49  3000               	movlw	0
  3007  0F4A  1C03               	skipc
  3008  0F4B  03BA               	decf	_t+1,f
  3009  0F4C  02BA               	subwf	_t+1,f
  3010  0F4D                     l3252:	
  3011                           
  3012                           ;Button_src.c: 122:                     w = (unsigned char )w;
  3013  0F4D  0837               	movf	_w,w
  3014  0F4E  00D8               	movwf	??_thermometer_threshhold_settings
  3015  0F4F  01D9               	clrf	??_thermometer_threshhold_settings+1
  3016  0F50  0858               	movf	??_thermometer_threshhold_settings,w
  3017  0F51  00B7               	movwf	_w
  3018  0F52  0859               	movf	??_thermometer_threshhold_settings+1,w
  3019  0F53  00B8               	movwf	_w+1
  3020  0F54                     l3254:	
  3021                           
  3022                           ;Button_src.c: 123:                     t = (unsigned char )(modulus_func(t,10));
  3023  0F54  083A               	movf	_t+1,w
  3024  0F55  00F8               	movwf	modulus_func@x+1
  3025  0F56  0839               	movf	_t,w
  3026  0F57  00F7               	movwf	modulus_func@x
  3027  0F58  300A               	movlw	10
  3028  0F59  00F9               	movwf	modulus_func@y
  3029  0F5A  3000               	movlw	0
  3030  0F5B  00FA               	movwf	modulus_func@y+1
  3031  0F5C  160A  118A  24FB  120A  158A  	fcall	_modulus_func
  3032  0F61  0877               	movf	?_modulus_func,w
  3033  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0F64  00D8               	movwf	??_thermometer_threshhold_settings
  3036  0F65  01D9               	clrf	??_thermometer_threshhold_settings+1
  3037  0F66  0858               	movf	??_thermometer_threshhold_settings,w
  3038  0F67  00B9               	movwf	_t
  3039  0F68  0859               	movf	??_thermometer_threshhold_settings+1,w
  3040  0F69  00BA               	movwf	_t+1
  3041  0F6A                     l3256:	
  3042                           
  3043                           ;Button_src.c: 124:                     write_char(w + '0');
  3044  0F6A  0837               	movf	_w,w
  3045  0F6B  3E30               	addlw	48
  3046  0F6C  160A  118A  25C4  120A  158A  	fcall	_write_char
  3047  0F71                     l3258:	
  3048                           
  3049                           ;Button_src.c: 125:                     write_char(t + '0');
  3050  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0F73  0839               	movf	_t,w
  3053  0F74  3E30               	addlw	48
  3054  0F75  160A  118A  25C4  120A  158A  	fcall	_write_char
  3055  0F7A                     l3260:	
  3056                           
  3057                           ;Button_src.c: 126:                     w = decrementor(w,t,'0');
  3058  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  3059  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  3060  0F7C  0838               	movf	_w+1,w
  3061  0F7D  00D4               	movwf	decrementor@lower_val+1
  3062  0F7E  0837               	movf	_w,w
  3063  0F7F  00D3               	movwf	decrementor@lower_val
  3064  0F80  083A               	movf	_t+1,w
  3065  0F81  00D6               	movwf	decrementor@upper_val+1
  3066  0F82  0839               	movf	_t,w
  3067  0F83  00D5               	movwf	decrementor@upper_val
  3068  0F84  3030               	movlw	48
  3069  0F85  00D8               	movwf	??_thermometer_threshhold_settings
  3070  0F86  0858               	movf	??_thermometer_threshhold_settings,w
  3071  0F87  00D7               	movwf	decrementor@z
  3072  0F88  120A  118A  2004  120A  158A  	fcall	_decrementor
  3073  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  3075  0F8F  00D9               	movwf	??_thermometer_threshhold_settings+1
  3076  0F90  01DA               	clrf	??_thermometer_threshhold_settings+2
  3077  0F91  0859               	movf	??_thermometer_threshhold_settings+1,w
  3078  0F92  00B7               	movwf	_w
  3079  0F93  085A               	movf	??_thermometer_threshhold_settings+2,w
  3080  0F94  00B8               	movwf	_w+1
  3081  0F95                     l3262:	
  3082                           
  3083                           ;Button_src.c: 127:                     if((t + '0')=='0'){
  3084  0F95  0839               	movf	_t,w
  3085  0F96  3E30               	addlw	48
  3086  0F97  00D8               	movwf	??_thermometer_threshhold_settings
  3087  0F98  083A               	movf	_t+1,w
  3088  0F99  1803               	skipnc
  3089  0F9A  3E01               	addlw	1
  3090  0F9B  3E00               	addlw	0
  3091  0F9C  00D9               	movwf	??_thermometer_threshhold_settings+1
  3092  0F9D  3030               	movlw	48
  3093  0F9E  0658               	xorwf	??_thermometer_threshhold_settings,w
  3094  0F9F  0459               	iorwf	??_thermometer_threshhold_settings+1,w
  3095  0FA0  1D03               	btfss	3,2
  3096  0FA1  2FA3               	goto	u1931
  3097  0FA2  2FA4               	goto	u1930
  3098  0FA3                     u1931:	
  3099  0FA3  2FA8               	goto	l519
  3100  0FA4                     u1930:	
  3101  0FA4                     l3264:	
  3102                           
  3103                           ;Button_src.c: 128:                         t = 10;
  3104  0FA4  300A               	movlw	10
  3105  0FA5  00B9               	movwf	_t
  3106  0FA6  3000               	movlw	0
  3107  0FA7  00BA               	movwf	_t+1
  3108  0FA8                     l519:	
  3109                           ;Button_src.c: 129:                     }
  3110                           
  3111                           
  3112                           ;Button_src.c: 131:                     x = t;
  3113  0FA8  083A               	movf	_t+1,w
  3114  0FA9  00B6               	movwf	_x+1
  3115  0FAA  0839               	movf	_t,w
  3116  0FAB  00B5               	movwf	_x
  3117                           
  3118                           ;Button_src.c: 132:                     y = w;
  3119  0FAC  0838               	movf	_w+1,w
  3120  0FAD  00B4               	movwf	_y+1
  3121  0FAE  0837               	movf	_w,w
  3122  0FAF  00B3               	movwf	_y
  3123  0FB0                     l3266:	
  3124                           
  3125                           ;Button_src.c: 133:                     button_delay();
  3126  0FB0  160A  118A  256B  120A  158A  	fcall	_button_delay
  3127  0FB5                     l3268:	
  3128                           
  3129                           ;Button_src.c: 135:                 RC0 = 0;
  3130  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3131  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3132  0FB7  1007               	bcf	7,0	;volatile
  3133  0FB8                     l3270:	
  3134                           
  3135                           ;Button_src.c: 136:                 RC1 = 1;
  3136  0FB8  1487               	bsf	7,1	;volatile
  3137  0FB9                     l3272:	
  3138                           
  3139                           ;Button_src.c: 137:                 RC2 = 1;
  3140  0FB9  1507               	bsf	7,2	;volatile
  3141  0FBA                     l3274:	
  3142                           
  3143                           ;Button_src.c: 138:                 RC3 = 1;
  3144  0FBA  1587               	bsf	7,3	;volatile
  3145  0FBB                     l3276:	
  3146                           
  3147                           ;Button_src.c: 139:                     if(RC6 == 0){
  3148  0FBB  1B07               	btfsc	7,6	;volatile
  3149  0FBC  2FBE               	goto	u1941
  3150  0FBD  2FBF               	goto	u1940
  3151  0FBE                     u1941:	
  3152  0FBE  2FF1               	goto	l520
  3153  0FBF                     u1940:	
  3154  0FBF                     l3278:	
  3155                           
  3156                           ;Button_src.c: 140:                         var1 = w;
  3157  0FBF  0837               	movf	_w,w
  3158  0FC0  00D8               	movwf	??_thermometer_threshhold_settings
  3159  0FC1  0858               	movf	??_thermometer_threshhold_settings,w
  3160  0FC2  00BF               	movwf	_var1
  3161                           
  3162                           ;Button_src.c: 141:                         var2 = t;
  3163  0FC3  0839               	movf	_t,w
  3164  0FC4  00D8               	movwf	??_thermometer_threshhold_settings
  3165  0FC5  0858               	movf	??_thermometer_threshhold_settings,w
  3166  0FC6  00BE               	movwf	_var2
  3167  0FC7                     l3280:	
  3168                           
  3169                           ;Button_src.c: 143:                         write_cmd(0x1);
  3170  0FC7  3001               	movlw	1
  3171  0FC8  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  3172  0FCD                     l3282:	
  3173                           
  3174                           ;Button_src.c: 144:                         write_char('S');
  3175  0FCD  3053               	movlw	83
  3176  0FCE  160A  118A  25C4  120A  158A  	fcall	_write_char
  3177  0FD3                     l3284:	
  3178                           
  3179                           ;Button_src.c: 145:                         write_char('A');
  3180  0FD3  3041               	movlw	65
  3181  0FD4  160A  118A  25C4  120A  158A  	fcall	_write_char
  3182  0FD9                     l3286:	
  3183                           
  3184                           ;Button_src.c: 146:                         write_char('V');
  3185  0FD9  3056               	movlw	86
  3186  0FDA  160A  118A  25C4  120A  158A  	fcall	_write_char
  3187  0FDF                     l3288:	
  3188                           
  3189                           ;Button_src.c: 147:                         write_char('E');
  3190  0FDF  3045               	movlw	69
  3191  0FE0  160A  118A  25C4  120A  158A  	fcall	_write_char
  3192  0FE5                     l3290:	
  3193                           
  3194                           ;Button_src.c: 148:                         write_char('D');
  3195  0FE5  3044               	movlw	68
  3196  0FE6  160A  118A  25C4  120A  158A  	fcall	_write_char
  3197  0FEB                     l3292:	
  3198                           
  3199                           ;Button_src.c: 149:                         button_delay();
  3200  0FEB  160A  118A  256B  120A  158A  	fcall	_button_delay
  3201  0FF0  2FFF               	goto	l517
  3202  0FF1                     l520:	
  3203                           ;Button_src.c: 151:                     }
  3204                           
  3205                           
  3206                           ;Button_src.c: 152:             RC0 = 0;
  3207  0FF1  1007               	bcf	7,0	;volatile
  3208                           
  3209                           ;Button_src.c: 153:             RC1 = 1;
  3210  0FF2  1487               	bsf	7,1	;volatile
  3211                           
  3212                           ;Button_src.c: 154:             RC2 = 1;
  3213  0FF3  1507               	bsf	7,2	;volatile
  3214                           
  3215                           ;Button_src.c: 155:             RC3 = 1;
  3216  0FF4  1587               	bsf	7,3	;volatile
  3217                           
  3218                           ;Button_src.c: 156:             if (RC7 == 0 ){
  3219  0FF5  1B87               	btfsc	7,7	;volatile
  3220  0FF6  2FF8               	goto	u1951
  3221  0FF7  2FF9               	goto	u1950
  3222  0FF8                     u1951:	
  3223  0FF8  2E7C               	goto	l3186
  3224  0FF9                     u1950:	
  3225  0FF9                     l3296:	
  3226                           
  3227                           ;Button_src.c: 157:             write_cmd(0x1);
  3228  0FF9  3001               	movlw	1
  3229  0FFA  160A  118A  25DD  120A  158A  	fcall	_write_cmd
  3230  0FFF                     l517:	
  3231  0FFF  0008               	return
  3232  1000                     __end_of_thermometer_threshhold_settings:	
  3233                           
  3234                           	psect	text3
  3235  0004                     __ptext3:	
  3236 ;; *************** function _decrementor *****************
  3237 ;; Defined at:
  3238 ;;		line 19 in file "math_src.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  lower_val       2    0[BANK0 ] int 
  3241 ;;  upper_val       2    2[BANK0 ] int 
  3242 ;;  z               1    4[BANK0 ] unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;		None
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      unsigned char 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       5       0       0       0
  3255 ;;      Locals:         0       0       0       0       0
  3256 ;;      Temps:          2       0       0       0       0
  3257 ;;      Totals:         2       5       0       0       0
  3258 ;;Total ram usage:        7 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    2
  3261 ;; This function calls:
  3262 ;;		_modulus_func
  3263 ;; This function is called by:
  3264 ;;		_thermometer_threshhold_settings
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268                           
  3269                           ;psect for function _decrementor
  3270  0004                     _decrementor:	
  3271  0004                     l2848:	
  3272                           ;incstack = 0
  3273                           ; Regs used in _decrementor: [wreg+status,2+status,0+pclath+cstack]
  3274                           
  3275                           
  3276                           ;math_src.c: 20:      if(z == (upper_val + '0')){
  3277  0004  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0005  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0006  0855               	movf	decrementor@upper_val,w
  3280  0007  3E30               	addlw	48
  3281  0008  00FB               	movwf	??_decrementor
  3282  0009  0856               	movf	decrementor@upper_val+1,w
  3283  000A  1803               	skipnc
  3284  000B  3E01               	addlw	1
  3285  000C  3E00               	addlw	0
  3286  000D  00FC               	movwf	??_decrementor+1
  3287  000E  0857               	movf	decrementor@z,w
  3288  000F  067B               	xorwf	??_decrementor,w
  3289  0010  047C               	iorwf	??_decrementor+1,w
  3290  0011  1D03               	skipz
  3291  0012  2814               	goto	u1521
  3292  0013  2815               	goto	u1520
  3293  0014                     u1521:	
  3294  0014  282E               	goto	l2854
  3295  0015                     u1520:	
  3296  0015                     l2850:	
  3297                           
  3298                           ;math_src.c: 21:         lower_val--;
  3299  0015  30FF               	movlw	255
  3300  0016  07D3               	addwf	decrementor@lower_val,f
  3301  0017  1803               	skipnc
  3302  0018  0AD4               	incf	decrementor@lower_val+1,f
  3303  0019  30FF               	movlw	255
  3304  001A  07D4               	addwf	decrementor@lower_val+1,f
  3305  001B                     l2852:	
  3306                           
  3307                           ;math_src.c: 22:         lower_val = (modulus_func(lower_val,10));
  3308  001B  0854               	movf	decrementor@lower_val+1,w
  3309  001C  00F8               	movwf	modulus_func@x+1
  3310  001D  0853               	movf	decrementor@lower_val,w
  3311  001E  00F7               	movwf	modulus_func@x
  3312  001F  300A               	movlw	10
  3313  0020  00F9               	movwf	modulus_func@y
  3314  0021  3000               	movlw	0
  3315  0022  00FA               	movwf	modulus_func@y+1
  3316  0023  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  3317  0028  0878               	movf	?_modulus_func+1,w
  3318  0029  1283               	bcf	3,5	;RP0=0, select bank0
  3319  002A  1303               	bcf	3,6	;RP1=0, select bank0
  3320  002B  00D4               	movwf	decrementor@lower_val+1
  3321  002C  0877               	movf	?_modulus_func,w
  3322  002D  00D3               	movwf	decrementor@lower_val
  3323  002E                     l2854:	
  3324                           
  3325                           ;math_src.c: 24:      return lower_val;
  3326  002E  0853               	movf	decrementor@lower_val,w
  3327  002F                     l572:	
  3328  002F  0008               	return
  3329  0030                     __end_of_decrementor:	
  3330                           
  3331                           	psect	text4
  3332  0841                     __ptext4:	
  3333 ;; *************** function _set_upper_threshold *****************
  3334 ;; Defined at:
  3335 ;;		line 5 in file "threshold_src.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  upper_val       2    3[COMMON] int 
  3338 ;;  lower_val       2    5[COMMON] int 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         4       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0
  3352 ;;      Temps:          2       0       0       0       0
  3353 ;;      Totals:         6       0       0       0       0
  3354 ;;Total ram usage:        6 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    2
  3357 ;; This function calls:
  3358 ;;		_write_char
  3359 ;; This function is called by:
  3360 ;;		_main
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           
  3365                           ;psect for function _set_upper_threshold
  3366  0841                     _set_upper_threshold:	
  3367  0841                     l3718:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _set_upper_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3370                           
  3371                           
  3372                           ;threshold_src.c: 6:     if(shi == upper_val && ge > lower_val && count == 2){
  3373  0841  1283               	bcf	3,5	;RP0=0, select bank0
  3374  0842  1303               	bcf	3,6	;RP1=0, select bank0
  3375  0843  084E               	movf	_shi,w
  3376  0844  00F7               	movwf	??_set_upper_threshold
  3377  0845  01F8               	clrf	??_set_upper_threshold+1
  3378  0846  0874               	movf	set_upper_threshold@upper_val+1,w
  3379  0847  0678               	xorwf	??_set_upper_threshold+1,w
  3380  0848  1D03               	skipz
  3381  0849  284C               	goto	u2355
  3382  084A  0873               	movf	set_upper_threshold@upper_val,w
  3383  084B  0677               	xorwf	??_set_upper_threshold,w
  3384  084C                     u2355:	
  3385  084C  1D03               	skipz
  3386  084D  284F               	goto	u2351
  3387  084E  2850               	goto	u2350
  3388  084F                     u2351:	
  3389  084F  287E               	goto	l628
  3390  0850                     u2350:	
  3391  0850                     l3720:	
  3392  0850  0876               	movf	set_upper_threshold@lower_val+1,w
  3393  0851  3A80               	xorlw	128
  3394  0852  00F7               	movwf	??_set_upper_threshold
  3395  0853  3080               	movlw	128
  3396  0854  0277               	subwf	??_set_upper_threshold,w
  3397  0855  1D03               	skipz
  3398  0856  2859               	goto	u2365
  3399  0857  084D               	movf	_ge,w
  3400  0858  0275               	subwf	set_upper_threshold@lower_val,w
  3401  0859                     u2365:	
  3402  0859  1803               	skipnc
  3403  085A  285C               	goto	u2361
  3404  085B  285D               	goto	u2360
  3405  085C                     u2361:	
  3406  085C  287E               	goto	l628
  3407  085D                     u2360:	
  3408  085D                     l3722:	
  3409  085D  3002               	movlw	2
  3410  085E  1283               	bcf	3,5	;RP0=0, select bank0
  3411  085F  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0860  0629               	xorwf	_count,w
  3413  0861  042A               	iorwf	_count+1,w
  3414  0862  1D03               	btfss	3,2
  3415  0863  2865               	goto	u2371
  3416  0864  2866               	goto	u2370
  3417  0865                     u2371:	
  3418  0865  287E               	goto	l628
  3419  0866                     u2370:	
  3420  0866                     l3724:	
  3421                           
  3422                           ;threshold_src.c: 9:     write_char('W');
  3423  0866  3057               	movlw	87
  3424  0867  160A  118A  25C4  120A  158A  	fcall	_write_char
  3425                           
  3426                           ;threshold_src.c: 10:     write_char('A');
  3427  086C  3041               	movlw	65
  3428  086D  160A  118A  25C4  120A  158A  	fcall	_write_char
  3429                           
  3430                           ;threshold_src.c: 11:     write_char('R');
  3431  0872  3052               	movlw	82
  3432  0873  160A  118A  25C4  120A  158A  	fcall	_write_char
  3433                           
  3434                           ;threshold_src.c: 12:     write_char('M');
  3435  0878  304D               	movlw	77
  3436  0879  160A  118A  25C4  120A  158A  	fcall	_write_char
  3437  087E                     l628:	
  3438  087E  0008               	return
  3439  087F                     __end_of_set_upper_threshold:	
  3440                           
  3441                           	psect	text5
  3442  08C3                     __ptext5:	
  3443 ;; *************** function _set_lower_threshold *****************
  3444 ;; Defined at:
  3445 ;;		line 17 in file "threshold_src.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  upper_val       2    3[COMMON] int 
  3448 ;;  lower_val       2    5[COMMON] int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         4       0       0       0       0
  3461 ;;      Locals:         0       0       0       0       0
  3462 ;;      Temps:          2       0       0       0       0
  3463 ;;      Totals:         6       0       0       0       0
  3464 ;;Total ram usage:        6 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    2
  3467 ;; This function calls:
  3468 ;;		_write_char
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           
  3475                           ;psect for function _set_lower_threshold
  3476  08C3                     _set_lower_threshold:	
  3477  08C3                     l3702:	
  3478                           ;incstack = 0
  3479                           ; Regs used in _set_lower_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3480                           
  3481                           
  3482                           ;threshold_src.c: 18:     if((shi == upper_val && ge < lower_val)|| ge == lower_val)
  3483  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  3484  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  3485  08C5  084E               	movf	_shi,w
  3486  08C6  00F7               	movwf	??_set_lower_threshold
  3487  08C7  01F8               	clrf	??_set_lower_threshold+1
  3488  08C8  0874               	movf	set_lower_threshold@upper_val+1,w
  3489  08C9  0678               	xorwf	??_set_lower_threshold+1,w
  3490  08CA  1D03               	skipz
  3491  08CB  28CE               	goto	u2325
  3492  08CC  0873               	movf	set_lower_threshold@upper_val,w
  3493  08CD  0677               	xorwf	??_set_lower_threshold,w
  3494  08CE                     u2325:	
  3495  08CE  1D03               	skipz
  3496  08CF  28D1               	goto	u2321
  3497  08D0  28D2               	goto	u2320
  3498  08D1                     u2321:	
  3499  08D1  28DD               	goto	l3706
  3500  08D2                     u2320:	
  3501  08D2                     l3704:	
  3502  08D2  0876               	movf	set_lower_threshold@lower_val+1,w
  3503  08D3  3A80               	xorlw	128
  3504  08D4  3C80               	sublw	128
  3505  08D5  1D03               	skipz
  3506  08D6  28D9               	goto	u2335
  3507  08D7  0875               	movf	set_lower_threshold@lower_val,w
  3508  08D8  024D               	subwf	_ge,w
  3509  08D9                     u2335:	
  3510  08D9  1C03               	skipc
  3511  08DA  28DC               	goto	u2331
  3512  08DB  28DD               	goto	u2330
  3513  08DC                     u2331:	
  3514  08DC  28EC               	goto	l3708
  3515  08DD                     u2330:	
  3516  08DD                     l3706:	
  3517  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  3518  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  3519  08DF  084D               	movf	_ge,w
  3520  08E0  00F7               	movwf	??_set_lower_threshold
  3521  08E1  01F8               	clrf	??_set_lower_threshold+1
  3522  08E2  0876               	movf	set_lower_threshold@lower_val+1,w
  3523  08E3  0678               	xorwf	??_set_lower_threshold+1,w
  3524  08E4  1D03               	skipz
  3525  08E5  28E8               	goto	u2345
  3526  08E6  0875               	movf	set_lower_threshold@lower_val,w
  3527  08E7  0677               	xorwf	??_set_lower_threshold,w
  3528  08E8                     u2345:	
  3529  08E8  1D03               	skipz
  3530  08E9  28EB               	goto	u2341
  3531  08EA  28EC               	goto	u2340
  3532  08EB                     u2341:	
  3533  08EB  290E               	goto	l636
  3534  08EC                     u2340:	
  3535  08EC                     l3708:	
  3536                           
  3537                           ;threshold_src.c: 19:     {;threshold_src.c: 20:     count = 2;
  3538  08EC  3002               	movlw	2
  3539  08ED  1283               	bcf	3,5	;RP0=0, select bank0
  3540  08EE  1303               	bcf	3,6	;RP1=0, select bank0
  3541  08EF  00A9               	movwf	_count
  3542  08F0  3000               	movlw	0
  3543  08F1  00AA               	movwf	_count+1
  3544                           
  3545                           ;threshold_src.c: 21:     buzzer_watcher = 'x';
  3546  08F2  3078               	movlw	120
  3547  08F3  00F7               	movwf	??_set_lower_threshold
  3548  08F4  0877               	movf	??_set_lower_threshold,w
  3549  08F5  00C1               	movwf	_buzzer_watcher
  3550  08F6                     l3710:	
  3551                           
  3552                           ;threshold_src.c: 22:     write_char('O');
  3553  08F6  304F               	movlw	79
  3554  08F7  160A  118A  25C4  120A  158A  	fcall	_write_char
  3555  08FC                     l3712:	
  3556                           
  3557                           ;threshold_src.c: 23:     write_char('K');
  3558  08FC  304B               	movlw	75
  3559  08FD  160A  118A  25C4  120A  158A  	fcall	_write_char
  3560  0902                     l3714:	
  3561                           
  3562                           ;threshold_src.c: 24:     write_char(' ');
  3563  0902  3020               	movlw	32
  3564  0903  160A  118A  25C4  120A  158A  	fcall	_write_char
  3565  0908                     l3716:	
  3566                           
  3567                           ;threshold_src.c: 25:     write_char(' ');
  3568  0908  3020               	movlw	32
  3569  0909  160A  118A  25C4  120A  158A  	fcall	_write_char
  3570  090E                     l636:	
  3571  090E  0008               	return
  3572  090F                     __end_of_set_lower_threshold:	
  3573                           
  3574                           	psect	text6
  3575  15F6                     __ptext6:	
  3576 ;; *************** function _set_beep_threshhold *****************
  3577 ;; Defined at:
  3578 ;;		line 5 in file "buzzer_src.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  x               1    wreg     unsigned char 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  x               1    2[COMMON] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3592 ;;      Params:         0       0       0       0       0
  3593 ;;      Locals:         1       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0
  3595 ;;      Totals:         1       0       0       0       0
  3596 ;;Total ram usage:        1 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    1
  3599 ;; This function calls:
  3600 ;;		_button_delay
  3601 ;; This function is called by:
  3602 ;;		_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           
  3607                           ;psect for function _set_beep_threshhold
  3608  15F6                     _set_beep_threshhold:	
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in _set_beep_threshhold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3612                           ;set_beep_threshhold@x stored from wreg
  3613  15F6  00F2               	movwf	set_beep_threshhold@x
  3614  15F7                     l3726:	
  3615                           
  3616                           ;buzzer_src.c: 6:     if (x == 'w'){
  3617  15F7  3077               	movlw	119
  3618  15F8  0672               	xorwf	set_beep_threshhold@x,w
  3619  15F9  1D03               	btfss	3,2
  3620  15FA  2DFC               	goto	u2381
  3621  15FB  2DFD               	goto	u2380
  3622  15FC                     u2381:	
  3623  15FC  2E15               	goto	l3736
  3624  15FD                     u2380:	
  3625  15FD                     l3728:	
  3626                           
  3627                           ;buzzer_src.c: 7:         RE2 = 1;
  3628  15FD  1283               	bcf	3,5	;RP0=0, select bank0
  3629  15FE  1303               	bcf	3,6	;RP1=0, select bank0
  3630  15FF  1509               	bsf	9,2	;volatile
  3631  1600                     l3730:	
  3632                           
  3633                           ;buzzer_src.c: 8:         button_delay();
  3634  1600  160A  118A  256B  160A  118A  	fcall	_button_delay
  3635  1605                     l3732:	
  3636                           
  3637                           ;buzzer_src.c: 9:         RE2 = 0;
  3638  1605  1283               	bcf	3,5	;RP0=0, select bank0
  3639  1606  1303               	bcf	3,6	;RP1=0, select bank0
  3640  1607  1109               	bcf	9,2	;volatile
  3641                           
  3642                           ;buzzer_src.c: 10:         button_delay();
  3643  1608  160A  118A  256B  160A  118A  	fcall	_button_delay
  3644  160D                     l3734:	
  3645                           
  3646                           ;buzzer_src.c: 11:         RE2 = 1;
  3647  160D  1283               	bcf	3,5	;RP0=0, select bank0
  3648  160E  1303               	bcf	3,6	;RP1=0, select bank0
  3649  160F  1509               	bsf	9,2	;volatile
  3650                           
  3651                           ;buzzer_src.c: 12:         button_delay();
  3652  1610  160A  118A  256B  160A  118A  	fcall	_button_delay
  3653  1615                     l3736:	
  3654                           
  3655                           ;buzzer_src.c: 13:         RE2 = 0;
  3656  1615  1283               	bcf	3,5	;RP0=0, select bank0
  3657  1616  1303               	bcf	3,6	;RP1=0, select bank0
  3658  1617  1109               	bcf	9,2	;volatile
  3659  1618                     l409:	
  3660  1618  0008               	return
  3661  1619                     __end_of_set_beep_threshhold:	
  3662                           
  3663                           	psect	text7
  3664  14EA                     __ptext7:	
  3665 ;; *************** function _reset_alarm *****************
  3666 ;; Defined at:
  3667 ;;		line 29 in file "threshold_src.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;		None
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0
  3683 ;;      Temps:          1       0       0       0       0
  3684 ;;      Totals:         1       0       0       0       0
  3685 ;;Total ram usage:        1 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function _reset_alarm
  3696  14EA                     _reset_alarm:	
  3697  14EA                     l3742:	
  3698                           ;incstack = 0
  3699                           ; Regs used in _reset_alarm: [wreg+status,2]
  3700                           
  3701                           
  3702                           ;threshold_src.c: 30:     RC0 = 1;
  3703  14EA  1283               	bcf	3,5	;RP0=0, select bank0
  3704  14EB  1303               	bcf	3,6	;RP1=0, select bank0
  3705  14EC  1407               	bsf	7,0	;volatile
  3706                           
  3707                           ;threshold_src.c: 31:     RC1 = 1;
  3708  14ED  1487               	bsf	7,1	;volatile
  3709                           
  3710                           ;threshold_src.c: 32:     RC2 = 1;
  3711  14EE  1507               	bsf	7,2	;volatile
  3712                           
  3713                           ;threshold_src.c: 33:     RC3 = 0;
  3714  14EF  1187               	bcf	7,3	;volatile
  3715                           
  3716                           ;threshold_src.c: 34:     if(RC4 == 0){
  3717  14F0  1A07               	btfsc	7,4	;volatile
  3718  14F1  2CF3               	goto	u2391
  3719  14F2  2CF4               	goto	u2390
  3720  14F3                     u2391:	
  3721  14F3  2CFA               	goto	l640
  3722  14F4                     u2390:	
  3723  14F4                     l3744:	
  3724                           
  3725                           ;threshold_src.c: 35:         count = 0;
  3726  14F4  01A9               	clrf	_count
  3727  14F5  01AA               	clrf	_count+1
  3728  14F6                     l3746:	
  3729                           
  3730                           ;threshold_src.c: 36:         buzzer_watcher = 'x';
  3731  14F6  3078               	movlw	120
  3732  14F7  00F0               	movwf	??_reset_alarm
  3733  14F8  0870               	movf	??_reset_alarm,w
  3734  14F9  00C1               	movwf	_buzzer_watcher
  3735  14FA                     l640:	
  3736  14FA  0008               	return
  3737  14FB                     __end_of_reset_alarm:	
  3738                           
  3739                           	psect	text8
  3740  1619                     __ptext8:	
  3741 ;; *************** function _lcd_init *****************
  3742 ;; Defined at:
  3743 ;;		line 14 in file "LCD_src.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  i               2    0        int 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3757 ;;      Params:         0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    2
  3764 ;; This function calls:
  3765 ;;		_delay_screen
  3766 ;;		_write_cmd
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           
  3773                           ;psect for function _lcd_init
  3774  1619                     _lcd_init:	
  3775  1619                     l2986:	
  3776                           ;incstack = 0
  3777                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3778                           
  3779                           
  3780                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  3781  1619  1683               	bsf	3,5	;RP0=1, select bank1
  3782  161A  1303               	bcf	3,6	;RP1=0, select bank1
  3783  161B  0185               	clrf	5	;volatile
  3784  161C                     l2988:	
  3785                           
  3786                           ;LCD_src.c: 18:  RA0=0;
  3787  161C  1283               	bcf	3,5	;RP0=0, select bank0
  3788  161D  1303               	bcf	3,6	;RP1=0, select bank0
  3789  161E  1005               	bcf	5,0	;volatile
  3790  161F                     l2990:	
  3791                           
  3792                           ;LCD_src.c: 19:  delay_screen();
  3793  161F  160A  118A  2581  160A  118A  	fcall	_delay_screen
  3794  1624                     l2992:	
  3795                           
  3796                           ;LCD_src.c: 20:  RA0=1;
  3797  1624  1283               	bcf	3,5	;RP0=0, select bank0
  3798  1625  1303               	bcf	3,6	;RP1=0, select bank0
  3799  1626  1405               	bsf	5,0	;volatile
  3800  1627                     l2994:	
  3801                           
  3802                           ;LCD_src.c: 21:  RA2=1;
  3803  1627  1505               	bsf	5,2	;volatile
  3804  1628                     l2996:	
  3805                           
  3806                           ;LCD_src.c: 22:  write_cmd(0x30);
  3807  1628  3030               	movlw	48
  3808  1629  160A  118A  25DD  160A  118A  	fcall	_write_cmd
  3809  162E                     l2998:	
  3810                           
  3811                           ;LCD_src.c: 23:  write_cmd(0x01);
  3812  162E  3001               	movlw	1
  3813  162F  160A  118A  25DD  160A  118A  	fcall	_write_cmd
  3814  1634                     l3000:	
  3815                           
  3816                           ;LCD_src.c: 24:  write_cmd(0x06);
  3817  1634  3006               	movlw	6
  3818  1635  160A  118A  25DD  160A  118A  	fcall	_write_cmd
  3819  163A                     l3002:	
  3820                           
  3821                           ;LCD_src.c: 25:  write_cmd(0x0c);
  3822  163A  300C               	movlw	12
  3823  163B  160A  118A  25DD  160A  118A  	fcall	_write_cmd
  3824  1640                     l158:	
  3825  1640  0008               	return
  3826  1641                     __end_of_lcd_init:	
  3827                           
  3828                           	psect	text9
  3829  1531                     __ptext9:	
  3830 ;; *************** function _initialise_buttons *****************
  3831 ;; Defined at:
  3832 ;;		line 11 in file "Button_src.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function _initialise_buttons
  3861  1531                     _initialise_buttons:	
  3862  1531                     l3004:	
  3863                           ;incstack = 0
  3864                           ; Regs used in _initialise_buttons: [wreg+status,2]
  3865                           
  3866                           
  3867                           ;Button_src.c: 12:     ADCON1 = 0x06;
  3868  1531  3006               	movlw	6
  3869  1532  1683               	bsf	3,5	;RP0=1, select bank1
  3870  1533  1303               	bcf	3,6	;RP1=0, select bank1
  3871  1534  009F               	movwf	31	;volatile
  3872                           
  3873                           ;Button_src.c: 13:     TRISC = 0xf0;
  3874  1535  30F0               	movlw	240
  3875  1536  0087               	movwf	7	;volatile
  3876  1537                     l3006:	
  3877                           
  3878                           ;Button_src.c: 14:     a = 0x00;
  3879  1537  1283               	bcf	3,5	;RP0=0, select bank0
  3880  1538  1303               	bcf	3,6	;RP1=0, select bank0
  3881  1539  01C8               	clrf	_a
  3882  153A                     l3008:	
  3883                           
  3884                           ;Button_src.c: 15:     b = 0x00;
  3885  153A  01C7               	clrf	_b
  3886  153B                     l3010:	
  3887                           
  3888                           ;Button_src.c: 16:     c = 0x00;
  3889  153B  01C6               	clrf	_c
  3890  153C                     l3012:	
  3891                           
  3892                           ;Button_src.c: 17:     z = 0;
  3893  153C  01B1               	clrf	_z
  3894  153D  01B2               	clrf	_z+1
  3895                           
  3896                           ;Button_src.c: 18:     day_low = 12;
  3897  153E  300C               	movlw	12
  3898  153F  00AF               	movwf	_day_low
  3899  1540  3000               	movlw	0
  3900  1541  00B0               	movwf	_day_low+1
  3901  1542                     l507:	
  3902  1542  0008               	return
  3903  1543                     __end_of_initialise_buttons:	
  3904                           
  3905                           	psect	text10
  3906  14CA                     __ptext10:	
  3907 ;; *************** function _init_temp *****************
  3908 ;; Defined at:
  3909 ;;		line 6 in file "Thermometer_src.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		status,2
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0
  3926 ;;      Totals:         0       0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _init_temp
  3938  14CA                     _init_temp:	
  3939  14CA                     l2968:	
  3940                           ;incstack = 0
  3941                           ; Regs used in _init_temp: [status,2]
  3942                           
  3943                           
  3944                           ;Thermometer_src.c: 8:     TRISE=0X00;
  3945  14CA  1683               	bsf	3,5	;RP0=1, select bank1
  3946  14CB  1303               	bcf	3,6	;RP1=0, select bank1
  3947  14CC  0189               	clrf	9	;volatile
  3948                           
  3949                           ;Thermometer_src.c: 9:     PORTE = 0X00;
  3950  14CD  1283               	bcf	3,5	;RP0=0, select bank0
  3951  14CE  1303               	bcf	3,6	;RP1=0, select bank0
  3952  14CF  0189               	clrf	9	;volatile
  3953  14D0                     l245:	
  3954  14D0  0008               	return
  3955  14D1                     __end_of_init_temp:	
  3956                           
  3957                           	psect	text11
  3958  14E1                     __ptext11:	
  3959 ;; *************** function _init *****************
  3960 ;; Defined at:
  3961 ;;		line 5 in file "LCD_src.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;		None
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;		None
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         0       0       0       0       0
  3976 ;;      Locals:         0       0       0       0       0
  3977 ;;      Temps:          0       0       0       0       0
  3978 ;;      Totals:         0       0       0       0       0
  3979 ;;Total ram usage:        0 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           
  3989                           ;psect for function _init
  3990  14E1                     _init:	
  3991  14E1                     l2976:	
  3992                           ;incstack = 0
  3993                           ; Regs used in _init: [wreg+status,2]
  3994                           
  3995                           
  3996                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  3997  14E1  3007               	movlw	7
  3998  14E2  1683               	bsf	3,5	;RP0=1, select bank1
  3999  14E3  1303               	bcf	3,6	;RP1=0, select bank1
  4000  14E4  009F               	movwf	31	;volatile
  4001  14E5                     l2978:	
  4002                           
  4003                           ;LCD_src.c: 8:  TRISA0=1;
  4004  14E5  1405               	bsf	5,0	;volatile
  4005  14E6                     l2980:	
  4006                           
  4007                           ;LCD_src.c: 9:  TRISD=0X00;
  4008  14E6  0188               	clrf	8	;volatile
  4009  14E7                     l2982:	
  4010                           
  4011                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  4012  14E7  0181               	clrf	1	;volatile
  4013  14E8                     l2984:	
  4014                           
  4015                           ;LCD_src.c: 11:  TRISE = 0X00;
  4016  14E8  0189               	clrf	9	;volatile
  4017  14E9                     l155:	
  4018  14E9  0008               	return
  4019  14EA                     __end_of_init:	
  4020                           
  4021                           	psect	text12
  4022  16EF                     __ptext12:	
  4023 ;; *************** function _get_time *****************
  4024 ;; Defined at:
  4025 ;;		line 26 in file "clock_src.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  i               2    6[COMMON] int 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         0       0       0       0       0
  4040 ;;      Locals:         2       0       0       0       0
  4041 ;;      Temps:          1       0       0       0       0
  4042 ;;      Totals:         3       0       0       0       0
  4043 ;;Total ram usage:        3 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    1
  4046 ;; This function calls:
  4047 ;;		_time_read_1
  4048 ;;		_time_write_1
  4049 ;; This function is called by:
  4050 ;;		_main
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           
  4055                           ;psect for function _get_time
  4056  16EF                     _get_time:	
  4057  16EF                     l3070:	
  4058                           ;incstack = 0
  4059                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4060                           
  4061                           
  4062                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  4063  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  4064  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  4065  16F1  1686               	bsf	6,5	;volatile
  4066  16F2                     l3072:	
  4067                           
  4068                           ;clock_src.c: 30:    time_write_1(0xbf);
  4069  16F2  30BF               	movlw	191
  4070  16F3  160A  118A  2641  160A  118A  	fcall	_time_write_1
  4071  16F8                     l3074:	
  4072                           
  4073                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  4074  16F8  01F6               	clrf	get_time@i
  4075  16F9  01F7               	clrf	get_time@i+1
  4076  16FA                     l3080:	
  4077                           
  4078                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  4079  16FA  160A  118A  271D  160A  118A  	fcall	_time_read_1
  4080  16FF  00F5               	movwf	??_get_time
  4081  1700  0876               	movf	get_time@i,w
  4082  1701  3E20               	addlw	(low (_table1| 0))& (0+255)
  4083  1702  0084               	movwf	4
  4084  1703  0875               	movf	??_get_time,w
  4085  1704  1383               	bcf	3,7	;select IRP bank0
  4086  1705  0080               	movwf	0
  4087  1706                     l3082:	
  4088                           
  4089                           ;clock_src.c: 34:      }
  4090  1706  3001               	movlw	1
  4091  1707  07F6               	addwf	get_time@i,f
  4092  1708  1803               	skipnc
  4093  1709  0AF7               	incf	get_time@i+1,f
  4094  170A  3000               	movlw	0
  4095  170B  07F7               	addwf	get_time@i+1,f
  4096  170C                     l3084:	
  4097  170C  0877               	movf	get_time@i+1,w
  4098  170D  3A80               	xorlw	128
  4099  170E  00FF               	movwf	btemp+1
  4100  170F  3080               	movlw	128
  4101  1710  027F               	subwf	btemp+1,w
  4102  1711  1D03               	skipz
  4103  1712  2F15               	goto	u1855
  4104  1713  3007               	movlw	7
  4105  1714  0276               	subwf	get_time@i,w
  4106  1715                     u1855:	
  4107  1715  1C03               	skipc
  4108  1716  2F18               	goto	u1851
  4109  1717  2F19               	goto	u1850
  4110  1718                     u1851:	
  4111  1718  2EFA               	goto	l3080
  4112  1719                     u1850:	
  4113  1719                     l322:	
  4114                           
  4115                           ;clock_src.c: 35:    RB5=0;
  4116  1719  1283               	bcf	3,5	;RP0=0, select bank0
  4117  171A  1303               	bcf	3,6	;RP1=0, select bank0
  4118  171B  1286               	bcf	6,5	;volatile
  4119  171C                     l323:	
  4120  171C  0008               	return
  4121  171D                     __end_of_get_time:	
  4122                           
  4123                           	psect	text13
  4124  171D                     __ptext13:	
  4125 ;; *************** function _time_read_1 *****************
  4126 ;; Defined at:
  4127 ;;		line 132 in file "clock_src.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  j               2    2[COMMON] int 
  4132 ;;  time_rx         1    4[COMMON] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      unsigned char 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, btemp+1
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       0       0       0       0
  4143 ;;      Locals:         3       0       0       0       0
  4144 ;;      Temps:          2       0       0       0       0
  4145 ;;      Totals:         5       0       0       0       0
  4146 ;;Total ram usage:        5 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_get_time
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           
  4156                           ;psect for function _time_read_1
  4157  171D                     _time_read_1:	
  4158  171D                     l2804:	
  4159                           ;incstack = 0
  4160                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  4161                           
  4162                           
  4163                           ;clock_src.c: 134:    unsigned char time_rx=0;
  4164  171D  01F4               	clrf	time_read_1@time_rx
  4165  171E                     l2806:	
  4166                           
  4167                           ;clock_src.c: 135:    int j;;clock_src.c: 136:    TRISB4=1;
  4168  171E  1683               	bsf	3,5	;RP0=1, select bank1
  4169  171F  1303               	bcf	3,6	;RP1=0, select bank1
  4170  1720  1606               	bsf	6,4	;volatile
  4171                           
  4172                           ;clock_src.c: 137:    for(j=0;j<8;j++)
  4173  1721  01F2               	clrf	time_read_1@j
  4174  1722  01F3               	clrf	time_read_1@j+1
  4175  1723                     l340:	
  4176                           
  4177                           ;clock_src.c: 138:       {;clock_src.c: 139:         RB0=0;
  4178  1723  1283               	bcf	3,5	;RP0=0, select bank0
  4179  1724  1303               	bcf	3,6	;RP1=0, select bank0
  4180  1725  1006               	bcf	6,0	;volatile
  4181  1726                     l2812:	
  4182                           
  4183                           ;clock_src.c: 140:         time_rx=time_rx>>1;
  4184  1726  0874               	movf	time_read_1@time_rx,w
  4185  1727  00F0               	movwf	??_time_read_1
  4186  1728  1003               	clrc
  4187  1729  0C70               	rrf	??_time_read_1,w
  4188  172A  00F1               	movwf	??_time_read_1+1
  4189  172B  0871               	movf	??_time_read_1+1,w
  4190  172C  00F4               	movwf	time_read_1@time_rx
  4191  172D                     l2814:	
  4192                           
  4193                           ;clock_src.c: 141:         if(RB4)time_rx=time_rx|0x80;
  4194  172D  1E06               	btfss	6,4	;volatile
  4195  172E  2F30               	goto	u1481
  4196  172F  2F31               	goto	u1480
  4197  1730                     u1481:	
  4198  1730  2F36               	goto	l2818
  4199  1731                     u1480:	
  4200  1731                     l2816:	
  4201  1731  0874               	movf	time_read_1@time_rx,w
  4202  1732  3880               	iorlw	128
  4203  1733  00F0               	movwf	??_time_read_1
  4204  1734  0870               	movf	??_time_read_1,w
  4205  1735  00F4               	movwf	time_read_1@time_rx
  4206  1736                     l2818:	
  4207                           
  4208                           ;clock_src.c: 143:        RB0=1;
  4209  1736  1406               	bsf	6,0	;volatile
  4210  1737                     l2820:	
  4211                           
  4212                           ;clock_src.c: 144:       }
  4213  1737  3001               	movlw	1
  4214  1738  07F2               	addwf	time_read_1@j,f
  4215  1739  1803               	skipnc
  4216  173A  0AF3               	incf	time_read_1@j+1,f
  4217  173B  3000               	movlw	0
  4218  173C  07F3               	addwf	time_read_1@j+1,f
  4219  173D                     l2822:	
  4220  173D  0873               	movf	time_read_1@j+1,w
  4221  173E  3A80               	xorlw	128
  4222  173F  00FF               	movwf	btemp+1
  4223  1740  3080               	movlw	128
  4224  1741  027F               	subwf	btemp+1,w
  4225  1742  1D03               	skipz
  4226  1743  2F46               	goto	u1495
  4227  1744  3008               	movlw	8
  4228  1745  0272               	subwf	time_read_1@j,w
  4229  1746                     u1495:	
  4230  1746  1C03               	skipc
  4231  1747  2F49               	goto	u1491
  4232  1748  2F4A               	goto	u1490
  4233  1749                     u1491:	
  4234  1749  2F23               	goto	l340
  4235  174A                     u1490:	
  4236  174A                     l341:	
  4237                           
  4238                           ;clock_src.c: 145:     TRISB4=0;
  4239  174A  1683               	bsf	3,5	;RP0=1, select bank1
  4240  174B  1303               	bcf	3,6	;RP1=0, select bank1
  4241  174C  1206               	bcf	6,4	;volatile
  4242                           
  4243                           ;clock_src.c: 146:     RB0=0;
  4244  174D  1283               	bcf	3,5	;RP0=0, select bank0
  4245  174E  1303               	bcf	3,6	;RP1=0, select bank0
  4246  174F  1006               	bcf	6,0	;volatile
  4247  1750                     l2824:	
  4248                           
  4249                           ;clock_src.c: 147:     return(time_rx);
  4250  1750  0874               	movf	time_read_1@time_rx,w
  4251  1751                     l343:	
  4252  1751  0008               	return
  4253  1752                     __end_of_time_read_1:	
  4254                           
  4255                           	psect	text14
  4256  0B1B                     __ptext14:	
  4257 ;; *************** function _get_temp *****************
  4258 ;; Defined at:
  4259 ;;		line 89 in file "Thermometer_src.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  i               2    0        int 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         0       0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0
  4275 ;;      Temps:          0       4       0       0       0
  4276 ;;      Totals:         0       4       0       0       0
  4277 ;;Total ram usage:        4 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:    2
  4280 ;; This function calls:
  4281 ;;		___awdiv
  4282 ;;		___awmod
  4283 ;;		___lwdiv
  4284 ;;		___lwmod
  4285 ;;		_delay2
  4286 ;;		_read_byte
  4287 ;;		_reset_temp
  4288 ;;		_write_byte
  4289 ;; This function is called by:
  4290 ;;		_main
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           
  4295                           ;psect for function _get_temp
  4296  0B1B                     _get_temp:	
  4297  0B1B                     l3014:	
  4298                           ;incstack = 0
  4299                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4300                           
  4301                           
  4302                           ;Thermometer_src.c: 91: int i;;Thermometer_src.c: 92: TRISE0 =1;
  4303  0B1B  1683               	bsf	3,5	;RP0=1, select bank1
  4304  0B1C  1303               	bcf	3,6	;RP1=0, select bank1
  4305  0B1D  1409               	bsf	9,0	;volatile
  4306  0B1E                     l3016:	
  4307                           
  4308                           ;Thermometer_src.c: 93: reset_temp();
  4309  0B1E  160A  118A  27C6  120A  158A  	fcall	_reset_temp
  4310                           
  4311                           ;Thermometer_src.c: 94: write_byte(0XCC);
  4312  0B23  30CC               	movlw	204
  4313  0B24  120A  158A  2006  120A  158A  	fcall	_write_byte
  4314  0B29                     l3018:	
  4315                           
  4316                           ;Thermometer_src.c: 95: delay2();
  4317  0B29  160A  118A  2597  120A  158A  	fcall	_delay2
  4318  0B2E                     l3020:	
  4319                           
  4320                           ;Thermometer_src.c: 96: write_byte(0X44);
  4321  0B2E  3044               	movlw	68
  4322  0B2F  120A  158A  2006  120A  158A  	fcall	_write_byte
  4323  0B34                     l3022:	
  4324                           
  4325                           ;Thermometer_src.c: 98: reset_temp();
  4326  0B34  160A  118A  27C6  120A  158A  	fcall	_reset_temp
  4327  0B39                     l3024:	
  4328                           
  4329                           ;Thermometer_src.c: 99: write_byte(0XCC);
  4330  0B39  30CC               	movlw	204
  4331  0B3A  120A  158A  2006  120A  158A  	fcall	_write_byte
  4332  0B3F                     l3026:	
  4333                           
  4334                           ;Thermometer_src.c: 100: write_byte(0XBE);
  4335  0B3F  30BE               	movlw	190
  4336  0B40  120A  158A  2006  120A  158A  	fcall	_write_byte
  4337  0B45                     l3028:	
  4338                           
  4339                           ;Thermometer_src.c: 101: TLV=read_byte();
  4340  0B45  160A  118A  278C  120A  158A  	fcall	_read_byte
  4341  0B4A  1283               	bcf	3,5	;RP0=0, select bank0
  4342  0B4B  1303               	bcf	3,6	;RP1=0, select bank0
  4343  0B4C  00D3               	movwf	??_get_temp
  4344  0B4D  0853               	movf	??_get_temp,w
  4345  0B4E  00D2               	movwf	_TLV
  4346  0B4F                     l3030:	
  4347                           
  4348                           ;Thermometer_src.c: 102: THV=read_byte();
  4349  0B4F  160A  118A  278C  120A  158A  	fcall	_read_byte
  4350  0B54  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0B55  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0B56  00D3               	movwf	??_get_temp
  4353  0B57  0853               	movf	??_get_temp,w
  4354  0B58  00D1               	movwf	_THV
  4355  0B59                     l3032:	
  4356                           
  4357                           ;Thermometer_src.c: 103: TRISE0 =1;
  4358  0B59  1683               	bsf	3,5	;RP0=1, select bank1
  4359  0B5A  1303               	bcf	3,6	;RP1=0, select bank1
  4360  0B5B  1409               	bsf	9,0	;volatile
  4361  0B5C                     l3034:	
  4362                           
  4363                           ;Thermometer_src.c: 104: TZ=(TLV>>4)|(THV<<4)&0X3f;
  4364  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0B5E  0851               	movf	_THV,w
  4367  0B5F  00D3               	movwf	??_get_temp
  4368  0B60  3004               	movlw	4
  4369  0B61                     u1785:	
  4370  0B61  1003               	clrc
  4371  0B62  0DD3               	rlf	??_get_temp,f
  4372  0B63  3EFF               	addlw	-1
  4373  0B64  1D03               	skipz
  4374  0B65  2B61               	goto	u1785
  4375  0B66  303F               	movlw	63
  4376  0B67  0553               	andwf	??_get_temp,w
  4377  0B68  00D4               	movwf	??_get_temp+1
  4378  0B69  0852               	movf	_TLV,w
  4379  0B6A  00D5               	movwf	??_get_temp+2
  4380  0B6B  3004               	movlw	4
  4381  0B6C                     u1795:	
  4382  0B6C  1003               	clrc
  4383  0B6D  0CD5               	rrf	??_get_temp+2,f
  4384  0B6E  3EFF               	addlw	-1
  4385  0B6F  1D03               	skipz
  4386  0B70  2B6C               	goto	u1795
  4387  0B71  0855               	movf	??_get_temp+2,w
  4388  0B72  0454               	iorwf	??_get_temp+1,w
  4389  0B73  00D6               	movwf	??_get_temp+3
  4390  0B74  0856               	movf	??_get_temp+3,w
  4391  0B75  00D0               	movwf	_TZ
  4392  0B76                     l3036:	
  4393                           
  4394                           ;Thermometer_src.c: 105: TX=TLV<<4;
  4395  0B76  0852               	movf	_TLV,w
  4396  0B77  00D3               	movwf	??_get_temp
  4397  0B78  3003               	movlw	3
  4398  0B79                     u1805:	
  4399  0B79  1003               	clrc
  4400  0B7A  0DD3               	rlf	??_get_temp,f
  4401  0B7B  3EFF               	addlw	-1
  4402  0B7C  1D03               	skipz
  4403  0B7D  2B79               	goto	u1805
  4404  0B7E  1003               	clrc
  4405  0B7F  0D53               	rlf	??_get_temp,w
  4406  0B80  00D4               	movwf	??_get_temp+1
  4407  0B81  0854               	movf	??_get_temp+1,w
  4408  0B82  00CF               	movwf	_TX
  4409  0B83                     l3040:	
  4410                           
  4411                           ;Thermometer_src.c: 107: ge=TZ%10;
  4412  0B83  300A               	movlw	10
  4413  0B84  00F0               	movwf	___awmod@divisor
  4414  0B85  3000               	movlw	0
  4415  0B86  00F1               	movwf	___awmod@divisor+1
  4416  0B87  0850               	movf	_TZ,w
  4417  0B88  00D3               	movwf	??_get_temp
  4418  0B89  01D4               	clrf	??_get_temp+1
  4419  0B8A  0853               	movf	??_get_temp,w
  4420  0B8B  00F2               	movwf	___awmod@dividend
  4421  0B8C  0854               	movf	??_get_temp+1,w
  4422  0B8D  00F3               	movwf	___awmod@dividend+1
  4423  0B8E  120A  158A  210F  120A  158A  	fcall	___awmod
  4424  0B93  0870               	movf	?___awmod,w
  4425  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0B96  00D5               	movwf	??_get_temp+2
  4428  0B97  0855               	movf	??_get_temp+2,w
  4429  0B98  00CD               	movwf	_ge
  4430                           
  4431                           ;Thermometer_src.c: 108: shi=TZ/10;
  4432  0B99  300A               	movlw	10
  4433  0B9A  00F0               	movwf	___awdiv@divisor
  4434  0B9B  3000               	movlw	0
  4435  0B9C  00F1               	movwf	___awdiv@divisor+1
  4436  0B9D  0850               	movf	_TZ,w
  4437  0B9E  00D3               	movwf	??_get_temp
  4438  0B9F  01D4               	clrf	??_get_temp+1
  4439  0BA0  0853               	movf	??_get_temp,w
  4440  0BA1  00F2               	movwf	___awdiv@dividend
  4441  0BA2  0854               	movf	??_get_temp+1,w
  4442  0BA3  00F3               	movwf	___awdiv@dividend+1
  4443  0BA4  120A  158A  2168  120A  158A  	fcall	___awdiv
  4444  0BA9  0870               	movf	?___awdiv,w
  4445  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  4446  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  4447  0BAC  00D5               	movwf	??_get_temp+2
  4448  0BAD  0855               	movf	??_get_temp+2,w
  4449  0BAE  00CE               	movwf	_shi
  4450  0BAF                     l3042:	
  4451                           
  4452                           ;Thermometer_src.c: 109: wd=0;
  4453  0BAF  01BB               	clrf	_wd
  4454  0BB0  01BC               	clrf	_wd+1
  4455  0BB1                     l3044:	
  4456                           
  4457                           ;Thermometer_src.c: 110: if (TX & 0x80) wd=wd+5000;
  4458  0BB1  1FCF               	btfss	_TX,7
  4459  0BB2  2BB4               	goto	u1811
  4460  0BB3  2BB5               	goto	u1810
  4461  0BB4                     u1811:	
  4462  0BB4  2BBD               	goto	l3048
  4463  0BB5                     u1810:	
  4464  0BB5                     l3046:	
  4465  0BB5  083B               	movf	_wd,w
  4466  0BB6  3E88               	addlw	136
  4467  0BB7  00BB               	movwf	_wd
  4468  0BB8  083C               	movf	_wd+1,w
  4469  0BB9  1803               	skipnc
  4470  0BBA  3E01               	addlw	1
  4471  0BBB  3E13               	addlw	19
  4472  0BBC  00BC               	movwf	_wd+1
  4473  0BBD                     l3048:	
  4474                           
  4475                           ;Thermometer_src.c: 111: if (TX & 0x40) wd=wd+2500;
  4476  0BBD  1F4F               	btfss	_TX,6
  4477  0BBE  2BC0               	goto	u1821
  4478  0BBF  2BC1               	goto	u1820
  4479  0BC0                     u1821:	
  4480  0BC0  2BC9               	goto	l3052
  4481  0BC1                     u1820:	
  4482  0BC1                     l3050:	
  4483  0BC1  083B               	movf	_wd,w
  4484  0BC2  3EC4               	addlw	196
  4485  0BC3  00BB               	movwf	_wd
  4486  0BC4  083C               	movf	_wd+1,w
  4487  0BC5  1803               	skipnc
  4488  0BC6  3E01               	addlw	1
  4489  0BC7  3E09               	addlw	9
  4490  0BC8  00BC               	movwf	_wd+1
  4491  0BC9                     l3052:	
  4492                           
  4493                           ;Thermometer_src.c: 112: if (TX & 0x20) wd=wd+1250;
  4494  0BC9  1ECF               	btfss	_TX,5
  4495  0BCA  2BCC               	goto	u1831
  4496  0BCB  2BCD               	goto	u1830
  4497  0BCC                     u1831:	
  4498  0BCC  2BD5               	goto	l3056
  4499  0BCD                     u1830:	
  4500  0BCD                     l3054:	
  4501  0BCD  083B               	movf	_wd,w
  4502  0BCE  3EE2               	addlw	226
  4503  0BCF  00BB               	movwf	_wd
  4504  0BD0  083C               	movf	_wd+1,w
  4505  0BD1  1803               	skipnc
  4506  0BD2  3E01               	addlw	1
  4507  0BD3  3E04               	addlw	4
  4508  0BD4  00BC               	movwf	_wd+1
  4509  0BD5                     l3056:	
  4510                           
  4511                           ;Thermometer_src.c: 113: if (TX & 0x10) wd=wd+625;
  4512  0BD5  1E4F               	btfss	_TX,4
  4513  0BD6  2BD8               	goto	u1841
  4514  0BD7  2BD9               	goto	u1840
  4515  0BD8                     u1841:	
  4516  0BD8  2BE1               	goto	l3060
  4517  0BD9                     u1840:	
  4518  0BD9                     l3058:	
  4519  0BD9  083B               	movf	_wd,w
  4520  0BDA  3E71               	addlw	113
  4521  0BDB  00BB               	movwf	_wd
  4522  0BDC  083C               	movf	_wd+1,w
  4523  0BDD  1803               	skipnc
  4524  0BDE  3E01               	addlw	1
  4525  0BDF  3E02               	addlw	2
  4526  0BE0  00BC               	movwf	_wd+1
  4527  0BE1                     l3060:	
  4528                           
  4529                           ;Thermometer_src.c: 114: shifen=wd/1000;
  4530  0BE1  30E8               	movlw	232
  4531  0BE2  00F6               	movwf	___lwdiv@divisor
  4532  0BE3  3003               	movlw	3
  4533  0BE4  00F7               	movwf	___lwdiv@divisor+1
  4534  0BE5  083C               	movf	_wd+1,w
  4535  0BE6  00F9               	movwf	___lwdiv@dividend+1
  4536  0BE7  083B               	movf	_wd,w
  4537  0BE8  00F8               	movwf	___lwdiv@dividend
  4538  0BE9  120A  158A  207F  120A  158A  	fcall	___lwdiv
  4539  0BEE  0876               	movf	?___lwdiv,w
  4540  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0BF1  00D3               	movwf	??_get_temp
  4543  0BF2  0853               	movf	??_get_temp,w
  4544  0BF3  00CC               	movwf	_shifen
  4545  0BF4                     l3062:	
  4546                           
  4547                           ;Thermometer_src.c: 115: baifen=(wd%1000)/100;
  4548  0BF4  3064               	movlw	100
  4549  0BF5  00F6               	movwf	___lwdiv@divisor
  4550  0BF6  3000               	movlw	0
  4551  0BF7  00F7               	movwf	___lwdiv@divisor+1
  4552  0BF8  083C               	movf	_wd+1,w
  4553  0BF9  00F3               	movwf	___lwmod@dividend+1
  4554  0BFA  083B               	movf	_wd,w
  4555  0BFB  00F2               	movwf	___lwmod@dividend
  4556  0BFC  30E8               	movlw	232
  4557  0BFD  00F0               	movwf	___lwmod@divisor
  4558  0BFE  3003               	movlw	3
  4559  0BFF  00F1               	movwf	___lwmod@divisor+1
  4560  0C00  160A  118A  2752  120A  158A  	fcall	___lwmod
  4561  0C05  0871               	movf	?___lwmod+1,w
  4562  0C06  00F9               	movwf	___lwdiv@dividend+1
  4563  0C07  0870               	movf	?___lwmod,w
  4564  0C08  00F8               	movwf	___lwdiv@dividend
  4565  0C09  120A  158A  207F  120A  158A  	fcall	___lwdiv
  4566  0C0E  0876               	movf	?___lwdiv,w
  4567  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0C10  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0C11  00D3               	movwf	??_get_temp
  4570  0C12  0853               	movf	??_get_temp,w
  4571  0C13  00CB               	movwf	_baifen
  4572  0C14                     l3064:	
  4573                           
  4574                           ;Thermometer_src.c: 116: qianfen=(wd%100)/10;
  4575  0C14  300A               	movlw	10
  4576  0C15  00F6               	movwf	___lwdiv@divisor
  4577  0C16  3000               	movlw	0
  4578  0C17  00F7               	movwf	___lwdiv@divisor+1
  4579  0C18  083C               	movf	_wd+1,w
  4580  0C19  00F3               	movwf	___lwmod@dividend+1
  4581  0C1A  083B               	movf	_wd,w
  4582  0C1B  00F2               	movwf	___lwmod@dividend
  4583  0C1C  3064               	movlw	100
  4584  0C1D  00F0               	movwf	___lwmod@divisor
  4585  0C1E  3000               	movlw	0
  4586  0C1F  00F1               	movwf	___lwmod@divisor+1
  4587  0C20  160A  118A  2752  120A  158A  	fcall	___lwmod
  4588  0C25  0871               	movf	?___lwmod+1,w
  4589  0C26  00F9               	movwf	___lwdiv@dividend+1
  4590  0C27  0870               	movf	?___lwmod,w
  4591  0C28  00F8               	movwf	___lwdiv@dividend
  4592  0C29  120A  158A  207F  120A  158A  	fcall	___lwdiv
  4593  0C2E  0876               	movf	?___lwdiv,w
  4594  0C2F  1283               	bcf	3,5	;RP0=0, select bank0
  4595  0C30  1303               	bcf	3,6	;RP1=0, select bank0
  4596  0C31  00D3               	movwf	??_get_temp
  4597  0C32  0853               	movf	??_get_temp,w
  4598  0C33  00CA               	movwf	_qianfen
  4599  0C34                     l3066:	
  4600                           
  4601                           ;Thermometer_src.c: 117: wanfen=wd%10;
  4602  0C34  300A               	movlw	10
  4603  0C35  00F0               	movwf	___lwmod@divisor
  4604  0C36  3000               	movlw	0
  4605  0C37  00F1               	movwf	___lwmod@divisor+1
  4606  0C38  083C               	movf	_wd+1,w
  4607  0C39  00F3               	movwf	___lwmod@dividend+1
  4608  0C3A  083B               	movf	_wd,w
  4609  0C3B  00F2               	movwf	___lwmod@dividend
  4610  0C3C  160A  118A  2752  120A  158A  	fcall	___lwmod
  4611  0C41  0870               	movf	?___lwmod,w
  4612  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  4613  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  4614  0C44  00D3               	movwf	??_get_temp
  4615  0C45  0853               	movf	??_get_temp,w
  4616  0C46  00C9               	movwf	_wanfen
  4617  0C47                     l3068:	
  4618                           
  4619                           ;Thermometer_src.c: 118: __nop();
  4620  0C47  0000               	nop
  4621  0C48                     l278:	
  4622  0C48  0008               	return
  4623  0C49                     __end_of_get_temp:	
  4624                           
  4625                           	psect	text15
  4626  0806                     __ptext15:	
  4627 ;; *************** function _write_byte *****************
  4628 ;; Defined at:
  4629 ;;		line 40 in file "Thermometer_src.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  val             1    wreg     unsigned char 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  val             1    7[COMMON] unsigned char 
  4634 ;;  i               1    8[COMMON] unsigned char 
  4635 ;;  temp            1    6[COMMON] unsigned char 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		wreg, status,2, status,0, pclath, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4645 ;;      Params:         0       0       0       0       0
  4646 ;;      Locals:         3       0       0       0       0
  4647 ;;      Temps:          2       0       0       0       0
  4648 ;;      Totals:         5       0       0       0       0
  4649 ;;Total ram usage:        5 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    1
  4652 ;; This function calls:
  4653 ;;		_delay_temp
  4654 ;; This function is called by:
  4655 ;;		_get_temp
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           
  4660                           ;psect for function _write_byte
  4661  0806                     _write_byte:	
  4662                           
  4663                           ;incstack = 0
  4664                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4665                           ;write_byte@val stored from wreg
  4666  0806  00F7               	movwf	write_byte@val
  4667  0807                     l2700:	
  4668                           
  4669                           ;Thermometer_src.c: 40: void write_byte(unsigned char val);Thermometer_src.c: 41: {;Ther
      +                          mometer_src.c: 42:  unsigned char i;;Thermometer_src.c: 43:  unsigned char temp;;Thermom
      +                          eter_src.c: 44:  for(i=8;i>0;i--)
  4670  0807  3008               	movlw	8
  4671  0808  00F4               	movwf	??_write_byte
  4672  0809  0874               	movf	??_write_byte,w
  4673  080A  00F8               	movwf	write_byte@i
  4674  080B                     l2706:	
  4675                           
  4676                           ;Thermometer_src.c: 45:  {;Thermometer_src.c: 46:    temp=val&0x01;
  4677  080B  0877               	movf	write_byte@val,w
  4678  080C  3901               	andlw	1
  4679  080D  00F4               	movwf	??_write_byte
  4680  080E  0874               	movf	??_write_byte,w
  4681  080F  00F6               	movwf	write_byte@temp
  4682  0810                     l2708:	
  4683                           
  4684                           ;Thermometer_src.c: 47:    RE0 = 0; TRISE0 = 0;
  4685  0810  1283               	bcf	3,5	;RP0=0, select bank0
  4686  0811  1303               	bcf	3,6	;RP1=0, select bank0
  4687  0812  1009               	bcf	9,0	;volatile
  4688  0813                     l2710:	
  4689  0813  1683               	bsf	3,5	;RP0=1, select bank1
  4690  0814  1303               	bcf	3,6	;RP1=0, select bank1
  4691  0815  1009               	bcf	9,0	;volatile
  4692  0816                     l2712:	
  4693                           
  4694                           ;Thermometer_src.c: 48:    __nop();
  4695  0816  0000               	nop
  4696  0817                     l2714:	
  4697                           
  4698                           ;Thermometer_src.c: 49:    __nop();
  4699  0817  0000               	nop
  4700  0818                     l2716:	
  4701                           
  4702                           ;Thermometer_src.c: 50:    __nop();
  4703  0818  0000               	nop
  4704  0819                     l2718:	
  4705                           
  4706                           ;Thermometer_src.c: 51:    __nop();
  4707  0819  0000               	nop
  4708  081A                     l2720:	
  4709                           
  4710                           ;Thermometer_src.c: 52:    __nop();
  4711  081A  0000               	nop
  4712  081B                     l2722:	
  4713                           
  4714                           ;Thermometer_src.c: 53:    if(temp==1) TRISE0 =1;
  4715  081B  0376               	decf	write_byte@temp,w
  4716  081C  1D03               	btfss	3,2
  4717  081D  281F               	goto	u1431
  4718  081E  2820               	goto	u1430
  4719  081F                     u1431:	
  4720  081F  2823               	goto	l2726
  4721  0820                     u1430:	
  4722  0820                     l2724:	
  4723  0820  1683               	bsf	3,5	;RP0=1, select bank1
  4724  0821  1303               	bcf	3,6	;RP1=0, select bank1
  4725  0822  1409               	bsf	9,0	;volatile
  4726  0823                     l2726:	
  4727                           
  4728                           ;Thermometer_src.c: 54:    delay_temp(2,7);
  4729  0823  3007               	movlw	7
  4730  0824  00F4               	movwf	??_write_byte
  4731  0825  0874               	movf	??_write_byte,w
  4732  0826  00F0               	movwf	delay_temp@y
  4733  0827  3002               	movlw	2
  4734  0828  160A  118A  251F  120A  158A  	fcall	_delay_temp
  4735  082D                     l2728:	
  4736                           
  4737                           ;Thermometer_src.c: 55:    TRISE0 =1;
  4738  082D  1683               	bsf	3,5	;RP0=1, select bank1
  4739  082E  1303               	bcf	3,6	;RP1=0, select bank1
  4740  082F  1409               	bsf	9,0	;volatile
  4741  0830                     l2730:	
  4742                           
  4743                           ;Thermometer_src.c: 56:    __nop();
  4744  0830  0000               	nop
  4745  0831                     l2732:	
  4746                           
  4747                           ;Thermometer_src.c: 57:    __nop();
  4748  0831  0000               	nop
  4749  0832                     l2734:	
  4750                           
  4751                           ;Thermometer_src.c: 58:    val=val>>1;
  4752  0832  0877               	movf	write_byte@val,w
  4753  0833  00F4               	movwf	??_write_byte
  4754  0834  1003               	clrc
  4755  0835  0C74               	rrf	??_write_byte,w
  4756  0836  00F5               	movwf	??_write_byte+1
  4757  0837  0875               	movf	??_write_byte+1,w
  4758  0838  00F7               	movwf	write_byte@val
  4759  0839                     l2736:	
  4760                           
  4761                           ;Thermometer_src.c: 59:   }
  4762  0839  3001               	movlw	1
  4763  083A  02F8               	subwf	write_byte@i,f
  4764  083B                     l2738:	
  4765  083B  0878               	movf	write_byte@i,w
  4766  083C  1D03               	btfss	3,2
  4767  083D  283F               	goto	u1441
  4768  083E  2840               	goto	u1440
  4769  083F                     u1441:	
  4770  083F  280B               	goto	l2706
  4771  0840                     u1440:	
  4772  0840                     l262:	
  4773  0840  0008               	return
  4774  0841                     __end_of_write_byte:	
  4775                           
  4776                           	psect	text16
  4777  17C6                     __ptext16:	
  4778 ;; *************** function _reset_temp *****************
  4779 ;; Defined at:
  4780 ;;		line 25 in file "Thermometer_src.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  presence        1    5[COMMON] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, pclath, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4794 ;;      Params:         0       0       0       0       0
  4795 ;;      Locals:         1       0       0       0       0
  4796 ;;      Temps:          1       0       0       0       0
  4797 ;;      Totals:         2       0       0       0       0
  4798 ;;Total ram usage:        2 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:    1
  4801 ;; This function calls:
  4802 ;;		_delay_temp
  4803 ;; This function is called by:
  4804 ;;		_get_temp
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _reset_temp
  4810  17C6                     _reset_temp:	
  4811  17C6                     l2684:	
  4812                           ;incstack = 0
  4813                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  4814                           
  4815                           
  4816                           ;Thermometer_src.c: 27:   char presence=1;
  4817  17C6  01F5               	clrf	reset_temp@presence
  4818  17C7  0AF5               	incf	reset_temp@presence,f
  4819                           
  4820                           ;Thermometer_src.c: 28:   while(presence)
  4821  17C8  2FFA               	goto	l2698
  4822  17C9                     l252:	
  4823                           
  4824                           ;Thermometer_src.c: 29:   {;Thermometer_src.c: 30:     RE0 = 0; TRISE0 = 0 ;
  4825  17C9  1283               	bcf	3,5	;RP0=0, select bank0
  4826  17CA  1303               	bcf	3,6	;RP1=0, select bank0
  4827  17CB  1009               	bcf	9,0	;volatile
  4828  17CC  1683               	bsf	3,5	;RP0=1, select bank1
  4829  17CD  1303               	bcf	3,6	;RP1=0, select bank1
  4830  17CE  1009               	bcf	9,0	;volatile
  4831  17CF                     l2686:	
  4832                           
  4833                           ;Thermometer_src.c: 31:     delay_temp(2,70);
  4834  17CF  3046               	movlw	70
  4835  17D0  00F4               	movwf	??_reset_temp
  4836  17D1  0874               	movf	??_reset_temp,w
  4837  17D2  00F0               	movwf	delay_temp@y
  4838  17D3  3002               	movlw	2
  4839  17D4  160A  118A  251F  160A  118A  	fcall	_delay_temp
  4840  17D9                     l2688:	
  4841                           
  4842                           ;Thermometer_src.c: 32:     TRISE0 =1;
  4843  17D9  1683               	bsf	3,5	;RP0=1, select bank1
  4844  17DA  1303               	bcf	3,6	;RP1=0, select bank1
  4845  17DB  1409               	bsf	9,0	;volatile
  4846                           
  4847                           ;Thermometer_src.c: 33:     delay_temp(2,8);
  4848  17DC  3008               	movlw	8
  4849  17DD  00F4               	movwf	??_reset_temp
  4850  17DE  0874               	movf	??_reset_temp,w
  4851  17DF  00F0               	movwf	delay_temp@y
  4852  17E0  3002               	movlw	2
  4853  17E1  160A  118A  251F  160A  118A  	fcall	_delay_temp
  4854  17E6                     l2690:	
  4855                           
  4856                           ;Thermometer_src.c: 34:     if(RE0==1) presence=1;
  4857  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  4858  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  4859  17E8  1C09               	btfss	9,0	;volatile
  4860  17E9  2FEB               	goto	u1411
  4861  17EA  2FEC               	goto	u1410
  4862  17EB                     u1411:	
  4863  17EB  2FEF               	goto	l2694
  4864  17EC                     u1410:	
  4865  17EC                     l2692:	
  4866  17EC  01F5               	clrf	reset_temp@presence
  4867  17ED  0AF5               	incf	reset_temp@presence,f
  4868  17EE  2FF0               	goto	l2696
  4869  17EF                     l2694:	
  4870  17EF  01F5               	clrf	reset_temp@presence
  4871  17F0                     l2696:	
  4872                           
  4873                           ;Thermometer_src.c: 36:     delay_temp(2,60);
  4874  17F0  303C               	movlw	60
  4875  17F1  00F4               	movwf	??_reset_temp
  4876  17F2  0874               	movf	??_reset_temp,w
  4877  17F3  00F0               	movwf	delay_temp@y
  4878  17F4  3002               	movlw	2
  4879  17F5  160A  118A  251F  160A  118A  	fcall	_delay_temp
  4880  17FA                     l2698:	
  4881                           
  4882                           ;Thermometer_src.c: 28:   while(presence)
  4883  17FA  0875               	movf	reset_temp@presence,w
  4884  17FB  1D03               	btfss	3,2
  4885  17FC  2FFE               	goto	u1421
  4886  17FD  2FFF               	goto	u1420
  4887  17FE                     u1421:	
  4888  17FE  2FC9               	goto	l252
  4889  17FF                     u1420:	
  4890  17FF                     l256:	
  4891  17FF  0008               	return
  4892  1800                     __end_of_reset_temp:	
  4893                           
  4894                           	psect	text17
  4895  178C                     __ptext17:	
  4896 ;; *************** function _read_byte *****************
  4897 ;; Defined at:
  4898 ;;		line 62 in file "Thermometer_src.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  i               1    6[COMMON] unsigned char 
  4903 ;;  value           1    5[COMMON] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      unsigned char 
  4906 ;; Registers used:
  4907 ;;		wreg, status,2, status,0, pclath, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4913 ;;      Params:         0       0       0       0       0
  4914 ;;      Locals:         2       0       0       0       0
  4915 ;;      Temps:          1       0       0       0       0
  4916 ;;      Totals:         3       0       0       0       0
  4917 ;;Total ram usage:        3 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    1
  4920 ;; This function calls:
  4921 ;;		_delay_temp
  4922 ;; This function is called by:
  4923 ;;		_get_temp
  4924 ;; This function uses a non-reentrant model
  4925 ;;
  4926                           
  4927                           
  4928                           ;psect for function _read_byte
  4929  178C                     _read_byte:	
  4930  178C                     l2740:	
  4931                           ;incstack = 0
  4932                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  4933                           
  4934                           
  4935                           ;Thermometer_src.c: 64:  unsigned char i;;Thermometer_src.c: 65:  unsigned char value=0;
  4936  178C  01F5               	clrf	read_byte@value
  4937  178D                     l2742:	
  4938                           
  4939                           ;Thermometer_src.c: 66:  static _Bool j;;Thermometer_src.c: 67:  for(i=8;i>0;i--)
  4940  178D  3008               	movlw	8
  4941  178E  00F4               	movwf	??_read_byte
  4942  178F  0874               	movf	??_read_byte,w
  4943  1790  00F6               	movwf	read_byte@i
  4944  1791                     l2748:	
  4945                           
  4946                           ;Thermometer_src.c: 68:  {;Thermometer_src.c: 69:    value>>=1;
  4947  1791  1003               	clrc
  4948  1792  0CF5               	rrf	read_byte@value,f
  4949  1793                     l2750:	
  4950                           
  4951                           ;Thermometer_src.c: 70:    RE0 = 0; TRISE0 = 0;
  4952  1793  1283               	bcf	3,5	;RP0=0, select bank0
  4953  1794  1303               	bcf	3,6	;RP1=0, select bank0
  4954  1795  1009               	bcf	9,0	;volatile
  4955  1796                     l2752:	
  4956  1796  1683               	bsf	3,5	;RP0=1, select bank1
  4957  1797  1303               	bcf	3,6	;RP1=0, select bank1
  4958  1798  1009               	bcf	9,0	;volatile
  4959  1799                     l2754:	
  4960                           
  4961                           ;Thermometer_src.c: 71:    __nop();
  4962  1799  0000               	nop
  4963  179A                     l2756:	
  4964                           
  4965                           ;Thermometer_src.c: 72:    __nop();
  4966  179A  0000               	nop
  4967  179B                     l2758:	
  4968                           
  4969                           ;Thermometer_src.c: 73:    __nop();
  4970  179B  0000               	nop
  4971  179C                     l2760:	
  4972                           
  4973                           ;Thermometer_src.c: 74:    __nop();
  4974  179C  0000               	nop
  4975  179D                     l2762:	
  4976                           
  4977                           ;Thermometer_src.c: 75:    __nop();
  4978  179D  0000               	nop
  4979  179E                     l2764:	
  4980                           
  4981                           ;Thermometer_src.c: 76:    __nop();
  4982  179E  0000               	nop
  4983  179F                     l2766:	
  4984                           
  4985                           ;Thermometer_src.c: 77:    TRISE0 =1;
  4986  179F  1683               	bsf	3,5	;RP0=1, select bank1
  4987  17A0  1303               	bcf	3,6	;RP1=0, select bank1
  4988  17A1  1409               	bsf	9,0	;volatile
  4989  17A2                     l2768:	
  4990                           
  4991                           ;Thermometer_src.c: 78:    __nop();
  4992  17A2  0000               	nop
  4993  17A3                     l2770:	
  4994                           
  4995                           ;Thermometer_src.c: 79:    __nop();
  4996  17A3  0000               	nop
  4997  17A4                     l2772:	
  4998                           
  4999                           ;Thermometer_src.c: 80:    __nop();
  5000  17A4  0000               	nop
  5001  17A5                     l2774:	
  5002                           
  5003                           ;Thermometer_src.c: 81:    __nop();
  5004  17A5  0000               	nop
  5005  17A6                     l2776:	
  5006                           
  5007                           ;Thermometer_src.c: 82:    __nop();
  5008  17A6  0000               	nop
  5009  17A7                     l2778:	
  5010                           
  5011                           ;Thermometer_src.c: 83:    j=RE0;
  5012  17A7  3000               	movlw	0
  5013  17A8  1283               	bcf	3,5	;RP0=0, select bank0
  5014  17A9  1303               	bcf	3,6	;RP1=0, select bank0
  5015  17AA  1809               	btfsc	9,0	;volatile
  5016  17AB  3001               	movlw	1
  5017  17AC  00BD               	movwf	read_byte@j
  5018  17AD                     l2780:	
  5019                           
  5020                           ;Thermometer_src.c: 84:    if(j) value|=0x80;
  5021  17AD  083D               	movf	read_byte@j,w
  5022  17AE  1903               	btfsc	3,2
  5023  17AF  2FB1               	goto	u1451
  5024  17B0  2FB2               	goto	u1450
  5025  17B1                     u1451:	
  5026  17B1  2FB3               	goto	l2784
  5027  17B2                     u1450:	
  5028  17B2                     l2782:	
  5029  17B2  17F5               	bsf	read_byte@value,7
  5030  17B3                     l2784:	
  5031                           
  5032                           ;Thermometer_src.c: 85:    delay_temp(2,7);
  5033  17B3  3007               	movlw	7
  5034  17B4  00F4               	movwf	??_read_byte
  5035  17B5  0874               	movf	??_read_byte,w
  5036  17B6  00F0               	movwf	delay_temp@y
  5037  17B7  3002               	movlw	2
  5038  17B8  160A  118A  251F  160A  118A  	fcall	_delay_temp
  5039  17BD                     l2786:	
  5040                           
  5041                           ;Thermometer_src.c: 86:   }
  5042  17BD  3001               	movlw	1
  5043  17BE  02F6               	subwf	read_byte@i,f
  5044  17BF                     l2788:	
  5045  17BF  0876               	movf	read_byte@i,w
  5046  17C0  1D03               	btfss	3,2
  5047  17C1  2FC3               	goto	u1461
  5048  17C2  2FC4               	goto	u1460
  5049  17C3                     u1461:	
  5050  17C3  2F91               	goto	l2748
  5051  17C4                     u1460:	
  5052  17C4                     l2790:	
  5053                           
  5054                           ;Thermometer_src.c: 87:   return(value);
  5055  17C4  0875               	movf	read_byte@value,w
  5056  17C5                     l270:	
  5057  17C5  0008               	return
  5058  17C6                     __end_of_read_byte:	
  5059                           
  5060                           	psect	text18
  5061  151F                     __ptext18:	
  5062 ;; *************** function _delay_temp *****************
  5063 ;; Defined at:
  5064 ;;		line 121 in file "Thermometer_src.c"
  5065 ;; Parameters:    Size  Location     Type
  5066 ;;  x               1    wreg     unsigned char 
  5067 ;;  y               1    0[COMMON] unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  x               1    2[COMMON] unsigned char 
  5070 ;;  z               1    3[COMMON] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5080 ;;      Params:         1       0       0       0       0
  5081 ;;      Locals:         2       0       0       0       0
  5082 ;;      Temps:          1       0       0       0       0
  5083 ;;      Totals:         4       0       0       0       0
  5084 ;;Total ram usage:        4 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_reset_temp
  5090 ;;		_write_byte
  5091 ;;		_read_byte
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _delay_temp
  5097  151F                     _delay_temp:	
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  5101                           ;delay_temp@x stored from wreg
  5102  151F  00F2               	movwf	delay_temp@x
  5103  1520                     l281:	
  5104                           ;Thermometer_src.c: 121: void delay_temp(char x, char y);Thermometer_src.c: 122: {;Therm
      +                          ometer_src.c: 123:  char z;;Thermometer_src.c: 124:  do{
  5105                           
  5106  1520                     l2622:	
  5107                           
  5108                           ;Thermometer_src.c: 125:  z=y;
  5109  1520  0870               	movf	delay_temp@y,w
  5110  1521  00F1               	movwf	??_delay_temp
  5111  1522  0871               	movf	??_delay_temp,w
  5112  1523  00F3               	movwf	delay_temp@z
  5113  1524                     l2624:	
  5114  1524  3001               	movlw	1
  5115  1525  02F3               	subwf	delay_temp@z,f
  5116  1526  1D03               	btfss	3,2
  5117  1527  2D29               	goto	u1361
  5118  1528  2D2A               	goto	u1360
  5119  1529                     u1361:	
  5120  1529  2D24               	goto	l2624
  5121  152A                     u1360:	
  5122  152A                     l2626:	
  5123                           
  5124                           ;Thermometer_src.c: 127:  }while(--x);
  5125  152A  3001               	movlw	1
  5126  152B  02F2               	subwf	delay_temp@x,f
  5127  152C  1D03               	btfss	3,2
  5128  152D  2D2F               	goto	u1371
  5129  152E  2D30               	goto	u1370
  5130  152F                     u1371:	
  5131  152F  2D20               	goto	l281
  5132  1530                     u1370:	
  5133  1530                     l285:	
  5134  1530  0008               	return
  5135  1531                     __end_of_delay_temp:	
  5136                           
  5137                           	psect	text19
  5138  1597                     __ptext19:	
  5139 ;; *************** function _delay2 *****************
  5140 ;; Defined at:
  5141 ;;		line 130 in file "Thermometer_src.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;		None
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  i               2    0[COMMON] int 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  1    wreg      void 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, btemp+1
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5155 ;;      Params:         0       0       0       0       0
  5156 ;;      Locals:         2       0       0       0       0
  5157 ;;      Temps:          0       0       0       0       0
  5158 ;;      Totals:         2       0       0       0       0
  5159 ;;Total ram usage:        2 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_get_temp
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function _delay2
  5170  1597                     _delay2:	
  5171  1597                     l2794:	
  5172                           ;incstack = 0
  5173                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  5174                           
  5175                           
  5176                           ;Thermometer_src.c: 131:  for (int i = 0; i<50;i++){
  5177  1597  01F0               	clrf	delay2@i
  5178  1598  01F1               	clrf	delay2@i+1
  5179  1599                     l2800:	
  5180                           
  5181                           ;Thermometer_src.c: 132:  }
  5182  1599  3001               	movlw	1
  5183  159A  07F0               	addwf	delay2@i,f
  5184  159B  1803               	skipnc
  5185  159C  0AF1               	incf	delay2@i+1,f
  5186  159D  3000               	movlw	0
  5187  159E  07F1               	addwf	delay2@i+1,f
  5188  159F                     l2802:	
  5189  159F  0871               	movf	delay2@i+1,w
  5190  15A0  3A80               	xorlw	128
  5191  15A1  00FF               	movwf	btemp+1
  5192  15A2  3080               	movlw	128
  5193  15A3  027F               	subwf	btemp+1,w
  5194  15A4  1D03               	skipz
  5195  15A5  2DA8               	goto	u1475
  5196  15A6  3032               	movlw	50
  5197  15A7  0270               	subwf	delay2@i,w
  5198  15A8                     u1475:	
  5199  15A8  1C03               	skipc
  5200  15A9  2DAB               	goto	u1471
  5201  15AA  2DAC               	goto	u1470
  5202  15AB                     u1471:	
  5203  15AB  2D99               	goto	l2800
  5204  15AC                     u1470:	
  5205  15AC                     l290:	
  5206  15AC  0008               	return
  5207  15AD                     __end_of_delay2:	
  5208                           
  5209                           	psect	text20
  5210  1752                     __ptext20:	
  5211 ;; *************** function ___lwmod *****************
  5212 ;; Defined at:
  5213 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;  divisor         2    0[COMMON] unsigned int 
  5216 ;;  dividend        2    2[COMMON] unsigned int 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  counter         1    5[COMMON] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  2    0[COMMON] unsigned int 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5228 ;;      Params:         4       0       0       0       0
  5229 ;;      Locals:         1       0       0       0       0
  5230 ;;      Temps:          1       0       0       0       0
  5231 ;;      Totals:         6       0       0       0       0
  5232 ;;Total ram usage:        6 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_get_temp
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           
  5242                           ;psect for function ___lwmod
  5243  1752                     ___lwmod:	
  5244  1752                     l2946:	
  5245                           ;incstack = 0
  5246                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5247                           
  5248  1752  0870               	movf	___lwmod@divisor,w
  5249  1753  0471               	iorwf	___lwmod@divisor+1,w
  5250  1754  1903               	btfsc	3,2
  5251  1755  2F57               	goto	u1721
  5252  1756  2F58               	goto	u1720
  5253  1757                     u1721:	
  5254  1757  2F87               	goto	l2964
  5255  1758                     u1720:	
  5256  1758                     l2948:	
  5257  1758  01F5               	clrf	___lwmod@counter
  5258  1759  0AF5               	incf	___lwmod@counter,f
  5259  175A  2F66               	goto	l2954
  5260  175B                     l2950:	
  5261  175B  3001               	movlw	1
  5262  175C                     u1735:	
  5263  175C  1003               	clrc
  5264  175D  0DF0               	rlf	___lwmod@divisor,f
  5265  175E  0DF1               	rlf	___lwmod@divisor+1,f
  5266  175F  3EFF               	addlw	-1
  5267  1760  1D03               	skipz
  5268  1761  2F5C               	goto	u1735
  5269  1762                     l2952:	
  5270  1762  3001               	movlw	1
  5271  1763  00F4               	movwf	??___lwmod
  5272  1764  0874               	movf	??___lwmod,w
  5273  1765  07F5               	addwf	___lwmod@counter,f
  5274  1766                     l2954:	
  5275  1766  1FF1               	btfss	___lwmod@divisor+1,7
  5276  1767  2F69               	goto	u1741
  5277  1768  2F6A               	goto	u1740
  5278  1769                     u1741:	
  5279  1769  2F5B               	goto	l2950
  5280  176A                     u1740:	
  5281  176A                     l2956:	
  5282  176A  0871               	movf	___lwmod@divisor+1,w
  5283  176B  0273               	subwf	___lwmod@dividend+1,w
  5284  176C  1D03               	skipz
  5285  176D  2F70               	goto	u1755
  5286  176E  0870               	movf	___lwmod@divisor,w
  5287  176F  0272               	subwf	___lwmod@dividend,w
  5288  1770                     u1755:	
  5289  1770  1C03               	skipc
  5290  1771  2F73               	goto	u1751
  5291  1772  2F74               	goto	u1750
  5292  1773                     u1751:	
  5293  1773  2F7A               	goto	l2960
  5294  1774                     u1750:	
  5295  1774                     l2958:	
  5296  1774  0870               	movf	___lwmod@divisor,w
  5297  1775  02F2               	subwf	___lwmod@dividend,f
  5298  1776  0871               	movf	___lwmod@divisor+1,w
  5299  1777  1C03               	skipc
  5300  1778  03F3               	decf	___lwmod@dividend+1,f
  5301  1779  02F3               	subwf	___lwmod@dividend+1,f
  5302  177A                     l2960:	
  5303  177A  3001               	movlw	1
  5304  177B                     u1765:	
  5305  177B  1003               	clrc
  5306  177C  0CF1               	rrf	___lwmod@divisor+1,f
  5307  177D  0CF0               	rrf	___lwmod@divisor,f
  5308  177E  3EFF               	addlw	-1
  5309  177F  1D03               	skipz
  5310  1780  2F7B               	goto	u1765
  5311  1781                     l2962:	
  5312  1781  3001               	movlw	1
  5313  1782  02F5               	subwf	___lwmod@counter,f
  5314  1783  1D03               	btfss	3,2
  5315  1784  2F86               	goto	u1771
  5316  1785  2F87               	goto	u1770
  5317  1786                     u1771:	
  5318  1786  2F6A               	goto	l2956
  5319  1787                     u1770:	
  5320  1787                     l2964:	
  5321  1787  0873               	movf	___lwmod@dividend+1,w
  5322  1788  00F1               	movwf	?___lwmod+1
  5323  1789  0872               	movf	___lwmod@dividend,w
  5324  178A  00F0               	movwf	?___lwmod
  5325  178B                     l1024:	
  5326  178B  0008               	return
  5327  178C                     __end_of___lwmod:	
  5328                           
  5329                           	psect	text21
  5330  087F                     __ptext21:	
  5331 ;; *************** function ___lwdiv *****************
  5332 ;; Defined at:
  5333 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  divisor         2    6[COMMON] unsigned int 
  5336 ;;  dividend        2    8[COMMON] unsigned int 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  quotient        2   11[COMMON] unsigned int 
  5339 ;;  counter         1   13[COMMON] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  2    6[COMMON] unsigned int 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5349 ;;      Params:         4       0       0       0       0
  5350 ;;      Locals:         3       0       0       0       0
  5351 ;;      Temps:          1       0       0       0       0
  5352 ;;      Totals:         8       0       0       0       0
  5353 ;;Total ram usage:        8 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; This function calls:
  5356 ;;		Nothing
  5357 ;; This function is called by:
  5358 ;;		_get_temp
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function ___lwdiv
  5364  087F                     ___lwdiv:	
  5365  087F                     l2920:	
  5366                           ;incstack = 0
  5367                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5368                           
  5369  087F  01FB               	clrf	___lwdiv@quotient
  5370  0880  01FC               	clrf	___lwdiv@quotient+1
  5371  0881                     l2922:	
  5372  0881  0876               	movf	___lwdiv@divisor,w
  5373  0882  0477               	iorwf	___lwdiv@divisor+1,w
  5374  0883  1903               	btfsc	3,2
  5375  0884  2886               	goto	u1651
  5376  0885  2887               	goto	u1650
  5377  0886                     u1651:	
  5378  0886  28BE               	goto	l2942
  5379  0887                     u1650:	
  5380  0887                     l2924:	
  5381  0887  01FD               	clrf	___lwdiv@counter
  5382  0888  0AFD               	incf	___lwdiv@counter,f
  5383  0889  2895               	goto	l2930
  5384  088A                     l2926:	
  5385  088A  3001               	movlw	1
  5386  088B                     u1665:	
  5387  088B  1003               	clrc
  5388  088C  0DF6               	rlf	___lwdiv@divisor,f
  5389  088D  0DF7               	rlf	___lwdiv@divisor+1,f
  5390  088E  3EFF               	addlw	-1
  5391  088F  1D03               	skipz
  5392  0890  288B               	goto	u1665
  5393  0891                     l2928:	
  5394  0891  3001               	movlw	1
  5395  0892  00FA               	movwf	??___lwdiv
  5396  0893  087A               	movf	??___lwdiv,w
  5397  0894  07FD               	addwf	___lwdiv@counter,f
  5398  0895                     l2930:	
  5399  0895  1FF7               	btfss	___lwdiv@divisor+1,7
  5400  0896  2898               	goto	u1671
  5401  0897  2899               	goto	u1670
  5402  0898                     u1671:	
  5403  0898  288A               	goto	l2926
  5404  0899                     u1670:	
  5405  0899                     l2932:	
  5406  0899  3001               	movlw	1
  5407  089A                     u1685:	
  5408  089A  1003               	clrc
  5409  089B  0DFB               	rlf	___lwdiv@quotient,f
  5410  089C  0DFC               	rlf	___lwdiv@quotient+1,f
  5411  089D  3EFF               	addlw	-1
  5412  089E  1D03               	skipz
  5413  089F  289A               	goto	u1685
  5414  08A0  0877               	movf	___lwdiv@divisor+1,w
  5415  08A1  0279               	subwf	___lwdiv@dividend+1,w
  5416  08A2  1D03               	skipz
  5417  08A3  28A6               	goto	u1695
  5418  08A4  0876               	movf	___lwdiv@divisor,w
  5419  08A5  0278               	subwf	___lwdiv@dividend,w
  5420  08A6                     u1695:	
  5421  08A6  1C03               	skipc
  5422  08A7  28A9               	goto	u1691
  5423  08A8  28AA               	goto	u1690
  5424  08A9                     u1691:	
  5425  08A9  28B1               	goto	l2938
  5426  08AA                     u1690:	
  5427  08AA                     l2934:	
  5428  08AA  0876               	movf	___lwdiv@divisor,w
  5429  08AB  02F8               	subwf	___lwdiv@dividend,f
  5430  08AC  0877               	movf	___lwdiv@divisor+1,w
  5431  08AD  1C03               	skipc
  5432  08AE  03F9               	decf	___lwdiv@dividend+1,f
  5433  08AF  02F9               	subwf	___lwdiv@dividend+1,f
  5434  08B0                     l2936:	
  5435  08B0  147B               	bsf	___lwdiv@quotient,0
  5436  08B1                     l2938:	
  5437  08B1  3001               	movlw	1
  5438  08B2                     u1705:	
  5439  08B2  1003               	clrc
  5440  08B3  0CF7               	rrf	___lwdiv@divisor+1,f
  5441  08B4  0CF6               	rrf	___lwdiv@divisor,f
  5442  08B5  3EFF               	addlw	-1
  5443  08B6  1D03               	skipz
  5444  08B7  28B2               	goto	u1705
  5445  08B8                     l2940:	
  5446  08B8  3001               	movlw	1
  5447  08B9  02FD               	subwf	___lwdiv@counter,f
  5448  08BA  1D03               	btfss	3,2
  5449  08BB  28BD               	goto	u1711
  5450  08BC  28BE               	goto	u1710
  5451  08BD                     u1711:	
  5452  08BD  2899               	goto	l2932
  5453  08BE                     u1710:	
  5454  08BE                     l2942:	
  5455  08BE  087C               	movf	___lwdiv@quotient+1,w
  5456  08BF  00F7               	movwf	?___lwdiv+1
  5457  08C0  087B               	movf	___lwdiv@quotient,w
  5458  08C1  00F6               	movwf	?___lwdiv
  5459  08C2                     l1014:	
  5460  08C2  0008               	return
  5461  08C3                     __end_of___lwdiv:	
  5462                           
  5463                           	psect	text22
  5464  0968                     __ptext22:	
  5465 ;; *************** function ___awdiv *****************
  5466 ;; Defined at:
  5467 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  divisor         2    0[COMMON] int 
  5470 ;;  dividend        2    2[COMMON] int 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  quotient        2    7[COMMON] int 
  5473 ;;  sign            1    6[COMMON] unsigned char 
  5474 ;;  counter         1    5[COMMON] unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  2    0[COMMON] int 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5484 ;;      Params:         4       0       0       0       0
  5485 ;;      Locals:         4       0       0       0       0
  5486 ;;      Temps:          1       0       0       0       0
  5487 ;;      Totals:         9       0       0       0       0
  5488 ;;Total ram usage:        9 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_get_temp
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function ___awdiv
  5499  0968                     ___awdiv:	
  5500  0968                     l2876:	
  5501                           ;incstack = 0
  5502                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5503                           
  5504  0968  01F6               	clrf	___awdiv@sign
  5505  0969                     l2878:	
  5506  0969  1FF1               	btfss	___awdiv@divisor+1,7
  5507  096A  296C               	goto	u1551
  5508  096B  296D               	goto	u1550
  5509  096C                     u1551:	
  5510  096C  2974               	goto	l2884
  5511  096D                     u1550:	
  5512  096D                     l2880:	
  5513  096D  09F0               	comf	___awdiv@divisor,f
  5514  096E  09F1               	comf	___awdiv@divisor+1,f
  5515  096F  0AF0               	incf	___awdiv@divisor,f
  5516  0970  1903               	skipnz
  5517  0971  0AF1               	incf	___awdiv@divisor+1,f
  5518  0972                     l2882:	
  5519  0972  01F6               	clrf	___awdiv@sign
  5520  0973  0AF6               	incf	___awdiv@sign,f
  5521  0974                     l2884:	
  5522  0974  1FF3               	btfss	___awdiv@dividend+1,7
  5523  0975  2977               	goto	u1561
  5524  0976  2978               	goto	u1560
  5525  0977                     u1561:	
  5526  0977  2981               	goto	l2890
  5527  0978                     u1560:	
  5528  0978                     l2886:	
  5529  0978  09F2               	comf	___awdiv@dividend,f
  5530  0979  09F3               	comf	___awdiv@dividend+1,f
  5531  097A  0AF2               	incf	___awdiv@dividend,f
  5532  097B  1903               	skipnz
  5533  097C  0AF3               	incf	___awdiv@dividend+1,f
  5534  097D                     l2888:	
  5535  097D  3001               	movlw	1
  5536  097E  00F4               	movwf	??___awdiv
  5537  097F  0874               	movf	??___awdiv,w
  5538  0980  06F6               	xorwf	___awdiv@sign,f
  5539  0981                     l2890:	
  5540  0981  01F7               	clrf	___awdiv@quotient
  5541  0982  01F8               	clrf	___awdiv@quotient+1
  5542  0983                     l2892:	
  5543  0983  0870               	movf	___awdiv@divisor,w
  5544  0984  0471               	iorwf	___awdiv@divisor+1,w
  5545  0985  1903               	btfsc	3,2
  5546  0986  2988               	goto	u1571
  5547  0987  2989               	goto	u1570
  5548  0988                     u1571:	
  5549  0988  29C0               	goto	l2912
  5550  0989                     u1570:	
  5551  0989                     l2894:	
  5552  0989  01F5               	clrf	___awdiv@counter
  5553  098A  0AF5               	incf	___awdiv@counter,f
  5554  098B  2997               	goto	l2900
  5555  098C                     l2896:	
  5556  098C  3001               	movlw	1
  5557  098D                     u1585:	
  5558  098D  1003               	clrc
  5559  098E  0DF0               	rlf	___awdiv@divisor,f
  5560  098F  0DF1               	rlf	___awdiv@divisor+1,f
  5561  0990  3EFF               	addlw	-1
  5562  0991  1D03               	skipz
  5563  0992  298D               	goto	u1585
  5564  0993                     l2898:	
  5565  0993  3001               	movlw	1
  5566  0994  00F4               	movwf	??___awdiv
  5567  0995  0874               	movf	??___awdiv,w
  5568  0996  07F5               	addwf	___awdiv@counter,f
  5569  0997                     l2900:	
  5570  0997  1FF1               	btfss	___awdiv@divisor+1,7
  5571  0998  299A               	goto	u1591
  5572  0999  299B               	goto	u1590
  5573  099A                     u1591:	
  5574  099A  298C               	goto	l2896
  5575  099B                     u1590:	
  5576  099B                     l2902:	
  5577  099B  3001               	movlw	1
  5578  099C                     u1605:	
  5579  099C  1003               	clrc
  5580  099D  0DF7               	rlf	___awdiv@quotient,f
  5581  099E  0DF8               	rlf	___awdiv@quotient+1,f
  5582  099F  3EFF               	addlw	-1
  5583  09A0  1D03               	skipz
  5584  09A1  299C               	goto	u1605
  5585  09A2  0871               	movf	___awdiv@divisor+1,w
  5586  09A3  0273               	subwf	___awdiv@dividend+1,w
  5587  09A4  1D03               	skipz
  5588  09A5  29A8               	goto	u1615
  5589  09A6  0870               	movf	___awdiv@divisor,w
  5590  09A7  0272               	subwf	___awdiv@dividend,w
  5591  09A8                     u1615:	
  5592  09A8  1C03               	skipc
  5593  09A9  29AB               	goto	u1611
  5594  09AA  29AC               	goto	u1610
  5595  09AB                     u1611:	
  5596  09AB  29B3               	goto	l2908
  5597  09AC                     u1610:	
  5598  09AC                     l2904:	
  5599  09AC  0870               	movf	___awdiv@divisor,w
  5600  09AD  02F2               	subwf	___awdiv@dividend,f
  5601  09AE  0871               	movf	___awdiv@divisor+1,w
  5602  09AF  1C03               	skipc
  5603  09B0  03F3               	decf	___awdiv@dividend+1,f
  5604  09B1  02F3               	subwf	___awdiv@dividend+1,f
  5605  09B2                     l2906:	
  5606  09B2  1477               	bsf	___awdiv@quotient,0
  5607  09B3                     l2908:	
  5608  09B3  3001               	movlw	1
  5609  09B4                     u1625:	
  5610  09B4  1003               	clrc
  5611  09B5  0CF1               	rrf	___awdiv@divisor+1,f
  5612  09B6  0CF0               	rrf	___awdiv@divisor,f
  5613  09B7  3EFF               	addlw	-1
  5614  09B8  1D03               	skipz
  5615  09B9  29B4               	goto	u1625
  5616  09BA                     l2910:	
  5617  09BA  3001               	movlw	1
  5618  09BB  02F5               	subwf	___awdiv@counter,f
  5619  09BC  1D03               	btfss	3,2
  5620  09BD  29BF               	goto	u1631
  5621  09BE  29C0               	goto	u1630
  5622  09BF                     u1631:	
  5623  09BF  299B               	goto	l2902
  5624  09C0                     u1630:	
  5625  09C0                     l2912:	
  5626  09C0  0876               	movf	___awdiv@sign,w
  5627  09C1  1903               	btfsc	3,2
  5628  09C2  29C4               	goto	u1641
  5629  09C3  29C5               	goto	u1640
  5630  09C4                     u1641:	
  5631  09C4  29CA               	goto	l2916
  5632  09C5                     u1640:	
  5633  09C5                     l2914:	
  5634  09C5  09F7               	comf	___awdiv@quotient,f
  5635  09C6  09F8               	comf	___awdiv@quotient+1,f
  5636  09C7  0AF7               	incf	___awdiv@quotient,f
  5637  09C8  1903               	skipnz
  5638  09C9  0AF8               	incf	___awdiv@quotient+1,f
  5639  09CA                     l2916:	
  5640  09CA  0878               	movf	___awdiv@quotient+1,w
  5641  09CB  00F1               	movwf	?___awdiv+1
  5642  09CC  0877               	movf	___awdiv@quotient,w
  5643  09CD  00F0               	movwf	?___awdiv
  5644  09CE                     l895:	
  5645  09CE  0008               	return
  5646  09CF                     __end_of___awdiv:	
  5647                           
  5648                           	psect	text23
  5649  1556                     __ptext23:	
  5650 ;; *************** function _ds1302_init *****************
  5651 ;; Defined at:
  5652 ;;		line 6 in file "clock_src.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5666 ;;      Params:         0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0
  5669 ;;      Totals:         0       0       0       0       0
  5670 ;;Total ram usage:        0 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    1
  5673 ;; This function calls:
  5674 ;;		_time_write_1
  5675 ;; This function is called by:
  5676 ;;		_main
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           
  5681                           ;psect for function _ds1302_init
  5682  1556                     _ds1302_init:	
  5683  1556                     l2970:	
  5684                           ;incstack = 0
  5685                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5686                           
  5687                           
  5688                           ;clock_src.c: 8:    RB0=0;
  5689  1556  1283               	bcf	3,5	;RP0=0, select bank0
  5690  1557  1303               	bcf	3,6	;RP1=0, select bank0
  5691  1558  1006               	bcf	6,0	;volatile
  5692                           
  5693                           ;clock_src.c: 9:    RB5 =0;
  5694  1559  1286               	bcf	6,5	;volatile
  5695                           
  5696                           ;clock_src.c: 10:    RB5=1;
  5697  155A  1686               	bsf	6,5	;volatile
  5698  155B                     l2972:	
  5699                           
  5700                           ;clock_src.c: 11:    time_write_1(0x8e);
  5701  155B  308E               	movlw	142
  5702  155C  160A  118A  2641  160A  118A  	fcall	_time_write_1
  5703                           
  5704                           ;clock_src.c: 12:    time_write_1(0);
  5705  1561  3000               	movlw	0
  5706  1562  160A  118A  2641  160A  118A  	fcall	_time_write_1
  5707  1567                     l2974:	
  5708                           
  5709                           ;clock_src.c: 13:    RB5=0;
  5710  1567  1283               	bcf	3,5	;RP0=0, select bank0
  5711  1568  1303               	bcf	3,6	;RP1=0, select bank0
  5712  1569  1286               	bcf	6,5	;volatile
  5713  156A                     l313:	
  5714  156A  0008               	return
  5715  156B                     __end_of_ds1302_init:	
  5716                           
  5717                           	psect	text24
  5718  166C                     __ptext24:	
  5719 ;; *************** function _display_temp *****************
  5720 ;; Defined at:
  5721 ;;		line 12 in file "Thermometer_src.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5735 ;;      Params:         0       0       0       0       0
  5736 ;;      Locals:         0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0
  5738 ;;      Totals:         0       0       0       0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    2
  5742 ;; This function calls:
  5743 ;;		_write_char
  5744 ;; This function is called by:
  5745 ;;		_main
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           
  5750                           ;psect for function _display_temp
  5751  166C                     _display_temp:	
  5752  166C                     l3086:	
  5753                           ;incstack = 0
  5754                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5755                           
  5756                           
  5757                           ;Thermometer_src.c: 14:  write_char(shi + '0');
  5758  166C  1283               	bcf	3,5	;RP0=0, select bank0
  5759  166D  1303               	bcf	3,6	;RP1=0, select bank0
  5760  166E  084E               	movf	_shi,w
  5761  166F  3E30               	addlw	48
  5762  1670  160A  118A  25C4  160A  118A  	fcall	_write_char
  5763                           
  5764                           ;Thermometer_src.c: 16:  write_char(ge + '0');
  5765  1675  1283               	bcf	3,5	;RP0=0, select bank0
  5766  1676  1303               	bcf	3,6	;RP1=0, select bank0
  5767  1677  084D               	movf	_ge,w
  5768  1678  3E30               	addlw	48
  5769  1679  160A  118A  25C4  160A  118A  	fcall	_write_char
  5770                           
  5771                           ;Thermometer_src.c: 17:  write_char('.');
  5772  167E  302E               	movlw	46
  5773  167F  160A  118A  25C4  160A  118A  	fcall	_write_char
  5774                           
  5775                           ;Thermometer_src.c: 19:  write_char(shifen + '0');
  5776  1684  1283               	bcf	3,5	;RP0=0, select bank0
  5777  1685  1303               	bcf	3,6	;RP1=0, select bank0
  5778  1686  084C               	movf	_shifen,w
  5779  1687  3E30               	addlw	48
  5780  1688  160A  118A  25C4  160A  118A  	fcall	_write_char
  5781                           
  5782                           ;Thermometer_src.c: 21:  write_char(baifen + '0');
  5783  168D  1283               	bcf	3,5	;RP0=0, select bank0
  5784  168E  1303               	bcf	3,6	;RP1=0, select bank0
  5785  168F  084B               	movf	_baifen,w
  5786  1690  3E30               	addlw	48
  5787  1691  160A  118A  25C4  160A  118A  	fcall	_write_char
  5788  1696                     l248:	
  5789  1696  0008               	return
  5790  1697                     __end_of_display_temp:	
  5791                           
  5792                           	psect	text25
  5793  0030                     __ptext25:	
  5794 ;; *************** function _display_day *****************
  5795 ;; Defined at:
  5796 ;;		line 4 in file "Day_of_week_src.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  num             2    3[COMMON] int 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5810 ;;      Params:         2       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0
  5813 ;;      Totals:         2       0       0       0       0
  5814 ;;Total ram usage:        2 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    2
  5817 ;; This function calls:
  5818 ;;		_write_char
  5819 ;; This function is called by:
  5820 ;;		_main
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           
  5825                           ;psect for function _display_day
  5826  0030                     _display_day:	
  5827  0030                     l3748:	
  5828                           ;incstack = 0
  5829                           ; Regs used in _display_day: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5830                           
  5831                           
  5832                           ;Day_of_week_src.c: 5:     if(num == 1 || num == 0){
  5833  0030  0373               	decf	display_day@num,w
  5834  0031  0474               	iorwf	display_day@num+1,w
  5835  0032  1903               	btfsc	3,2
  5836  0033  2835               	goto	u2401
  5837  0034  2836               	goto	u2400
  5838  0035                     u2401:	
  5839  0035  283C               	goto	l3752
  5840  0036                     u2400:	
  5841  0036                     l3750:	
  5842  0036  0873               	movf	display_day@num,w
  5843  0037  0474               	iorwf	display_day@num+1,w
  5844  0038  1D03               	btfss	3,2
  5845  0039  283B               	goto	u2411
  5846  003A  283C               	goto	u2410
  5847  003B                     u2411:	
  5848  003B  284E               	goto	l3754
  5849  003C                     u2410:	
  5850  003C                     l3752:	
  5851                           
  5852                           ;Day_of_week_src.c: 6:     write_char('M');
  5853  003C  304D               	movlw	77
  5854  003D  160A  118A  25C4  120A  118A  	fcall	_write_char
  5855                           
  5856                           ;Day_of_week_src.c: 7:     write_char('o');
  5857  0042  306F               	movlw	111
  5858  0043  160A  118A  25C4  120A  118A  	fcall	_write_char
  5859                           
  5860                           ;Day_of_week_src.c: 8:     write_char('n');
  5861  0048  306E               	movlw	110
  5862  0049  160A  118A  25C4  120A  118A  	fcall	_write_char
  5863  004E                     l3754:	
  5864                           
  5865                           ;Day_of_week_src.c: 10:     if(num == 2){
  5866  004E  3002               	movlw	2
  5867  004F  0673               	xorwf	display_day@num,w
  5868  0050  0474               	iorwf	display_day@num+1,w
  5869  0051  1D03               	btfss	3,2
  5870  0052  2854               	goto	u2421
  5871  0053  2855               	goto	u2420
  5872  0054                     u2421:	
  5873  0054  2867               	goto	l3758
  5874  0055                     u2420:	
  5875  0055                     l3756:	
  5876                           
  5877                           ;Day_of_week_src.c: 11:     write_char('T');
  5878  0055  3054               	movlw	84
  5879  0056  160A  118A  25C4  120A  118A  	fcall	_write_char
  5880                           
  5881                           ;Day_of_week_src.c: 12:     write_char('u');
  5882  005B  3075               	movlw	117
  5883  005C  160A  118A  25C4  120A  118A  	fcall	_write_char
  5884                           
  5885                           ;Day_of_week_src.c: 13:     write_char('e');
  5886  0061  3065               	movlw	101
  5887  0062  160A  118A  25C4  120A  118A  	fcall	_write_char
  5888  0067                     l3758:	
  5889                           
  5890                           ;Day_of_week_src.c: 15:     if(num == 3){
  5891  0067  3003               	movlw	3
  5892  0068  0673               	xorwf	display_day@num,w
  5893  0069  0474               	iorwf	display_day@num+1,w
  5894  006A  1D03               	btfss	3,2
  5895  006B  286D               	goto	u2431
  5896  006C  286E               	goto	u2430
  5897  006D                     u2431:	
  5898  006D  2880               	goto	l3762
  5899  006E                     u2430:	
  5900  006E                     l3760:	
  5901                           
  5902                           ;Day_of_week_src.c: 16:     write_char('W');
  5903  006E  3057               	movlw	87
  5904  006F  160A  118A  25C4  120A  118A  	fcall	_write_char
  5905                           
  5906                           ;Day_of_week_src.c: 17:     write_char('e');
  5907  0074  3065               	movlw	101
  5908  0075  160A  118A  25C4  120A  118A  	fcall	_write_char
  5909                           
  5910                           ;Day_of_week_src.c: 18:     write_char('d');
  5911  007A  3064               	movlw	100
  5912  007B  160A  118A  25C4  120A  118A  	fcall	_write_char
  5913  0080                     l3762:	
  5914                           
  5915                           ;Day_of_week_src.c: 20:     if(num == 4){
  5916  0080  3004               	movlw	4
  5917  0081  0673               	xorwf	display_day@num,w
  5918  0082  0474               	iorwf	display_day@num+1,w
  5919  0083  1D03               	btfss	3,2
  5920  0084  2886               	goto	u2441
  5921  0085  2887               	goto	u2440
  5922  0086                     u2441:	
  5923  0086  2899               	goto	l3766
  5924  0087                     u2440:	
  5925  0087                     l3764:	
  5926                           
  5927                           ;Day_of_week_src.c: 21:     write_char('T');
  5928  0087  3054               	movlw	84
  5929  0088  160A  118A  25C4  120A  118A  	fcall	_write_char
  5930                           
  5931                           ;Day_of_week_src.c: 22:     write_char('h');
  5932  008D  3068               	movlw	104
  5933  008E  160A  118A  25C4  120A  118A  	fcall	_write_char
  5934                           
  5935                           ;Day_of_week_src.c: 23:     write_char('u');
  5936  0093  3075               	movlw	117
  5937  0094  160A  118A  25C4  120A  118A  	fcall	_write_char
  5938  0099                     l3766:	
  5939                           
  5940                           ;Day_of_week_src.c: 25:     if(num == 5){
  5941  0099  3005               	movlw	5
  5942  009A  0673               	xorwf	display_day@num,w
  5943  009B  0474               	iorwf	display_day@num+1,w
  5944  009C  1D03               	btfss	3,2
  5945  009D  289F               	goto	u2451
  5946  009E  28A0               	goto	u2450
  5947  009F                     u2451:	
  5948  009F  28B2               	goto	l3770
  5949  00A0                     u2450:	
  5950  00A0                     l3768:	
  5951                           
  5952                           ;Day_of_week_src.c: 26:     write_char('F');
  5953  00A0  3046               	movlw	70
  5954  00A1  160A  118A  25C4  120A  118A  	fcall	_write_char
  5955                           
  5956                           ;Day_of_week_src.c: 27:     write_char('r');
  5957  00A6  3072               	movlw	114
  5958  00A7  160A  118A  25C4  120A  118A  	fcall	_write_char
  5959                           
  5960                           ;Day_of_week_src.c: 28:     write_char('i');
  5961  00AC  3069               	movlw	105
  5962  00AD  160A  118A  25C4  120A  118A  	fcall	_write_char
  5963  00B2                     l3770:	
  5964                           
  5965                           ;Day_of_week_src.c: 30:     if(num == 6){
  5966  00B2  3006               	movlw	6
  5967  00B3  0673               	xorwf	display_day@num,w
  5968  00B4  0474               	iorwf	display_day@num+1,w
  5969  00B5  1D03               	btfss	3,2
  5970  00B6  28B8               	goto	u2461
  5971  00B7  28B9               	goto	u2460
  5972  00B8                     u2461:	
  5973  00B8  28CB               	goto	l3774
  5974  00B9                     u2460:	
  5975  00B9                     l3772:	
  5976                           
  5977                           ;Day_of_week_src.c: 31:     write_char('S');
  5978  00B9  3053               	movlw	83
  5979  00BA  160A  118A  25C4  120A  118A  	fcall	_write_char
  5980                           
  5981                           ;Day_of_week_src.c: 32:     write_char('a');
  5982  00BF  3061               	movlw	97
  5983  00C0  160A  118A  25C4  120A  118A  	fcall	_write_char
  5984                           
  5985                           ;Day_of_week_src.c: 33:     write_char('t');
  5986  00C5  3074               	movlw	116
  5987  00C6  160A  118A  25C4  120A  118A  	fcall	_write_char
  5988  00CB                     l3774:	
  5989                           
  5990                           ;Day_of_week_src.c: 35:     if(num == 7){
  5991  00CB  3007               	movlw	7
  5992  00CC  0673               	xorwf	display_day@num,w
  5993  00CD  0474               	iorwf	display_day@num+1,w
  5994  00CE  1D03               	btfss	3,2
  5995  00CF  28D1               	goto	u2471
  5996  00D0  28D2               	goto	u2470
  5997  00D1                     u2471:	
  5998  00D1  28E4               	goto	l656
  5999  00D2                     u2470:	
  6000  00D2                     l3776:	
  6001                           
  6002                           ;Day_of_week_src.c: 36:     write_char('S');
  6003  00D2  3053               	movlw	83
  6004  00D3  160A  118A  25C4  120A  118A  	fcall	_write_char
  6005                           
  6006                           ;Day_of_week_src.c: 37:     write_char('u');
  6007  00D8  3075               	movlw	117
  6008  00D9  160A  118A  25C4  120A  118A  	fcall	_write_char
  6009                           
  6010                           ;Day_of_week_src.c: 38:     write_char('n');
  6011  00DE  306E               	movlw	110
  6012  00DF  160A  118A  25C4  120A  118A  	fcall	_write_char
  6013  00E4                     l656:	
  6014  00E4  0008               	return
  6015  00E5                     __end_of_display_day:	
  6016                           
  6017                           	psect	text26
  6018  0A75                     __ptext26:	
  6019 ;; *************** function _display_date *****************
  6020 ;; Defined at:
  6021 ;;		line 79 in file "clock_src.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  i               2    5[COMMON] int 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  1    wreg      void 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6035 ;;      Params:         0       0       0       0       0
  6036 ;;      Locals:         2       0       0       0       0
  6037 ;;      Temps:          2       0       0       0       0
  6038 ;;      Totals:         4       0       0       0       0
  6039 ;;Total ram usage:        4 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    2
  6042 ;; This function calls:
  6043 ;;		_write_char
  6044 ;; This function is called by:
  6045 ;;		_main
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function _display_date
  6051  0A75                     _display_date:	
  6052  0A75                     l3088:	
  6053                           ;incstack = 0
  6054                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6055                           
  6056                           
  6057                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  6058  0A75  1283               	bcf	3,5	;RP0=0, select bank0
  6059  0A76  1303               	bcf	3,6	;RP1=0, select bank0
  6060  0A77  1886               	btfsc	6,1	;volatile
  6061  0A78  2A7A               	goto	u1861
  6062  0A79  2A7B               	goto	u1860
  6063  0A7A                     u1861:	
  6064  0A7A  2A83               	goto	l3092
  6065  0A7B                     u1860:	
  6066  0A7B                     l3090:	
  6067                           
  6068                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  6069  0A7B  0823               	movf	_table1+3,w
  6070  0A7C  00F3               	movwf	??_display_date
  6071  0A7D  0873               	movf	??_display_date,w
  6072  0A7E  00A0               	movwf	_table1
  6073                           
  6074                           ;clock_src.c: 85:           table1[1]=table1[4];
  6075  0A7F  0824               	movf	_table1+4,w
  6076  0A80  00F3               	movwf	??_display_date
  6077  0A81  0873               	movf	??_display_date,w
  6078  0A82  00A1               	movwf	_table1+1
  6079  0A83                     l3092:	
  6080                           
  6081                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  6082  0A83  0823               	movf	_table1+3,w
  6083  0A84  39F0               	andlw	240
  6084  0A85  00F3               	movwf	??_display_date
  6085  0A86  01F4               	clrf	??_display_date+1
  6086  0A87  0873               	movf	??_display_date,w
  6087  0A88  00F5               	movwf	display_date@i
  6088  0A89  0874               	movf	??_display_date+1,w
  6089  0A8A  00F6               	movwf	display_date@i+1
  6090  0A8B                     l3094:	
  6091                           
  6092                           ;clock_src.c: 88:      i=i>>4;
  6093  0A8B  0E75               	swapf	display_date@i,w
  6094  0A8C  390F               	andlw	15
  6095  0A8D  00F5               	movwf	display_date@i
  6096  0A8E  0E76               	swapf	display_date@i+1,w
  6097  0A8F  39F0               	andlw	240
  6098  0A90  04F5               	iorwf	display_date@i,f
  6099  0A91  0E76               	swapf	display_date@i+1,w
  6100  0A92  390F               	andlw	15
  6101  0A93  00F6               	movwf	display_date@i+1
  6102  0A94  30F0               	movlw	240
  6103  0A95  1DF6               	btfss	display_date@i+1,3
  6104  0A96  3000               	movlw	0
  6105  0A97  04F6               	iorwf	display_date@i+1,f
  6106  0A98                     l3096:	
  6107                           
  6108                           ;clock_src.c: 89:      write_char(i + '0');
  6109  0A98  0875               	movf	display_date@i,w
  6110  0A99  3E30               	addlw	48
  6111  0A9A  160A  118A  25C4  120A  158A  	fcall	_write_char
  6112  0A9F                     l3098:	
  6113                           
  6114                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  6115  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  6116  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  6117  0AA1  0823               	movf	_table1+3,w
  6118  0AA2  390F               	andlw	15
  6119  0AA3  00F3               	movwf	??_display_date
  6120  0AA4  01F4               	clrf	??_display_date+1
  6121  0AA5  0873               	movf	??_display_date,w
  6122  0AA6  00F5               	movwf	display_date@i
  6123  0AA7  0874               	movf	??_display_date+1,w
  6124  0AA8  00F6               	movwf	display_date@i+1
  6125  0AA9                     l3100:	
  6126                           
  6127                           ;clock_src.c: 92:      write_char(i + '0');
  6128  0AA9  0875               	movf	display_date@i,w
  6129  0AAA  3E30               	addlw	48
  6130  0AAB  160A  118A  25C4  120A  158A  	fcall	_write_char
  6131  0AB0                     l3102:	
  6132                           
  6133                           ;clock_src.c: 93:      write_char('/');
  6134  0AB0  302F               	movlw	47
  6135  0AB1  160A  118A  25C4  120A  158A  	fcall	_write_char
  6136  0AB6                     l3104:	
  6137                           
  6138                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  6139  0AB6  1283               	bcf	3,5	;RP0=0, select bank0
  6140  0AB7  1303               	bcf	3,6	;RP1=0, select bank0
  6141  0AB8  0824               	movf	_table1+4,w
  6142  0AB9  39F0               	andlw	240
  6143  0ABA  00F3               	movwf	??_display_date
  6144  0ABB  01F4               	clrf	??_display_date+1
  6145  0ABC  0873               	movf	??_display_date,w
  6146  0ABD  00F5               	movwf	display_date@i
  6147  0ABE  0874               	movf	??_display_date+1,w
  6148  0ABF  00F6               	movwf	display_date@i+1
  6149  0AC0                     l3106:	
  6150                           
  6151                           ;clock_src.c: 98:      i=i>>4;
  6152  0AC0  0E75               	swapf	display_date@i,w
  6153  0AC1  390F               	andlw	15
  6154  0AC2  00F5               	movwf	display_date@i
  6155  0AC3  0E76               	swapf	display_date@i+1,w
  6156  0AC4  39F0               	andlw	240
  6157  0AC5  04F5               	iorwf	display_date@i,f
  6158  0AC6  0E76               	swapf	display_date@i+1,w
  6159  0AC7  390F               	andlw	15
  6160  0AC8  00F6               	movwf	display_date@i+1
  6161  0AC9  30F0               	movlw	240
  6162  0ACA  1DF6               	btfss	display_date@i+1,3
  6163  0ACB  3000               	movlw	0
  6164  0ACC  04F6               	iorwf	display_date@i+1,f
  6165  0ACD                     l3108:	
  6166                           
  6167                           ;clock_src.c: 99:      write_char(i + '0');
  6168  0ACD  0875               	movf	display_date@i,w
  6169  0ACE  3E30               	addlw	48
  6170  0ACF  160A  118A  25C4  120A  158A  	fcall	_write_char
  6171  0AD4                     l3110:	
  6172                           
  6173                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  6174  0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0AD6  0824               	movf	_table1+4,w
  6177  0AD7  390F               	andlw	15
  6178  0AD8  00F3               	movwf	??_display_date
  6179  0AD9  01F4               	clrf	??_display_date+1
  6180  0ADA  0873               	movf	??_display_date,w
  6181  0ADB  00F5               	movwf	display_date@i
  6182  0ADC  0874               	movf	??_display_date+1,w
  6183  0ADD  00F6               	movwf	display_date@i+1
  6184  0ADE                     l3112:	
  6185                           
  6186                           ;clock_src.c: 102:      write_char(i + '0');
  6187  0ADE  0875               	movf	display_date@i,w
  6188  0ADF  3E30               	addlw	48
  6189  0AE0  160A  118A  25C4  120A  158A  	fcall	_write_char
  6190  0AE5                     l3114:	
  6191                           
  6192                           ;clock_src.c: 103:      write_char('/');
  6193  0AE5  302F               	movlw	47
  6194  0AE6  160A  118A  25C4  120A  158A  	fcall	_write_char
  6195  0AEB                     l3116:	
  6196                           
  6197                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  6198  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  6199  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  6200  0AED  0826               	movf	_table1+6,w
  6201  0AEE  39F0               	andlw	240
  6202  0AEF  00F3               	movwf	??_display_date
  6203  0AF0  01F4               	clrf	??_display_date+1
  6204  0AF1  0873               	movf	??_display_date,w
  6205  0AF2  00F5               	movwf	display_date@i
  6206  0AF3  0874               	movf	??_display_date+1,w
  6207  0AF4  00F6               	movwf	display_date@i+1
  6208  0AF5                     l3118:	
  6209                           
  6210                           ;clock_src.c: 108:      i=i>>4;
  6211  0AF5  0E75               	swapf	display_date@i,w
  6212  0AF6  390F               	andlw	15
  6213  0AF7  00F5               	movwf	display_date@i
  6214  0AF8  0E76               	swapf	display_date@i+1,w
  6215  0AF9  39F0               	andlw	240
  6216  0AFA  04F5               	iorwf	display_date@i,f
  6217  0AFB  0E76               	swapf	display_date@i+1,w
  6218  0AFC  390F               	andlw	15
  6219  0AFD  00F6               	movwf	display_date@i+1
  6220  0AFE  30F0               	movlw	240
  6221  0AFF  1DF6               	btfss	display_date@i+1,3
  6222  0B00  3000               	movlw	0
  6223  0B01  04F6               	iorwf	display_date@i+1,f
  6224  0B02                     l3120:	
  6225                           
  6226                           ;clock_src.c: 109:      write_char(i + '0');
  6227  0B02  0875               	movf	display_date@i,w
  6228  0B03  3E30               	addlw	48
  6229  0B04  160A  118A  25C4  120A  158A  	fcall	_write_char
  6230  0B09                     l3122:	
  6231                           
  6232                           ;clock_src.c: 111:      i=table1[6]&0x0f;
  6233  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  6234  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  6235  0B0B  0826               	movf	_table1+6,w
  6236  0B0C  390F               	andlw	15
  6237  0B0D  00F3               	movwf	??_display_date
  6238  0B0E  01F4               	clrf	??_display_date+1
  6239  0B0F  0873               	movf	??_display_date,w
  6240  0B10  00F5               	movwf	display_date@i
  6241  0B11  0874               	movf	??_display_date+1,w
  6242  0B12  00F6               	movwf	display_date@i+1
  6243  0B13                     l3124:	
  6244                           
  6245                           ;clock_src.c: 112:      write_char(i + '0');
  6246  0B13  0875               	movf	display_date@i,w
  6247  0B14  3E30               	addlw	48
  6248  0B15  160A  118A  25C4  120A  158A  	fcall	_write_char
  6249  0B1A                     l331:	
  6250  0B1A  0008               	return
  6251  0B1B                     __end_of_display_date:	
  6252                           
  6253                           	psect	text27
  6254  09CF                     __ptext27:	
  6255 ;; *************** function _display_clock *****************
  6256 ;; Defined at:
  6257 ;;		line 37 in file "clock_src.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  i               2    5[COMMON] int 
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6271 ;;      Params:         0       0       0       0       0
  6272 ;;      Locals:         2       0       0       0       0
  6273 ;;      Temps:          2       0       0       0       0
  6274 ;;      Totals:         4       0       0       0       0
  6275 ;;Total ram usage:        4 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    2
  6278 ;; This function calls:
  6279 ;;		_write_char
  6280 ;; This function is called by:
  6281 ;;		_main
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           
  6286                           ;psect for function _display_clock
  6287  09CF                     _display_clock:	
  6288  09CF                     l3126:	
  6289                           ;incstack = 0
  6290                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6291                           
  6292                           
  6293                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  6294  09CF  1283               	bcf	3,5	;RP0=0, select bank0
  6295  09D0  1303               	bcf	3,6	;RP1=0, select bank0
  6296  09D1  1886               	btfsc	6,1	;volatile
  6297  09D2  29D4               	goto	u1871
  6298  09D3  29D5               	goto	u1870
  6299  09D4                     u1871:	
  6300  09D4  29DD               	goto	l3130
  6301  09D5                     u1870:	
  6302  09D5                     l3128:	
  6303                           
  6304                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  6305  09D5  0823               	movf	_table1+3,w
  6306  09D6  00F3               	movwf	??_display_clock
  6307  09D7  0873               	movf	??_display_clock,w
  6308  09D8  00A0               	movwf	_table1
  6309                           
  6310                           ;clock_src.c: 43:           table1[1]=table1[4];
  6311  09D9  0824               	movf	_table1+4,w
  6312  09DA  00F3               	movwf	??_display_clock
  6313  09DB  0873               	movf	??_display_clock,w
  6314  09DC  00A1               	movwf	_table1+1
  6315  09DD                     l3130:	
  6316                           
  6317                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  6318  09DD  0822               	movf	_table1+2,w
  6319  09DE  39F0               	andlw	240
  6320  09DF  00F3               	movwf	??_display_clock
  6321  09E0  01F4               	clrf	??_display_clock+1
  6322  09E1  0873               	movf	??_display_clock,w
  6323  09E2  00F5               	movwf	display_clock@i
  6324  09E3  0874               	movf	??_display_clock+1,w
  6325  09E4  00F6               	movwf	display_clock@i+1
  6326  09E5                     l3132:	
  6327                           
  6328                           ;clock_src.c: 47:      i=i>>4;
  6329  09E5  0E75               	swapf	display_clock@i,w
  6330  09E6  390F               	andlw	15
  6331  09E7  00F5               	movwf	display_clock@i
  6332  09E8  0E76               	swapf	display_clock@i+1,w
  6333  09E9  39F0               	andlw	240
  6334  09EA  04F5               	iorwf	display_clock@i,f
  6335  09EB  0E76               	swapf	display_clock@i+1,w
  6336  09EC  390F               	andlw	15
  6337  09ED  00F6               	movwf	display_clock@i+1
  6338  09EE  30F0               	movlw	240
  6339  09EF  1DF6               	btfss	display_clock@i+1,3
  6340  09F0  3000               	movlw	0
  6341  09F1  04F6               	iorwf	display_clock@i+1,f
  6342  09F2                     l3134:	
  6343                           
  6344                           ;clock_src.c: 48:      write_char(i + '0');
  6345  09F2  0875               	movf	display_clock@i,w
  6346  09F3  3E30               	addlw	48
  6347  09F4  160A  118A  25C4  120A  158A  	fcall	_write_char
  6348  09F9                     l3136:	
  6349                           
  6350                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  6351  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  6352  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  6353  09FB  0822               	movf	_table1+2,w
  6354  09FC  390F               	andlw	15
  6355  09FD  00F3               	movwf	??_display_clock
  6356  09FE  01F4               	clrf	??_display_clock+1
  6357  09FF  0873               	movf	??_display_clock,w
  6358  0A00  00F5               	movwf	display_clock@i
  6359  0A01  0874               	movf	??_display_clock+1,w
  6360  0A02  00F6               	movwf	display_clock@i+1
  6361  0A03                     l3138:	
  6362                           
  6363                           ;clock_src.c: 53:      write_char(i + '0');
  6364  0A03  0875               	movf	display_clock@i,w
  6365  0A04  3E30               	addlw	48
  6366  0A05  160A  118A  25C4  120A  158A  	fcall	_write_char
  6367  0A0A                     l3140:	
  6368                           
  6369                           ;clock_src.c: 54:      write_char(':');
  6370  0A0A  303A               	movlw	58
  6371  0A0B  160A  118A  25C4  120A  158A  	fcall	_write_char
  6372  0A10                     l3142:	
  6373                           
  6374                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  6375  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  6376  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  6377  0A12  0821               	movf	_table1+1,w
  6378  0A13  39F0               	andlw	240
  6379  0A14  00F3               	movwf	??_display_clock
  6380  0A15  01F4               	clrf	??_display_clock+1
  6381  0A16  0873               	movf	??_display_clock,w
  6382  0A17  00F5               	movwf	display_clock@i
  6383  0A18  0874               	movf	??_display_clock+1,w
  6384  0A19  00F6               	movwf	display_clock@i+1
  6385  0A1A                     l3144:	
  6386                           
  6387                           ;clock_src.c: 59:      i=i>>4;
  6388  0A1A  0E75               	swapf	display_clock@i,w
  6389  0A1B  390F               	andlw	15
  6390  0A1C  00F5               	movwf	display_clock@i
  6391  0A1D  0E76               	swapf	display_clock@i+1,w
  6392  0A1E  39F0               	andlw	240
  6393  0A1F  04F5               	iorwf	display_clock@i,f
  6394  0A20  0E76               	swapf	display_clock@i+1,w
  6395  0A21  390F               	andlw	15
  6396  0A22  00F6               	movwf	display_clock@i+1
  6397  0A23  30F0               	movlw	240
  6398  0A24  1DF6               	btfss	display_clock@i+1,3
  6399  0A25  3000               	movlw	0
  6400  0A26  04F6               	iorwf	display_clock@i+1,f
  6401  0A27                     l3146:	
  6402                           
  6403                           ;clock_src.c: 60:      write_char(i + '0');
  6404  0A27  0875               	movf	display_clock@i,w
  6405  0A28  3E30               	addlw	48
  6406  0A29  160A  118A  25C4  120A  158A  	fcall	_write_char
  6407  0A2E                     l3148:	
  6408                           
  6409                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  6410  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  6411  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  6412  0A30  0821               	movf	_table1+1,w
  6413  0A31  390F               	andlw	15
  6414  0A32  00F3               	movwf	??_display_clock
  6415  0A33  01F4               	clrf	??_display_clock+1
  6416  0A34  0873               	movf	??_display_clock,w
  6417  0A35  00F5               	movwf	display_clock@i
  6418  0A36  0874               	movf	??_display_clock+1,w
  6419  0A37  00F6               	movwf	display_clock@i+1
  6420  0A38                     l3150:	
  6421                           
  6422                           ;clock_src.c: 64:      write_char(i + '0');
  6423  0A38  0875               	movf	display_clock@i,w
  6424  0A39  3E30               	addlw	48
  6425  0A3A  160A  118A  25C4  120A  158A  	fcall	_write_char
  6426  0A3F                     l3152:	
  6427                           
  6428                           ;clock_src.c: 65:      write_char(':');
  6429  0A3F  303A               	movlw	58
  6430  0A40  160A  118A  25C4  120A  158A  	fcall	_write_char
  6431  0A45                     l3154:	
  6432                           
  6433                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  6434  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  6435  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  6436  0A47  0820               	movf	_table1,w
  6437  0A48  39F0               	andlw	240
  6438  0A49  00F3               	movwf	??_display_clock
  6439  0A4A  01F4               	clrf	??_display_clock+1
  6440  0A4B  0873               	movf	??_display_clock,w
  6441  0A4C  00F5               	movwf	display_clock@i
  6442  0A4D  0874               	movf	??_display_clock+1,w
  6443  0A4E  00F6               	movwf	display_clock@i+1
  6444  0A4F                     l3156:	
  6445                           
  6446                           ;clock_src.c: 69:      i=i>>4;
  6447  0A4F  0E75               	swapf	display_clock@i,w
  6448  0A50  390F               	andlw	15
  6449  0A51  00F5               	movwf	display_clock@i
  6450  0A52  0E76               	swapf	display_clock@i+1,w
  6451  0A53  39F0               	andlw	240
  6452  0A54  04F5               	iorwf	display_clock@i,f
  6453  0A55  0E76               	swapf	display_clock@i+1,w
  6454  0A56  390F               	andlw	15
  6455  0A57  00F6               	movwf	display_clock@i+1
  6456  0A58  30F0               	movlw	240
  6457  0A59  1DF6               	btfss	display_clock@i+1,3
  6458  0A5A  3000               	movlw	0
  6459  0A5B  04F6               	iorwf	display_clock@i+1,f
  6460  0A5C                     l3158:	
  6461                           
  6462                           ;clock_src.c: 70:      write_char(i + '0');
  6463  0A5C  0875               	movf	display_clock@i,w
  6464  0A5D  3E30               	addlw	48
  6465  0A5E  160A  118A  25C4  120A  158A  	fcall	_write_char
  6466  0A63                     l3160:	
  6467                           
  6468                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  6469  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  6470  0A64  1303               	bcf	3,6	;RP1=0, select bank0
  6471  0A65  0820               	movf	_table1,w
  6472  0A66  390F               	andlw	15
  6473  0A67  00F3               	movwf	??_display_clock
  6474  0A68  01F4               	clrf	??_display_clock+1
  6475  0A69  0873               	movf	??_display_clock,w
  6476  0A6A  00F5               	movwf	display_clock@i
  6477  0A6B  0874               	movf	??_display_clock+1,w
  6478  0A6C  00F6               	movwf	display_clock@i+1
  6479  0A6D                     l3162:	
  6480                           
  6481                           ;clock_src.c: 74:      write_char(i + '0');
  6482  0A6D  0875               	movf	display_clock@i,w
  6483  0A6E  3E30               	addlw	48
  6484  0A6F  160A  118A  25C4  120A  158A  	fcall	_write_char
  6485  0A74                     l327:	
  6486  0A74  0008               	return
  6487  0A75                     __end_of_display_clock:	
  6488                           
  6489                           	psect	text28
  6490  03D3                     __ptext28:	
  6491 ;; *************** function _date_settings *****************
  6492 ;; Defined at:
  6493 ;;		line 326 in file "Button_src.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6507 ;;      Params:         0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0
  6509 ;;      Temps:          0       3       0       0       0
  6510 ;;      Totals:         0       3       0       0       0
  6511 ;;Total ram usage:        3 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    3
  6514 ;; This function calls:
  6515 ;;		_button_delay
  6516 ;;		_incrementor
  6517 ;;		_modulus_func
  6518 ;;		_set_time
  6519 ;;		_time_date_delimiter
  6520 ;;		_time_date_hex_terminator
  6521 ;;		_write_char
  6522 ;;		_write_cmd
  6523 ;; This function is called by:
  6524 ;;		_main
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           
  6529                           ;psect for function _date_settings
  6530  03D3                     _date_settings:	
  6531  03D3                     l3300:	
  6532                           ;incstack = 0
  6533                           ; Regs used in _date_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6534                           
  6535                           
  6536                           ;Button_src.c: 327:  RC0 = 0;
  6537  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  6538  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  6539  03D5  1007               	bcf	7,0	;volatile
  6540                           
  6541                           ;Button_src.c: 328:  RC1 = 1;
  6542  03D6  1487               	bsf	7,1	;volatile
  6543                           
  6544                           ;Button_src.c: 329:  RC2 = 1;
  6545  03D7  1507               	bsf	7,2	;volatile
  6546                           
  6547                           ;Button_src.c: 330:  RC3 = 1;
  6548  03D8  1587               	bsf	7,3	;volatile
  6549                           
  6550                           ;Button_src.c: 331:   if (RC4 == 0){
  6551  03D9  1A07               	btfsc	7,4	;volatile
  6552  03DA  2BDC               	goto	u1961
  6553  03DB  2BDD               	goto	u1960
  6554  03DC                     u1961:	
  6555  03DC  2FE5               	goto	l551
  6556  03DD                     u1960:	
  6557  03DD                     l3302:	
  6558                           
  6559                           ;Button_src.c: 332:       write_cmd(0x1);
  6560  03DD  3001               	movlw	1
  6561  03DE  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  6562  03E3                     l542:	
  6563                           ;Button_src.c: 333:       for(;;){
  6564                           
  6565                           
  6566                           ;Button_src.c: 334:             write_cmd(0x80);
  6567  03E3  3080               	movlw	128
  6568  03E4  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  6569                           
  6570                           ;Button_src.c: 335:             write_char('D');
  6571  03E9  3044               	movlw	68
  6572  03EA  160A  118A  25C4  120A  118A  	fcall	_write_char
  6573                           
  6574                           ;Button_src.c: 336:             write_char('a');
  6575  03EF  3061               	movlw	97
  6576  03F0  160A  118A  25C4  120A  118A  	fcall	_write_char
  6577                           
  6578                           ;Button_src.c: 337:             write_char('t');
  6579  03F5  3074               	movlw	116
  6580  03F6  160A  118A  25C4  120A  118A  	fcall	_write_char
  6581                           
  6582                           ;Button_src.c: 338:             write_char('e');
  6583  03FB  3065               	movlw	101
  6584  03FC  160A  118A  25C4  120A  118A  	fcall	_write_char
  6585                           
  6586                           ;Button_src.c: 339:             write_char('_');
  6587  0401  305F               	movlw	95
  6588  0402  160A  118A  25C4  120A  118A  	fcall	_write_char
  6589                           
  6590                           ;Button_src.c: 340:             write_char('S');
  6591  0407  3053               	movlw	83
  6592  0408  160A  118A  25C4  120A  118A  	fcall	_write_char
  6593                           
  6594                           ;Button_src.c: 341:             write_char('e');
  6595  040D  3065               	movlw	101
  6596  040E  160A  118A  25C4  120A  118A  	fcall	_write_char
  6597                           
  6598                           ;Button_src.c: 342:             write_char('t');
  6599  0413  3074               	movlw	116
  6600  0414  160A  118A  25C4  120A  118A  	fcall	_write_char
  6601                           
  6602                           ;Button_src.c: 343:             write_char('t');
  6603  0419  3074               	movlw	116
  6604  041A  160A  118A  25C4  120A  118A  	fcall	_write_char
  6605                           
  6606                           ;Button_src.c: 344:             write_char('i');
  6607  041F  3069               	movlw	105
  6608  0420  160A  118A  25C4  120A  118A  	fcall	_write_char
  6609                           
  6610                           ;Button_src.c: 345:             write_char('n');
  6611  0425  306E               	movlw	110
  6612  0426  160A  118A  25C4  120A  118A  	fcall	_write_char
  6613                           
  6614                           ;Button_src.c: 346:             write_char('g');
  6615  042B  3067               	movlw	103
  6616  042C  160A  118A  25C4  120A  118A  	fcall	_write_char
  6617                           
  6618                           ;Button_src.c: 347:             write_char('s');
  6619  0431  3073               	movlw	115
  6620  0432  160A  118A  25C4  120A  118A  	fcall	_write_char
  6621  0437                     l3304:	
  6622                           
  6623                           ;Button_src.c: 348:             RC0 = 1;
  6624  0437  1283               	bcf	3,5	;RP0=0, select bank0
  6625  0438  1303               	bcf	3,6	;RP1=0, select bank0
  6626  0439  1407               	bsf	7,0	;volatile
  6627  043A                     l3306:	
  6628                           
  6629                           ;Button_src.c: 349:             RC1 = 0;
  6630  043A  1087               	bcf	7,1	;volatile
  6631  043B                     l3308:	
  6632                           
  6633                           ;Button_src.c: 350:             RC2 = 1;
  6634  043B  1507               	bsf	7,2	;volatile
  6635  043C                     l3310:	
  6636                           
  6637                           ;Button_src.c: 351:             RC3 = 1;
  6638  043C  1587               	bsf	7,3	;volatile
  6639  043D                     l3312:	
  6640                           
  6641                           ;Button_src.c: 352:             if(RC7 == 0 && b =='x'){
  6642  043D  1B87               	btfsc	7,7	;volatile
  6643  043E  2C40               	goto	u1971
  6644  043F  2C41               	goto	u1970
  6645  0440                     u1971:	
  6646  0440  2CA2               	goto	l3334
  6647  0441                     u1970:	
  6648  0441                     l3314:	
  6649  0441  3078               	movlw	120
  6650  0442  0647               	xorwf	_b,w
  6651  0443  1D03               	btfss	3,2
  6652  0444  2C46               	goto	u1981
  6653  0445  2C47               	goto	u1980
  6654  0446                     u1981:	
  6655  0446  2CA2               	goto	l3334
  6656  0447                     u1980:	
  6657  0447                     l3316:	
  6658                           
  6659                           ;Button_src.c: 353:                     a++;
  6660  0447  3001               	movlw	1
  6661  0448  00D8               	movwf	??_date_settings
  6662  0449  0858               	movf	??_date_settings,w
  6663  044A  07C8               	addwf	_a,f
  6664  044B                     l3318:	
  6665                           
  6666                           ;Button_src.c: 354:                     x++ ;
  6667  044B  3001               	movlw	1
  6668  044C  07B5               	addwf	_x,f
  6669  044D  1803               	skipnc
  6670  044E  0AB6               	incf	_x+1,f
  6671  044F  3000               	movlw	0
  6672  0450  07B6               	addwf	_x+1,f
  6673  0451                     l3320:	
  6674                           
  6675                           ;Button_src.c: 355:                     x = modulus_func(x,10);
  6676  0451  0836               	movf	_x+1,w
  6677  0452  00F8               	movwf	modulus_func@x+1
  6678  0453  0835               	movf	_x,w
  6679  0454  00F7               	movwf	modulus_func@x
  6680  0455  300A               	movlw	10
  6681  0456  00F9               	movwf	modulus_func@y
  6682  0457  3000               	movlw	0
  6683  0458  00FA               	movwf	modulus_func@y+1
  6684  0459  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  6685  045E  0878               	movf	?_modulus_func+1,w
  6686  045F  1283               	bcf	3,5	;RP0=0, select bank0
  6687  0460  1303               	bcf	3,6	;RP1=0, select bank0
  6688  0461  00B6               	movwf	_x+1
  6689  0462  0877               	movf	?_modulus_func,w
  6690  0463  00B5               	movwf	_x
  6691  0464                     l3322:	
  6692                           
  6693                           ;Button_src.c: 356:                     y = incrementor(y,x,'9');
  6694  0464  0834               	movf	_y+1,w
  6695  0465  00D4               	movwf	incrementor@upper_val+1
  6696  0466  0833               	movf	_y,w
  6697  0467  00D3               	movwf	incrementor@upper_val
  6698  0468  0836               	movf	_x+1,w
  6699  0469  00D6               	movwf	incrementor@lower_val+1
  6700  046A  0835               	movf	_x,w
  6701  046B  00D5               	movwf	incrementor@lower_val
  6702  046C  3039               	movlw	57
  6703  046D  00D8               	movwf	??_date_settings
  6704  046E  0858               	movf	??_date_settings,w
  6705  046F  00D7               	movwf	incrementor@z
  6706  0470  160A  118A  2697  120A  118A  	fcall	_incrementor
  6707  0475  1283               	bcf	3,5	;RP0=0, select bank0
  6708  0476  1303               	bcf	3,6	;RP1=0, select bank0
  6709  0477  00D9               	movwf	??_date_settings+1
  6710  0478  01DA               	clrf	??_date_settings+2
  6711  0479  0859               	movf	??_date_settings+1,w
  6712  047A  00B3               	movwf	_y
  6713  047B  085A               	movf	??_date_settings+2,w
  6714  047C  00B4               	movwf	_y+1
  6715  047D                     l3324:	
  6716                           
  6717                           ;Button_src.c: 357:                     a = time_date_hex_terminator(a,'C');
  6718  047D  3043               	movlw	67
  6719  047E  00D8               	movwf	??_date_settings
  6720  047F  0858               	movf	??_date_settings,w
  6721  0480  00F0               	movwf	time_date_hex_terminator@limiter
  6722  0481  0848               	movf	_a,w
  6723  0482  160A  118A  250D  120A  118A  	fcall	_time_date_hex_terminator
  6724  0487  1283               	bcf	3,5	;RP0=0, select bank0
  6725  0488  1303               	bcf	3,6	;RP1=0, select bank0
  6726  0489  00D9               	movwf	??_date_settings+1
  6727  048A  0859               	movf	??_date_settings+1,w
  6728  048B  00C8               	movwf	_a
  6729  048C                     l3326:	
  6730                           
  6731                           ;Button_src.c: 358:                     if(y == 1 && x == 3){
  6732  048C  0333               	decf	_y,w
  6733  048D  0434               	iorwf	_y+1,w
  6734  048E  1D03               	btfss	3,2
  6735  048F  2C91               	goto	u1991
  6736  0490  2C92               	goto	u1990
  6737  0491                     u1991:	
  6738  0491  2C9D               	goto	l3332
  6739  0492                     u1990:	
  6740  0492                     l3328:	
  6741  0492  3003               	movlw	3
  6742  0493  0635               	xorwf	_x,w
  6743  0494  0436               	iorwf	_x+1,w
  6744  0495  1D03               	btfss	3,2
  6745  0496  2C98               	goto	u2001
  6746  0497  2C99               	goto	u2000
  6747  0498                     u2001:	
  6748  0498  2C9D               	goto	l3332
  6749  0499                     u2000:	
  6750  0499                     l3330:	
  6751                           
  6752                           ;Button_src.c: 359:                         x = 0;
  6753  0499  01B5               	clrf	_x
  6754  049A  01B6               	clrf	_x+1
  6755                           
  6756                           ;Button_src.c: 360:                         y = 0;
  6757  049B  01B3               	clrf	_y
  6758  049C  01B4               	clrf	_y+1
  6759  049D                     l3332:	
  6760                           
  6761                           ;Button_src.c: 362:                     button_delay();
  6762  049D  160A  118A  256B  120A  118A  	fcall	_button_delay
  6763  04A2                     l3334:	
  6764                           
  6765                           ;Button_src.c: 364:             if(RC7==0 && b == 'y'){
  6766  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  6767  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  6768  04A4  1B87               	btfsc	7,7	;volatile
  6769  04A5  2CA7               	goto	u2011
  6770  04A6  2CA8               	goto	u2010
  6771  04A7                     u2011:	
  6772  04A7  2D0A               	goto	l3356
  6773  04A8                     u2010:	
  6774  04A8                     l3336:	
  6775  04A8  3079               	movlw	121
  6776  04A9  0647               	xorwf	_b,w
  6777  04AA  1D03               	btfss	3,2
  6778  04AB  2CAD               	goto	u2021
  6779  04AC  2CAE               	goto	u2020
  6780  04AD                     u2021:	
  6781  04AD  2D0A               	goto	l3356
  6782  04AE                     u2020:	
  6783  04AE                     l3338:	
  6784                           
  6785                           ;Button_src.c: 365:                     day_hex++;
  6786  04AE  3001               	movlw	1
  6787  04AF  00D8               	movwf	??_date_settings
  6788  04B0  0858               	movf	??_date_settings,w
  6789  04B1  07C5               	addwf	_day_hex,f
  6790  04B2                     l3340:	
  6791                           
  6792                           ;Button_src.c: 366:                     day_low++;
  6793  04B2  3001               	movlw	1
  6794  04B3  07AF               	addwf	_day_low,f
  6795  04B4  1803               	skipnc
  6796  04B5  0AB0               	incf	_day_low+1,f
  6797  04B6  3000               	movlw	0
  6798  04B7  07B0               	addwf	_day_low+1,f
  6799  04B8                     l3342:	
  6800                           
  6801                           ;Button_src.c: 367:                     day_low = modulus_func(day_low,10);
  6802  04B8  0830               	movf	_day_low+1,w
  6803  04B9  00F8               	movwf	modulus_func@x+1
  6804  04BA  082F               	movf	_day_low,w
  6805  04BB  00F7               	movwf	modulus_func@x
  6806  04BC  300A               	movlw	10
  6807  04BD  00F9               	movwf	modulus_func@y
  6808  04BE  3000               	movlw	0
  6809  04BF  00FA               	movwf	modulus_func@y+1
  6810  04C0  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  6811  04C5  0878               	movf	?_modulus_func+1,w
  6812  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  6813  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  6814  04C8  00B0               	movwf	_day_low+1
  6815  04C9  0877               	movf	?_modulus_func,w
  6816  04CA  00AF               	movwf	_day_low
  6817  04CB                     l3344:	
  6818                           
  6819                           ;Button_src.c: 369:                     day_high = incrementor(day_high,day_low,'9');
  6820  04CB  082E               	movf	_day_high+1,w
  6821  04CC  00D4               	movwf	incrementor@upper_val+1
  6822  04CD  082D               	movf	_day_high,w
  6823  04CE  00D3               	movwf	incrementor@upper_val
  6824  04CF  0830               	movf	_day_low+1,w
  6825  04D0  00D6               	movwf	incrementor@lower_val+1
  6826  04D1  082F               	movf	_day_low,w
  6827  04D2  00D5               	movwf	incrementor@lower_val
  6828  04D3  3039               	movlw	57
  6829  04D4  00D8               	movwf	??_date_settings
  6830  04D5  0858               	movf	??_date_settings,w
  6831  04D6  00D7               	movwf	incrementor@z
  6832  04D7  160A  118A  2697  120A  118A  	fcall	_incrementor
  6833  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  6834  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  6835  04DE  00D9               	movwf	??_date_settings+1
  6836  04DF  01DA               	clrf	??_date_settings+2
  6837  04E0  0859               	movf	??_date_settings+1,w
  6838  04E1  00AD               	movwf	_day_high
  6839  04E2  085A               	movf	??_date_settings+2,w
  6840  04E3  00AE               	movwf	_day_high+1
  6841  04E4                     l3346:	
  6842                           
  6843                           ;Button_src.c: 370:                     day_hex = time_date_hex_terminator(day_hex,'c');
  6844  04E4  3063               	movlw	99
  6845  04E5  00D8               	movwf	??_date_settings
  6846  04E6  0858               	movf	??_date_settings,w
  6847  04E7  00F0               	movwf	time_date_hex_terminator@limiter
  6848  04E8  0845               	movf	_day_hex,w
  6849  04E9  160A  118A  250D  120A  118A  	fcall	_time_date_hex_terminator
  6850  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  6851  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  6852  04F0  00D9               	movwf	??_date_settings+1
  6853  04F1  0859               	movf	??_date_settings+1,w
  6854  04F2  00C5               	movwf	_day_hex
  6855  04F3                     l3348:	
  6856                           
  6857                           ;Button_src.c: 371:                     if(day_high == 3 && day_low==2 ){
  6858  04F3  3003               	movlw	3
  6859  04F4  062D               	xorwf	_day_high,w
  6860  04F5  042E               	iorwf	_day_high+1,w
  6861  04F6  1D03               	btfss	3,2
  6862  04F7  2CF9               	goto	u2031
  6863  04F8  2CFA               	goto	u2030
  6864  04F9                     u2031:	
  6865  04F9  2D05               	goto	l3354
  6866  04FA                     u2030:	
  6867  04FA                     l3350:	
  6868  04FA  3002               	movlw	2
  6869  04FB  062F               	xorwf	_day_low,w
  6870  04FC  0430               	iorwf	_day_low+1,w
  6871  04FD  1D03               	btfss	3,2
  6872  04FE  2D00               	goto	u2041
  6873  04FF  2D01               	goto	u2040
  6874  0500                     u2041:	
  6875  0500  2D05               	goto	l3354
  6876  0501                     u2040:	
  6877  0501                     l3352:	
  6878                           
  6879                           ;Button_src.c: 372:                         day_high = 0;
  6880  0501  01AD               	clrf	_day_high
  6881  0502  01AE               	clrf	_day_high+1
  6882                           
  6883                           ;Button_src.c: 373:                         day_low = 0;
  6884  0503  01AF               	clrf	_day_low
  6885  0504  01B0               	clrf	_day_low+1
  6886  0505                     l3354:	
  6887                           
  6888                           ;Button_src.c: 375:                     button_delay();
  6889  0505  160A  118A  256B  120A  118A  	fcall	_button_delay
  6890  050A                     l3356:	
  6891                           
  6892                           ;Button_src.c: 377:             if(RC7==0 && b == 'z'){
  6893  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6894  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6895  050C  1B87               	btfsc	7,7	;volatile
  6896  050D  2D0F               	goto	u2051
  6897  050E  2D10               	goto	u2050
  6898  050F                     u2051:	
  6899  050F  2D63               	goto	l3378
  6900  0510                     u2050:	
  6901  0510                     l3358:	
  6902  0510  307A               	movlw	122
  6903  0511  0647               	xorwf	_b,w
  6904  0512  1D03               	btfss	3,2
  6905  0513  2D15               	goto	u2061
  6906  0514  2D16               	goto	u2060
  6907  0515                     u2061:	
  6908  0515  2D63               	goto	l3378
  6909  0516                     u2060:	
  6910  0516                     l3360:	
  6911                           
  6912                           ;Button_src.c: 378:                     c++;
  6913  0516  3001               	movlw	1
  6914  0517  00D8               	movwf	??_date_settings
  6915  0518  0858               	movf	??_date_settings,w
  6916  0519  07C6               	addwf	_c,f
  6917  051A                     l3362:	
  6918                           
  6919                           ;Button_src.c: 379:                     t++;
  6920  051A  3001               	movlw	1
  6921  051B  07B9               	addwf	_t,f
  6922  051C  1803               	skipnc
  6923  051D  0ABA               	incf	_t+1,f
  6924  051E  3000               	movlw	0
  6925  051F  07BA               	addwf	_t+1,f
  6926  0520                     l3364:	
  6927                           
  6928                           ;Button_src.c: 380:                     t = modulus_func(t,10);
  6929  0520  083A               	movf	_t+1,w
  6930  0521  00F8               	movwf	modulus_func@x+1
  6931  0522  0839               	movf	_t,w
  6932  0523  00F7               	movwf	modulus_func@x
  6933  0524  300A               	movlw	10
  6934  0525  00F9               	movwf	modulus_func@y
  6935  0526  3000               	movlw	0
  6936  0527  00FA               	movwf	modulus_func@y+1
  6937  0528  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  6938  052D  0878               	movf	?_modulus_func+1,w
  6939  052E  1283               	bcf	3,5	;RP0=0, select bank0
  6940  052F  1303               	bcf	3,6	;RP1=0, select bank0
  6941  0530  00BA               	movwf	_t+1
  6942  0531  0877               	movf	?_modulus_func,w
  6943  0532  00B9               	movwf	_t
  6944  0533                     l3366:	
  6945                           
  6946                           ;Button_src.c: 381:                     w = incrementor(w,t,'9');
  6947  0533  0838               	movf	_w+1,w
  6948  0534  00D4               	movwf	incrementor@upper_val+1
  6949  0535  0837               	movf	_w,w
  6950  0536  00D3               	movwf	incrementor@upper_val
  6951  0537  083A               	movf	_t+1,w
  6952  0538  00D6               	movwf	incrementor@lower_val+1
  6953  0539  0839               	movf	_t,w
  6954  053A  00D5               	movwf	incrementor@lower_val
  6955  053B  3039               	movlw	57
  6956  053C  00D8               	movwf	??_date_settings
  6957  053D  0858               	movf	??_date_settings,w
  6958  053E  00D7               	movwf	incrementor@z
  6959  053F  160A  118A  2697  120A  118A  	fcall	_incrementor
  6960  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6961  0545  1303               	bcf	3,6	;RP1=0, select bank0
  6962  0546  00D9               	movwf	??_date_settings+1
  6963  0547  01DA               	clrf	??_date_settings+2
  6964  0548  0859               	movf	??_date_settings+1,w
  6965  0549  00B7               	movwf	_w
  6966  054A  085A               	movf	??_date_settings+2,w
  6967  054B  00B8               	movwf	_w+1
  6968  054C                     l3368:	
  6969                           
  6970                           ;Button_src.c: 382:                      if(c == (0x59 + 1)){
  6971  054C  305A               	movlw	90
  6972  054D  0646               	xorwf	_c,w
  6973  054E  1D03               	btfss	3,2
  6974  054F  2D51               	goto	u2071
  6975  0550  2D52               	goto	u2070
  6976  0551                     u2071:	
  6977  0551  2D53               	goto	l3372
  6978  0552                     u2070:	
  6979  0552                     l3370:	
  6980                           
  6981                           ;Button_src.c: 383:                         c = 0x00;
  6982  0552  01C6               	clrf	_c
  6983  0553                     l3372:	
  6984                           
  6985                           ;Button_src.c: 385:                     if(w == 6){
  6986  0553  3006               	movlw	6
  6987  0554  0637               	xorwf	_w,w
  6988  0555  0438               	iorwf	_w+1,w
  6989  0556  1D03               	btfss	3,2
  6990  0557  2D59               	goto	u2081
  6991  0558  2D5A               	goto	u2080
  6992  0559                     u2081:	
  6993  0559  2D5E               	goto	l3376
  6994  055A                     u2080:	
  6995  055A                     l3374:	
  6996                           
  6997                           ;Button_src.c: 386:                         w = 0;
  6998  055A  01B7               	clrf	_w
  6999  055B  01B8               	clrf	_w+1
  7000                           
  7001                           ;Button_src.c: 387:                         t = 0;
  7002  055C  01B9               	clrf	_t
  7003  055D  01BA               	clrf	_t+1
  7004  055E                     l3376:	
  7005                           
  7006                           ;Button_src.c: 389:                     button_delay();
  7007  055E  160A  118A  256B  120A  118A  	fcall	_button_delay
  7008  0563                     l3378:	
  7009                           
  7010                           ;Button_src.c: 393:              table[4] = a;
  7011  0563  1283               	bcf	3,5	;RP0=0, select bank0
  7012  0564  1303               	bcf	3,6	;RP1=0, select bank0
  7013  0565  0848               	movf	_a,w
  7014  0566  00D8               	movwf	??_date_settings
  7015  0567  0858               	movf	??_date_settings,w
  7016  0568  00E3               	movwf	_table+4
  7017  0569                     l3380:	
  7018                           
  7019                           ;Button_src.c: 394:              table[6] = c;
  7020  0569  0846               	movf	_c,w
  7021  056A  00D8               	movwf	??_date_settings
  7022  056B  0858               	movf	??_date_settings,w
  7023  056C  00E5               	movwf	_table+6
  7024  056D                     l3382:	
  7025                           
  7026                           ;Button_src.c: 395:              table[3] = day_hex;
  7027  056D  0845               	movf	_day_hex,w
  7028  056E  00D8               	movwf	??_date_settings
  7029  056F  0858               	movf	??_date_settings,w
  7030  0570  00E2               	movwf	_table+3
  7031  0571                     l3384:	
  7032                           
  7033                           ;Button_src.c: 397:                     a = time_date_delimiter(a,0x11,'9');
  7034  0571  3011               	movlw	17
  7035  0572  00D8               	movwf	??_date_settings
  7036  0573  0858               	movf	??_date_settings,w
  7037  0574  00F0               	movwf	time_date_delimiter@hex
  7038  0575  3039               	movlw	57
  7039  0576  00D9               	movwf	??_date_settings+1
  7040  0577  0859               	movf	??_date_settings+1,w
  7041  0578  00F1               	movwf	time_date_delimiter@limiter
  7042  0579  0848               	movf	_a,w
  7043  057A  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7044  057F  1283               	bcf	3,5	;RP0=0, select bank0
  7045  0580  1303               	bcf	3,6	;RP1=0, select bank0
  7046  0581  00DA               	movwf	??_date_settings+2
  7047  0582  085A               	movf	??_date_settings+2,w
  7048  0583  00C8               	movwf	_a
  7049  0584                     l3386:	
  7050                           
  7051                           ;Button_src.c: 399:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  7052  0584  3011               	movlw	17
  7053  0585  00D8               	movwf	??_date_settings
  7054  0586  0858               	movf	??_date_settings,w
  7055  0587  00F0               	movwf	time_date_delimiter@hex
  7056  0588  3039               	movlw	57
  7057  0589  00D9               	movwf	??_date_settings+1
  7058  058A  0859               	movf	??_date_settings+1,w
  7059  058B  00F1               	movwf	time_date_delimiter@limiter
  7060  058C  0845               	movf	_day_hex,w
  7061  058D  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7062  0592  1283               	bcf	3,5	;RP0=0, select bank0
  7063  0593  1303               	bcf	3,6	;RP1=0, select bank0
  7064  0594  00DA               	movwf	??_date_settings+2
  7065  0595  085A               	movf	??_date_settings+2,w
  7066  0596  00C5               	movwf	_day_hex
  7067  0597                     l3388:	
  7068                           
  7069                           ;Button_src.c: 400:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  7070  0597  3021               	movlw	33
  7071  0598  00D8               	movwf	??_date_settings
  7072  0599  0858               	movf	??_date_settings,w
  7073  059A  00F0               	movwf	time_date_delimiter@hex
  7074  059B  304A               	movlw	74
  7075  059C  00D9               	movwf	??_date_settings+1
  7076  059D  0859               	movf	??_date_settings+1,w
  7077  059E  00F1               	movwf	time_date_delimiter@limiter
  7078  059F  0845               	movf	_day_hex,w
  7079  05A0  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7080  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  7081  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  7082  05A7  00DA               	movwf	??_date_settings+2
  7083  05A8  085A               	movf	??_date_settings+2,w
  7084  05A9  00C5               	movwf	_day_hex
  7085  05AA                     l3390:	
  7086                           
  7087                           ;Button_src.c: 401:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  7088  05AA  3011               	movlw	17
  7089  05AB  00D8               	movwf	??_date_settings
  7090  05AC  0858               	movf	??_date_settings,w
  7091  05AD  00F0               	movwf	time_date_delimiter@hex
  7092  05AE  3039               	movlw	57
  7093  05AF  00D9               	movwf	??_date_settings+1
  7094  05B0  0859               	movf	??_date_settings+1,w
  7095  05B1  00F1               	movwf	time_date_delimiter@limiter
  7096  05B2  0845               	movf	_day_hex,w
  7097  05B3  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7098  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  7099  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  7100  05BA  00DA               	movwf	??_date_settings+2
  7101  05BB  085A               	movf	??_date_settings+2,w
  7102  05BC  00C5               	movwf	_day_hex
  7103  05BD                     l3392:	
  7104                           
  7105                           ;Button_src.c: 402:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  7106  05BD  3021               	movlw	33
  7107  05BE  00D8               	movwf	??_date_settings
  7108  05BF  0858               	movf	??_date_settings,w
  7109  05C0  00F0               	movwf	time_date_delimiter@hex
  7110  05C1  304A               	movlw	74
  7111  05C2  00D9               	movwf	??_date_settings+1
  7112  05C3  0859               	movf	??_date_settings+1,w
  7113  05C4  00F1               	movwf	time_date_delimiter@limiter
  7114  05C5  0845               	movf	_day_hex,w
  7115  05C6  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7116  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  7117  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  7118  05CD  00DA               	movwf	??_date_settings+2
  7119  05CE  085A               	movf	??_date_settings+2,w
  7120  05CF  00C5               	movwf	_day_hex
  7121  05D0                     l3394:	
  7122                           
  7123                           ;Button_src.c: 403:                     day_hex = time_date_delimiter(day_hex,0x31,'Y');
  7124  05D0  3031               	movlw	49
  7125  05D1  00D8               	movwf	??_date_settings
  7126  05D2  0858               	movf	??_date_settings,w
  7127  05D3  00F0               	movwf	time_date_delimiter@hex
  7128  05D4  3059               	movlw	89
  7129  05D5  00D9               	movwf	??_date_settings+1
  7130  05D6  0859               	movf	??_date_settings+1,w
  7131  05D7  00F1               	movwf	time_date_delimiter@limiter
  7132  05D8  0845               	movf	_day_hex,w
  7133  05D9  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7134  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  7135  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  7136  05E0  00DA               	movwf	??_date_settings+2
  7137  05E1  085A               	movf	??_date_settings+2,w
  7138  05E2  00C5               	movwf	_day_hex
  7139  05E3                     l3396:	
  7140                           
  7141                           ;Button_src.c: 405:                     c = time_date_delimiter(c,0x11,'9');
  7142  05E3  3011               	movlw	17
  7143  05E4  00D8               	movwf	??_date_settings
  7144  05E5  0858               	movf	??_date_settings,w
  7145  05E6  00F0               	movwf	time_date_delimiter@hex
  7146  05E7  3039               	movlw	57
  7147  05E8  00D9               	movwf	??_date_settings+1
  7148  05E9  0859               	movf	??_date_settings+1,w
  7149  05EA  00F1               	movwf	time_date_delimiter@limiter
  7150  05EB  0846               	movf	_c,w
  7151  05EC  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7152  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  7153  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  7154  05F3  00DA               	movwf	??_date_settings+2
  7155  05F4  085A               	movf	??_date_settings+2,w
  7156  05F5  00C6               	movwf	_c
  7157  05F6                     l3398:	
  7158                           
  7159                           ;Button_src.c: 406:                     c = time_date_delimiter(c,0x21,'J');
  7160  05F6  3021               	movlw	33
  7161  05F7  00D8               	movwf	??_date_settings
  7162  05F8  0858               	movf	??_date_settings,w
  7163  05F9  00F0               	movwf	time_date_delimiter@hex
  7164  05FA  304A               	movlw	74
  7165  05FB  00D9               	movwf	??_date_settings+1
  7166  05FC  0859               	movf	??_date_settings+1,w
  7167  05FD  00F1               	movwf	time_date_delimiter@limiter
  7168  05FE  0846               	movf	_c,w
  7169  05FF  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7170  0604  1283               	bcf	3,5	;RP0=0, select bank0
  7171  0605  1303               	bcf	3,6	;RP1=0, select bank0
  7172  0606  00DA               	movwf	??_date_settings+2
  7173  0607  085A               	movf	??_date_settings+2,w
  7174  0608  00C6               	movwf	_c
  7175  0609                     l3400:	
  7176                           
  7177                           ;Button_src.c: 407:                     c = time_date_delimiter(c,0x11,'9');
  7178  0609  3011               	movlw	17
  7179  060A  00D8               	movwf	??_date_settings
  7180  060B  0858               	movf	??_date_settings,w
  7181  060C  00F0               	movwf	time_date_delimiter@hex
  7182  060D  3039               	movlw	57
  7183  060E  00D9               	movwf	??_date_settings+1
  7184  060F  0859               	movf	??_date_settings+1,w
  7185  0610  00F1               	movwf	time_date_delimiter@limiter
  7186  0611  0846               	movf	_c,w
  7187  0612  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7188  0617  1283               	bcf	3,5	;RP0=0, select bank0
  7189  0618  1303               	bcf	3,6	;RP1=0, select bank0
  7190  0619  00DA               	movwf	??_date_settings+2
  7191  061A  085A               	movf	??_date_settings+2,w
  7192  061B  00C6               	movwf	_c
  7193  061C                     l3402:	
  7194                           
  7195                           ;Button_src.c: 408:                     c = time_date_delimiter(c,0x21,'J');
  7196  061C  3021               	movlw	33
  7197  061D  00D8               	movwf	??_date_settings
  7198  061E  0858               	movf	??_date_settings,w
  7199  061F  00F0               	movwf	time_date_delimiter@hex
  7200  0620  304A               	movlw	74
  7201  0621  00D9               	movwf	??_date_settings+1
  7202  0622  0859               	movf	??_date_settings+1,w
  7203  0623  00F1               	movwf	time_date_delimiter@limiter
  7204  0624  0846               	movf	_c,w
  7205  0625  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7206  062A  1283               	bcf	3,5	;RP0=0, select bank0
  7207  062B  1303               	bcf	3,6	;RP1=0, select bank0
  7208  062C  00DA               	movwf	??_date_settings+2
  7209  062D  085A               	movf	??_date_settings+2,w
  7210  062E  00C6               	movwf	_c
  7211  062F                     l3404:	
  7212                           
  7213                           ;Button_src.c: 409:                     c = time_date_delimiter(c,0x31,'Y');
  7214  062F  3031               	movlw	49
  7215  0630  00D8               	movwf	??_date_settings
  7216  0631  0858               	movf	??_date_settings,w
  7217  0632  00F0               	movwf	time_date_delimiter@hex
  7218  0633  3059               	movlw	89
  7219  0634  00D9               	movwf	??_date_settings+1
  7220  0635  0859               	movf	??_date_settings+1,w
  7221  0636  00F1               	movwf	time_date_delimiter@limiter
  7222  0637  0846               	movf	_c,w
  7223  0638  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7224  063D  1283               	bcf	3,5	;RP0=0, select bank0
  7225  063E  1303               	bcf	3,6	;RP1=0, select bank0
  7226  063F  00DA               	movwf	??_date_settings+2
  7227  0640  085A               	movf	??_date_settings+2,w
  7228  0641  00C6               	movwf	_c
  7229  0642                     l3406:	
  7230                           
  7231                           ;Button_src.c: 410:                     c = time_date_delimiter(c,0x41,'j');
  7232  0642  3041               	movlw	65
  7233  0643  00D8               	movwf	??_date_settings
  7234  0644  0858               	movf	??_date_settings,w
  7235  0645  00F0               	movwf	time_date_delimiter@hex
  7236  0646  306A               	movlw	106
  7237  0647  00D9               	movwf	??_date_settings+1
  7238  0648  0859               	movf	??_date_settings+1,w
  7239  0649  00F1               	movwf	time_date_delimiter@limiter
  7240  064A  0846               	movf	_c,w
  7241  064B  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7242  0650  1283               	bcf	3,5	;RP0=0, select bank0
  7243  0651  1303               	bcf	3,6	;RP1=0, select bank0
  7244  0652  00DA               	movwf	??_date_settings+2
  7245  0653  085A               	movf	??_date_settings+2,w
  7246  0654  00C6               	movwf	_c
  7247  0655                     l3408:	
  7248                           
  7249                           ;Button_src.c: 411:                     c = time_date_delimiter(c,0x51,'z');
  7250  0655  3051               	movlw	81
  7251  0656  00D8               	movwf	??_date_settings
  7252  0657  0858               	movf	??_date_settings,w
  7253  0658  00F0               	movwf	time_date_delimiter@hex
  7254  0659  307A               	movlw	122
  7255  065A  00D9               	movwf	??_date_settings+1
  7256  065B  0859               	movf	??_date_settings+1,w
  7257  065C  00F1               	movwf	time_date_delimiter@limiter
  7258  065D  0846               	movf	_c,w
  7259  065E  160A  118A  25AD  120A  118A  	fcall	_time_date_delimiter
  7260  0663  1283               	bcf	3,5	;RP0=0, select bank0
  7261  0664  1303               	bcf	3,6	;RP1=0, select bank0
  7262  0665  00DA               	movwf	??_date_settings+2
  7263  0666  085A               	movf	??_date_settings+2,w
  7264  0667  00C6               	movwf	_c
  7265  0668                     l3410:	
  7266                           
  7267                           ;Button_src.c: 413:              write_cmd(0x88);
  7268  0668  3088               	movlw	136
  7269  0669  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  7270  066E                     l3412:	
  7271                           
  7272                           ;Button_src.c: 415:                   RC0 = 0;
  7273  066E  1283               	bcf	3,5	;RP0=0, select bank0
  7274  066F  1303               	bcf	3,6	;RP1=0, select bank0
  7275  0670  1007               	bcf	7,0	;volatile
  7276  0671                     l3414:	
  7277                           
  7278                           ;Button_src.c: 416:                   RC1 = 1;
  7279  0671  1487               	bsf	7,1	;volatile
  7280  0672                     l3416:	
  7281                           
  7282                           ;Button_src.c: 417:                   RC2 = 1;
  7283  0672  1507               	bsf	7,2	;volatile
  7284  0673                     l3418:	
  7285                           
  7286                           ;Button_src.c: 418:                   RC3 = 1;
  7287  0673  1587               	bsf	7,3	;volatile
  7288  0674                     l3420:	
  7289                           
  7290                           ;Button_src.c: 420:                     if (RC6 == 0 ){
  7291  0674  1B07               	btfsc	7,6	;volatile
  7292  0675  2E77               	goto	u2091
  7293  0676  2E78               	goto	u2090
  7294  0677                     u2091:	
  7295  0677  2E8F               	goto	l550
  7296  0678                     u2090:	
  7297  0678                     l3422:	
  7298                           
  7299                           ;Button_src.c: 421:                           a = 0x00;
  7300  0678  01C8               	clrf	_a
  7301                           
  7302                           ;Button_src.c: 422:                           c = 0x00;
  7303  0679  01C6               	clrf	_c
  7304                           
  7305                           ;Button_src.c: 423:                           day_hex = 0x00;
  7306  067A  01C5               	clrf	_day_hex
  7307                           
  7308                           ;Button_src.c: 424:                           x = 0;
  7309  067B  01B5               	clrf	_x
  7310  067C  01B6               	clrf	_x+1
  7311                           
  7312                           ;Button_src.c: 425:                           y = 0;
  7313  067D  01B3               	clrf	_y
  7314  067E  01B4               	clrf	_y+1
  7315                           
  7316                           ;Button_src.c: 426:                           w = 0;
  7317  067F  01B7               	clrf	_w
  7318  0680  01B8               	clrf	_w+1
  7319                           
  7320                           ;Button_src.c: 427:                           t = 0;
  7321  0681  01B9               	clrf	_t
  7322  0682  01BA               	clrf	_t+1
  7323  0683                     l3424:	
  7324                           
  7325                           ;Button_src.c: 428:                           write_cmd(0x1);
  7326  0683  3001               	movlw	1
  7327  0684  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  7328  0689                     l3426:	
  7329                           
  7330                           ;Button_src.c: 429:                           set_time();
  7331  0689  160A  118A  26C3  120A  118A  	fcall	_set_time
  7332  068E  2FE5               	goto	l551
  7333  068F                     l550:	
  7334                           ;Button_src.c: 431:                             }
  7335                           
  7336                           
  7337                           ;Button_src.c: 432:                   RC0 = 0;
  7338  068F  1007               	bcf	7,0	;volatile
  7339                           
  7340                           ;Button_src.c: 433:                   RC1 = 1;
  7341  0690  1487               	bsf	7,1	;volatile
  7342                           
  7343                           ;Button_src.c: 434:                   RC2 = 1;
  7344  0691  1507               	bsf	7,2	;volatile
  7345                           
  7346                           ;Button_src.c: 435:                   RC3 = 1;
  7347  0692  1587               	bsf	7,3	;volatile
  7348  0693                     l3430:	
  7349                           
  7350                           ;Button_src.c: 436:                   z = modulus_func(z,3);
  7351  0693  0832               	movf	_z+1,w
  7352  0694  00F8               	movwf	modulus_func@x+1
  7353  0695  0831               	movf	_z,w
  7354  0696  00F7               	movwf	modulus_func@x
  7355  0697  3003               	movlw	3
  7356  0698  00F9               	movwf	modulus_func@y
  7357  0699  3000               	movlw	0
  7358  069A  00FA               	movwf	modulus_func@y+1
  7359  069B  160A  118A  24FB  120A  118A  	fcall	_modulus_func
  7360  06A0  0878               	movf	?_modulus_func+1,w
  7361  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  7362  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  7363  06A3  00B2               	movwf	_z+1
  7364  06A4  0877               	movf	?_modulus_func,w
  7365  06A5  00B1               	movwf	_z
  7366  06A6                     l3432:	
  7367                           
  7368                           ;Button_src.c: 437:                   if(RC4 == 0 && z ==0){
  7369  06A6  1A07               	btfsc	7,4	;volatile
  7370  06A7  2EA9               	goto	u2101
  7371  06A8  2EAA               	goto	u2100
  7372  06A9                     u2101:	
  7373  06A9  2EED               	goto	l3442
  7374  06AA                     u2100:	
  7375  06AA                     l3434:	
  7376  06AA  0831               	movf	_z,w
  7377  06AB  0432               	iorwf	_z+1,w
  7378  06AC  1D03               	btfss	3,2
  7379  06AD  2EAF               	goto	u2111
  7380  06AE  2EB0               	goto	u2110
  7381  06AF                     u2111:	
  7382  06AF  2EED               	goto	l3442
  7383  06B0                     u2110:	
  7384  06B0                     l3436:	
  7385                           
  7386                           ;Button_src.c: 438:                       write_cmd(0x90);
  7387  06B0  3090               	movlw	144
  7388  06B1  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  7389                           
  7390                           ;Button_src.c: 439:                       write_char('D');
  7391  06B6  3044               	movlw	68
  7392  06B7  160A  118A  25C4  120A  118A  	fcall	_write_char
  7393                           
  7394                           ;Button_src.c: 440:                       write_char('a');
  7395  06BC  3061               	movlw	97
  7396  06BD  160A  118A  25C4  120A  118A  	fcall	_write_char
  7397                           
  7398                           ;Button_src.c: 441:                       write_char('y');
  7399  06C2  3079               	movlw	121
  7400  06C3  160A  118A  25C4  120A  118A  	fcall	_write_char
  7401                           
  7402                           ;Button_src.c: 442:                       write_char(':');
  7403  06C8  303A               	movlw	58
  7404  06C9  160A  118A  25C4  120A  118A  	fcall	_write_char
  7405                           
  7406                           ;Button_src.c: 443:                       write_char(' ');
  7407  06CE  3020               	movlw	32
  7408  06CF  160A  118A  25C4  120A  118A  	fcall	_write_char
  7409                           
  7410                           ;Button_src.c: 444:                       write_char(' ');
  7411  06D4  3020               	movlw	32
  7412  06D5  160A  118A  25C4  120A  118A  	fcall	_write_char
  7413  06DA                     l3438:	
  7414                           
  7415                           ;Button_src.c: 445:                       b = 'y';
  7416  06DA  3079               	movlw	121
  7417  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  7418  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  7419  06DD  00D8               	movwf	??_date_settings
  7420  06DE  0858               	movf	??_date_settings,w
  7421  06DF  00C7               	movwf	_b
  7422  06E0                     l3440:	
  7423                           
  7424                           ;Button_src.c: 447:                       button_delay();
  7425  06E0  160A  118A  256B  120A  118A  	fcall	_button_delay
  7426                           
  7427                           ;Button_src.c: 448:                       z++;
  7428  06E5  3001               	movlw	1
  7429  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  7430  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  7431  06E8  07B1               	addwf	_z,f
  7432  06E9  1803               	skipnc
  7433  06EA  0AB2               	incf	_z+1,f
  7434  06EB  3000               	movlw	0
  7435  06EC  07B2               	addwf	_z+1,f
  7436  06ED                     l3442:	
  7437                           
  7438                           ;Button_src.c: 450:                   RC0 = 0;
  7439  06ED  1007               	bcf	7,0	;volatile
  7440  06EE                     l3444:	
  7441                           
  7442                           ;Button_src.c: 451:                   RC1 = 1;
  7443  06EE  1487               	bsf	7,1	;volatile
  7444  06EF                     l3446:	
  7445                           
  7446                           ;Button_src.c: 452:                   RC2 = 1;
  7447  06EF  1507               	bsf	7,2	;volatile
  7448  06F0                     l3448:	
  7449                           
  7450                           ;Button_src.c: 453:                   RC3 = 1;
  7451  06F0  1587               	bsf	7,3	;volatile
  7452  06F1                     l3450:	
  7453                           
  7454                           ;Button_src.c: 454:                   if(RC4 == 0&& z ==1){
  7455  06F1  1A07               	btfsc	7,4	;volatile
  7456  06F2  2EF4               	goto	u2121
  7457  06F3  2EF5               	goto	u2120
  7458  06F4                     u2121:	
  7459  06F4  2F36               	goto	l3472
  7460  06F5                     u2120:	
  7461  06F5                     l3452:	
  7462  06F5  0331               	decf	_z,w
  7463  06F6  0432               	iorwf	_z+1,w
  7464  06F7  1D03               	btfss	3,2
  7465  06F8  2EFA               	goto	u2131
  7466  06F9  2EFB               	goto	u2130
  7467  06FA                     u2131:	
  7468  06FA  2F36               	goto	l3472
  7469  06FB                     u2130:	
  7470  06FB                     l3454:	
  7471                           
  7472                           ;Button_src.c: 455:                       z++;
  7473  06FB  3001               	movlw	1
  7474  06FC  07B1               	addwf	_z,f
  7475  06FD  1803               	skipnc
  7476  06FE  0AB2               	incf	_z+1,f
  7477  06FF  3000               	movlw	0
  7478  0700  07B2               	addwf	_z+1,f
  7479  0701                     l3456:	
  7480                           
  7481                           ;Button_src.c: 456:                       button_delay();
  7482  0701  160A  118A  256B  120A  118A  	fcall	_button_delay
  7483  0706                     l3458:	
  7484                           
  7485                           ;Button_src.c: 458:                       write_cmd(0x90);
  7486  0706  3090               	movlw	144
  7487  0707  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  7488  070C                     l3460:	
  7489                           
  7490                           ;Button_src.c: 459:                       write_char('M');
  7491  070C  304D               	movlw	77
  7492  070D  160A  118A  25C4  120A  118A  	fcall	_write_char
  7493  0712                     l3462:	
  7494                           
  7495                           ;Button_src.c: 460:                       write_char('o');
  7496  0712  306F               	movlw	111
  7497  0713  160A  118A  25C4  120A  118A  	fcall	_write_char
  7498  0718                     l3464:	
  7499                           
  7500                           ;Button_src.c: 461:                       write_char('n');
  7501  0718  306E               	movlw	110
  7502  0719  160A  118A  25C4  120A  118A  	fcall	_write_char
  7503  071E                     l3466:	
  7504                           
  7505                           ;Button_src.c: 462:                       write_char('t');
  7506  071E  3074               	movlw	116
  7507  071F  160A  118A  25C4  120A  118A  	fcall	_write_char
  7508  0724                     l3468:	
  7509                           
  7510                           ;Button_src.c: 463:                       write_char('h');
  7511  0724  3068               	movlw	104
  7512  0725  160A  118A  25C4  120A  118A  	fcall	_write_char
  7513  072A                     l3470:	
  7514                           
  7515                           ;Button_src.c: 464:                       write_char(':');
  7516  072A  303A               	movlw	58
  7517  072B  160A  118A  25C4  120A  118A  	fcall	_write_char
  7518                           
  7519                           ;Button_src.c: 465:                       b = 'x';
  7520  0730  3078               	movlw	120
  7521  0731  1283               	bcf	3,5	;RP0=0, select bank0
  7522  0732  1303               	bcf	3,6	;RP1=0, select bank0
  7523  0733  00D8               	movwf	??_date_settings
  7524  0734  0858               	movf	??_date_settings,w
  7525  0735  00C7               	movwf	_b
  7526  0736                     l3472:	
  7527                           
  7528                           ;Button_src.c: 468:                   RC0 = 0;
  7529  0736  1007               	bcf	7,0	;volatile
  7530  0737                     l3474:	
  7531                           
  7532                           ;Button_src.c: 469:                   RC1 = 1;
  7533  0737  1487               	bsf	7,1	;volatile
  7534  0738                     l3476:	
  7535                           
  7536                           ;Button_src.c: 470:                   RC2 = 1;
  7537  0738  1507               	bsf	7,2	;volatile
  7538  0739                     l3478:	
  7539                           
  7540                           ;Button_src.c: 471:                   RC3 = 1;
  7541  0739  1587               	bsf	7,3	;volatile
  7542  073A                     l3480:	
  7543                           
  7544                           ;Button_src.c: 472:                   if(RC4 == 0&& z ==2){
  7545  073A  1A07               	btfsc	7,4	;volatile
  7546  073B  2F3D               	goto	u2141
  7547  073C  2F3E               	goto	u2140
  7548  073D                     u2141:	
  7549  073D  2F82               	goto	l3502
  7550  073E                     u2140:	
  7551  073E                     l3482:	
  7552  073E  3002               	movlw	2
  7553  073F  0631               	xorwf	_z,w
  7554  0740  0432               	iorwf	_z+1,w
  7555  0741  1D03               	btfss	3,2
  7556  0742  2F44               	goto	u2151
  7557  0743  2F45               	goto	u2150
  7558  0744                     u2151:	
  7559  0744  2F82               	goto	l3502
  7560  0745                     u2150:	
  7561  0745                     l3484:	
  7562                           
  7563                           ;Button_src.c: 473:                       button_delay();
  7564  0745  160A  118A  256B  120A  118A  	fcall	_button_delay
  7565  074A                     l3486:	
  7566                           
  7567                           ;Button_src.c: 474:                       z++;
  7568  074A  3001               	movlw	1
  7569  074B  1283               	bcf	3,5	;RP0=0, select bank0
  7570  074C  1303               	bcf	3,6	;RP1=0, select bank0
  7571  074D  07B1               	addwf	_z,f
  7572  074E  1803               	skipnc
  7573  074F  0AB2               	incf	_z+1,f
  7574  0750  3000               	movlw	0
  7575  0751  07B2               	addwf	_z+1,f
  7576  0752                     l3488:	
  7577                           
  7578                           ;Button_src.c: 476:                       write_cmd(0x90);
  7579  0752  3090               	movlw	144
  7580  0753  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  7581  0758                     l3490:	
  7582                           
  7583                           ;Button_src.c: 477:                       write_char('Y');
  7584  0758  3059               	movlw	89
  7585  0759  160A  118A  25C4  120A  118A  	fcall	_write_char
  7586  075E                     l3492:	
  7587                           
  7588                           ;Button_src.c: 478:                       write_char('e');
  7589  075E  3065               	movlw	101
  7590  075F  160A  118A  25C4  120A  118A  	fcall	_write_char
  7591  0764                     l3494:	
  7592                           
  7593                           ;Button_src.c: 479:                       write_char('a');
  7594  0764  3061               	movlw	97
  7595  0765  160A  118A  25C4  120A  118A  	fcall	_write_char
  7596  076A                     l3496:	
  7597                           
  7598                           ;Button_src.c: 480:                       write_char('r');
  7599  076A  3072               	movlw	114
  7600  076B  160A  118A  25C4  120A  118A  	fcall	_write_char
  7601  0770                     l3498:	
  7602                           
  7603                           ;Button_src.c: 481:                       write_char(':');
  7604  0770  303A               	movlw	58
  7605  0771  160A  118A  25C4  120A  118A  	fcall	_write_char
  7606  0776                     l3500:	
  7607                           
  7608                           ;Button_src.c: 482:                       write_char(' ');
  7609  0776  3020               	movlw	32
  7610  0777  160A  118A  25C4  120A  118A  	fcall	_write_char
  7611                           
  7612                           ;Button_src.c: 483:                       b = 'z';
  7613  077C  307A               	movlw	122
  7614  077D  1283               	bcf	3,5	;RP0=0, select bank0
  7615  077E  1303               	bcf	3,6	;RP1=0, select bank0
  7616  077F  00D8               	movwf	??_date_settings
  7617  0780  0858               	movf	??_date_settings,w
  7618  0781  00C7               	movwf	_b
  7619  0782                     l3502:	
  7620                           
  7621                           ;Button_src.c: 486:               write_cmd(0x88);
  7622  0782  3088               	movlw	136
  7623  0783  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  7624  0788                     l3504:	
  7625                           
  7626                           ;Button_src.c: 487:               write_char(day_high + '0');
  7627  0788  1283               	bcf	3,5	;RP0=0, select bank0
  7628  0789  1303               	bcf	3,6	;RP1=0, select bank0
  7629  078A  082D               	movf	_day_high,w
  7630  078B  3E30               	addlw	48
  7631  078C  160A  118A  25C4  120A  118A  	fcall	_write_char
  7632  0791                     l3506:	
  7633                           
  7634                           ;Button_src.c: 488:               write_char(day_low + '0');
  7635  0791  1283               	bcf	3,5	;RP0=0, select bank0
  7636  0792  1303               	bcf	3,6	;RP1=0, select bank0
  7637  0793  082F               	movf	_day_low,w
  7638  0794  3E30               	addlw	48
  7639  0795  160A  118A  25C4  120A  118A  	fcall	_write_char
  7640  079A                     l3508:	
  7641                           
  7642                           ;Button_src.c: 489:               write_char('/');
  7643  079A  302F               	movlw	47
  7644  079B  160A  118A  25C4  120A  118A  	fcall	_write_char
  7645  07A0                     l3510:	
  7646                           
  7647                           ;Button_src.c: 490:               write_char(y + '0');
  7648  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  7649  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  7650  07A2  0833               	movf	_y,w
  7651  07A3  3E30               	addlw	48
  7652  07A4  160A  118A  25C4  120A  118A  	fcall	_write_char
  7653  07A9                     l3512:	
  7654                           
  7655                           ;Button_src.c: 491:               write_char(x + '0');
  7656  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  7657  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  7658  07AB  0835               	movf	_x,w
  7659  07AC  3E30               	addlw	48
  7660  07AD  160A  118A  25C4  120A  118A  	fcall	_write_char
  7661  07B2                     l3514:	
  7662                           
  7663                           ;Button_src.c: 492:               write_char('/');
  7664  07B2  302F               	movlw	47
  7665  07B3  160A  118A  25C4  120A  118A  	fcall	_write_char
  7666  07B8                     l3516:	
  7667                           
  7668                           ;Button_src.c: 493:               write_char(w+ '0');
  7669  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  7670  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  7671  07BA  0837               	movf	_w,w
  7672  07BB  3E30               	addlw	48
  7673  07BC  160A  118A  25C4  120A  118A  	fcall	_write_char
  7674  07C1                     l3518:	
  7675                           
  7676                           ;Button_src.c: 494:               write_char(t+ '0');
  7677  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  7678  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  7679  07C3  0839               	movf	_t,w
  7680  07C4  3E30               	addlw	48
  7681  07C5  160A  118A  25C4  120A  118A  	fcall	_write_char
  7682  07CA                     l3520:	
  7683                           
  7684                           ;Button_src.c: 497:             RC0 = 0;
  7685  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  7686  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  7687  07CC  1007               	bcf	7,0	;volatile
  7688  07CD                     l3522:	
  7689                           
  7690                           ;Button_src.c: 498:             RC1 = 1;
  7691  07CD  1487               	bsf	7,1	;volatile
  7692  07CE                     l3524:	
  7693                           
  7694                           ;Button_src.c: 499:             RC2 = 1;
  7695  07CE  1507               	bsf	7,2	;volatile
  7696  07CF                     l3526:	
  7697                           
  7698                           ;Button_src.c: 500:             RC3 = 1;
  7699  07CF  1587               	bsf	7,3	;volatile
  7700  07D0                     l3528:	
  7701                           
  7702                           ;Button_src.c: 501:             if (RC7 == 0 ){
  7703  07D0  1B87               	btfsc	7,7	;volatile
  7704  07D1  2FD3               	goto	u2161
  7705  07D2  2FD4               	goto	u2160
  7706  07D3                     u2161:	
  7707  07D3  2BE3               	goto	l542
  7708  07D4                     u2160:	
  7709  07D4                     l3530:	
  7710                           
  7711                           ;Button_src.c: 502:             a = 0x00;
  7712  07D4  01C8               	clrf	_a
  7713                           
  7714                           ;Button_src.c: 503:             c = 0x00;
  7715  07D5  01C6               	clrf	_c
  7716                           
  7717                           ;Button_src.c: 504:             day_hex = 0x00;
  7718  07D6  01C5               	clrf	_day_hex
  7719                           
  7720                           ;Button_src.c: 505:             x = 0;
  7721  07D7  01B5               	clrf	_x
  7722  07D8  01B6               	clrf	_x+1
  7723                           
  7724                           ;Button_src.c: 506:             y = 0;
  7725  07D9  01B3               	clrf	_y
  7726  07DA  01B4               	clrf	_y+1
  7727                           
  7728                           ;Button_src.c: 507:             w = 0;
  7729  07DB  01B7               	clrf	_w
  7730  07DC  01B8               	clrf	_w+1
  7731                           
  7732                           ;Button_src.c: 508:             t = 0;
  7733  07DD  01B9               	clrf	_t
  7734  07DE  01BA               	clrf	_t+1
  7735  07DF                     l3532:	
  7736                           
  7737                           ;Button_src.c: 509:             write_cmd(0x1);
  7738  07DF  3001               	movlw	1
  7739  07E0  160A  118A  25DD  120A  118A  	fcall	_write_cmd
  7740  07E5                     l551:	
  7741                           ;Button_src.c: 510:             break;
  7742                           
  7743  07E5  0008               	return
  7744  07E6                     __end_of_date_settings:	
  7745                           
  7746                           	psect	text29
  7747  15DD                     __ptext29:	
  7748 ;; *************** function _write_cmd *****************
  7749 ;; Defined at:
  7750 ;;		line 41 in file "LCD_src.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  x               1    wreg     unsigned char 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  x               1    2[COMMON] unsigned char 
  7755 ;;  i               2    0        int 
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7765 ;;      Params:         0       0       0       0       0
  7766 ;;      Locals:         1       0       0       0       0
  7767 ;;      Temps:          0       0       0       0       0
  7768 ;;      Totals:         1       0       0       0       0
  7769 ;;Total ram usage:        1 bytes
  7770 ;; Hardware stack levels used:    1
  7771 ;; Hardware stack levels required when called:    1
  7772 ;; This function calls:
  7773 ;;		_delay_screen
  7774 ;; This function is called by:
  7775 ;;		_main
  7776 ;;		_lcd_init
  7777 ;;		_thermometer_threshhold_settings
  7778 ;;		_time_settings
  7779 ;;		_date_settings
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           
  7784                           ;psect for function _write_cmd
  7785  15DD                     _write_cmd:	
  7786                           
  7787                           ;incstack = 0
  7788                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7789                           ;write_cmd@x stored from wreg
  7790  15DD  00F2               	movwf	write_cmd@x
  7791  15DE                     l2660:	
  7792                           
  7793                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  7794  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  7795  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  7796  15E0  1285               	bcf	5,5	;volatile
  7797                           
  7798                           ;LCD_src.c: 45:  RA4=0;
  7799  15E1  1205               	bcf	5,4	;volatile
  7800                           
  7801                           ;LCD_src.c: 46:  RA3=0;
  7802  15E2  1185               	bcf	5,3	;volatile
  7803  15E3                     l2662:	
  7804                           
  7805                           ;LCD_src.c: 47:  delay_screen();
  7806  15E3  160A  118A  2581  160A  118A  	fcall	_delay_screen
  7807  15E8                     l2664:	
  7808                           
  7809                           ;LCD_src.c: 48:  RA3=1;
  7810  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  7811  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  7812  15EA  1585               	bsf	5,3	;volatile
  7813  15EB                     l2666:	
  7814                           
  7815                           ;LCD_src.c: 49:  PORTD=x;
  7816  15EB  0872               	movf	write_cmd@x,w
  7817  15EC  0088               	movwf	8	;volatile
  7818  15ED                     l2668:	
  7819                           
  7820                           ;LCD_src.c: 50:  delay_screen();
  7821  15ED  160A  118A  2581  160A  118A  	fcall	_delay_screen
  7822  15F2                     l2670:	
  7823                           
  7824                           ;LCD_src.c: 51:  RA3=0;
  7825  15F2  1283               	bcf	3,5	;RP0=0, select bank0
  7826  15F3  1303               	bcf	3,6	;RP1=0, select bank0
  7827  15F4  1185               	bcf	5,3	;volatile
  7828  15F5                     l164:	
  7829  15F5  0008               	return
  7830  15F6                     __end_of_write_cmd:	
  7831                           
  7832                           	psect	text30
  7833  15C4                     __ptext30:	
  7834 ;; *************** function _write_char *****************
  7835 ;; Defined at:
  7836 ;;		line 28 in file "LCD_src.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  x               1    wreg     unsigned char 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  x               1    2[COMMON] unsigned char 
  7841 ;;  i               2    0        int 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7851 ;;      Params:         0       0       0       0       0
  7852 ;;      Locals:         1       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0
  7854 ;;      Totals:         1       0       0       0       0
  7855 ;;Total ram usage:        1 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    1
  7858 ;; This function calls:
  7859 ;;		_delay_screen
  7860 ;; This function is called by:
  7861 ;;		_main
  7862 ;;		_display_temp
  7863 ;;		_display_clock
  7864 ;;		_display_date
  7865 ;;		_thermometer_threshhold_settings
  7866 ;;		_time_settings
  7867 ;;		_date_settings
  7868 ;;		_set_upper_threshold
  7869 ;;		_set_lower_threshold
  7870 ;;		_display_day
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           
  7875                           ;psect for function _write_char
  7876  15C4                     _write_char:	
  7877                           
  7878                           ;incstack = 0
  7879                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7880                           ;write_char@x stored from wreg
  7881  15C4  00F2               	movwf	write_char@x
  7882  15C5                     l2672:	
  7883                           
  7884                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  7885  15C5  1283               	bcf	3,5	;RP0=0, select bank0
  7886  15C6  1303               	bcf	3,6	;RP1=0, select bank0
  7887  15C7  1685               	bsf	5,5	;volatile
  7888                           
  7889                           ;LCD_src.c: 32:  RA4=0;
  7890  15C8  1205               	bcf	5,4	;volatile
  7891                           
  7892                           ;LCD_src.c: 33:  RA3=0;
  7893  15C9  1185               	bcf	5,3	;volatile
  7894  15CA                     l2674:	
  7895                           
  7896                           ;LCD_src.c: 34:  delay_screen();
  7897  15CA  160A  118A  2581  160A  118A  	fcall	_delay_screen
  7898  15CF                     l2676:	
  7899                           
  7900                           ;LCD_src.c: 35:  RA3=1;
  7901  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  7902  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  7903  15D1  1585               	bsf	5,3	;volatile
  7904  15D2                     l2678:	
  7905                           
  7906                           ;LCD_src.c: 36:  PORTD= x;
  7907  15D2  0872               	movf	write_char@x,w
  7908  15D3  0088               	movwf	8	;volatile
  7909  15D4                     l2680:	
  7910                           
  7911                           ;LCD_src.c: 37:  delay_screen();
  7912  15D4  160A  118A  2581  160A  118A  	fcall	_delay_screen
  7913  15D9                     l2682:	
  7914                           
  7915                           ;LCD_src.c: 38:  RA3=0;
  7916  15D9  1283               	bcf	3,5	;RP0=0, select bank0
  7917  15DA  1303               	bcf	3,6	;RP1=0, select bank0
  7918  15DB  1185               	bcf	5,3	;volatile
  7919  15DC                     l161:	
  7920  15DC  0008               	return
  7921  15DD                     __end_of_write_char:	
  7922                           
  7923                           	psect	text31
  7924  1581                     __ptext31:	
  7925 ;; *************** function _delay_screen *****************
  7926 ;; Defined at:
  7927 ;;		line 70 in file "LCD_src.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;		None
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;  i               2    0[COMMON] int 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, btemp+1
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7941 ;;      Params:         0       0       0       0       0
  7942 ;;      Locals:         2       0       0       0       0
  7943 ;;      Temps:          0       0       0       0       0
  7944 ;;      Totals:         2       0       0       0       0
  7945 ;;Total ram usage:        2 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_lcd_init
  7951 ;;		_write_char
  7952 ;;		_write_cmd
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           
  7957                           ;psect for function _delay_screen
  7958  1581                     _delay_screen:	
  7959  1581                     l2612:	
  7960                           ;incstack = 0
  7961                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  7962                           
  7963                           
  7964                           ;LCD_src.c: 71:     int i;;LCD_src.c: 72:  for(i=0;i<5;i++);
  7965  1581  01F0               	clrf	delay_screen@i
  7966  1582  01F1               	clrf	delay_screen@i+1
  7967  1583                     l2618:	
  7968  1583  3001               	movlw	1
  7969  1584  07F0               	addwf	delay_screen@i,f
  7970  1585  1803               	skipnc
  7971  1586  0AF1               	incf	delay_screen@i+1,f
  7972  1587  3000               	movlw	0
  7973  1588  07F1               	addwf	delay_screen@i+1,f
  7974  1589                     l2620:	
  7975  1589  0871               	movf	delay_screen@i+1,w
  7976  158A  3A80               	xorlw	128
  7977  158B  00FF               	movwf	btemp+1
  7978  158C  3080               	movlw	128
  7979  158D  027F               	subwf	btemp+1,w
  7980  158E  1D03               	skipz
  7981  158F  2D92               	goto	u1355
  7982  1590  3005               	movlw	5
  7983  1591  0270               	subwf	delay_screen@i,w
  7984  1592                     u1355:	
  7985  1592  1C03               	skipc
  7986  1593  2D95               	goto	u1351
  7987  1594  2D96               	goto	u1350
  7988  1595                     u1351:	
  7989  1595  2D83               	goto	l2618
  7990  1596                     u1350:	
  7991  1596                     l174:	
  7992  1596  0008               	return
  7993  1597                     __end_of_delay_screen:	
  7994                           
  7995                           	psect	text32
  7996  150D                     __ptext32:	
  7997 ;; *************** function _time_date_hex_terminator *****************
  7998 ;; Defined at:
  7999 ;;		line 35 in file "math_src.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  val             1    wreg     unsigned char 
  8002 ;;  limiter         1    0[COMMON] unsigned char 
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;  val             1    3[COMMON] unsigned char 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  1    wreg      unsigned char 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8014 ;;      Params:         1       0       0       0       0
  8015 ;;      Locals:         1       0       0       0       0
  8016 ;;      Temps:          2       0       0       0       0
  8017 ;;      Totals:         4       0       0       0       0
  8018 ;;Total ram usage:        4 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; This function calls:
  8021 ;;		Nothing
  8022 ;; This function is called by:
  8023 ;;		_time_settings
  8024 ;;		_date_settings
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           
  8029                           ;psect for function _time_date_hex_terminator
  8030  150D                     _time_date_hex_terminator:	
  8031                           
  8032                           ;incstack = 0
  8033                           ; Regs used in _time_date_hex_terminator: [wreg+status,2]
  8034                           ;time_date_hex_terminator@val stored from wreg
  8035  150D  00F3               	movwf	time_date_hex_terminator@val
  8036  150E                     l2858:	
  8037                           
  8038                           ;math_src.c: 36:     if((val + '0') == limiter){
  8039  150E  0873               	movf	time_date_hex_terminator@val,w
  8040  150F  3E30               	addlw	48
  8041  1510  00F1               	movwf	??_time_date_hex_terminator
  8042  1511  3000               	movlw	0
  8043  1512  1803               	skipnc
  8044  1513  3001               	movlw	1
  8045  1514  00F2               	movwf	??_time_date_hex_terminator+1
  8046  1515  0870               	movf	time_date_hex_terminator@limiter,w
  8047  1516  0671               	xorwf	??_time_date_hex_terminator,w
  8048  1517  0472               	iorwf	??_time_date_hex_terminator+1,w
  8049  1518  1D03               	skipz
  8050  1519  2D1B               	goto	u1531
  8051  151A  2D1C               	goto	u1530
  8052  151B                     u1531:	
  8053  151B  2D1D               	goto	l2862
  8054  151C                     u1530:	
  8055  151C                     l2860:	
  8056                           
  8057                           ;math_src.c: 37:     val = 0x00;
  8058  151C  01F3               	clrf	time_date_hex_terminator@val
  8059  151D                     l2862:	
  8060                           
  8061                           ;math_src.c: 39:     return val;
  8062  151D  0873               	movf	time_date_hex_terminator@val,w
  8063  151E                     l580:	
  8064  151E  0008               	return
  8065  151F                     __end_of_time_date_hex_terminator:	
  8066                           
  8067                           	psect	text33
  8068  15AD                     __ptext33:	
  8069 ;; *************** function _time_date_delimiter *****************
  8070 ;; Defined at:
  8071 ;;		line 27 in file "math_src.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  val             1    wreg     unsigned char 
  8074 ;;  hex             1    0[COMMON] unsigned char 
  8075 ;;  limiter         1    1[COMMON] unsigned char 
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;  val             1    4[COMMON] unsigned char 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      unsigned char 
  8080 ;; Registers used:
  8081 ;;		wreg, status,2, status,0
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8087 ;;      Params:         2       0       0       0       0
  8088 ;;      Locals:         1       0       0       0       0
  8089 ;;      Temps:          2       0       0       0       0
  8090 ;;      Totals:         5       0       0       0       0
  8091 ;;Total ram usage:        5 bytes
  8092 ;; Hardware stack levels used:    1
  8093 ;; This function calls:
  8094 ;;		Nothing
  8095 ;; This function is called by:
  8096 ;;		_time_settings
  8097 ;;		_date_settings
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           
  8102                           ;psect for function _time_date_delimiter
  8103  15AD                     _time_date_delimiter:	
  8104                           
  8105                           ;incstack = 0
  8106                           ; Regs used in _time_date_delimiter: [wreg+status,2+status,0]
  8107                           ;time_date_delimiter@val stored from wreg
  8108  15AD  00F4               	movwf	time_date_delimiter@val
  8109  15AE                     l2866:	
  8110                           
  8111                           ;math_src.c: 28:     if((val + '0') == limiter){
  8112  15AE  0874               	movf	time_date_delimiter@val,w
  8113  15AF  3E30               	addlw	48
  8114  15B0  00F2               	movwf	??_time_date_delimiter
  8115  15B1  3000               	movlw	0
  8116  15B2  1803               	skipnc
  8117  15B3  3001               	movlw	1
  8118  15B4  00F3               	movwf	??_time_date_delimiter+1
  8119  15B5  0871               	movf	time_date_delimiter@limiter,w
  8120  15B6  0672               	xorwf	??_time_date_delimiter,w
  8121  15B7  0473               	iorwf	??_time_date_delimiter+1,w
  8122  15B8  1D03               	skipz
  8123  15B9  2DBB               	goto	u1541
  8124  15BA  2DBC               	goto	u1540
  8125  15BB                     u1541:	
  8126  15BB  2DC2               	goto	l2872
  8127  15BC                     u1540:	
  8128  15BC                     l2868:	
  8129                           
  8130                           ;math_src.c: 29:     val = hex;
  8131  15BC  0870               	movf	time_date_delimiter@hex,w
  8132  15BD  00F2               	movwf	??_time_date_delimiter
  8133  15BE  0872               	movf	??_time_date_delimiter,w
  8134  15BF  00F4               	movwf	time_date_delimiter@val
  8135  15C0                     l2870:	
  8136                           
  8137                           ;math_src.c: 30:     val--;
  8138  15C0  3001               	movlw	1
  8139  15C1  02F4               	subwf	time_date_delimiter@val,f
  8140  15C2                     l2872:	
  8141                           
  8142                           ;math_src.c: 32:     return val;
  8143  15C2  0874               	movf	time_date_delimiter@val,w
  8144  15C3                     l576:	
  8145  15C3  0008               	return
  8146  15C4                     __end_of_time_date_delimiter:	
  8147                           
  8148                           	psect	text34
  8149  16C3                     __ptext34:	
  8150 ;; *************** function _set_time *****************
  8151 ;; Defined at:
  8152 ;;		line 15 in file "clock_src.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;		None
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  i               2    5[COMMON] int 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8166 ;;      Params:         0       0       0       0       0
  8167 ;;      Locals:         2       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0
  8169 ;;      Totals:         2       0       0       0       0
  8170 ;;Total ram usage:        2 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:    1
  8173 ;; This function calls:
  8174 ;;		_time_write_1
  8175 ;; This function is called by:
  8176 ;;		_main
  8177 ;;		_time_settings
  8178 ;;		_date_settings
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           
  8183                           ;psect for function _set_time
  8184  16C3                     _set_time:	
  8185  16C3                     l2644:	
  8186                           ;incstack = 0
  8187                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8188                           
  8189                           
  8190                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  8191  16C3  1283               	bcf	3,5	;RP0=0, select bank0
  8192  16C4  1303               	bcf	3,6	;RP1=0, select bank0
  8193  16C5  1686               	bsf	6,5	;volatile
  8194  16C6                     l2646:	
  8195                           
  8196                           ;clock_src.c: 19:    time_write_1(0xbe);
  8197  16C6  30BE               	movlw	190
  8198  16C7  160A  118A  2641  160A  118A  	fcall	_time_write_1
  8199  16CC                     l2648:	
  8200                           
  8201                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  8202  16CC  01F5               	clrf	set_time@i
  8203  16CD  01F6               	clrf	set_time@i+1
  8204  16CE                     l2654:	
  8205                           
  8206                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  8207  16CE  0875               	movf	set_time@i,w
  8208  16CF  3E5F               	addlw	(low (_table| 0))& (0+255)
  8209  16D0  0084               	movwf	4
  8210  16D1  1383               	bcf	3,7	;select IRP bank0
  8211  16D2  0800               	movf	0,w
  8212  16D3  160A  118A  2641  160A  118A  	fcall	_time_write_1
  8213  16D8                     l2656:	
  8214                           
  8215                           ;clock_src.c: 23:      }
  8216  16D8  3001               	movlw	1
  8217  16D9  07F5               	addwf	set_time@i,f
  8218  16DA  1803               	skipnc
  8219  16DB  0AF6               	incf	set_time@i+1,f
  8220  16DC  3000               	movlw	0
  8221  16DD  07F6               	addwf	set_time@i+1,f
  8222  16DE                     l2658:	
  8223  16DE  0876               	movf	set_time@i+1,w
  8224  16DF  3A80               	xorlw	128
  8225  16E0  00FF               	movwf	btemp+1
  8226  16E1  3080               	movlw	128
  8227  16E2  027F               	subwf	btemp+1,w
  8228  16E3  1D03               	skipz
  8229  16E4  2EE7               	goto	u1405
  8230  16E5  3008               	movlw	8
  8231  16E6  0275               	subwf	set_time@i,w
  8232  16E7                     u1405:	
  8233  16E7  1C03               	skipc
  8234  16E8  2EEA               	goto	u1401
  8235  16E9  2EEB               	goto	u1400
  8236  16EA                     u1401:	
  8237  16EA  2ECE               	goto	l2654
  8238  16EB                     u1400:	
  8239  16EB                     l317:	
  8240                           
  8241                           ;clock_src.c: 24:    RB5=0;
  8242  16EB  1283               	bcf	3,5	;RP0=0, select bank0
  8243  16EC  1303               	bcf	3,6	;RP1=0, select bank0
  8244  16ED  1286               	bcf	6,5	;volatile
  8245  16EE                     l318:	
  8246  16EE  0008               	return
  8247  16EF                     __end_of_set_time:	
  8248                           
  8249                           	psect	text35
  8250  1641                     __ptext35:	
  8251 ;; *************** function _time_write_1 *****************
  8252 ;; Defined at:
  8253 ;;		line 116 in file "clock_src.c"
  8254 ;; Parameters:    Size  Location     Type
  8255 ;;  time_tx         1    wreg     unsigned char 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  time_tx         1    4[COMMON] unsigned char 
  8258 ;;  j               2    2[COMMON] int 
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  1    wreg      void 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0, btemp+1
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8268 ;;      Params:         0       0       0       0       0
  8269 ;;      Locals:         3       0       0       0       0
  8270 ;;      Temps:          2       0       0       0       0
  8271 ;;      Totals:         5       0       0       0       0
  8272 ;;Total ram usage:        5 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; This function calls:
  8275 ;;		Nothing
  8276 ;; This function is called by:
  8277 ;;		_ds1302_init
  8278 ;;		_set_time
  8279 ;;		_get_time
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           
  8284                           ;psect for function _time_write_1
  8285  1641                     _time_write_1:	
  8286                           
  8287                           ;incstack = 0
  8288                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  8289                           ;time_write_1@time_tx stored from wreg
  8290  1641  00F4               	movwf	time_write_1@time_tx
  8291  1642                     l2628:	
  8292                           
  8293                           ;clock_src.c: 116: void time_write_1(unsigned char time_tx);clock_src.c: 117: {;clock_sr
      +                          c.c: 118:     int j;;clock_src.c: 119:     for(j=0;j<8;j++)
  8294  1642  01F2               	clrf	time_write_1@j
  8295  1643  01F3               	clrf	time_write_1@j+1
  8296  1644                     l334:	
  8297                           
  8298                           ;clock_src.c: 120:    {;clock_src.c: 121:         RB4=0;
  8299  1644  1283               	bcf	3,5	;RP0=0, select bank0
  8300  1645  1303               	bcf	3,6	;RP1=0, select bank0
  8301  1646  1206               	bcf	6,4	;volatile
  8302                           
  8303                           ;clock_src.c: 122:         RB0=0;
  8304  1647  1006               	bcf	6,0	;volatile
  8305                           
  8306                           ;clock_src.c: 123:         if(time_tx&0x01)
  8307  1648  1C74               	btfss	time_write_1@time_tx,0
  8308  1649  2E4B               	goto	u1381
  8309  164A  2E4C               	goto	u1380
  8310  164B                     u1381:	
  8311  164B  2E4D               	goto	l2636
  8312  164C                     u1380:	
  8313  164C                     l2634:	
  8314                           
  8315                           ;clock_src.c: 124:           {;clock_src.c: 125:             RB4=1;
  8316  164C  1606               	bsf	6,4	;volatile
  8317  164D                     l2636:	
  8318                           
  8319                           ;clock_src.c: 127:         time_tx=time_tx>>1;
  8320  164D  0874               	movf	time_write_1@time_tx,w
  8321  164E  00F0               	movwf	??_time_write_1
  8322  164F  1003               	clrc
  8323  1650  0C70               	rrf	??_time_write_1,w
  8324  1651  00F1               	movwf	??_time_write_1+1
  8325  1652  0871               	movf	??_time_write_1+1,w
  8326  1653  00F4               	movwf	time_write_1@time_tx
  8327  1654                     l2638:	
  8328                           
  8329                           ;clock_src.c: 128:         RB0=1;
  8330  1654  1406               	bsf	6,0	;volatile
  8331  1655                     l2640:	
  8332                           
  8333                           ;clock_src.c: 129:     }
  8334  1655  3001               	movlw	1
  8335  1656  07F2               	addwf	time_write_1@j,f
  8336  1657  1803               	skipnc
  8337  1658  0AF3               	incf	time_write_1@j+1,f
  8338  1659  3000               	movlw	0
  8339  165A  07F3               	addwf	time_write_1@j+1,f
  8340  165B                     l2642:	
  8341  165B  0873               	movf	time_write_1@j+1,w
  8342  165C  3A80               	xorlw	128
  8343  165D  00FF               	movwf	btemp+1
  8344  165E  3080               	movlw	128
  8345  165F  027F               	subwf	btemp+1,w
  8346  1660  1D03               	skipz
  8347  1661  2E64               	goto	u1395
  8348  1662  3008               	movlw	8
  8349  1663  0272               	subwf	time_write_1@j,w
  8350  1664                     u1395:	
  8351  1664  1C03               	skipc
  8352  1665  2E67               	goto	u1391
  8353  1666  2E68               	goto	u1390
  8354  1667                     u1391:	
  8355  1667  2E44               	goto	l334
  8356  1668                     u1390:	
  8357  1668                     l335:	
  8358                           
  8359                           ;clock_src.c: 130:       RB0=0;
  8360  1668  1283               	bcf	3,5	;RP0=0, select bank0
  8361  1669  1303               	bcf	3,6	;RP1=0, select bank0
  8362  166A  1006               	bcf	6,0	;volatile
  8363  166B                     l337:	
  8364  166B  0008               	return
  8365  166C                     __end_of_time_write_1:	
  8366                           
  8367                           	psect	text36
  8368  1697                     __ptext36:	
  8369 ;; *************** function _incrementor *****************
  8370 ;; Defined at:
  8371 ;;		line 10 in file "math_src.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  upper_val       2    0[BANK0 ] int 
  8374 ;;  lower_val       2    2[BANK0 ] int 
  8375 ;;  z               1    4[BANK0 ] unsigned char 
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      unsigned char 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0, pclath, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8387 ;;      Params:         0       5       0       0       0
  8388 ;;      Locals:         0       0       0       0       0
  8389 ;;      Temps:          2       0       0       0       0
  8390 ;;      Totals:         2       5       0       0       0
  8391 ;;Total ram usage:        7 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; Hardware stack levels required when called:    2
  8394 ;; This function calls:
  8395 ;;		_modulus_func
  8396 ;; This function is called by:
  8397 ;;		_thermometer_threshhold_settings
  8398 ;;		_time_settings
  8399 ;;		_date_settings
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           
  8404                           ;psect for function _incrementor
  8405  1697                     _incrementor:	
  8406  1697                     l2838:	
  8407                           ;incstack = 0
  8408                           ; Regs used in _incrementor: [wreg+status,2+status,0+pclath+cstack]
  8409                           
  8410                           
  8411                           ;math_src.c: 11:      if(z == (lower_val + '0')){
  8412  1697  1283               	bcf	3,5	;RP0=0, select bank0
  8413  1698  1303               	bcf	3,6	;RP1=0, select bank0
  8414  1699  0855               	movf	incrementor@lower_val,w
  8415  169A  3E30               	addlw	48
  8416  169B  00FB               	movwf	??_incrementor
  8417  169C  0856               	movf	incrementor@lower_val+1,w
  8418  169D  1803               	skipnc
  8419  169E  3E01               	addlw	1
  8420  169F  3E00               	addlw	0
  8421  16A0  00FC               	movwf	??_incrementor+1
  8422  16A1  0857               	movf	incrementor@z,w
  8423  16A2  067B               	xorwf	??_incrementor,w
  8424  16A3  047C               	iorwf	??_incrementor+1,w
  8425  16A4  1D03               	skipz
  8426  16A5  2EA7               	goto	u1511
  8427  16A6  2EA8               	goto	u1510
  8428  16A7                     u1511:	
  8429  16A7  2EC1               	goto	l2844
  8430  16A8                     u1510:	
  8431  16A8                     l2840:	
  8432                           
  8433                           ;math_src.c: 12:      upper_val++;
  8434  16A8  3001               	movlw	1
  8435  16A9  07D3               	addwf	incrementor@upper_val,f
  8436  16AA  1803               	skipnc
  8437  16AB  0AD4               	incf	incrementor@upper_val+1,f
  8438  16AC  3000               	movlw	0
  8439  16AD  07D4               	addwf	incrementor@upper_val+1,f
  8440  16AE                     l2842:	
  8441                           
  8442                           ;math_src.c: 13:      upper_val =(modulus_func(upper_val,10));
  8443  16AE  0854               	movf	incrementor@upper_val+1,w
  8444  16AF  00F8               	movwf	modulus_func@x+1
  8445  16B0  0853               	movf	incrementor@upper_val,w
  8446  16B1  00F7               	movwf	modulus_func@x
  8447  16B2  300A               	movlw	10
  8448  16B3  00F9               	movwf	modulus_func@y
  8449  16B4  3000               	movlw	0
  8450  16B5  00FA               	movwf	modulus_func@y+1
  8451  16B6  160A  118A  24FB  160A  118A  	fcall	_modulus_func
  8452  16BB  0878               	movf	?_modulus_func+1,w
  8453  16BC  1283               	bcf	3,5	;RP0=0, select bank0
  8454  16BD  1303               	bcf	3,6	;RP1=0, select bank0
  8455  16BE  00D4               	movwf	incrementor@upper_val+1
  8456  16BF  0877               	movf	?_modulus_func,w
  8457  16C0  00D3               	movwf	incrementor@upper_val
  8458  16C1                     l2844:	
  8459                           
  8460                           ;math_src.c: 15:      return upper_val;
  8461  16C1  0853               	movf	incrementor@upper_val,w
  8462  16C2                     l568:	
  8463  16C2  0008               	return
  8464  16C3                     __end_of_incrementor:	
  8465                           
  8466                           	psect	text37
  8467  14FB                     __ptext37:	
  8468 ;; *************** function _modulus_func *****************
  8469 ;; Defined at:
  8470 ;;		line 5 in file "math_src.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  x               2    7[COMMON] int 
  8473 ;;  y               2    9[COMMON] int 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  2    7[COMMON] int 
  8478 ;; Registers used:
  8479 ;;		wreg, status,2, status,0, pclath, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8485 ;;      Params:         4       0       0       0       0
  8486 ;;      Locals:         0       0       0       0       0
  8487 ;;      Temps:          0       0       0       0       0
  8488 ;;      Totals:         4       0       0       0       0
  8489 ;;Total ram usage:        4 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    1
  8492 ;; This function calls:
  8493 ;;		___awmod
  8494 ;; This function is called by:
  8495 ;;		_main
  8496 ;;		_thermometer_threshhold_settings
  8497 ;;		_time_settings
  8498 ;;		_date_settings
  8499 ;;		_incrementor
  8500 ;;		_decrementor
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           
  8505                           ;psect for function _modulus_func
  8506  14FB                     _modulus_func:	
  8507  14FB                     l2606:	
  8508                           ;incstack = 0
  8509                           ; Regs used in _modulus_func: [wreg+status,2+status,0+pclath+cstack]
  8510                           
  8511                           
  8512                           ;math_src.c: 6:     x = x % y;
  8513  14FB  087A               	movf	modulus_func@y+1,w
  8514  14FC  00F1               	movwf	___awmod@divisor+1
  8515  14FD  0879               	movf	modulus_func@y,w
  8516  14FE  00F0               	movwf	___awmod@divisor
  8517  14FF  0878               	movf	modulus_func@x+1,w
  8518  1500  00F3               	movwf	___awmod@dividend+1
  8519  1501  0877               	movf	modulus_func@x,w
  8520  1502  00F2               	movwf	___awmod@dividend
  8521  1503  120A  158A  210F  160A  118A  	fcall	___awmod
  8522  1508  0871               	movf	?___awmod+1,w
  8523  1509  00F8               	movwf	modulus_func@x+1
  8524  150A  0870               	movf	?___awmod,w
  8525  150B  00F7               	movwf	modulus_func@x
  8526  150C                     l2608:	
  8527  150C                     l564:	
  8528                           ;math_src.c: 7:     return x;
  8529                           
  8530  150C  0008               	return
  8531  150D                     __end_of_modulus_func:	
  8532                           
  8533                           	psect	text38
  8534  090F                     __ptext38:	
  8535 ;; *************** function ___awmod *****************
  8536 ;; Defined at:
  8537 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  divisor         2    0[COMMON] int 
  8540 ;;  dividend        2    2[COMMON] int 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  sign            1    6[COMMON] unsigned char 
  8543 ;;  counter         1    5[COMMON] unsigned char 
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  2    0[COMMON] int 
  8546 ;; Registers used:
  8547 ;;		wreg, status,2, status,0
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8553 ;;      Params:         4       0       0       0       0
  8554 ;;      Locals:         2       0       0       0       0
  8555 ;;      Temps:          1       0       0       0       0
  8556 ;;      Totals:         7       0       0       0       0
  8557 ;;Total ram usage:        7 bytes
  8558 ;; Hardware stack levels used:    1
  8559 ;; This function calls:
  8560 ;;		Nothing
  8561 ;; This function is called by:
  8562 ;;		_get_temp
  8563 ;;		_modulus_func
  8564 ;; This function uses a non-reentrant model
  8565 ;;
  8566                           
  8567                           
  8568                           ;psect for function ___awmod
  8569  090F                     ___awmod:	
  8570  090F                     l2568:	
  8571                           ;incstack = 0
  8572                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8573                           
  8574  090F  01F6               	clrf	___awmod@sign
  8575  0910                     l2570:	
  8576  0910  1FF3               	btfss	___awmod@dividend+1,7
  8577  0911  2913               	goto	u1261
  8578  0912  2914               	goto	u1260
  8579  0913                     u1261:	
  8580  0913  291B               	goto	l2576
  8581  0914                     u1260:	
  8582  0914                     l2572:	
  8583  0914  09F2               	comf	___awmod@dividend,f
  8584  0915  09F3               	comf	___awmod@dividend+1,f
  8585  0916  0AF2               	incf	___awmod@dividend,f
  8586  0917  1903               	skipnz
  8587  0918  0AF3               	incf	___awmod@dividend+1,f
  8588  0919                     l2574:	
  8589  0919  01F6               	clrf	___awmod@sign
  8590  091A  0AF6               	incf	___awmod@sign,f
  8591  091B                     l2576:	
  8592  091B  1FF1               	btfss	___awmod@divisor+1,7
  8593  091C  291E               	goto	u1271
  8594  091D  291F               	goto	u1270
  8595  091E                     u1271:	
  8596  091E  2924               	goto	l2580
  8597  091F                     u1270:	
  8598  091F                     l2578:	
  8599  091F  09F0               	comf	___awmod@divisor,f
  8600  0920  09F1               	comf	___awmod@divisor+1,f
  8601  0921  0AF0               	incf	___awmod@divisor,f
  8602  0922  1903               	skipnz
  8603  0923  0AF1               	incf	___awmod@divisor+1,f
  8604  0924                     l2580:	
  8605  0924  0870               	movf	___awmod@divisor,w
  8606  0925  0471               	iorwf	___awmod@divisor+1,w
  8607  0926  1903               	btfsc	3,2
  8608  0927  2929               	goto	u1281
  8609  0928  292A               	goto	u1280
  8610  0929                     u1281:	
  8611  0929  2959               	goto	l2598
  8612  092A                     u1280:	
  8613  092A                     l2582:	
  8614  092A  01F5               	clrf	___awmod@counter
  8615  092B  0AF5               	incf	___awmod@counter,f
  8616  092C  2938               	goto	l2588
  8617  092D                     l2584:	
  8618  092D  3001               	movlw	1
  8619  092E                     u1295:	
  8620  092E  1003               	clrc
  8621  092F  0DF0               	rlf	___awmod@divisor,f
  8622  0930  0DF1               	rlf	___awmod@divisor+1,f
  8623  0931  3EFF               	addlw	-1
  8624  0932  1D03               	skipz
  8625  0933  292E               	goto	u1295
  8626  0934                     l2586:	
  8627  0934  3001               	movlw	1
  8628  0935  00F4               	movwf	??___awmod
  8629  0936  0874               	movf	??___awmod,w
  8630  0937  07F5               	addwf	___awmod@counter,f
  8631  0938                     l2588:	
  8632  0938  1FF1               	btfss	___awmod@divisor+1,7
  8633  0939  293B               	goto	u1301
  8634  093A  293C               	goto	u1300
  8635  093B                     u1301:	
  8636  093B  292D               	goto	l2584
  8637  093C                     u1300:	
  8638  093C                     l2590:	
  8639  093C  0871               	movf	___awmod@divisor+1,w
  8640  093D  0273               	subwf	___awmod@dividend+1,w
  8641  093E  1D03               	skipz
  8642  093F  2942               	goto	u1315
  8643  0940  0870               	movf	___awmod@divisor,w
  8644  0941  0272               	subwf	___awmod@dividend,w
  8645  0942                     u1315:	
  8646  0942  1C03               	skipc
  8647  0943  2945               	goto	u1311
  8648  0944  2946               	goto	u1310
  8649  0945                     u1311:	
  8650  0945  294C               	goto	l2594
  8651  0946                     u1310:	
  8652  0946                     l2592:	
  8653  0946  0870               	movf	___awmod@divisor,w
  8654  0947  02F2               	subwf	___awmod@dividend,f
  8655  0948  0871               	movf	___awmod@divisor+1,w
  8656  0949  1C03               	skipc
  8657  094A  03F3               	decf	___awmod@dividend+1,f
  8658  094B  02F3               	subwf	___awmod@dividend+1,f
  8659  094C                     l2594:	
  8660  094C  3001               	movlw	1
  8661  094D                     u1325:	
  8662  094D  1003               	clrc
  8663  094E  0CF1               	rrf	___awmod@divisor+1,f
  8664  094F  0CF0               	rrf	___awmod@divisor,f
  8665  0950  3EFF               	addlw	-1
  8666  0951  1D03               	skipz
  8667  0952  294D               	goto	u1325
  8668  0953                     l2596:	
  8669  0953  3001               	movlw	1
  8670  0954  02F5               	subwf	___awmod@counter,f
  8671  0955  1D03               	btfss	3,2
  8672  0956  2958               	goto	u1331
  8673  0957  2959               	goto	u1330
  8674  0958                     u1331:	
  8675  0958  293C               	goto	l2590
  8676  0959                     u1330:	
  8677  0959                     l2598:	
  8678  0959  0876               	movf	___awmod@sign,w
  8679  095A  1903               	btfsc	3,2
  8680  095B  295D               	goto	u1341
  8681  095C  295E               	goto	u1340
  8682  095D                     u1341:	
  8683  095D  2963               	goto	l2602
  8684  095E                     u1340:	
  8685  095E                     l2600:	
  8686  095E  09F2               	comf	___awmod@dividend,f
  8687  095F  09F3               	comf	___awmod@dividend+1,f
  8688  0960  0AF2               	incf	___awmod@dividend,f
  8689  0961  1903               	skipnz
  8690  0962  0AF3               	incf	___awmod@dividend+1,f
  8691  0963                     l2602:	
  8692  0963  0873               	movf	___awmod@dividend+1,w
  8693  0964  00F1               	movwf	?___awmod+1
  8694  0965  0872               	movf	___awmod@dividend,w
  8695  0966  00F0               	movwf	?___awmod
  8696  0967                     l908:	
  8697  0967  0008               	return
  8698  0968                     __end_of___awmod:	
  8699                           
  8700                           	psect	text39
  8701  156B                     __ptext39:	
  8702 ;; *************** function _button_delay *****************
  8703 ;; Defined at:
  8704 ;;		line 516 in file "Button_src.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;		None
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  i               2    0[COMMON] int 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      void 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, btemp+1
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8718 ;;      Params:         0       0       0       0       0
  8719 ;;      Locals:         2       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0
  8721 ;;      Totals:         2       0       0       0       0
  8722 ;;Total ram usage:        2 bytes
  8723 ;; Hardware stack levels used:    1
  8724 ;; This function calls:
  8725 ;;		Nothing
  8726 ;; This function is called by:
  8727 ;;		_set_beep_threshhold
  8728 ;;		_thermometer_threshhold_settings
  8729 ;;		_time_settings
  8730 ;;		_date_settings
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           
  8735                           ;psect for function _button_delay
  8736  156B                     _button_delay:	
  8737  156B                     l2828:	
  8738                           ;incstack = 0
  8739                           ; Regs used in _button_delay: [wreg+status,2+btemp+1]
  8740                           
  8741                           
  8742                           ;Button_src.c: 517:     for(int i=0;i<10000;i++);
  8743  156B  01F0               	clrf	button_delay@i
  8744  156C  01F1               	clrf	button_delay@i+1
  8745  156D                     l2834:	
  8746  156D  3001               	movlw	1
  8747  156E  07F0               	addwf	button_delay@i,f
  8748  156F  1803               	skipnc
  8749  1570  0AF1               	incf	button_delay@i+1,f
  8750  1571  3000               	movlw	0
  8751  1572  07F1               	addwf	button_delay@i+1,f
  8752  1573                     l2836:	
  8753  1573  0871               	movf	button_delay@i+1,w
  8754  1574  3A80               	xorlw	128
  8755  1575  00FF               	movwf	btemp+1
  8756  1576  30A7               	movlw	167
  8757  1577  027F               	subwf	btemp+1,w
  8758  1578  1D03               	skipz
  8759  1579  2D7C               	goto	u1505
  8760  157A  3010               	movlw	16
  8761  157B  0270               	subwf	button_delay@i,w
  8762  157C                     u1505:	
  8763  157C  1C03               	skipc
  8764  157D  2D7F               	goto	u1501
  8765  157E  2D80               	goto	u1500
  8766  157F                     u1501:	
  8767  157F  2D6D               	goto	l2834
  8768  1580                     u1500:	
  8769  1580                     l561:	
  8770  1580  0008               	return
  8771  1581                     __end_of_button_delay:	
  8772  007E                     btemp	set	126	;btemp
  8773  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _decrementor->_modulus_func
    _set_upper_threshold->_write_char
    _set_lower_threshold->_write_char
    _set_beep_threshhold->_button_delay
    _lcd_init->_write_cmd
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_write_char
    _display_day->_write_char
    _display_date->_write_char
    _display_clock->_write_char
    _date_settings->_incrementor
    _write_cmd->_delay_screen
    _write_char->_delay_screen
    _set_time->_time_write_1
    _incrementor->_modulus_func
    _modulus_func->___awmod

Critical Paths under _main in BANK0

    _main->_thermometer_threshhold_settings
    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _date_settings->_incrementor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   38638
                                             10 BANK0      2     2      0
                      _date_settings
                      _display_clock
                       _display_date
                        _display_day
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                 _initialise_buttons
                           _lcd_init
                       _modulus_func
                        _reset_alarm
                _set_beep_threshhold
                _set_lower_threshold
                           _set_time
                _set_upper_threshold
    _thermometer_threshhold_settings
                      _time_settings
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _time_settings                                        3     3      0   10206
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _thermometer_threshhold_settings                      5     5      0    9477
                                              5 BANK0      5     5      0
                       _button_delay
                        _decrementor
                        _incrementor
                       _modulus_func
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _decrementor                                          7     2      5    2809
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (1) _set_upper_threshold                                  6     2      4     264
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_lower_threshold                                  6     2      4     286
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_beep_threshhold                                  1     1      0      68
                                              2 COMMON     1     1      0
                       _button_delay
 ---------------------------------------------------------------------------------
 (1) _reset_alarm                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _initialise_buttons                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    3882
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0      68
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_day                                          2     0      2     320
                                              3 COMMON     2     0      2
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _date_settings                                        3     3      0   10206
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _time_date_hex_terminator                             4     3      1     295
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _time_date_delimiter                                  5     3      2    3130
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (3) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _incrementor                                          7     2      5    3949
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (2) _modulus_func                                         4     0      4    2491
                                              7 COMMON     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _button_delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _date_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _display_clock
     _write_char
       _delay_screen
   _display_date
     _write_char
       _delay_screen
   _display_day
     _write_char
       _delay_screen
   _display_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _initialise_buttons
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _modulus_func
     ___awmod
   _reset_alarm
   _set_beep_threshhold
     _button_delay
   _set_lower_threshold
     _write_char
       _delay_screen
   _set_time
     _time_write_1
   _set_upper_threshold
     _write_char
       _delay_screen
   _thermometer_threshhold_settings
     _button_delay
     _decrementor
       _modulus_func
         ___awmod
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _time_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      55      12        0.0%
ABS                  0      0      55       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 04 04:38:32 2019

                                       _a 0048                                         _b 0047  
                                       _c 0046                                         _t 0039  
                                       _w 0037                                         _x 0035  
                                       _y 0033                                         _z 0031  
                                       pc 0002              set_lower_threshold@lower_val 0075  
                            ?_display_day 0073                                        _TX 004F  
                                      _TZ 0050                              ___awdiv@sign 0076  
                                      _ge 004D                                        _wd 003B  
                                      fsr 0004         __size_of_time_date_hex_terminator 0012  
               ?_time_date_hex_terminator 0070                       _set_beep_threshhold 15F6  
                           ?_display_date 0070                                       l161 15DC  
                                     l313 156A                                       l322 1719  
                                     l331 0B1A                                       l323 171C  
                                     l155 14E9                                       l164 15F5  
                                     l252 17C9                                       l340 1723  
                                     l317 16EB                                       l341 174A  
                                     l245 14D0                                       l334 1644  
                                     l318 16EE                                       l174 1596  
                                     l270 17C5                                       l262 0840  
                                     l158 1640                                       l335 1668  
                                     l327 0A74                                       l343 1751  
                                     l511 0D88                                       l248 1696  
                                     l256 17FF                                       l520 0FF1  
                                     l337 166B                                       l281 1520  
                                     l409 1618                                       l290 15AC  
                                     l514 0F37                                       l507 1542  
                                     l285 1530                                       l517 0FFF  
                                     l533 02C3                                       l550 068F  
                                     l542 03E3                                       l278 0C48  
                                     l534 03D2                                       l551 07E5  
                                     l519 0FA8                                       l527 00F5  
                                     l640 14FA                                       l536 035E  
                                     l561 1580                                       l564 150C  
                                     l580 151E                                       l636 090E  
                                     l628 087E                                       l572 002F  
                                     l568 16C2                                       l576 15C3  
                                     l656 00E4                                       l908 0967  
                                     l895 09CE                                       _RA0 0028  
                                     _RA2 002A                                       _RB0 0030  
                                     _RA3 002B                                       _RB1 0031  
                                     _RA4 002C                                       _RC0 0038  
                                     _RA5 002D                                       _RC1 0039  
                                     _RB4 0034                                       _RC2 003A  
                                     _RB5 0035                                       _RC3 003B  
                                     _RE0 0048                                       _RC4 003C  
                                     _RE2 004A                                       _RC6 003E  
                                     _RC7 003F                                       _THV 0051  
                           ?_display_temp 0070                                       _TLV 0052  
                                     _shi 004E                                       fsr0 0004  
                                     indf 0000                              ___awmod@sign 0076  
                            __CFG_FOSC$HS 0000                           ??_time_settings 0058  
                            __CFG_LVP$OFF 0000              set_lower_threshold@upper_val 0073  
                                    l1014 08C2                                      l1024 178B  
                                    l3000 1634                                      l3010 153B  
                                    l3002 163A                                      l3100 0AA9  
                                    l3020 0B2E                                      l3012 153C  
                                    l3004 1531                                      l3110 0AD4  
                                    l3102 0AB0                                      l3030 0B4F  
                                    l3022 0B34                                      l3014 0B1B  
                                    l3006 1537                                      l3120 0B02  
                                    l3112 0ADE                                      l3104 0AB6  
                                    l3040 0B83                                      l3032 0B59  
                                    l3024 0B39                                      l3016 0B1E  
                                    l3008 153A                                      l3200 0E92  
                                    l3130 09DD                                      l3122 0B09  
                                    l3114 0AE5                                      l3106 0AC0  
                                    l3050 0BC1                                      l3042 0BAF  
                                    l3034 0B5C                                      l3026 0B3F  
                                    l3018 0B29                                      l3210 0EDA  
                                    l3202 0E99                                      l3300 03D3  
                                    l3140 0A0A                                      l3132 09E5  
                                    l3124 0B13                                      l3116 0AEB  
                                    l3108 0ACD                                      l3060 0BE1  
                                    l3052 0BC9                                      l3044 0BB1  
                                    l3036 0B76                                      l3028 0B45  
                                    l3220 0EEC                                      l3212 0EDE  
                                    l3204 0EAF                                      l3310 043C  
                                    l3302 03DD                                      l3150 0A38  
                                    l3142 0A10                                      l3134 09F2  
                                    l3126 09CF                                      l3118 0AF5  
                                    l3062 0BF4                                      l3054 0BCD  
                                    l3046 0BB5                                      l3070 16EF  
                                    l3230 0F05                                      l3222 0EED  
                                    l3206 0EB6                                      l3214 0EE7  
                                    l2600 095E                                      l3400 0609  
                                    l3320 0451                                      l3312 043D  
                                    l3304 0437                                      l3160 0A63  
                                    l3152 0A3F                                      l3144 0A1A  
                                    l3136 09F9                                      l3128 09D5  
                                    l3064 0C14                                      l3056 0BD5  
                                    l3048 0BBD                                      l3080 16FA  
                                    l3072 16F2                                      l3232 0F0B  
                                    l3224 0EF1                                      l3216 0EEA  
                                    l3208 0EBF                                      l2602 0963  
                                    l3410 0668                                      l3402 061C  
                                    l3330 0499                                      l3322 0464  
                                    l3314 0441                                      l3306 043A  
                                    l3162 0A6D                                      l3154 0A45  
                                    l3146 0A27                                      l3138 0A03  
                                    l3090 0A7B                                      l3066 0C34  
                                    l3058 0BD9                                      l3082 1706  
                                    l3074 16F8                                      l3250 0F45  
                                    l3234 0F11                                      l3226 0EF9  
                                    l3218 0EEB                                      l3170 0E6F  
                                    l2620 1589                                      l2612 1581  
                                    l3500 0776                                      l3420 0674  
                                    l3412 066E                                      l3404 062F  
                                    l3340 04B2                                      l3332 049D  
                                    l3324 047D                                      l3316 0447  
                                    l3308 043B                                      l3156 0A4F  
                                    l3148 0A2E                                      l3092 0A83  
                                    l2700 0807                                      l3068 0C47  
                                    l3084 170C                                      l3260 0F7A  
                                    l3252 0F4D                                      l3244 0F21  
                                    l3236 0F17                                      l3228 0EFF  
                                    l3180 0E76                                      l3172 0E70  
                                    l3164 0D78                                      l2606 14FB  
                                    l3510 07A0                                      l3502 0782  
                                    l3430 0693                                      l3422 0678  
                                    l3414 0671                                      l3406 0642  
                                    l3350 04FA                                      l3342 04B8  
                                    l3326 048C                                      l3318 044B  
                                    l3334 04A2                                      l3158 0A5C  
                                    l3094 0A8B                                      l3086 166C  
                                    l2622 1520                                      l2710 0813  
                                    l3270 0FB8                                      l3262 0F95  
                                    l3254 0F54                                      l3246 0F29  
                                    l3238 0F1D                                      l3190 0E7E  
                                    l3182 0E78                                      l3174 0E71  
                                    l3166 0D82                                      l2608 150C  
                                    l2640 1655                                      l3520 07CA  
                                    l3512 07A9                                      l3504 0788  
                                    l3440 06E0                                      l3432 06A6  
                                    l3424 0683                                      l3416 0672  
                                    l3408 0655                                      l3360 0516  
                                    l3352 0501                                      l3344 04CB  
                                    l3336 04A8                                      l3328 0492  
                                    l3096 0A98                                      l3088 0A75  
                                    l2800 1599                                      l2624 1524  
                                    l2720 081A                                      l2712 0816  
                                    l3280 0FC7                                      l3272 0FB9  
                                    l3264 0FA4                                      l3256 0F6A  
                                    l3248 0F3F                                      l3192 0E7F  
                                    l3184 0E7A                                      l3176 0E72  
                                    l3168 0E6C                                      l3600 0244  
                                    l2570 0910                                      l2642 165B  
                                    l2634 164C                                      l2618 1583  
                                    l3530 07D4                                      l3522 07CD  
                                    l3514 07B2                                      l3506 0791  
                                    l3450 06F1                                      l3434 06AA  
                                    l3442 06ED                                      l3426 0689  
                                    l3418 0673                                      l3370 0552  
                                    l3362 051A                                      l3354 0505  
                                    l3346 04E4                                      l3338 04AE  
                                    l3098 0A9F                                      l2802 159F  
                                    l2626 152A                                      l2730 0830  
                                    l2722 081B                                      l2714 0817  
                                    l2706 080B                                      l3290 0FE5  
                                    l3282 0FCD                                      l3274 0FBA  
                                    l3266 0FB0                                      l3258 0F71  
                                    l3194 0E80                                      l3186 0E7C  
                                    l3178 0E74                                      l3610 02A3  
                                    l3602 0257                                      l2580 0924  
                                    l2572 0914                                      l2636 164D  
                                    l2628 1642                                      l2644 16C3  
                                    l2660 15DE                                      l3532 07DF  
                                    l3524 07CE                                      l3516 07B8  
                                    l3508 079A                                      l3460 070C  
                                    l3452 06F5                                      l3444 06EE  
                                    l3436 06B0                                      l3380 0569  
                                    l3372 0553                                      l3364 0520  
                                    l3348 04F3                                      l3356 050A  
                                    l2900 0997                                      l2740 178C  
                                    l2732 0831                                      l2724 0820  
                                    l2716 0818                                      l2708 0810  
                                    l2820 1737                                      l2812 1726  
                                    l2804 171D                                      l3292 0FEB  
                                    l3284 0FD3                                      l3276 0FBB  
                                    l3268 0FB5                                      l3196 0E84  
                                    l3188 0E7D                                      l3700 03CC  
                                    l3620 02AB                                      l3612 02A4  
                                    l3604 026A                                      l3540 014C  
                                    l2590 093C                                      l2582 092A  
                                    l2574 0919                                      l2638 1654  
                                    l2654 16CE                                      l2646 16C6  
                                    l2670 15F2                                      l2662 15E3  
                                    l3526 07CF                                      l3518 07C1  
                                    l3470 072A                                      l3462 0712  
                                    l3454 06FB                                      l3446 06EF  
                                    l3438 06DA                                      l3390 05AA  
                                    l3382 056D                                      l3374 055A  
                                    l3366 0533                                      l3358 0510  
                                    l2910 09BA                                      l2902 099B  
                                    l2750 1793                                      l2742 178D  
                                    l2734 0832                                      l2726 0823  
                                    l2718 0819                                      l2822 173D  
                                    l2814 172D                                      l2806 171E  
                                    l3710 08F6                                      l3702 08C3  
                                    l3286 0FD9                                      l3278 0FBF  
                                    l3198 0E8A                                      l3630 02B9  
                                    l3622 02B1                                      l3614 02A5  
                                    l3606 027D                                      l3550 0159  
                                    l3542 014D                                      l3534 00E5  
                                    l2592 0946                                      l2584 092D  
                                    l2576 091B                                      l2568 090F  
                                    l2840 16A8                                      l2656 16D8  
                                    l2648 16CC                                      l2680 15D4  
                                    l2672 15C5                                      l2664 15E8  
                                    l3528 07D0                                      l3480 073A  
                                    l3464 0718                                      l3456 0701  
                                    l3472 0736                                      l3448 06F0  
                                    l3392 05BD                                      l3384 0571  
                                    l3376 055E                                      l3368 054C  
                                    l2904 09AC                                      l2912 09C0  
                                    l2920 087F                                      l2760 179C  
                                    l2752 1796                                      l2736 0839  
                                    l2728 082D                                      l2824 1750  
                                    l2816 1731                                      l3712 08FC  
                                    l3704 08D2                                      l3720 0850  
                                    l3296 0FF9                                      l3288 0FDF  
                                    l3640 02DA                                      l3632 02BB  
                                    l3624 02B4                                      l3616 02A6  
                                    l3608 0290                                      l3560 019E  
                                    l3552 015D                                      l3544 014E  
                                    l3536 00EF                                      l3800 0C80  
                                    l2834 156D                                      l2594 094C  
                                    l2586 0934                                      l2578 091F  
                                    l2842 16AE                                      l2658 16DE  
                                    l2682 15D9                                      l2674 15CA  
                                    l2666 15EB                                      l3490 0758  
                                    l3482 073E                                      l3474 0737  
                                    l3466 071E                                      l3458 0706  
                                    l3394 05D0                                      l3386 0584  
                                    l3378 0563                                      l2914 09C5  
                                    l2906 09B2                                      l2930 0895  
                                    l2922 0881                                      l2770 17A3  
                                    l2762 179D                                      l2754 1799  
                                    l2690 17E6                                      l2738 083B  
                                    l2818 1736                                      l3730 1600  
                                    l3714 0902                                      l3706 08DD  
                                    l3722 085D                                      l2850 0015  
                                    l3642 02DE                                      l3650 031B  
                                    l3634 02BD                                      l3626 02B5  
                                    l3618 02A7                                      l3570 01BB  
                                    l3562 01A5                                      l3554 0163  
                                    l3546 014F                                      l3538 0149  
                                    l3810 0C9E                                      l3802 0C86  
                                    l2836 1573                                      l2828 156B  
                                    l2596 0953                                      l2588 0938  
                                    l2844 16C1                                      l2860 151C  
                                    l2676 15CF                                      l2668 15ED  
                                    l3492 075E                                      l3484 0745  
                                    l3476 0738                                      l3468 0724  
                                    l3396 05E3                                      l3388 0597  
                                    l2916 09CA                                      l2908 09B3  
                                    l2940 08B8                                      l2932 0899  
                                    l2924 0887                                      l2780 17AD  
                                    l2772 17A4                                      l2764 179E  
                                    l2756 179A                                      l2748 1791  
                                    l2692 17EC                                      l2684 17C6  
                                    l3732 1605                                      l3716 0908  
                                    l3708 08EC                                      l3724 0866  
                                    l2852 001B                                      l3660 0323  
                                    l3652 031C                                      l3644 02E4  
                                    l3628 02B7                                      l3580 01F7  
                                    l3572 01C1                                      l3564 01AC  
                                    l3556 0176                                      l3548 0153  
                                    l3820 0CBB                                      l3812 0CA3  
                                    l3804 0C8C                                      l2598 0959  
                                    l2838 1697                                      l2870 15C0  
                                    l2862 151D                                      l2678 15D2  
                                    l3494 0764                                      l3486 074A  
                                    l3478 0739                                      l3398 05F6  
                                    l3750 0036                                      l2934 08AA  
                                    l2926 088A                                      l2942 08BE  
                                    l2950 175B                                      l2790 17C4  
                                    l2782 17B2                                      l2774 17A5  
                                    l2766 179F                                      l2758 179B  
                                    l2694 17EF                                      l2686 17CF  
                                    l3742 14EA                                      l3734 160D  
                                    l3726 15F7                                      l3718 0841  
                                    l2854 002E                                      l3670 0340  
                                    l3662 0329                                      l3654 031D  
                                    l3646 0308                                      l3638 02C7  
                                    l3582 01FD                                      l3574 01C5  
                                    l3590 020E                                      l3566 01B0  
                                    l3558 018F                                      l3830 0CD8  
                                    l3822 0CC1                                      l3814 0CA9  
                                    l3806 0C92                                      l2872 15C2  
                                    l3496 076A                                      l3488 0752  
                                    l3760 006E                                      l3752 003C  
                                    l2880 096D                                      l2936 08B0  
                                    l2928 0891                                      l2960 177A  
                                    l2952 1762                                      l2784 17B3  
                                    l2776 17A6                                      l2768 17A2  
                                    l2696 17F0                                      l2688 17D9  
                                    l3744 14F4                                      l3728 15FD  
                                    l3736 1615                                      l2848 0004  
                                    l3680 0364                                      l3672 0346  
                                    l3664 032F                                      l3656 031E  
                                    l3648 030E                                      l3592 0214  
                                    l3584 01FE                                      l3576 01CB  
                                    l3568 01B5                                      l3840 0CF6  
                                    l3832 0CDE                                      l3824 0CC7  
                                    l3816 0CAF                                      l3808 0C98  
                                    l2866 15AE                                      l2858 150E  
                                    l3498 0770                                      l3770 00B2  
                                    l3762 0080                                      l3754 004E  
                                    l2970 1556                                      l2890 0981  
                                    l2882 0972                                      l2938 08B1  
                                    l2962 1781                                      l2954 1766  
                                    l2946 1752                                      l2794 1597  
                                    l2786 17BD                                      l2778 17A7  
                                    l2698 17FA                                      l3746 14F6  
                                    l3690 03BB                                      l3682 0367  
                                    l3674 034C                                      l3666 0334  
                                    l3658 031F                                      l3594 021A  
                                    l3586 0205                                      l3578 01DE  
                                    l3850 0D10                                      l3842 0CFB  
                                    l3834 0CE4                                      l3826 0CCD  
                                    l3818 0CB5                                      l2868 15BC  
                                    l3772 00B9                                      l3764 0087  
                                    l3756 0055                                      l3748 0030  
                                    l2972 155B                                      l2892 0983  
                                    l2884 0974                                      l2876 0968  
                                    l2956 176A                                      l2948 1758  
                                    l2964 1787                                      l2788 17BF  
                                    l2980 14E6                                      l3692 03BC  
                                    l3684 0368                                      l3676 0352  
                                    l3668 033A                                      l3596 021E  
                                    l3588 0209                                      l3852 0D1D  
                                    l3844 0D00                                      l3836 0CEA  
                                    l3828 0CD2                                      l3780 0C4D  
                                    l3774 00CB                                      l3766 0099  
                                    l3758 0067                                      l2974 1567  
                                    l2894 0989                                      l2886 0978  
                                    l2878 0969                                      l2958 1774  
                                    l2982 14E7                                      l2990 161F  
                                    l3694 03BD                                      l3686 0369  
                                    l3678 0358                                      l3598 0231  
                                    l3870 0D56                                      l3854 0D2A  
                                    l3846 0D05                                      l3838 0CF0  
                                    l3790 0C66                                      l3782 0C52  
                                    l3776 00D2                                      l3768 00A0  
                                    l2896 098C                                      l2888 097D  
                                    l2984 14E8                                      l2976 14E1  
                                    l2968 14CA                                      l2992 1624  
                                    l3696 03BE                                      l3688 03B8  
                                    l3872 0D6B                                      l3864 0D3B  
                                    l3856 0D32                                      l3848 0D0A  
                                    l3792 0C6B                                      l3784 0C57  
                                    l2898 0993                                      l2978 14E5  
                                    l2994 1627                                      l2986 1619  
                                    l3698 03C2                                      l3866 0D41  
                                    l3858 0D37                                      l3794 0C70  
                                    l3786 0C5C                                      l3778 0C49  
                                    l2996 1628                                      l2988 161C  
                                    l3868 0D49                                      l3796 0C75  
                                    l3788 0C61                                      l2998 162E  
                                    l3798 0C7A                            ?_display_clock 0070  
                                    u2000 0499                                      u2001 0498  
                                    u2010 04A8                                      u2011 04A7  
                                    u1300 093C                                      u2100 06AA  
                                    u2020 04AE                                      u1301 093B  
                                    u2101 06A9                                      u2021 04AD  
                                    u1310 0946                                      u2110 06B0  
                                    u2030 04FA                                      u1311 0945  
                                    u2111 06AF                                      u2031 04F9  
                                    u1400 16EB                                      u2120 06F5  
                                    u2040 0501                                      u2200 01A5  
                                    u1401 16EA                                      u2121 06F4  
                                    u2041 0500                                      u2201 01A4  
                                    u1330 0959                                      u2130 06FB  
                                    u2050 0510                                      u1410 17EC  
                                    u2210 01AC                                      u1331 0958  
                                    u1315 0942                                      u2131 06FA  
                                    u2051 050F                                      u1411 17EB  
                                    u2211 01AB                                      u1500 1580  
                                    u1340 095E                                      u1260 0914  
                                    u2140 073E                                      u2060 0516  
                                    u1420 17FF                                      u2300 0329  
                                    u2220 01BB                                      u1501 157F  
                                    u1341 095D                                      u1325 094D  
                                    u1261 0913                                      u1405 16E7  
                                    u2141 073D                                      u2061 0515  
                                    u1421 17FE                                      u2301 0328  
                                    u2221 01BA                                      u1270 091F  
                                    u1510 16A8                                      u1350 1596  
                                    u2150 0745                                      u2070 0552  
                                    u1430 0820                                      u2310 03C2  
                                    u2230 01C1                                      u1271 091E  
                                    u1511 16A7                                      u1351 1595  
                                    u2151 0744                                      u2071 0551  
                                    u1431 081F                                      u2311 03C1  
                                    u2231 01C0                                      u1280 092A  
                                    u2160 07D4                                      u2080 055A  
                                    u2400 0036                                      u1360 152A  
                                    u1440 0840                                      u2320 08D2  
                                    u1520 0015                                      u2240 01FD  
                                    u1505 157C                                      u1281 0929  
                                    u2161 07D3                                      u2081 0559  
                                    u2401 0035                                      u1361 1529  
                                    u1441 083F                                      u2321 08D1  
                                    u1521 0014                                      u2241 01FC  
                                    u1530 151C                                      u2090 0678  
                                    u2410 003C                                      u1610 09AC  
                                    u1370 1530                                      u1450 17B2  
                                    u2330 08DD                                      u2250 0205  
                                    u2170 00EF                                      u1531 151B  
                                    u1355 1592                                      u2091 0677  
                                    u2411 003B                                      u1611 09AB  
                                    u1371 152F                                      u1451 17B1  
                                    u2331 08DC                                      u2251 0204  
                                    u2171 00EE                                      u1380 164C  
                                    u1540 15BC                                      u2420 0055  
                                    u1460 17C4                                      u2340 08EC  
                                    u2260 02AB                                      u2180 0153  
                                    u1381 164B                                      u1541 15BB  
                                    u2421 0054                                      u1605 099C  
                                    u1461 17C3                                      u2341 08EB  
                                    u2325 08CE                                      u2261 02AA  
                                    u2181 0152                                      u1390 1668  
                                    u2430 006E                                      u1630 09C0  
                                    u1550 096D                                      u1710 08BE  
                                    u1470 15AC                                      u2350 0850  
                                    u2270 02DE                                      u2190 0159  
                                    u1295 092E                                      u1391 1667  
                                    u2431 006D                                      u1631 09BF  
                                    u1615 09A8                                      u1551 096C  
                                    u1711 08BD                                      u1471 15AB  
                                    u2335 08D9                                      u2351 084F  
                                    u2271 02DD                                      u2191 0158  
                                    u2440 0087                                      u1640 09C5  
                                    u1560 0978                                      u1720 1758  
                                    u1480 1731                                      u2360 085D  
                                    u2280 02E4                                      u2441 0086  
                                    u1641 09C4                                      u1625 09B4  
                                    u1561 0977                                      u1705 08B2  
                                    u1721 1757                                      u1481 1730  
                                    u2345 08E8                                      u2361 085C  
                                    u2281 02E3                                      u2450 00A0  
                                    u1570 0989                                      u1650 0887  
                                    u1810 0BB5                                      u1490 174A  
                                    u2370 0866                                      u2290 0323  
                                    u1395 1664                                      u2451 009F  
                                    u1571 0988                                      u1651 0886  
                                    u1475 15A8                                      u1811 0BB4  
                                    u1491 1749                                      u2371 0865  
                                    u2355 084C                                      u2291 0322  
                                    u2460 00B9                                      u1740 176A  
                                    u1820 0BC1                                      u2380 15FD  
                                    u1900 0EF1                                      u2461 00B8  
                                    u1741 1769                                      u1821 0BC0  
                                    u1805 0B79                                      u2381 15FC  
                                    u2365 0859                                      u1901 0EF0  
                                    u2470 00D2                                      u1590 099B  
                                    u1670 0899                                      u1750 1774  
                                    u1830 0BCD                                      u2390 14F4  
                                    u1910 0F36                                      u2471 00D1  
                                    u1591 099A                                      u1671 0898  
                                    u1751 1773                                      u1735 175C  
                                    u1831 0BCC                                      u1495 1746  
                                    u2391 14F3                                      u1911 0F35  
                                    u1840 0BD9                                      u1920 0F3F  
                                    u2480 0D56                                      u1585 098D  
                                    u1665 088B                                      u1841 0BD8  
                                    u1921 0F3E                                      u2481 0D55  
                                    u1690 08AA                                      u1770 1787  
                                    u1850 1719                                      u1930 0FA4  
                                    u1691 08A9                                      u1771 1786  
                                    u1755 1770                                      u1851 1718  
                                    u1931 0FA3                                      u1915 0F32  
                                    u1860 0A7B                                      u1940 0FBF  
                                    u1861 0A7A                                      u1685 089A  
                                    u1765 177B                                      u1941 0FBE  
                                    u2485 0D52                                      u1870 09D5  
                                    u1950 0FF9                                      u1871 09D4  
                                    u1695 08A6                                      u1855 1715  
                                    u1951 0FF8                                      u1960 03DD  
                                    u1880 0D82                                      u1961 03DC  
                                    u1785 0B61                                      u1881 0D81  
                                    u1970 0441                                      u1890 0E84  
                                    u1971 0440                                      u1795 0B6C  
                                    u1891 0E83                                      u1980 0447  
                                    u1981 0446                                      u1990 0492  
                                    u1991 0491               time_date_hex_terminator@val 0073  
                    ?_set_beep_threshhold 0070                                      _main 0C49  
                                    _init 14E1                                      _var1 003F  
                                    _var2 003E                                      btemp 007E  
         time_date_hex_terminator@limiter 0070                             write_byte@val 0077  
                                    start 0000                    time_date_delimiter@hex 0070  
                  time_date_delimiter@val 0074                              ?_incrementor 0053  
             __size_of_initialise_buttons 0012                            ??_display_date 0073  
                                   ?_main 0070                            ??_display_temp 0073  
                                   ?_init 0070                           __end_of___awdiv 09CF  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0968  
                         ___awdiv@divisor 0070                      __end_of_delay_screen 1597  
                         __end_of___lwdiv 08C3                           __end_of___lwmod 178C  
                         ___awdiv@counter 0075                                     _PORTD 0008  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                                   _TRISD 0088                                     _TRISE 0089  
                           __CFG_PWRTE$ON 0000                                     _count 0029  
                                   _table 005F                                     main@i 005D  
                          write_byte@temp 0076                       _set_lower_threshold 08C3  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                   ??_set_beep_threshhold 0072                                     status 0003  
                    __size_of_decrementor 002C                                     wtemp0 007E  
                           ??_ds1302_init 0075                           __initialization 07E6  
                            __end_of_main 0D78                              __end_of_init 14EA  
                   __end_of_date_settings 07E6                      ?_set_lower_threshold 0073  
                                  ??_main 007E                                    ??_init 0070  
                    incrementor@lower_val 0055                           ??_display_clock 0073  
                                  _ADCON1 009F                          ___awdiv@dividend 0072  
                                  _TRISA0 0428                                    _TRISB4 0434  
                                  _TRISE0 0448                             ?_button_delay 0070  
                            ?_reset_alarm 0070                      incrementor@upper_val 0053  
                        __end_of_lcd_init 1641                          __end_of_get_temp 0C49  
                        __end_of_get_time 171D                                    _baifen 004B  
                               ??___awdiv 0074                                 ??___awmod 0074  
                                  _delay2 1597                     ??_set_lower_threshold 0077  
                               ??___lwdiv 007A                                 ??___lwmod 0074  
                     __end_of_ds1302_init 156B                       _set_upper_threshold 0841  
                                  _table1 0020                          ___awdiv@quotient 0077  
                         ___awmod@divisor 0070                                    _shifen 004C  
                                  _wanfen 0049                           ___awmod@counter 0075  
                    __size_of_display_day 00B5                              ?_time_read_1 0070  
                     time_write_1@time_tx 0074                             display_date@i 0075  
                        __end_of_set_time 16EF                        reset_temp@presence 0075  
                    ?_set_upper_threshold 0073                   __end_of__initialization 07FC  
                          ??_button_delay 0070              __size_of_time_date_delimiter 0017  
                    __end_of_display_date 0B1B                      __end_of_display_temp 1697  
                          __pcstackCOMMON 0070                              __pidataBANK0 14D9  
                   __size_of_delay_screen 0016                      __size_of_incrementor 002C  
                   ??_set_upper_threshold 0077                                __pbssBANK0 0020  
                            _delay_screen 1581                        __size_of_init_temp 0007  
                      __size_of_read_byte 003A                               _ds1302_init 1556  
                              _delay_temp 151F                                __pmaintext 0C49  
                                 ?_delay2 0070                             ?_modulus_func 0077  
                      time_read_1@time_rx 0074                              incrementor@z 0057  
                               ?_lcd_init 0070                                 ?_get_temp 0070  
                   __end_of_time_settings 03D3                                 ?_get_time 0070  
                      __size_of_write_cmd 0019                                 ?_set_time 0070  
                    __size_of_reset_alarm 0011                            ??_modulus_func 007B  
            set_upper_threshold@lower_val 0075                __end_of_initialise_buttons 1543  
                _time_date_hex_terminator 150D                                   ___awdiv 0968  
                                 ___awmod 090F                           __size_of_delay2 0016  
                                 ___lwdiv 087F                                   ___lwmod 1752  
                                 _day_hex 0045                                   _day_low 002F  
                                 __ptext1 00E5                                   __ptext2 0D78  
                                 __ptext3 0004                                   __ptext4 0841  
                                 __ptext5 08C3                                   __ptext6 15F6  
                                 __ptext7 14EA                                   __ptext8 1619  
                                 __ptext9 1531                      __end_of_button_delay 1581  
                                 delay2@i 0070                         __end_of_init_temp 14D1  
                        ___awmod@dividend 0072                         __end_of_read_byte 17C6  
                                 _qianfen 004A                      __size_of_time_read_1 0035  
                                 _lower_t 0042               __end_of_set_beep_threshhold 1619  
            set_upper_threshold@upper_val 0073                     __size_of_display_date 00A6  
                                 clrloop0 14D2                                ??_lcd_init 0073  
                                 _upper_t 0043                             ??_decrementor 007B  
                              ??_get_temp 0053                                ??_get_time 0075  
                   __size_of_display_temp 002B                      end_of_initialization 07FC  
                          display_day@num 0073                            display_clock@i 0075  
                           ?_time_write_1 0070                               ?_delay_temp 0070  
                              _reset_temp 17C6                                ??_set_time 0075  
                     _time_date_delimiter 15AD                      decrementor@lower_val 0053  
                            _display_date 0A75                              _display_temp 166C  
                       __end_of_write_cmd 15F6                             modulus_func@x 0077  
                           modulus_func@y 0079                     __end_of_display_clock 0A75  
                  __size_of_date_settings 0413                      ?_time_date_delimiter 0070  
                    decrementor@upper_val 0055                            ??_time_write_1 0070  
             __end_of_set_lower_threshold 090F                       __end_of_decrementor 0030  
                           ??_display_day 0075                            __end_of_delay2 15AD  
                              _write_char 15C4                                _write_byte 0806  
                     start_initialization 07E6                             delay_screen@i 0070  
                     __size_of_delay_temp 0012                      __end_of_modulus_func 150D  
                   ??_time_date_delimiter 0072                              ?_ds1302_init 0070  
                             ?_reset_temp 0070                             ??_incrementor 007B  
                              init_fetch0 1543                                  ??_delay2 0070  
                   __size_of_button_delay 0016                             _date_settings 03D3  
                             __pdataBANK0 005F                                read_byte@i 0076  
                              read_byte@j 003D               __end_of_set_upper_threshold 087F  
                     __end_of_display_day 00E5                                 ___latbits 0002  
                           __pcstackBANK0 0053                               _decrementor 0004  
                    set_beep_threshhold@x 0072                         __size_of_lcd_init 0028  
                       __size_of_get_temp 012E                         __size_of_get_time 002E  
              ??_time_date_hex_terminator 0071                              _button_delay 156B  
                        ___lwdiv@dividend 0078                               _day_counter 0027  
                                ?___awdiv 0070                            ?_date_settings 0070  
                                ?___awmod 0070                                  ?___lwdiv 0076  
                                ?___lwmod 0070                         __size_of_set_time 002C  
                             ?_write_char 0070                               ?_write_byte 0070  
                     __end_of_incrementor 16C3                      __end_of_time_write_1 166C  
                      _initialise_buttons 1531                           _day_of_week_var 002B  
                     __size_of_reset_temp 003A                          ___lwdiv@quotient 007B  
                               _init_temp 14CA                                 _read_byte 178C  
                            decrementor@z 0057                       ?_initialise_buttons 0070  
                               clear_ram0 14D1                             ??_reset_alarm 0070  
                            ??_delay_temp 0071                               _display_day 0030  
 __end_of_thermometer_threshhold_settings 1000  __size_of_thermometer_threshhold_settings 0288  
       ??_thermometer_threshhold_settings 0058          ?_thermometer_threshhold_settings 0070  
         _thermometer_threshhold_settings 0D78                      ??_initialise_buttons 0070  
                  __size_of_time_settings 02EE          thermometer_threshhold_settings@i 005B  
                           ??_time_read_1 0070                               write_char@x 0072  
                   __size_of_modulus_func 0012                                 get_time@i 0076  
                             write_byte@i 0078                        __end_of_delay_temp 1531  
                               _write_cmd 15DD                                ?_init_temp 0070  
                              ?_read_byte 0070                           _buzzer_watcher1 0040  
                     __size_of_write_char 0019              __size_of_set_beep_threshhold 0023  
                     __size_of_write_byte 003B                           ??_date_settings 0058  
                    __size_of_ds1302_init 0015                               _incrementor 1697  
                            _modulus_func 14FB                       __end_of_reset_alarm 14FB  
                        __size_of___awdiv 0067                          __size_of___awmod 0059  
                        __size_of___lwdiv 0044                          __size_of___lwmod 003A  
                                _day_high 002D                           ___lwdiv@divisor 0076  
                         ___lwdiv@counter 007D                                  __ptext10 14CA  
                                __ptext11 14E1                                  __ptext20 1752  
                                __ptext12 16EF                                  __ptext21 087F  
                                __ptext13 171D                                  __ptext30 15C4  
                                __ptext22 0968                                  __ptext14 0B1B  
                                __ptext31 1581                                  __ptext23 1556  
                                __ptext15 0806                                  __ptext32 150D  
                                __ptext24 166C                                  __ptext16 17C6  
                                __ptext33 15AD                                  __ptext25 0030  
                                __ptext17 178C                                  __ptext34 16C3  
                                __ptext26 0A75                                  __ptext18 151F  
                                __ptext35 1641                                  __ptext27 09CF  
                                __ptext19 1597                                  __ptext36 1697  
                                __ptext28 03D3                                  __ptext37 14FB  
                                __ptext29 15DD                                  __ptext38 090F  
                                __ptext39 156B                       __end_of_time_read_1 1752  
                              ?_write_cmd 0070                                  _lcd_init 1619  
                                _get_temp 0B1B                                  _get_time 16EF  
                           _time_settings 00E5          __end_of_time_date_hex_terminator 151F  
                           __size_of_main 012F                             __size_of_init 0009  
                           ?_delay_screen 0070                               _hrs_limiter 0044  
                               set_time@i 0075                              ??_reset_temp 0074  
                                _set_time 16C3                time_date_delimiter@limiter 0071  
            __size_of_set_lower_threshold 004C                                write_cmd@x 0072  
                   __size_of_time_write_1 002B                    __size_of_display_clock 00A6  
                          _buzzer_watcher 0041                               delay_temp@x 0072  
                             delay_temp@y 0070                               delay_temp@z 0073  
                          read_byte@value 0075               __end_of_time_date_delimiter 15C4  
                                init_ram0 1547                             button_delay@i 0070  
                             ??_init_temp 0070                        __end_of_reset_temp 1800  
                             ??_read_byte 0074                            ?_time_settings 0070  
                            ?_decrementor 0053                          ___lwmod@dividend 0072  
                          ??_delay_screen 0070                               _reset_alarm 14EA  
                            _time_write_1 1641                              ??_write_char 0072  
                            ??_write_byte 0074                                _OPTION_REG 0081  
                             _time_read_1 171D                              time_read_1@j 0072  
                         ___lwmod@divisor 0070                           ___lwmod@counter 0075  
                             ??_write_cmd 0072              __size_of_set_upper_threshold 003E  
                           _display_clock 09CF                             time_write_1@j 0072  
                      __end_of_write_char 15DD                        __end_of_write_byte 0841  
