

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 03 11:12:03 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.10
    54                           ; Generated 31/07/2019 GMT
    55                           ; 
    56                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F877A Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009C                     	;# 
   258  009D                     	;# 
   259  009E                     	;# 
   260  009F                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  010F                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0000                     	;# 
   268  0001                     	;# 
   269  0002                     	;# 
   270  0003                     	;# 
   271  0004                     	;# 
   272  0005                     	;# 
   273  0006                     	;# 
   274  0007                     	;# 
   275  0008                     	;# 
   276  0009                     	;# 
   277  000A                     	;# 
   278  000B                     	;# 
   279  000C                     	;# 
   280  000D                     	;# 
   281  000E                     	;# 
   282  000E                     	;# 
   283  000F                     	;# 
   284  0010                     	;# 
   285  0011                     	;# 
   286  0012                     	;# 
   287  0013                     	;# 
   288  0014                     	;# 
   289  0015                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0017                     	;# 
   293  0018                     	;# 
   294  0019                     	;# 
   295  001A                     	;# 
   296  001B                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001D                     	;# 
   300  001E                     	;# 
   301  001F                     	;# 
   302  0081                     	;# 
   303  0085                     	;# 
   304  0086                     	;# 
   305  0087                     	;# 
   306  0088                     	;# 
   307  0089                     	;# 
   308  008C                     	;# 
   309  008D                     	;# 
   310  008E                     	;# 
   311  0091                     	;# 
   312  0092                     	;# 
   313  0093                     	;# 
   314  0094                     	;# 
   315  0098                     	;# 
   316  0099                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  009F                     	;# 
   321  010C                     	;# 
   322  010D                     	;# 
   323  010E                     	;# 
   324  010F                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  0091                     	;# 
   372  0092                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009C                     	;# 
   378  009D                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  010E                     	;# 
   384  010F                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  0000                     	;# 
   448  0001                     	;# 
   449  0002                     	;# 
   450  0003                     	;# 
   451  0004                     	;# 
   452  0005                     	;# 
   453  0006                     	;# 
   454  0007                     	;# 
   455  0008                     	;# 
   456  0009                     	;# 
   457  000A                     	;# 
   458  000B                     	;# 
   459  000C                     	;# 
   460  000D                     	;# 
   461  000E                     	;# 
   462  000E                     	;# 
   463  000F                     	;# 
   464  0010                     	;# 
   465  0011                     	;# 
   466  0012                     	;# 
   467  0013                     	;# 
   468  0014                     	;# 
   469  0015                     	;# 
   470  0015                     	;# 
   471  0016                     	;# 
   472  0017                     	;# 
   473  0018                     	;# 
   474  0019                     	;# 
   475  001A                     	;# 
   476  001B                     	;# 
   477  001B                     	;# 
   478  001C                     	;# 
   479  001D                     	;# 
   480  001E                     	;# 
   481  001F                     	;# 
   482  0081                     	;# 
   483  0085                     	;# 
   484  0086                     	;# 
   485  0087                     	;# 
   486  0088                     	;# 
   487  0089                     	;# 
   488  008C                     	;# 
   489  008D                     	;# 
   490  008E                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0094                     	;# 
   495  0098                     	;# 
   496  0099                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  009F                     	;# 
   501  010C                     	;# 
   502  010D                     	;# 
   503  010E                     	;# 
   504  010F                     	;# 
   505  018C                     	;# 
   506  018D                     	;# 
   507  0000                     	;# 
   508  0001                     	;# 
   509  0002                     	;# 
   510  0003                     	;# 
   511  0004                     	;# 
   512  0005                     	;# 
   513  0006                     	;# 
   514  0007                     	;# 
   515  0008                     	;# 
   516  0009                     	;# 
   517  000A                     	;# 
   518  000B                     	;# 
   519  000C                     	;# 
   520  000D                     	;# 
   521  000E                     	;# 
   522  000E                     	;# 
   523  000F                     	;# 
   524  0010                     	;# 
   525  0011                     	;# 
   526  0012                     	;# 
   527  0013                     	;# 
   528  0014                     	;# 
   529  0015                     	;# 
   530  0015                     	;# 
   531  0016                     	;# 
   532  0017                     	;# 
   533  0018                     	;# 
   534  0019                     	;# 
   535  001A                     	;# 
   536  001B                     	;# 
   537  001B                     	;# 
   538  001C                     	;# 
   539  001D                     	;# 
   540  001E                     	;# 
   541  001F                     	;# 
   542  0081                     	;# 
   543  0085                     	;# 
   544  0086                     	;# 
   545  0087                     	;# 
   546  0088                     	;# 
   547  0089                     	;# 
   548  008C                     	;# 
   549  008D                     	;# 
   550  008E                     	;# 
   551  0091                     	;# 
   552  0092                     	;# 
   553  0093                     	;# 
   554  0094                     	;# 
   555  0098                     	;# 
   556  0099                     	;# 
   557  009C                     	;# 
   558  009D                     	;# 
   559  009E                     	;# 
   560  009F                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567                           
   568                           	psect	idataBANK0
   569  15DB                     __pidataBANK0:	
   570                           
   571                           ;initializer for _table
   572  15DB  3400               	retlw	0
   573  15DC  3400               	retlw	0
   574  15DD  3440               	retlw	64
   575  15DE  3424               	retlw	36
   576  15DF  3411               	retlw	17
   577  15E0  3406               	retlw	6
   578  15E1  3422               	retlw	34
   579  15E2  3400               	retlw	0
   580  0009                     _PORTE	set	9
   581  0008                     _PORTD	set	8
   582  003E                     _RC6	set	62
   583  003F                     _RC7	set	63
   584  003C                     _RC4	set	60
   585  003B                     _RC3	set	59
   586  003A                     _RC2	set	58
   587  0039                     _RC1	set	57
   588  0038                     _RC0	set	56
   589  004A                     _RE2	set	74
   590  0034                     _RB4	set	52
   591  0031                     _RB1	set	49
   592  0035                     _RB5	set	53
   593  0030                     _RB0	set	48
   594  0048                     _RE0	set	72
   595  002B                     _RA3	set	43
   596  002C                     _RA4	set	44
   597  002D                     _RA5	set	45
   598  002A                     _RA2	set	42
   599  0028                     _RA0	set	40
   600  0087                     _TRISC	set	135
   601  0085                     _TRISA	set	133
   602  0089                     _TRISE	set	137
   603  0081                     _OPTION_REG	set	129
   604  0088                     _TRISD	set	136
   605  009F                     _ADCON1	set	159
   606  0086                     _TRISB	set	134
   607  0434                     _TRISB4	set	1076
   608  0448                     _TRISE0	set	1096
   609  0428                     _TRISA0	set	1064
   610                           
   611                           ; #config settings
   612  0000                     
   613                           	psect	cinit
   614  07E6                     start_initialization:	
   615  07E6                     __initialization:	
   616                           
   617                           ; Initialize objects allocated to BANK0
   618  07E6  1383               	bcf	3,7	;select IRP bank0
   619  07E7  3063               	movlw	low (__pdataBANK0+8)
   620  07E8  00FD               	movwf	btemp+-1
   621  07E9  3015               	movlw	high __pidataBANK0
   622  07EA  00FE               	movwf	btemp
   623  07EB  30DB               	movlw	low __pidataBANK0
   624  07EC  00FF               	movwf	btemp+1
   625  07ED  305B               	movlw	low __pdataBANK0
   626  07EE  0084               	movwf	4
   627  07EF  160A  118A  2645  120A  118A  	fcall	init_ram0
   628                           
   629                           ; Clear objects allocated to BANK0
   630  07F4  3020               	movlw	low __pbssBANK0
   631  07F5  0084               	movwf	4
   632  07F6  3051               	movlw	low (__pbssBANK0+49)
   633  07F7  160A  118A  25D3  120A  118A  	fcall	clear_ram0
   634  07FC                     end_of_initialization:	
   635                           ;End of C runtime variable initialization code
   636                           
   637  07FC                     __end_of__initialization:	
   638  07FC  0183               	clrf	3
   639  07FD  120A  158A  2B58   	ljmp	_main	;jump to C main() function
   640                           
   641                           	psect	bssBANK0
   642  0020                     __pbssBANK0:	
   643  0020                     _table1:	
   644  0020                     	ds	7
   645  0027                     _count:	
   646  0027                     	ds	2
   647  0029                     _day_of_week_var:	
   648  0029                     	ds	2
   649  002B                     _day_high:	
   650  002B                     	ds	2
   651  002D                     _day_low:	
   652  002D                     	ds	2
   653  002F                     _z:	
   654  002F                     	ds	2
   655  0031                     _y:	
   656  0031                     	ds	2
   657  0033                     _x:	
   658  0033                     	ds	2
   659  0035                     _w:	
   660  0035                     	ds	2
   661  0037                     _t:	
   662  0037                     	ds	2
   663  0039                     _wd:	
   664  0039                     	ds	2
   665  003B                     read_byte@j:	
   666  003B                     	ds	1
   667  003C                     _var2:	
   668  003C                     	ds	1
   669  003D                     _var1:	
   670  003D                     	ds	1
   671  003E                     _buzzer_watcher1:	
   672  003E                     	ds	1
   673  003F                     _buzzer_watcher:	
   674  003F                     	ds	1
   675  0040                     _lower_t:	
   676  0040                     	ds	1
   677  0041                     _upper_t:	
   678  0041                     	ds	1
   679  0042                     _hrs_limiter:	
   680  0042                     	ds	1
   681  0043                     _day_hex:	
   682  0043                     	ds	1
   683  0044                     _c:	
   684  0044                     	ds	1
   685  0045                     _b:	
   686  0045                     	ds	1
   687  0046                     _a:	
   688  0046                     	ds	1
   689  0047                     _wanfen:	
   690  0047                     	ds	1
   691  0048                     _qianfen:	
   692  0048                     	ds	1
   693  0049                     _baifen:	
   694  0049                     	ds	1
   695  004A                     _shifen:	
   696  004A                     	ds	1
   697  004B                     _ge:	
   698  004B                     	ds	1
   699  004C                     _shi:	
   700  004C                     	ds	1
   701  004D                     _TX:	
   702  004D                     	ds	1
   703  004E                     _TZ:	
   704  004E                     	ds	1
   705  004F                     _THV:	
   706  004F                     	ds	1
   707  0050                     _TLV:	
   708  0050                     	ds	1
   709                           
   710                           	psect	dataBANK0
   711  005B                     __pdataBANK0:	
   712  005B                     _table:	
   713  005B                     	ds	8
   714                           
   715                           	psect	inittext
   716  1641                     init_fetch0:	
   717                           ;	Called with low address in FSR and high address in W
   718                           
   719  1641  087E               	movf	btemp,w
   720  1642  008A               	movwf	10
   721  1643  087F               	movf	btemp+1,w
   722  1644  0082               	movwf	2
   723  1645                     init_ram0:	
   724                           ;Called with:
   725                           ;	high address of idata address in btemp 
   726                           ;	low address of idata address in btemp+1 
   727                           ;	low address of data in FSR
   728                           ;	high address + 1 of data in btemp-1
   729                           
   730  1645  160A  118A  2641  160A  118A  	fcall	init_fetch0
   731  164A  0080               	movwf	0
   732  164B  0A84               	incf	4,f
   733  164C  0804               	movf	4,w
   734  164D  067D               	xorwf	btemp+-1,w
   735  164E  1903               	btfsc	3,2
   736  164F  3400               	retlw	0
   737  1650  0AFF               	incf	btemp+1,f
   738  1651  1903               	btfsc	3,2
   739  1652  0AFE               	incf	btemp,f
   740  1653  2E45               	goto	init_ram0
   741                           
   742                           	psect	clrtext
   743  15D3                     clear_ram0:	
   744                           ;	Called with FSR containing the base address, and
   745                           ;	W with the last address+1
   746                           
   747  15D3  0064               	clrwdt	;clear the watchdog before getting into this loop
   748  15D4                     clrloop0:	
   749  15D4  0180               	clrf	0	;clear RAM location pointed to by FSR
   750  15D5  0A84               	incf	4,f	;increment pointer
   751  15D6  0604               	xorwf	4,w	;XOR with final address
   752  15D7  1903               	btfsc	3,2	;have we reached the end yet?
   753  15D8  3400               	retlw	0	;all done for this memory range, return
   754  15D9  0604               	xorwf	4,w	;XOR again to restore value
   755  15DA  2DD4               	goto	clrloop0	;do the next byte
   756                           
   757                           	psect	cstackCOMMON
   758  0070                     __pcstackCOMMON:	
   759  0070                     ?_init_temp:	
   760  0070                     ??_init_temp:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_set_time:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_ds1302_init:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_init:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_init:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_lcd_init:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_initialise_buttons:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ??_initialise_buttons:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_get_temp:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?_get_time:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_write_cmd:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_write_char:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ?_display_temp:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_display_date:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_display_clock:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ?_thermometer_threshhold_settings:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ?_date_settings:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_time_settings:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_set_beep_threshhold:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_reset_alarm:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ??_reset_alarm:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_delay_screen:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ??_delay_screen:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_delay_temp:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_delay2:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ??_delay2:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_time_write_1:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ??_time_write_1:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_time_read_1:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ??_time_read_1:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_button_delay:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ??_button_delay:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_time_date_hex_terminator:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_time_date_delimiter:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_main:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_reset_temp:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_write_byte:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_read_byte:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?___awdiv:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?___awmod:	
   878                           ; 2 bytes @ 0x0
   879                           
   880  0070                     ?___lwmod:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0070                     delay_temp@y:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0070                     time_date_delimiter@hex:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     time_date_hex_terminator@limiter:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     delay_screen@i:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     delay2@i:	
   896                           ; 2 bytes @ 0x0
   897                           
   898  0070                     button_delay@i:	
   899                           ; 2 bytes @ 0x0
   900                           
   901  0070                     ___awdiv@divisor:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0070                     ___awmod@divisor:	
   905                           ; 2 bytes @ 0x0
   906                           
   907  0070                     ___lwmod@divisor:	
   908                           ; 2 bytes @ 0x0
   909                           
   910                           
   911                           ; 2 bytes @ 0x0
   912  0070                     	ds	1
   913  0071                     ??_delay_temp:	
   914  0071                     ??_time_date_hex_terminator:	
   915                           ; 1 bytes @ 0x1
   916                           
   917  0071                     time_date_delimiter@limiter:	
   918                           ; 1 bytes @ 0x1
   919                           
   920                           
   921                           ; 1 bytes @ 0x1
   922  0071                     	ds	1
   923  0072                     ??_write_cmd:	
   924  0072                     ??_write_char:	
   925                           ; 1 bytes @ 0x2
   926                           
   927  0072                     ??_set_beep_threshhold:	
   928                           ; 1 bytes @ 0x2
   929                           
   930  0072                     ??_time_date_delimiter:	
   931                           ; 1 bytes @ 0x2
   932                           
   933  0072                     write_char@x:	
   934                           ; 1 bytes @ 0x2
   935                           
   936  0072                     write_cmd@x:	
   937                           ; 1 bytes @ 0x2
   938                           
   939  0072                     delay_temp@x:	
   940                           ; 1 bytes @ 0x2
   941                           
   942  0072                     set_beep_threshhold@x:	
   943                           ; 1 bytes @ 0x2
   944                           
   945  0072                     time_write_1@j:	
   946                           ; 1 bytes @ 0x2
   947                           
   948  0072                     time_read_1@j:	
   949                           ; 2 bytes @ 0x2
   950                           
   951  0072                     ___awdiv@dividend:	
   952                           ; 2 bytes @ 0x2
   953                           
   954  0072                     ___awmod@dividend:	
   955                           ; 2 bytes @ 0x2
   956                           
   957  0072                     ___lwmod@dividend:	
   958                           ; 2 bytes @ 0x2
   959                           
   960                           
   961                           ; 2 bytes @ 0x2
   962  0072                     	ds	1
   963  0073                     ??_lcd_init:	
   964  0073                     ??_display_temp:	
   965                           ; 1 bytes @ 0x3
   966                           
   967  0073                     ??_display_date:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     ??_display_clock:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     ?_set_lower_threshold:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0073                     ?_set_upper_threshold:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0073                     delay_temp@z:	
   980                           ; 1 bytes @ 0x3
   981                           
   982  0073                     time_date_hex_terminator@val:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0073                     set_upper_threshold@upper_val:	
   986                           ; 1 bytes @ 0x3
   987                           
   988  0073                     set_lower_threshold@upper_val:	
   989                           ; 2 bytes @ 0x3
   990                           
   991                           
   992                           ; 2 bytes @ 0x3
   993  0073                     	ds	1
   994  0074                     ??_reset_temp:	
   995  0074                     ??_write_byte:	
   996                           ; 1 bytes @ 0x4
   997                           
   998  0074                     ??_read_byte:	
   999                           ; 1 bytes @ 0x4
  1000                           
  1001  0074                     ??___awdiv:	
  1002                           ; 1 bytes @ 0x4
  1003                           
  1004  0074                     ??___awmod:	
  1005                           ; 1 bytes @ 0x4
  1006                           
  1007  0074                     ??___lwmod:	
  1008                           ; 1 bytes @ 0x4
  1009                           
  1010  0074                     time_write_1@time_tx:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0074                     time_read_1@time_rx:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0074                     time_date_delimiter@val:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x4
  1021  0074                     	ds	1
  1022  0075                     ??_set_time:	
  1023  0075                     ??_ds1302_init:	
  1024                           ; 1 bytes @ 0x5
  1025                           
  1026  0075                     ??_get_time:	
  1027                           ; 1 bytes @ 0x5
  1028                           
  1029  0075                     reset_temp@presence:	
  1030                           ; 1 bytes @ 0x5
  1031                           
  1032  0075                     read_byte@value:	
  1033                           ; 1 bytes @ 0x5
  1034                           
  1035  0075                     ___awdiv@counter:	
  1036                           ; 1 bytes @ 0x5
  1037                           
  1038  0075                     ___awmod@counter:	
  1039                           ; 1 bytes @ 0x5
  1040                           
  1041  0075                     ___lwmod@counter:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044  0075                     set_time@i:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047  0075                     display_clock@i:	
  1048                           ; 2 bytes @ 0x5
  1049                           
  1050  0075                     display_date@i:	
  1051                           ; 2 bytes @ 0x5
  1052                           
  1053  0075                     set_upper_threshold@lower_val:	
  1054                           ; 2 bytes @ 0x5
  1055                           
  1056  0075                     set_lower_threshold@lower_val:	
  1057                           ; 2 bytes @ 0x5
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x5
  1061  0075                     	ds	1
  1062  0076                     ?___lwdiv:	
  1063  0076                     write_byte@temp:	
  1064                           ; 2 bytes @ 0x6
  1065                           
  1066  0076                     read_byte@i:	
  1067                           ; 1 bytes @ 0x6
  1068                           
  1069  0076                     ___awdiv@sign:	
  1070                           ; 1 bytes @ 0x6
  1071                           
  1072  0076                     ___awmod@sign:	
  1073                           ; 1 bytes @ 0x6
  1074                           
  1075  0076                     get_time@i:	
  1076                           ; 1 bytes @ 0x6
  1077                           
  1078  0076                     ___lwdiv@divisor:	
  1079                           ; 2 bytes @ 0x6
  1080                           
  1081                           
  1082                           ; 2 bytes @ 0x6
  1083  0076                     	ds	1
  1084  0077                     ??_set_lower_threshold:	
  1085  0077                     ??_set_upper_threshold:	
  1086                           ; 1 bytes @ 0x7
  1087                           
  1088  0077                     ?_modulus_func:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  0077                     write_byte@val:	
  1092                           ; 2 bytes @ 0x7
  1093                           
  1094  0077                     modulus_func@x:	
  1095                           ; 1 bytes @ 0x7
  1096                           
  1097  0077                     ___awdiv@quotient:	
  1098                           ; 2 bytes @ 0x7
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x7
  1102  0077                     	ds	1
  1103  0078                     write_byte@i:	
  1104  0078                     ___lwdiv@dividend:	
  1105                           ; 1 bytes @ 0x8
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x8
  1109  0078                     	ds	1
  1110  0079                     modulus_func@y:	
  1111                           
  1112                           ; 2 bytes @ 0x9
  1113  0079                     	ds	1
  1114  007A                     ??___lwdiv:	
  1115                           
  1116                           ; 1 bytes @ 0xA
  1117  007A                     	ds	1
  1118  007B                     ??_modulus_func:	
  1119  007B                     ??_incrementor:	
  1120                           ; 1 bytes @ 0xB
  1121                           
  1122  007B                     ??_decrementor:	
  1123                           ; 1 bytes @ 0xB
  1124                           
  1125  007B                     ___lwdiv@quotient:	
  1126                           ; 1 bytes @ 0xB
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0xB
  1130  007B                     	ds	2
  1131  007D                     ___lwdiv@counter:	
  1132                           
  1133                           ; 1 bytes @ 0xD
  1134  007D                     	ds	1
  1135  007E                     ??_main:	
  1136                           
  1137                           	psect	cstackBANK0
  1138  0051                     __pcstackBANK0:	
  1139                           ; 1 bytes @ 0xE
  1140                           
  1141  0051                     ??_get_temp:	
  1142  0051                     ?_incrementor:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0051                     ?_decrementor:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0051                     incrementor@upper_val:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0051                     decrementor@lower_val:	
  1152                           ; 2 bytes @ 0x0
  1153                           
  1154                           
  1155                           ; 2 bytes @ 0x0
  1156  0051                     	ds	2
  1157  0053                     incrementor@lower_val:	
  1158  0053                     decrementor@upper_val:	
  1159                           ; 2 bytes @ 0x2
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0x2
  1163  0053                     	ds	2
  1164  0055                     incrementor@z:	
  1165  0055                     decrementor@z:	
  1166                           ; 1 bytes @ 0x4
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0x4
  1170  0055                     	ds	1
  1171  0056                     ??_thermometer_threshhold_settings:	
  1172  0056                     ??_date_settings:	
  1173                           ; 1 bytes @ 0x5
  1174                           
  1175  0056                     ??_time_settings:	
  1176                           ; 1 bytes @ 0x5
  1177                           
  1178                           
  1179                           ; 1 bytes @ 0x5
  1180  0056                     	ds	3
  1181  0059                     thermometer_threshhold_settings@i:	
  1182                           
  1183                           ; 2 bytes @ 0x8
  1184  0059                     	ds	2
  1185                           
  1186                           	psect	maintext
  1187  0B58                     __pmaintext:	
  1188 ;;
  1189 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1190 ;;
  1191 ;; *************** function _main *****************
  1192 ;; Defined at:
  1193 ;;		line 8 in file "mainLogic.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : B00/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0
  1210 ;;      Totals:         0       0       0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels required when called:    4
  1213 ;; This function calls:
  1214 ;;		_date_settings
  1215 ;;		_display_clock
  1216 ;;		_display_date
  1217 ;;		_display_temp
  1218 ;;		_ds1302_init
  1219 ;;		_get_temp
  1220 ;;		_get_time
  1221 ;;		_init
  1222 ;;		_init_temp
  1223 ;;		_initialise_buttons
  1224 ;;		_lcd_init
  1225 ;;		_reset_alarm
  1226 ;;		_set_beep_threshhold
  1227 ;;		_set_lower_threshold
  1228 ;;		_set_time
  1229 ;;		_set_upper_threshold
  1230 ;;		_thermometer_threshhold_settings
  1231 ;;		_time_settings
  1232 ;;		_write_char
  1233 ;;		_write_cmd
  1234 ;; This function is called by:
  1235 ;;		Startup code after reset
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _main
  1241  0B58                     _main:	
  1242  0B58                     l3684:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1245                           
  1246                           
  1247                           ;mainLogic.c: 9:     TRISB=0X02;
  1248  0B58  3002               	movlw	2
  1249  0B59  1683               	bsf	3,5	;RP0=1, select bank1
  1250  0B5A  1303               	bcf	3,6	;RP1=0, select bank1
  1251  0B5B  0086               	movwf	6	;volatile
  1252  0B5C                     l3686:	
  1253                           
  1254                           ;mainLogic.c: 10:     init_temp();
  1255  0B5C  160A  118A  25CC  120A  158A  	fcall	_init_temp
  1256  0B61                     l3688:	
  1257                           
  1258                           ;mainLogic.c: 11:     set_time();
  1259  0B61  160A  118A  27A8  120A  158A  	fcall	_set_time
  1260  0B66                     l3690:	
  1261                           
  1262                           ;mainLogic.c: 12:     ds1302_init();
  1263  0B66  160A  118A  2654  120A  158A  	fcall	_ds1302_init
  1264  0B6B                     l3692:	
  1265                           
  1266                           ;mainLogic.c: 14:     init();
  1267  0B6B  160A  118A  25E3  120A  158A  	fcall	_init
  1268  0B70                     l3694:	
  1269                           
  1270                           ;mainLogic.c: 15:     lcd_init();
  1271  0B70  160A  118A  26FE  120A  158A  	fcall	_lcd_init
  1272  0B75                     l3696:	
  1273                           
  1274                           ;mainLogic.c: 16:     init_temp();
  1275  0B75  160A  118A  25CC  120A  158A  	fcall	_init_temp
  1276  0B7A                     l3698:	
  1277                           
  1278                           ;mainLogic.c: 17:     initialise_buttons();
  1279  0B7A  160A  118A  25EC  120A  158A  	fcall	_initialise_buttons
  1280  0B7F                     l3700:	
  1281                           
  1282                           ;mainLogic.c: 22:     get_temp();
  1283  0B7F  120A  158A  244A  120A  158A  	fcall	_get_temp
  1284  0B84                     l3702:	
  1285                           
  1286                           ;mainLogic.c: 23:     get_time();
  1287  0B84  120A  158A  201E  120A  158A  	fcall	_get_time
  1288  0B89                     l3704:	
  1289                           
  1290                           ;mainLogic.c: 24:     write_cmd(0x80);
  1291  0B89  3080               	movlw	128
  1292  0B8A  120A  158A  2005  120A  158A  	fcall	_write_cmd
  1293  0B8F                     l3706:	
  1294                           
  1295                           ;mainLogic.c: 25:     write_char('T');
  1296  0B8F  3054               	movlw	84
  1297  0B90  160A  118A  26C2  120A  158A  	fcall	_write_char
  1298  0B95                     l3708:	
  1299                           
  1300                           ;mainLogic.c: 26:     write_char('e');
  1301  0B95  3065               	movlw	101
  1302  0B96  160A  118A  26C2  120A  158A  	fcall	_write_char
  1303  0B9B                     l3710:	
  1304                           
  1305                           ;mainLogic.c: 27:     write_char('m');
  1306  0B9B  306D               	movlw	109
  1307  0B9C  160A  118A  26C2  120A  158A  	fcall	_write_char
  1308  0BA1                     l3712:	
  1309                           
  1310                           ;mainLogic.c: 28:     write_char('p');
  1311  0BA1  3070               	movlw	112
  1312  0BA2  160A  118A  26C2  120A  158A  	fcall	_write_char
  1313  0BA7                     l3714:	
  1314                           
  1315                           ;mainLogic.c: 29:     write_char(':');
  1316  0BA7  303A               	movlw	58
  1317  0BA8  160A  118A  26C2  120A  158A  	fcall	_write_char
  1318  0BAD                     l3716:	
  1319                           
  1320                           ;mainLogic.c: 30:     display_temp();
  1321  0BAD  160A  118A  2751  120A  158A  	fcall	_display_temp
  1322  0BB2                     l3718:	
  1323                           
  1324                           ;mainLogic.c: 32:     write_cmd(0x90);
  1325  0BB2  3090               	movlw	144
  1326  0BB3  120A  158A  2005  120A  158A  	fcall	_write_cmd
  1327  0BB8                     l3720:	
  1328                           
  1329                           ;mainLogic.c: 33:     write_char('D');
  1330  0BB8  3044               	movlw	68
  1331  0BB9  160A  118A  26C2  120A  158A  	fcall	_write_char
  1332  0BBE                     l3722:	
  1333                           
  1334                           ;mainLogic.c: 34:     write_char('a');
  1335  0BBE  3061               	movlw	97
  1336  0BBF  160A  118A  26C2  120A  158A  	fcall	_write_char
  1337  0BC4                     l3724:	
  1338                           
  1339                           ;mainLogic.c: 35:     write_char('t');
  1340  0BC4  3074               	movlw	116
  1341  0BC5  160A  118A  26C2  120A  158A  	fcall	_write_char
  1342  0BCA                     l3726:	
  1343                           
  1344                           ;mainLogic.c: 36:     write_char('e');
  1345  0BCA  3065               	movlw	101
  1346  0BCB  160A  118A  26C2  120A  158A  	fcall	_write_char
  1347  0BD0                     l3728:	
  1348                           
  1349                           ;mainLogic.c: 37:     write_char(':');
  1350  0BD0  303A               	movlw	58
  1351  0BD1  160A  118A  26C2  120A  158A  	fcall	_write_char
  1352  0BD6                     l3730:	
  1353                           
  1354                           ;mainLogic.c: 38:     write_char(' ');
  1355  0BD6  3020               	movlw	32
  1356  0BD7  160A  118A  26C2  120A  158A  	fcall	_write_char
  1357  0BDC                     l3732:	
  1358                           
  1359                           ;mainLogic.c: 40:     display_date();
  1360  0BDC  120A  118A  203F  120A  158A  	fcall	_display_date
  1361  0BE1                     l3734:	
  1362                           
  1363                           ;mainLogic.c: 42:     write_cmd(0x88);
  1364  0BE1  3088               	movlw	136
  1365  0BE2  120A  158A  2005  120A  158A  	fcall	_write_cmd
  1366  0BE7                     l3736:	
  1367                           
  1368                           ;mainLogic.c: 43:     write_char('T');
  1369  0BE7  3054               	movlw	84
  1370  0BE8  160A  118A  26C2  120A  158A  	fcall	_write_char
  1371  0BED                     l3738:	
  1372                           
  1373                           ;mainLogic.c: 44:     write_char('i');
  1374  0BED  3069               	movlw	105
  1375  0BEE  160A  118A  26C2  120A  158A  	fcall	_write_char
  1376  0BF3                     l3740:	
  1377                           
  1378                           ;mainLogic.c: 45:     write_char('m');
  1379  0BF3  306D               	movlw	109
  1380  0BF4  160A  118A  26C2  120A  158A  	fcall	_write_char
  1381  0BF9                     l3742:	
  1382                           
  1383                           ;mainLogic.c: 46:     write_char('e');
  1384  0BF9  3065               	movlw	101
  1385  0BFA  160A  118A  26C2  120A  158A  	fcall	_write_char
  1386  0BFF                     l3744:	
  1387                           
  1388                           ;mainLogic.c: 47:     write_char(':');
  1389  0BFF  303A               	movlw	58
  1390  0C00  160A  118A  26C2  120A  158A  	fcall	_write_char
  1391  0C05                     l3746:	
  1392                           
  1393                           ;mainLogic.c: 48:     display_clock();
  1394  0C05  120A  158A  22B2  120A  158A  	fcall	_display_clock
  1395  0C0A                     l3748:	
  1396                           
  1397                           ;mainLogic.c: 49:     thermometer_threshhold_settings();
  1398  0C0A  120A  158A  2578  120A  158A  	fcall	_thermometer_threshhold_settings
  1399  0C0F                     l3750:	
  1400                           
  1401                           ;mainLogic.c: 50:     date_settings();
  1402  0C0F  120A  118A  23D3  120A  158A  	fcall	_date_settings
  1403  0C14                     l3752:	
  1404                           
  1405                           ;mainLogic.c: 51:     time_settings();
  1406  0C14  120A  118A  20E5  120A  158A  	fcall	_time_settings
  1407  0C19                     l3754:	
  1408                           
  1409                           ;mainLogic.c: 52:     write_cmd(0x98);
  1410  0C19  3098               	movlw	152
  1411  0C1A  120A  158A  2005  120A  158A  	fcall	_write_cmd
  1412  0C1F                     l3756:	
  1413                           
  1414                           ;mainLogic.c: 53:     set_lower_threshold(2,4);
  1415  0C1F  3002               	movlw	2
  1416  0C20  00F3               	movwf	set_lower_threshold@upper_val
  1417  0C21  3000               	movlw	0
  1418  0C22  00F4               	movwf	set_lower_threshold@upper_val+1
  1419  0C23  3004               	movlw	4
  1420  0C24  00F5               	movwf	set_lower_threshold@lower_val
  1421  0C25  3000               	movlw	0
  1422  0C26  00F6               	movwf	set_lower_threshold@lower_val+1
  1423  0C27  120A  158A  212F  120A  158A  	fcall	_set_lower_threshold
  1424  0C2C                     l3758:	
  1425                           
  1426                           ;mainLogic.c: 54:     set_upper_threshold(2,5);
  1427  0C2C  3002               	movlw	2
  1428  0C2D  00F3               	movwf	set_upper_threshold@upper_val
  1429  0C2E  3000               	movlw	0
  1430  0C2F  00F4               	movwf	set_upper_threshold@upper_val+1
  1431  0C30  3005               	movlw	5
  1432  0C31  00F5               	movwf	set_upper_threshold@lower_val
  1433  0C32  3000               	movlw	0
  1434  0C33  00F6               	movwf	set_upper_threshold@lower_val+1
  1435  0C34  120A  158A  216C  120A  158A  	fcall	_set_upper_threshold
  1436  0C39                     l3760:	
  1437                           
  1438                           ;mainLogic.c: 55:     set_beep_threshhold(buzzer_watcher);
  1439  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0C3B  083F               	movf	_buzzer_watcher,w
  1442  0C3C  160A  118A  26DB  120A  158A  	fcall	_set_beep_threshhold
  1443  0C41                     l3762:	
  1444                           
  1445                           ;mainLogic.c: 56:     reset_alarm();
  1446  0C41  160A  118A  25FA  120A  158A  	fcall	_reset_alarm
  1447  0C46  2B7F               	goto	l3700
  1448  0C47  120A  118A  2800   	ljmp	start
  1449  0C4A                     __end_of_main:	
  1450                           
  1451                           	psect	text1
  1452  00E5                     __ptext1:	
  1453 ;; *************** function _time_settings *****************
  1454 ;; Defined at:
  1455 ;;		line 163 in file "Button_src.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0
  1471 ;;      Temps:          0       3       0       0       0
  1472 ;;      Totals:         0       3       0       0       0
  1473 ;;Total ram usage:        3 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    3
  1476 ;; This function calls:
  1477 ;;		_button_delay
  1478 ;;		_incrementor
  1479 ;;		_modulus_func
  1480 ;;		_set_time
  1481 ;;		_time_date_delimiter
  1482 ;;		_time_date_hex_terminator
  1483 ;;		_write_char
  1484 ;;		_write_cmd
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _time_settings
  1492  00E5                     _time_settings:	
  1493  00E5                     l3464:	
  1494                           ;incstack = 0
  1495                           ; Regs used in _time_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1496                           
  1497                           
  1498                           ;Button_src.c: 164:  RC0 = 1;
  1499  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1500  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1501  00E7  1407               	bsf	7,0	;volatile
  1502                           
  1503                           ;Button_src.c: 165:  RC1 = 1;
  1504  00E8  1487               	bsf	7,1	;volatile
  1505                           
  1506                           ;Button_src.c: 166:  RC2 = 0;
  1507  00E9  1107               	bcf	7,2	;volatile
  1508                           
  1509                           ;Button_src.c: 167:  RC3 = 1;
  1510  00EA  1587               	bsf	7,3	;volatile
  1511                           
  1512                           ;Button_src.c: 168:   if (RC4 == 0){
  1513  00EB  1A07               	btfsc	7,4	;volatile
  1514  00EC  28EE               	goto	u2071
  1515  00ED  28EF               	goto	u2070
  1516  00EE                     u2071:	
  1517  00EE  2BD2               	goto	l524
  1518  00EF                     u2070:	
  1519  00EF                     l3466:	
  1520                           
  1521                           ;Button_src.c: 169:       write_cmd(0x1);
  1522  00EF  3001               	movlw	1
  1523  00F0  120A  158A  2005  120A  118A  	fcall	_write_cmd
  1524  00F5                     l517:	
  1525                           ;Button_src.c: 170:       for(;;){
  1526                           
  1527                           
  1528                           ;Button_src.c: 171:             write_cmd(0x80);
  1529  00F5  3080               	movlw	128
  1530  00F6  120A  158A  2005  120A  118A  	fcall	_write_cmd
  1531                           
  1532                           ;Button_src.c: 172:             write_char('T');
  1533  00FB  3054               	movlw	84
  1534  00FC  160A  118A  26C2  120A  118A  	fcall	_write_char
  1535                           
  1536                           ;Button_src.c: 173:             write_char('i');
  1537  0101  3069               	movlw	105
  1538  0102  160A  118A  26C2  120A  118A  	fcall	_write_char
  1539                           
  1540                           ;Button_src.c: 174:             write_char('m');
  1541  0107  306D               	movlw	109
  1542  0108  160A  118A  26C2  120A  118A  	fcall	_write_char
  1543                           
  1544                           ;Button_src.c: 175:             write_char('e');
  1545  010D  3065               	movlw	101
  1546  010E  160A  118A  26C2  120A  118A  	fcall	_write_char
  1547                           
  1548                           ;Button_src.c: 176:             write_char('_');
  1549  0113  305F               	movlw	95
  1550  0114  160A  118A  26C2  120A  118A  	fcall	_write_char
  1551                           
  1552                           ;Button_src.c: 177:             write_char('S');
  1553  0119  3053               	movlw	83
  1554  011A  160A  118A  26C2  120A  118A  	fcall	_write_char
  1555                           
  1556                           ;Button_src.c: 178:             write_char('e');
  1557  011F  3065               	movlw	101
  1558  0120  160A  118A  26C2  120A  118A  	fcall	_write_char
  1559                           
  1560                           ;Button_src.c: 179:             write_char('t');
  1561  0125  3074               	movlw	116
  1562  0126  160A  118A  26C2  120A  118A  	fcall	_write_char
  1563                           
  1564                           ;Button_src.c: 180:             write_char('t');
  1565  012B  3074               	movlw	116
  1566  012C  160A  118A  26C2  120A  118A  	fcall	_write_char
  1567                           
  1568                           ;Button_src.c: 181:             write_char('i');
  1569  0131  3069               	movlw	105
  1570  0132  160A  118A  26C2  120A  118A  	fcall	_write_char
  1571                           
  1572                           ;Button_src.c: 182:             write_char('n');
  1573  0137  306E               	movlw	110
  1574  0138  160A  118A  26C2  120A  118A  	fcall	_write_char
  1575                           
  1576                           ;Button_src.c: 183:             write_char('g');
  1577  013D  3067               	movlw	103
  1578  013E  160A  118A  26C2  120A  118A  	fcall	_write_char
  1579                           
  1580                           ;Button_src.c: 184:             write_char('s');
  1581  0143  3073               	movlw	115
  1582  0144  160A  118A  26C2  120A  118A  	fcall	_write_char
  1583  0149                     l3468:	
  1584                           
  1585                           ;Button_src.c: 186:             RC0 = 1;
  1586  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1587  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1588  014B  1407               	bsf	7,0	;volatile
  1589  014C                     l3470:	
  1590                           
  1591                           ;Button_src.c: 187:             RC1 = 0;
  1592  014C  1087               	bcf	7,1	;volatile
  1593  014D                     l3472:	
  1594                           
  1595                           ;Button_src.c: 188:             RC2 = 1;
  1596  014D  1507               	bsf	7,2	;volatile
  1597  014E                     l3474:	
  1598                           
  1599                           ;Button_src.c: 189:             RC3 = 1;
  1600  014E  1587               	bsf	7,3	;volatile
  1601  014F                     l3476:	
  1602                           
  1603                           ;Button_src.c: 191:             if(RC7 == 0 && b =='x'){
  1604  014F  1B87               	btfsc	7,7	;volatile
  1605  0150  2952               	goto	u2081
  1606  0151  2953               	goto	u2080
  1607  0152                     u2081:	
  1608  0152  29B5               	goto	l3498
  1609  0153                     u2080:	
  1610  0153                     l3478:	
  1611  0153  3078               	movlw	120
  1612  0154  0645               	xorwf	_b,w
  1613  0155  1D03               	btfss	3,2
  1614  0156  2958               	goto	u2091
  1615  0157  2959               	goto	u2090
  1616  0158                     u2091:	
  1617  0158  29B5               	goto	l3498
  1618  0159                     u2090:	
  1619  0159                     l3480:	
  1620                           
  1621                           ;Button_src.c: 192:                     a++;
  1622  0159  3001               	movlw	1
  1623  015A  00D6               	movwf	??_time_settings
  1624  015B  0856               	movf	??_time_settings,w
  1625  015C  07C6               	addwf	_a,f
  1626  015D                     l3482:	
  1627                           
  1628                           ;Button_src.c: 193:                     x++ ;
  1629  015D  3001               	movlw	1
  1630  015E  07B3               	addwf	_x,f
  1631  015F  1803               	skipnc
  1632  0160  0AB4               	incf	_x+1,f
  1633  0161  3000               	movlw	0
  1634  0162  07B4               	addwf	_x+1,f
  1635  0163                     l3484:	
  1636                           
  1637                           ;Button_src.c: 194:                     x = modulus_func(x,10);
  1638  0163  0834               	movf	_x+1,w
  1639  0164  00F8               	movwf	modulus_func@x+1
  1640  0165  0833               	movf	_x,w
  1641  0166  00F7               	movwf	modulus_func@x
  1642  0167  300A               	movlw	10
  1643  0168  00F9               	movwf	modulus_func@y
  1644  0169  3000               	movlw	0
  1645  016A  00FA               	movwf	modulus_func@y+1
  1646  016B  160A  118A  260B  120A  118A  	fcall	_modulus_func
  1647  0170  0878               	movf	?_modulus_func+1,w
  1648  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0173  00B4               	movwf	_x+1
  1651  0174  0877               	movf	?_modulus_func,w
  1652  0175  00B3               	movwf	_x
  1653  0176                     l3486:	
  1654                           
  1655                           ;Button_src.c: 195:                     y = incrementor(y,x,'9');
  1656  0176  0832               	movf	_y+1,w
  1657  0177  00D2               	movwf	incrementor@upper_val+1
  1658  0178  0831               	movf	_y,w
  1659  0179  00D1               	movwf	incrementor@upper_val
  1660  017A  0834               	movf	_x+1,w
  1661  017B  00D4               	movwf	incrementor@lower_val+1
  1662  017C  0833               	movf	_x,w
  1663  017D  00D3               	movwf	incrementor@lower_val
  1664  017E  3039               	movlw	57
  1665  017F  00D6               	movwf	??_time_settings
  1666  0180  0856               	movf	??_time_settings,w
  1667  0181  00D5               	movwf	incrementor@z
  1668  0182  160A  118A  277C  120A  118A  	fcall	_incrementor
  1669  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0189  00D7               	movwf	??_time_settings+1
  1672  018A  01D8               	clrf	??_time_settings+2
  1673  018B  0857               	movf	??_time_settings+1,w
  1674  018C  00B1               	movwf	_y
  1675  018D  0858               	movf	??_time_settings+2,w
  1676  018E  00B2               	movwf	_y+1
  1677  018F                     l3488:	
  1678                           
  1679                           ;Button_src.c: 197:                     a = time_date_hex_terminator(a,'T');
  1680  018F  3054               	movlw	84
  1681  0190  00D6               	movwf	??_time_settings
  1682  0191  0856               	movf	??_time_settings,w
  1683  0192  00F0               	movwf	time_date_hex_terminator@limiter
  1684  0193  0846               	movf	_a,w
  1685  0194  160A  118A  261D  120A  118A  	fcall	_time_date_hex_terminator
  1686  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1687  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1688  019B  00D7               	movwf	??_time_settings+1
  1689  019C  0857               	movf	??_time_settings+1,w
  1690  019D  00C6               	movwf	_a
  1691  019E                     l3490:	
  1692                           
  1693                           ;Button_src.c: 198:                     if(y == 2 && x == 4){
  1694  019E  3002               	movlw	2
  1695  019F  0631               	xorwf	_y,w
  1696  01A0  0432               	iorwf	_y+1,w
  1697  01A1  1D03               	btfss	3,2
  1698  01A2  29A4               	goto	u2101
  1699  01A3  29A5               	goto	u2100
  1700  01A4                     u2101:	
  1701  01A4  29B0               	goto	l3496
  1702  01A5                     u2100:	
  1703  01A5                     l3492:	
  1704  01A5  3004               	movlw	4
  1705  01A6  0633               	xorwf	_x,w
  1706  01A7  0434               	iorwf	_x+1,w
  1707  01A8  1D03               	btfss	3,2
  1708  01A9  29AB               	goto	u2111
  1709  01AA  29AC               	goto	u2110
  1710  01AB                     u2111:	
  1711  01AB  29B0               	goto	l3496
  1712  01AC                     u2110:	
  1713  01AC                     l3494:	
  1714                           
  1715                           ;Button_src.c: 199:                         x = 0;
  1716  01AC  01B3               	clrf	_x
  1717  01AD  01B4               	clrf	_x+1
  1718                           
  1719                           ;Button_src.c: 200:                         y = 0;
  1720  01AE  01B1               	clrf	_y
  1721  01AF  01B2               	clrf	_y+1
  1722  01B0                     l3496:	
  1723                           
  1724                           ;Button_src.c: 202:                     button_delay();
  1725  01B0  160A  118A  2669  120A  118A  	fcall	_button_delay
  1726  01B5                     l3498:	
  1727                           
  1728                           ;Button_src.c: 204:             if(RC7==0 && b == 'y'){
  1729  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1730  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1731  01B7  1B87               	btfsc	7,7	;volatile
  1732  01B8  29BA               	goto	u2121
  1733  01B9  29BB               	goto	u2120
  1734  01BA                     u2121:	
  1735  01BA  2A0E               	goto	l3520
  1736  01BB                     u2120:	
  1737  01BB                     l3500:	
  1738  01BB  3079               	movlw	121
  1739  01BC  0645               	xorwf	_b,w
  1740  01BD  1D03               	btfss	3,2
  1741  01BE  29C0               	goto	u2131
  1742  01BF  29C1               	goto	u2130
  1743  01C0                     u2131:	
  1744  01C0  2A0E               	goto	l3520
  1745  01C1                     u2130:	
  1746  01C1                     l3502:	
  1747                           
  1748                           ;Button_src.c: 205:                     c++;
  1749  01C1  3001               	movlw	1
  1750  01C2  00D6               	movwf	??_time_settings
  1751  01C3  0856               	movf	??_time_settings,w
  1752  01C4  07C4               	addwf	_c,f
  1753  01C5                     l3504:	
  1754                           
  1755                           ;Button_src.c: 206:                     t++;
  1756  01C5  3001               	movlw	1
  1757  01C6  07B7               	addwf	_t,f
  1758  01C7  1803               	skipnc
  1759  01C8  0AB8               	incf	_t+1,f
  1760  01C9  3000               	movlw	0
  1761  01CA  07B8               	addwf	_t+1,f
  1762  01CB                     l3506:	
  1763                           
  1764                           ;Button_src.c: 207:                     t = modulus_func(t,10);
  1765  01CB  0838               	movf	_t+1,w
  1766  01CC  00F8               	movwf	modulus_func@x+1
  1767  01CD  0837               	movf	_t,w
  1768  01CE  00F7               	movwf	modulus_func@x
  1769  01CF  300A               	movlw	10
  1770  01D0  00F9               	movwf	modulus_func@y
  1771  01D1  3000               	movlw	0
  1772  01D2  00FA               	movwf	modulus_func@y+1
  1773  01D3  160A  118A  260B  120A  118A  	fcall	_modulus_func
  1774  01D8  0878               	movf	?_modulus_func+1,w
  1775  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1776  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1777  01DB  00B8               	movwf	_t+1
  1778  01DC  0877               	movf	?_modulus_func,w
  1779  01DD  00B7               	movwf	_t
  1780  01DE                     l3508:	
  1781                           
  1782                           ;Button_src.c: 208:                     w = incrementor(w,t,'9');
  1783  01DE  0836               	movf	_w+1,w
  1784  01DF  00D2               	movwf	incrementor@upper_val+1
  1785  01E0  0835               	movf	_w,w
  1786  01E1  00D1               	movwf	incrementor@upper_val
  1787  01E2  0838               	movf	_t+1,w
  1788  01E3  00D4               	movwf	incrementor@lower_val+1
  1789  01E4  0837               	movf	_t,w
  1790  01E5  00D3               	movwf	incrementor@lower_val
  1791  01E6  3039               	movlw	57
  1792  01E7  00D6               	movwf	??_time_settings
  1793  01E8  0856               	movf	??_time_settings,w
  1794  01E9  00D5               	movwf	incrementor@z
  1795  01EA  160A  118A  277C  120A  118A  	fcall	_incrementor
  1796  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1797  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1798  01F1  00D7               	movwf	??_time_settings+1
  1799  01F2  01D8               	clrf	??_time_settings+2
  1800  01F3  0857               	movf	??_time_settings+1,w
  1801  01F4  00B5               	movwf	_w
  1802  01F5  0858               	movf	??_time_settings+2,w
  1803  01F6  00B6               	movwf	_w+1
  1804  01F7                     l3510:	
  1805                           
  1806                           ;Button_src.c: 209:                     if(c == (0x59 + 1)){
  1807  01F7  305A               	movlw	90
  1808  01F8  0644               	xorwf	_c,w
  1809  01F9  1D03               	btfss	3,2
  1810  01FA  29FC               	goto	u2141
  1811  01FB  29FD               	goto	u2140
  1812  01FC                     u2141:	
  1813  01FC  29FE               	goto	l3514
  1814  01FD                     u2140:	
  1815  01FD                     l3512:	
  1816                           
  1817                           ;Button_src.c: 210:                         c = 0x00;
  1818  01FD  01C4               	clrf	_c
  1819  01FE                     l3514:	
  1820                           
  1821                           ;Button_src.c: 212:                     if(w == 6){
  1822  01FE  3006               	movlw	6
  1823  01FF  0635               	xorwf	_w,w
  1824  0200  0436               	iorwf	_w+1,w
  1825  0201  1D03               	btfss	3,2
  1826  0202  2A04               	goto	u2151
  1827  0203  2A05               	goto	u2150
  1828  0204                     u2151:	
  1829  0204  2A09               	goto	l3518
  1830  0205                     u2150:	
  1831  0205                     l3516:	
  1832                           
  1833                           ;Button_src.c: 213:                         w = 0;
  1834  0205  01B5               	clrf	_w
  1835  0206  01B6               	clrf	_w+1
  1836                           
  1837                           ;Button_src.c: 214:                         t = 0;
  1838  0207  01B7               	clrf	_t
  1839  0208  01B8               	clrf	_t+1
  1840  0209                     l3518:	
  1841                           
  1842                           ;Button_src.c: 216:                     button_delay();
  1843  0209  160A  118A  2669  120A  118A  	fcall	_button_delay
  1844  020E                     l3520:	
  1845                           
  1846                           ;Button_src.c: 219:              write_cmd(0x88);
  1847  020E  3088               	movlw	136
  1848  020F  120A  158A  2005  120A  118A  	fcall	_write_cmd
  1849  0214                     l3522:	
  1850                           
  1851                           ;Button_src.c: 220:                     table[2] = a;
  1852  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0216  0846               	movf	_a,w
  1855  0217  00D6               	movwf	??_time_settings
  1856  0218  0856               	movf	??_time_settings,w
  1857  0219  00DD               	movwf	_table+2
  1858  021A                     l3524:	
  1859                           
  1860                           ;Button_src.c: 221:                     table[1] = c;
  1861  021A  0844               	movf	_c,w
  1862  021B  00D6               	movwf	??_time_settings
  1863  021C  0856               	movf	??_time_settings,w
  1864  021D  00DC               	movwf	_table+1
  1865  021E                     l3526:	
  1866                           
  1867                           ;Button_src.c: 226:                     a = time_date_delimiter(a,0x11,'9');
  1868  021E  3011               	movlw	17
  1869  021F  00D6               	movwf	??_time_settings
  1870  0220  0856               	movf	??_time_settings,w
  1871  0221  00F0               	movwf	time_date_delimiter@hex
  1872  0222  3039               	movlw	57
  1873  0223  00D7               	movwf	??_time_settings+1
  1874  0224  0857               	movf	??_time_settings+1,w
  1875  0225  00F1               	movwf	time_date_delimiter@limiter
  1876  0226  0846               	movf	_a,w
  1877  0227  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  1878  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1879  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1880  022E  00D8               	movwf	??_time_settings+2
  1881  022F  0858               	movf	??_time_settings+2,w
  1882  0230  00C6               	movwf	_a
  1883  0231                     l3528:	
  1884                           
  1885                           ;Button_src.c: 227:                     a = time_date_delimiter(a,0x21,'J');
  1886  0231  3021               	movlw	33
  1887  0232  00D6               	movwf	??_time_settings
  1888  0233  0856               	movf	??_time_settings,w
  1889  0234  00F0               	movwf	time_date_delimiter@hex
  1890  0235  304A               	movlw	74
  1891  0236  00D7               	movwf	??_time_settings+1
  1892  0237  0857               	movf	??_time_settings+1,w
  1893  0238  00F1               	movwf	time_date_delimiter@limiter
  1894  0239  0846               	movf	_a,w
  1895  023A  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  1896  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0241  00D8               	movwf	??_time_settings+2
  1899  0242  0858               	movf	??_time_settings+2,w
  1900  0243  00C6               	movwf	_a
  1901  0244                     l3530:	
  1902                           
  1903                           ;Button_src.c: 229:                     c = time_date_delimiter(c,0x11,'9');
  1904  0244  3011               	movlw	17
  1905  0245  00D6               	movwf	??_time_settings
  1906  0246  0856               	movf	??_time_settings,w
  1907  0247  00F0               	movwf	time_date_delimiter@hex
  1908  0248  3039               	movlw	57
  1909  0249  00D7               	movwf	??_time_settings+1
  1910  024A  0857               	movf	??_time_settings+1,w
  1911  024B  00F1               	movwf	time_date_delimiter@limiter
  1912  024C  0844               	movf	_c,w
  1913  024D  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  1914  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0254  00D8               	movwf	??_time_settings+2
  1917  0255  0858               	movf	??_time_settings+2,w
  1918  0256  00C4               	movwf	_c
  1919  0257                     l3532:	
  1920                           
  1921                           ;Button_src.c: 230:                     c = time_date_delimiter(c,0x21,'J');
  1922  0257  3021               	movlw	33
  1923  0258  00D6               	movwf	??_time_settings
  1924  0259  0856               	movf	??_time_settings,w
  1925  025A  00F0               	movwf	time_date_delimiter@hex
  1926  025B  304A               	movlw	74
  1927  025C  00D7               	movwf	??_time_settings+1
  1928  025D  0857               	movf	??_time_settings+1,w
  1929  025E  00F1               	movwf	time_date_delimiter@limiter
  1930  025F  0844               	movf	_c,w
  1931  0260  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  1932  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0267  00D8               	movwf	??_time_settings+2
  1935  0268  0858               	movf	??_time_settings+2,w
  1936  0269  00C4               	movwf	_c
  1937  026A                     l3534:	
  1938                           
  1939                           ;Button_src.c: 231:                     c = time_date_delimiter(c,0x31,'Y');
  1940  026A  3031               	movlw	49
  1941  026B  00D6               	movwf	??_time_settings
  1942  026C  0856               	movf	??_time_settings,w
  1943  026D  00F0               	movwf	time_date_delimiter@hex
  1944  026E  3059               	movlw	89
  1945  026F  00D7               	movwf	??_time_settings+1
  1946  0270  0857               	movf	??_time_settings+1,w
  1947  0271  00F1               	movwf	time_date_delimiter@limiter
  1948  0272  0844               	movf	_c,w
  1949  0273  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  1950  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1952  027A  00D8               	movwf	??_time_settings+2
  1953  027B  0858               	movf	??_time_settings+2,w
  1954  027C  00C4               	movwf	_c
  1955  027D                     l3536:	
  1956                           
  1957                           ;Button_src.c: 232:                     c = time_date_delimiter(c,0x41,'j');
  1958  027D  3041               	movlw	65
  1959  027E  00D6               	movwf	??_time_settings
  1960  027F  0856               	movf	??_time_settings,w
  1961  0280  00F0               	movwf	time_date_delimiter@hex
  1962  0281  306A               	movlw	106
  1963  0282  00D7               	movwf	??_time_settings+1
  1964  0283  0857               	movf	??_time_settings+1,w
  1965  0284  00F1               	movwf	time_date_delimiter@limiter
  1966  0285  0844               	movf	_c,w
  1967  0286  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  1968  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1969  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1970  028D  00D8               	movwf	??_time_settings+2
  1971  028E  0858               	movf	??_time_settings+2,w
  1972  028F  00C4               	movwf	_c
  1973  0290                     l3538:	
  1974                           
  1975                           ;Button_src.c: 233:                     c = time_date_delimiter(c,0x51,'z');
  1976  0290  3051               	movlw	81
  1977  0291  00D6               	movwf	??_time_settings
  1978  0292  0856               	movf	??_time_settings,w
  1979  0293  00F0               	movwf	time_date_delimiter@hex
  1980  0294  307A               	movlw	122
  1981  0295  00D7               	movwf	??_time_settings+1
  1982  0296  0857               	movf	??_time_settings+1,w
  1983  0297  00F1               	movwf	time_date_delimiter@limiter
  1984  0298  0844               	movf	_c,w
  1985  0299  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  1986  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1987  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1988  02A0  00D8               	movwf	??_time_settings+2
  1989  02A1  0858               	movf	??_time_settings+2,w
  1990  02A2  00C4               	movwf	_c
  1991  02A3                     l3540:	
  1992                           
  1993                           ;Button_src.c: 235:                   RC0 = 0;
  1994  02A3  1007               	bcf	7,0	;volatile
  1995  02A4                     l3542:	
  1996                           
  1997                           ;Button_src.c: 236:                   RC1 = 1;
  1998  02A4  1487               	bsf	7,1	;volatile
  1999  02A5                     l3544:	
  2000                           
  2001                           ;Button_src.c: 237:                   RC2 = 1;
  2002  02A5  1507               	bsf	7,2	;volatile
  2003  02A6                     l3546:	
  2004                           
  2005                           ;Button_src.c: 238:                   RC3 = 1;
  2006  02A6  1587               	bsf	7,3	;volatile
  2007  02A7                     l3548:	
  2008                           
  2009                           ;Button_src.c: 239:                     if (RC6 == 0 ){
  2010  02A7  1B07               	btfsc	7,6	;volatile
  2011  02A8  2AAA               	goto	u2161
  2012  02A9  2AAB               	goto	u2160
  2013  02AA                     u2161:	
  2014  02AA  2AC3               	goto	l523
  2015  02AB                     u2160:	
  2016  02AB                     l3550:	
  2017                           
  2018                           ;Button_src.c: 240:                           write_cmd(0x1);
  2019  02AB  3001               	movlw	1
  2020  02AC  120A  158A  2005  120A  118A  	fcall	_write_cmd
  2021  02B1                     l3552:	
  2022                           
  2023                           ;Button_src.c: 241:                           a = 0x00;
  2024  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2025  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2026  02B3  01C6               	clrf	_a
  2027  02B4                     l3554:	
  2028                           
  2029                           ;Button_src.c: 242:                           c = 0x00;
  2030  02B4  01C4               	clrf	_c
  2031  02B5                     l3556:	
  2032                           
  2033                           ;Button_src.c: 243:                           x = 0;
  2034  02B5  01B3               	clrf	_x
  2035  02B6  01B4               	clrf	_x+1
  2036  02B7                     l3558:	
  2037                           
  2038                           ;Button_src.c: 244:                           y = 0;
  2039  02B7  01B1               	clrf	_y
  2040  02B8  01B2               	clrf	_y+1
  2041  02B9                     l3560:	
  2042                           
  2043                           ;Button_src.c: 245:                           w = 0;
  2044  02B9  01B5               	clrf	_w
  2045  02BA  01B6               	clrf	_w+1
  2046  02BB                     l3562:	
  2047                           
  2048                           ;Button_src.c: 246:                           t = 0;
  2049  02BB  01B7               	clrf	_t
  2050  02BC  01B8               	clrf	_t+1
  2051  02BD                     l3564:	
  2052                           
  2053                           ;Button_src.c: 247:                           set_time();
  2054  02BD  160A  118A  27A8  120A  118A  	fcall	_set_time
  2055  02C2  2BD2               	goto	l524
  2056  02C3                     l523:	
  2057                           ;Button_src.c: 249:                             }
  2058                           
  2059                           
  2060                           ;Button_src.c: 250:                   RC0 = 1;
  2061  02C3  1407               	bsf	7,0	;volatile
  2062                           
  2063                           ;Button_src.c: 251:                   RC1 = 1;
  2064  02C4  1487               	bsf	7,1	;volatile
  2065                           
  2066                           ;Button_src.c: 252:                   RC2 = 0;
  2067  02C5  1107               	bcf	7,2	;volatile
  2068                           
  2069                           ;Button_src.c: 253:                   RC3 = 1;
  2070  02C6  1587               	bsf	7,3	;volatile
  2071  02C7                     l3568:	
  2072                           
  2073                           ;Button_src.c: 254:                   z = modulus_func(z,2);
  2074  02C7  0830               	movf	_z+1,w
  2075  02C8  00F8               	movwf	modulus_func@x+1
  2076  02C9  082F               	movf	_z,w
  2077  02CA  00F7               	movwf	modulus_func@x
  2078  02CB  3002               	movlw	2
  2079  02CC  00F9               	movwf	modulus_func@y
  2080  02CD  3000               	movlw	0
  2081  02CE  00FA               	movwf	modulus_func@y+1
  2082  02CF  160A  118A  260B  120A  118A  	fcall	_modulus_func
  2083  02D4  0878               	movf	?_modulus_func+1,w
  2084  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2085  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2086  02D7  00B0               	movwf	_z+1
  2087  02D8  0877               	movf	?_modulus_func,w
  2088  02D9  00AF               	movwf	_z
  2089  02DA                     l3570:	
  2090                           
  2091                           ;Button_src.c: 255:                   if(RC4 == 0 && z ==0){
  2092  02DA  1A07               	btfsc	7,4	;volatile
  2093  02DB  2ADD               	goto	u2171
  2094  02DC  2ADE               	goto	u2170
  2095  02DD                     u2171:	
  2096  02DD  2B1B               	goto	l3580
  2097  02DE                     u2170:	
  2098  02DE                     l3572:	
  2099  02DE  082F               	movf	_z,w
  2100  02DF  0430               	iorwf	_z+1,w
  2101  02E0  1D03               	btfss	3,2
  2102  02E1  2AE3               	goto	u2181
  2103  02E2  2AE4               	goto	u2180
  2104  02E3                     u2181:	
  2105  02E3  2B1B               	goto	l3580
  2106  02E4                     u2180:	
  2107  02E4                     l3574:	
  2108                           
  2109                           ;Button_src.c: 256:                       write_cmd(0x90);
  2110  02E4  3090               	movlw	144
  2111  02E5  120A  158A  2005  120A  118A  	fcall	_write_cmd
  2112                           
  2113                           ;Button_src.c: 257:                       write_char('H');
  2114  02EA  3048               	movlw	72
  2115  02EB  160A  118A  26C2  120A  118A  	fcall	_write_char
  2116                           
  2117                           ;Button_src.c: 258:                       write_char('o');
  2118  02F0  306F               	movlw	111
  2119  02F1  160A  118A  26C2  120A  118A  	fcall	_write_char
  2120                           
  2121                           ;Button_src.c: 259:                       write_char('u');
  2122  02F6  3075               	movlw	117
  2123  02F7  160A  118A  26C2  120A  118A  	fcall	_write_char
  2124                           
  2125                           ;Button_src.c: 260:                       write_char('r');
  2126  02FC  3072               	movlw	114
  2127  02FD  160A  118A  26C2  120A  118A  	fcall	_write_char
  2128                           
  2129                           ;Button_src.c: 261:                       write_char(':');
  2130  0302  303A               	movlw	58
  2131  0303  160A  118A  26C2  120A  118A  	fcall	_write_char
  2132  0308                     l3576:	
  2133                           
  2134                           ;Button_src.c: 262:                       b = 'x';
  2135  0308  3078               	movlw	120
  2136  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2137  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2138  030B  00D6               	movwf	??_time_settings
  2139  030C  0856               	movf	??_time_settings,w
  2140  030D  00C5               	movwf	_b
  2141  030E                     l3578:	
  2142                           
  2143                           ;Button_src.c: 263:                       button_delay();
  2144  030E  160A  118A  2669  120A  118A  	fcall	_button_delay
  2145                           
  2146                           ;Button_src.c: 264:                       z++;
  2147  0313  3001               	movlw	1
  2148  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0316  07AF               	addwf	_z,f
  2151  0317  1803               	skipnc
  2152  0318  0AB0               	incf	_z+1,f
  2153  0319  3000               	movlw	0
  2154  031A  07B0               	addwf	_z+1,f
  2155  031B                     l3580:	
  2156                           
  2157                           ;Button_src.c: 266:                   RC0 = 1;
  2158  031B  1407               	bsf	7,0	;volatile
  2159  031C                     l3582:	
  2160                           
  2161                           ;Button_src.c: 267:                   RC1 = 1;
  2162  031C  1487               	bsf	7,1	;volatile
  2163  031D                     l3584:	
  2164                           
  2165                           ;Button_src.c: 268:                   RC2 = 0;
  2166  031D  1107               	bcf	7,2	;volatile
  2167  031E                     l3586:	
  2168                           
  2169                           ;Button_src.c: 269:                   RC3 = 1;
  2170  031E  1587               	bsf	7,3	;volatile
  2171  031F                     l3588:	
  2172                           
  2173                           ;Button_src.c: 271:                   if(RC4 == 0&& z ==1){
  2174  031F  1A07               	btfsc	7,4	;volatile
  2175  0320  2B22               	goto	u2191
  2176  0321  2B23               	goto	u2190
  2177  0322                     u2191:	
  2178  0322  2B5E               	goto	l526
  2179  0323                     u2190:	
  2180  0323                     l3590:	
  2181  0323  032F               	decf	_z,w
  2182  0324  0430               	iorwf	_z+1,w
  2183  0325  1D03               	btfss	3,2
  2184  0326  2B28               	goto	u2201
  2185  0327  2B29               	goto	u2200
  2186  0328                     u2201:	
  2187  0328  2B5E               	goto	l526
  2188  0329                     u2200:	
  2189  0329                     l3592:	
  2190                           
  2191                           ;Button_src.c: 272:                     z++;
  2192  0329  3001               	movlw	1
  2193  032A  07AF               	addwf	_z,f
  2194  032B  1803               	skipnc
  2195  032C  0AB0               	incf	_z+1,f
  2196  032D  3000               	movlw	0
  2197  032E  07B0               	addwf	_z+1,f
  2198  032F                     l3594:	
  2199                           
  2200                           ;Button_src.c: 273:                     button_delay();
  2201  032F  160A  118A  2669  120A  118A  	fcall	_button_delay
  2202  0334                     l3596:	
  2203                           
  2204                           ;Button_src.c: 274:                     write_cmd(0x90);
  2205  0334  3090               	movlw	144
  2206  0335  120A  158A  2005  120A  118A  	fcall	_write_cmd
  2207  033A                     l3598:	
  2208                           
  2209                           ;Button_src.c: 275:                     write_char('M');
  2210  033A  304D               	movlw	77
  2211  033B  160A  118A  26C2  120A  118A  	fcall	_write_char
  2212  0340                     l3600:	
  2213                           
  2214                           ;Button_src.c: 276:                     write_char('i');
  2215  0340  3069               	movlw	105
  2216  0341  160A  118A  26C2  120A  118A  	fcall	_write_char
  2217  0346                     l3602:	
  2218                           
  2219                           ;Button_src.c: 277:                     write_char('n');
  2220  0346  306E               	movlw	110
  2221  0347  160A  118A  26C2  120A  118A  	fcall	_write_char
  2222  034C                     l3604:	
  2223                           
  2224                           ;Button_src.c: 278:                     write_char('s');
  2225  034C  3073               	movlw	115
  2226  034D  160A  118A  26C2  120A  118A  	fcall	_write_char
  2227  0352                     l3606:	
  2228                           
  2229                           ;Button_src.c: 279:                     write_char(':');
  2230  0352  303A               	movlw	58
  2231  0353  160A  118A  26C2  120A  118A  	fcall	_write_char
  2232  0358                     l3608:	
  2233                           
  2234                           ;Button_src.c: 280:                     b = 'y';
  2235  0358  3079               	movlw	121
  2236  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2237  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2238  035B  00D6               	movwf	??_time_settings
  2239  035C  0856               	movf	??_time_settings,w
  2240  035D  00C5               	movwf	_b
  2241  035E                     l526:	
  2242                           ;Button_src.c: 281:                   }
  2243                           
  2244                           
  2245                           ;Button_src.c: 282:                    write_cmd(0x88);
  2246  035E  3088               	movlw	136
  2247  035F  120A  158A  2005  120A  118A  	fcall	_write_cmd
  2248  0364                     l3610:	
  2249                           
  2250                           ;Button_src.c: 289:                   RC0 = 1;
  2251  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0366  1407               	bsf	7,0	;volatile
  2254  0367                     l3612:	
  2255                           
  2256                           ;Button_src.c: 290:                   RC1 = 1;
  2257  0367  1487               	bsf	7,1	;volatile
  2258  0368                     l3614:	
  2259                           
  2260                           ;Button_src.c: 291:                   RC2 = 0;
  2261  0368  1107               	bcf	7,2	;volatile
  2262  0369                     l3616:	
  2263                           
  2264                           ;Button_src.c: 292:                   RC3 = 1;
  2265  0369  1587               	bsf	7,3	;volatile
  2266                           
  2267                           ;Button_src.c: 294:              write_cmd(0x88);
  2268  036A  3088               	movlw	136
  2269  036B  120A  158A  2005  120A  118A  	fcall	_write_cmd
  2270                           
  2271                           ;Button_src.c: 295:              write_char('T');
  2272  0370  3054               	movlw	84
  2273  0371  160A  118A  26C2  120A  118A  	fcall	_write_char
  2274                           
  2275                           ;Button_src.c: 296:              write_char('i');
  2276  0376  3069               	movlw	105
  2277  0377  160A  118A  26C2  120A  118A  	fcall	_write_char
  2278                           
  2279                           ;Button_src.c: 297:              write_char('m');
  2280  037C  306D               	movlw	109
  2281  037D  160A  118A  26C2  120A  118A  	fcall	_write_char
  2282                           
  2283                           ;Button_src.c: 298:              write_char('e');
  2284  0382  3065               	movlw	101
  2285  0383  160A  118A  26C2  120A  118A  	fcall	_write_char
  2286                           
  2287                           ;Button_src.c: 299:              write_char(':');
  2288  0388  303A               	movlw	58
  2289  0389  160A  118A  26C2  120A  118A  	fcall	_write_char
  2290                           
  2291                           ;Button_src.c: 300:              write_char(y + '0');
  2292  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2293  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0390  0831               	movf	_y,w
  2295  0391  3E30               	addlw	48
  2296  0392  160A  118A  26C2  120A  118A  	fcall	_write_char
  2297                           
  2298                           ;Button_src.c: 301:              write_char(x + '0');
  2299  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0399  0833               	movf	_x,w
  2302  039A  3E30               	addlw	48
  2303  039B  160A  118A  26C2  120A  118A  	fcall	_write_char
  2304                           
  2305                           ;Button_src.c: 302:              write_char(':');
  2306  03A0  303A               	movlw	58
  2307  03A1  160A  118A  26C2  120A  118A  	fcall	_write_char
  2308                           
  2309                           ;Button_src.c: 303:              write_char(w + '0');
  2310  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2311  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2312  03A8  0835               	movf	_w,w
  2313  03A9  3E30               	addlw	48
  2314  03AA  160A  118A  26C2  120A  118A  	fcall	_write_char
  2315                           
  2316                           ;Button_src.c: 304:              write_char(t + '0');
  2317  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2318  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2319  03B1  0837               	movf	_t,w
  2320  03B2  3E30               	addlw	48
  2321  03B3  160A  118A  26C2  120A  118A  	fcall	_write_char
  2322  03B8                     l3618:	
  2323                           
  2324                           ;Button_src.c: 306:             RC0 = 0;
  2325  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2326  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2327  03BA  1007               	bcf	7,0	;volatile
  2328  03BB                     l3620:	
  2329                           
  2330                           ;Button_src.c: 307:             RC1 = 1;
  2331  03BB  1487               	bsf	7,1	;volatile
  2332  03BC                     l3622:	
  2333                           
  2334                           ;Button_src.c: 308:             RC2 = 1;
  2335  03BC  1507               	bsf	7,2	;volatile
  2336  03BD                     l3624:	
  2337                           
  2338                           ;Button_src.c: 309:             RC3 = 1;
  2339  03BD  1587               	bsf	7,3	;volatile
  2340  03BE                     l3626:	
  2341                           
  2342                           ;Button_src.c: 310:             if (RC7 == 0 ){
  2343  03BE  1B87               	btfsc	7,7	;volatile
  2344  03BF  2BC1               	goto	u2211
  2345  03C0  2BC2               	goto	u2210
  2346  03C1                     u2211:	
  2347  03C1  28F5               	goto	l517
  2348  03C2                     u2210:	
  2349  03C2                     l3628:	
  2350                           
  2351                           ;Button_src.c: 311:             a = 0x00;
  2352  03C2  01C6               	clrf	_a
  2353                           
  2354                           ;Button_src.c: 312:             c = 0x00;
  2355  03C3  01C4               	clrf	_c
  2356                           
  2357                           ;Button_src.c: 313:             x = 0;
  2358  03C4  01B3               	clrf	_x
  2359  03C5  01B4               	clrf	_x+1
  2360                           
  2361                           ;Button_src.c: 314:             y = 0;
  2362  03C6  01B1               	clrf	_y
  2363  03C7  01B2               	clrf	_y+1
  2364                           
  2365                           ;Button_src.c: 315:             w = 0;
  2366  03C8  01B5               	clrf	_w
  2367  03C9  01B6               	clrf	_w+1
  2368                           
  2369                           ;Button_src.c: 316:             t = 0;
  2370  03CA  01B7               	clrf	_t
  2371  03CB  01B8               	clrf	_t+1
  2372  03CC                     l3630:	
  2373                           
  2374                           ;Button_src.c: 317:             write_cmd(0x1);
  2375  03CC  3001               	movlw	1
  2376  03CD  120A  158A  2005  120A  118A  	fcall	_write_cmd
  2377  03D2                     l524:	
  2378                           ;Button_src.c: 318:             break;
  2379                           
  2380  03D2  0008               	return
  2381  03D3                     __end_of_time_settings:	
  2382                           
  2383                           	psect	text2
  2384  0D78                     __ptext2:	
  2385 ;; *************** function _thermometer_threshhold_settings *****************
  2386 ;; Defined at:
  2387 ;;		line 19 in file "Button_src.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  i               2    8[BANK0 ] int 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      void 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       0       0       0       0
  2402 ;;      Locals:         0       2       0       0       0
  2403 ;;      Temps:          0       3       0       0       0
  2404 ;;      Totals:         0       5       0       0       0
  2405 ;;Total ram usage:        5 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		_button_delay
  2410 ;;		_decrementor
  2411 ;;		_incrementor
  2412 ;;		_modulus_func
  2413 ;;		_write_char
  2414 ;;		_write_cmd
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _thermometer_threshhold_settings
  2422  0D78                     _thermometer_threshhold_settings:	
  2423  0D78                     l3094:	
  2424                           ;incstack = 0
  2425                           ; Regs used in _thermometer_threshhold_settings: [wreg+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2426                           
  2427                           
  2428                           ;Button_src.c: 20:  RC0 = 1;
  2429  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0D7A  1407               	bsf	7,0	;volatile
  2432                           
  2433                           ;Button_src.c: 21:  RC1 = 0;
  2434  0D7B  1087               	bcf	7,1	;volatile
  2435                           
  2436                           ;Button_src.c: 22:  RC2 = 1;
  2437  0D7C  1507               	bsf	7,2	;volatile
  2438                           
  2439                           ;Button_src.c: 23:  RC3 = 1;
  2440  0D7D  1587               	bsf	7,3	;volatile
  2441                           
  2442                           ;Button_src.c: 24:   if (RC4 == 0){
  2443  0D7E  1A07               	btfsc	7,4	;volatile
  2444  0D7F  2D81               	goto	u1781
  2445  0D80  2D82               	goto	u1780
  2446  0D81                     u1781:	
  2447  0D81  2FFF               	goto	l507
  2448  0D82                     u1780:	
  2449  0D82                     l3096:	
  2450                           
  2451                           ;Button_src.c: 25:       write_cmd(0x1);
  2452  0D82  3001               	movlw	1
  2453  0D83  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2454  0D88                     l501:	
  2455                           ;Button_src.c: 26:       for(;;){
  2456                           
  2457                           
  2458                           ;Button_src.c: 27:             write_cmd(0x80);
  2459  0D88  3080               	movlw	128
  2460  0D89  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2461                           
  2462                           ;Button_src.c: 28:             write_char('t');
  2463  0D8E  3074               	movlw	116
  2464  0D8F  160A  118A  26C2  120A  158A  	fcall	_write_char
  2465                           
  2466                           ;Button_src.c: 29:             write_char('h');
  2467  0D94  3068               	movlw	104
  2468  0D95  160A  118A  26C2  120A  158A  	fcall	_write_char
  2469                           
  2470                           ;Button_src.c: 30:             write_char('r');
  2471  0D9A  3072               	movlw	114
  2472  0D9B  160A  118A  26C2  120A  158A  	fcall	_write_char
  2473                           
  2474                           ;Button_src.c: 31:             write_char('e');
  2475  0DA0  3065               	movlw	101
  2476  0DA1  160A  118A  26C2  120A  158A  	fcall	_write_char
  2477                           
  2478                           ;Button_src.c: 32:             write_char('s');
  2479  0DA6  3073               	movlw	115
  2480  0DA7  160A  118A  26C2  120A  158A  	fcall	_write_char
  2481                           
  2482                           ;Button_src.c: 33:             write_char('h');
  2483  0DAC  3068               	movlw	104
  2484  0DAD  160A  118A  26C2  120A  158A  	fcall	_write_char
  2485                           
  2486                           ;Button_src.c: 34:             write_char('o');
  2487  0DB2  306F               	movlw	111
  2488  0DB3  160A  118A  26C2  120A  158A  	fcall	_write_char
  2489                           
  2490                           ;Button_src.c: 35:             write_char('l');
  2491  0DB8  306C               	movlw	108
  2492  0DB9  160A  118A  26C2  120A  158A  	fcall	_write_char
  2493                           
  2494                           ;Button_src.c: 36:             write_char('d');
  2495  0DBE  3064               	movlw	100
  2496  0DBF  160A  118A  26C2  120A  158A  	fcall	_write_char
  2497                           
  2498                           ;Button_src.c: 38:             write_cmd(0x90);
  2499  0DC4  3090               	movlw	144
  2500  0DC5  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2501                           
  2502                           ;Button_src.c: 39:             write_char('C');
  2503  0DCA  3043               	movlw	67
  2504  0DCB  160A  118A  26C2  120A  158A  	fcall	_write_char
  2505                           
  2506                           ;Button_src.c: 40:             write_char('u');
  2507  0DD0  3075               	movlw	117
  2508  0DD1  160A  118A  26C2  120A  158A  	fcall	_write_char
  2509                           
  2510                           ;Button_src.c: 41:             write_char('r');
  2511  0DD6  3072               	movlw	114
  2512  0DD7  160A  118A  26C2  120A  158A  	fcall	_write_char
  2513                           
  2514                           ;Button_src.c: 42:             write_char('r');
  2515  0DDC  3072               	movlw	114
  2516  0DDD  160A  118A  26C2  120A  158A  	fcall	_write_char
  2517                           
  2518                           ;Button_src.c: 43:             write_char('e');
  2519  0DE2  3065               	movlw	101
  2520  0DE3  160A  118A  26C2  120A  158A  	fcall	_write_char
  2521                           
  2522                           ;Button_src.c: 44:             write_char('n');
  2523  0DE8  306E               	movlw	110
  2524  0DE9  160A  118A  26C2  120A  158A  	fcall	_write_char
  2525                           
  2526                           ;Button_src.c: 45:             write_char('t');
  2527  0DEE  3074               	movlw	116
  2528  0DEF  160A  118A  26C2  120A  158A  	fcall	_write_char
  2529                           
  2530                           ;Button_src.c: 46:             write_char(':');
  2531  0DF4  303A               	movlw	58
  2532  0DF5  160A  118A  26C2  120A  158A  	fcall	_write_char
  2533                           
  2534                           ;Button_src.c: 48:             write_char(var1 + '0');
  2535  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0DFC  083D               	movf	_var1,w
  2538  0DFD  3E30               	addlw	48
  2539  0DFE  160A  118A  26C2  120A  158A  	fcall	_write_char
  2540                           
  2541                           ;Button_src.c: 49:             write_char(var2 + '0');
  2542  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0E05  083C               	movf	_var2,w
  2545  0E06  3E30               	addlw	48
  2546  0E07  160A  118A  26C2  120A  158A  	fcall	_write_char
  2547                           
  2548                           ;Button_src.c: 51:             write_cmd(0x88);
  2549  0E0C  3088               	movlw	136
  2550  0E0D  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2551                           
  2552                           ;Button_src.c: 52:             write_char('S');
  2553  0E12  3053               	movlw	83
  2554  0E13  160A  118A  26C2  120A  158A  	fcall	_write_char
  2555                           
  2556                           ;Button_src.c: 53:             write_char('e');
  2557  0E18  3065               	movlw	101
  2558  0E19  160A  118A  26C2  120A  158A  	fcall	_write_char
  2559                           
  2560                           ;Button_src.c: 54:             write_char('t');
  2561  0E1E  3074               	movlw	116
  2562  0E1F  160A  118A  26C2  120A  158A  	fcall	_write_char
  2563                           
  2564                           ;Button_src.c: 55:             write_char('_');
  2565  0E24  305F               	movlw	95
  2566  0E25  160A  118A  26C2  120A  158A  	fcall	_write_char
  2567                           
  2568                           ;Button_src.c: 56:             write_char('t');
  2569  0E2A  3074               	movlw	116
  2570  0E2B  160A  118A  26C2  120A  158A  	fcall	_write_char
  2571                           
  2572                           ;Button_src.c: 57:             write_char('h');
  2573  0E30  3068               	movlw	104
  2574  0E31  160A  118A  26C2  120A  158A  	fcall	_write_char
  2575                           
  2576                           ;Button_src.c: 58:             write_char('r');
  2577  0E36  3072               	movlw	114
  2578  0E37  160A  118A  26C2  120A  158A  	fcall	_write_char
  2579                           
  2580                           ;Button_src.c: 59:             write_char('e');
  2581  0E3C  3065               	movlw	101
  2582  0E3D  160A  118A  26C2  120A  158A  	fcall	_write_char
  2583                           
  2584                           ;Button_src.c: 60:             write_char('s');
  2585  0E42  3073               	movlw	115
  2586  0E43  160A  118A  26C2  120A  158A  	fcall	_write_char
  2587                           
  2588                           ;Button_src.c: 61:             write_char('h');
  2589  0E48  3068               	movlw	104
  2590  0E49  160A  118A  26C2  120A  158A  	fcall	_write_char
  2591                           
  2592                           ;Button_src.c: 62:             write_char('o');
  2593  0E4E  306F               	movlw	111
  2594  0E4F  160A  118A  26C2  120A  158A  	fcall	_write_char
  2595                           
  2596                           ;Button_src.c: 63:             write_char('l');
  2597  0E54  306C               	movlw	108
  2598  0E55  160A  118A  26C2  120A  158A  	fcall	_write_char
  2599                           
  2600                           ;Button_src.c: 64:             write_char('d');
  2601  0E5A  3064               	movlw	100
  2602  0E5B  160A  118A  26C2  120A  158A  	fcall	_write_char
  2603                           
  2604                           ;Button_src.c: 65:             write_char(':');
  2605  0E60  303A               	movlw	58
  2606  0E61  160A  118A  26C2  120A  158A  	fcall	_write_char
  2607                           
  2608                           ;Button_src.c: 67:             write_cmd(0x98);
  2609  0E66  3098               	movlw	152
  2610  0E67  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2611  0E6C                     l3098:	
  2612                           
  2613                           ;Button_src.c: 68:             RC0 = 1;
  2614  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0E6E  1407               	bsf	7,0	;volatile
  2617  0E6F                     l3100:	
  2618                           
  2619                           ;Button_src.c: 69:             RC1 = 0;
  2620  0E6F  1087               	bcf	7,1	;volatile
  2621  0E70                     l3102:	
  2622                           
  2623                           ;Button_src.c: 70:             RC2 = 1;
  2624  0E70  1507               	bsf	7,2	;volatile
  2625  0E71                     l3104:	
  2626                           
  2627                           ;Button_src.c: 71:             RC3 = 1;
  2628  0E71  1587               	bsf	7,3	;volatile
  2629  0E72                     l3106:	
  2630                           
  2631                           ;Button_src.c: 72:             t = 0;
  2632  0E72  01B7               	clrf	_t
  2633  0E73  01B8               	clrf	_t+1
  2634  0E74                     l3108:	
  2635                           
  2636                           ;Button_src.c: 73:             w = 0;
  2637  0E74  01B5               	clrf	_w
  2638  0E75  01B6               	clrf	_w+1
  2639  0E76                     l3110:	
  2640                           
  2641                           ;Button_src.c: 74:             x = 0;
  2642  0E76  01B3               	clrf	_x
  2643  0E77  01B4               	clrf	_x+1
  2644  0E78                     l3112:	
  2645                           
  2646                           ;Button_src.c: 75:             y = 0;
  2647  0E78  01B1               	clrf	_y
  2648  0E79  01B2               	clrf	_y+1
  2649  0E7A                     l3114:	
  2650                           
  2651                           ;Button_src.c: 76:             x = 0x00;
  2652  0E7A  01B3               	clrf	_x
  2653  0E7B  01B4               	clrf	_x+1
  2654  0E7C                     l3116:	
  2655                           
  2656                           ;Button_src.c: 78:                  RC0 = 1;
  2657  0E7C  1407               	bsf	7,0	;volatile
  2658  0E7D                     l3118:	
  2659                           
  2660                           ;Button_src.c: 79:                  RC1 = 0;
  2661  0E7D  1087               	bcf	7,1	;volatile
  2662  0E7E                     l3120:	
  2663                           
  2664                           ;Button_src.c: 80:                  RC2 = 1;
  2665  0E7E  1507               	bsf	7,2	;volatile
  2666  0E7F                     l3122:	
  2667                           
  2668                           ;Button_src.c: 81:                  RC3 = 1;
  2669  0E7F  1587               	bsf	7,3	;volatile
  2670  0E80                     l3124:	
  2671                           
  2672                           ;Button_src.c: 83:                 if(RC7==0){
  2673  0E80  1B87               	btfsc	7,7	;volatile
  2674  0E81  2E83               	goto	u1791
  2675  0E82  2E84               	goto	u1790
  2676  0E83                     u1791:	
  2677  0E83  2EE7               	goto	l3144
  2678  0E84                     u1790:	
  2679  0E84                     l3126:	
  2680                           
  2681                           ;Button_src.c: 84:                     write_cmd(0x98);
  2682  0E84  3098               	movlw	152
  2683  0E85  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2684  0E8A                     l3128:	
  2685                           
  2686                           ;Button_src.c: 85:                     x++;
  2687  0E8A  3001               	movlw	1
  2688  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0E8D  07B3               	addwf	_x,f
  2691  0E8E  1803               	skipnc
  2692  0E8F  0AB4               	incf	_x+1,f
  2693  0E90  3000               	movlw	0
  2694  0E91  07B4               	addwf	_x+1,f
  2695  0E92                     l3130:	
  2696                           
  2697                           ;Button_src.c: 86:                     y = (unsigned char )y;
  2698  0E92  0831               	movf	_y,w
  2699  0E93  00D6               	movwf	??_thermometer_threshhold_settings
  2700  0E94  01D7               	clrf	??_thermometer_threshhold_settings+1
  2701  0E95  0856               	movf	??_thermometer_threshhold_settings,w
  2702  0E96  00B1               	movwf	_y
  2703  0E97  0857               	movf	??_thermometer_threshhold_settings+1,w
  2704  0E98  00B2               	movwf	_y+1
  2705  0E99                     l3132:	
  2706                           
  2707                           ;Button_src.c: 87:                     x = (unsigned char )(modulus_func(x,10));
  2708  0E99  0834               	movf	_x+1,w
  2709  0E9A  00F8               	movwf	modulus_func@x+1
  2710  0E9B  0833               	movf	_x,w
  2711  0E9C  00F7               	movwf	modulus_func@x
  2712  0E9D  300A               	movlw	10
  2713  0E9E  00F9               	movwf	modulus_func@y
  2714  0E9F  3000               	movlw	0
  2715  0EA0  00FA               	movwf	modulus_func@y+1
  2716  0EA1  160A  118A  260B  120A  158A  	fcall	_modulus_func
  2717  0EA6  0877               	movf	?_modulus_func,w
  2718  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0EA9  00D6               	movwf	??_thermometer_threshhold_settings
  2721  0EAA  01D7               	clrf	??_thermometer_threshhold_settings+1
  2722  0EAB  0856               	movf	??_thermometer_threshhold_settings,w
  2723  0EAC  00B3               	movwf	_x
  2724  0EAD  0857               	movf	??_thermometer_threshhold_settings+1,w
  2725  0EAE  00B4               	movwf	_x+1
  2726  0EAF                     l3134:	
  2727                           
  2728                           ;Button_src.c: 88:                     write_char(y + '0');
  2729  0EAF  0831               	movf	_y,w
  2730  0EB0  3E30               	addlw	48
  2731  0EB1  160A  118A  26C2  120A  158A  	fcall	_write_char
  2732  0EB6                     l3136:	
  2733                           
  2734                           ;Button_src.c: 89:                     write_char(x + '0');
  2735  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0EB8  0833               	movf	_x,w
  2738  0EB9  3E30               	addlw	48
  2739  0EBA  160A  118A  26C2  120A  158A  	fcall	_write_char
  2740  0EBF                     l3138:	
  2741                           
  2742                           ;Button_src.c: 90:                     y = incrementor(y,x,'9');
  2743  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0EC1  0832               	movf	_y+1,w
  2746  0EC2  00D2               	movwf	incrementor@upper_val+1
  2747  0EC3  0831               	movf	_y,w
  2748  0EC4  00D1               	movwf	incrementor@upper_val
  2749  0EC5  0834               	movf	_x+1,w
  2750  0EC6  00D4               	movwf	incrementor@lower_val+1
  2751  0EC7  0833               	movf	_x,w
  2752  0EC8  00D3               	movwf	incrementor@lower_val
  2753  0EC9  3039               	movlw	57
  2754  0ECA  00D6               	movwf	??_thermometer_threshhold_settings
  2755  0ECB  0856               	movf	??_thermometer_threshhold_settings,w
  2756  0ECC  00D5               	movwf	incrementor@z
  2757  0ECD  160A  118A  277C  120A  158A  	fcall	_incrementor
  2758  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0ED4  00D7               	movwf	??_thermometer_threshhold_settings+1
  2761  0ED5  01D8               	clrf	??_thermometer_threshhold_settings+2
  2762  0ED6  0857               	movf	??_thermometer_threshhold_settings+1,w
  2763  0ED7  00B1               	movwf	_y
  2764  0ED8  0858               	movf	??_thermometer_threshhold_settings+2,w
  2765  0ED9  00B2               	movwf	_y+1
  2766  0EDA                     l3140:	
  2767                           
  2768                           ;Button_src.c: 91:                     t = x;
  2769  0EDA  0834               	movf	_x+1,w
  2770  0EDB  00B8               	movwf	_t+1
  2771  0EDC  0833               	movf	_x,w
  2772  0EDD  00B7               	movwf	_t
  2773  0EDE                     l3142:	
  2774                           
  2775                           ;Button_src.c: 92:                     w = y;
  2776  0EDE  0832               	movf	_y+1,w
  2777  0EDF  00B6               	movwf	_w+1
  2778  0EE0  0831               	movf	_y,w
  2779  0EE1  00B5               	movwf	_w
  2780                           
  2781                           ;Button_src.c: 93:                     button_delay();
  2782  0EE2  160A  118A  2669  120A  158A  	fcall	_button_delay
  2783  0EE7                     l3144:	
  2784                           
  2785                           ;Button_src.c: 95:                   RC0 = 0;
  2786  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0EE9  1007               	bcf	7,0	;volatile
  2789  0EEA                     l3146:	
  2790                           
  2791                           ;Button_src.c: 96:                     RC1 = 1;
  2792  0EEA  1487               	bsf	7,1	;volatile
  2793  0EEB                     l3148:	
  2794                           
  2795                           ;Button_src.c: 97:                     RC2 = 1;
  2796  0EEB  1507               	bsf	7,2	;volatile
  2797  0EEC                     l3150:	
  2798                           
  2799                           ;Button_src.c: 98:                     RC3 = 1;
  2800  0EEC  1587               	bsf	7,3	;volatile
  2801  0EED                     l3152:	
  2802                           
  2803                           ;Button_src.c: 99:                     if(RC6 == 0){
  2804  0EED  1B07               	btfsc	7,6	;volatile
  2805  0EEE  2EF0               	goto	u1801
  2806  0EEF  2EF1               	goto	u1800
  2807  0EF0                     u1801:	
  2808  0EF0  2F37               	goto	l504
  2809  0EF1                     u1800:	
  2810  0EF1                     l3154:	
  2811                           
  2812                           ;Button_src.c: 100:                         var1 = y;
  2813  0EF1  0831               	movf	_y,w
  2814  0EF2  00D6               	movwf	??_thermometer_threshhold_settings
  2815  0EF3  0856               	movf	??_thermometer_threshhold_settings,w
  2816  0EF4  00BD               	movwf	_var1
  2817                           
  2818                           ;Button_src.c: 101:                         var2 = x;
  2819  0EF5  0833               	movf	_x,w
  2820  0EF6  00D6               	movwf	??_thermometer_threshhold_settings
  2821  0EF7  0856               	movf	??_thermometer_threshhold_settings,w
  2822  0EF8  00BC               	movwf	_var2
  2823  0EF9                     l3156:	
  2824                           
  2825                           ;Button_src.c: 103:                         write_cmd(0x1);
  2826  0EF9  3001               	movlw	1
  2827  0EFA  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2828  0EFF                     l3158:	
  2829                           
  2830                           ;Button_src.c: 104:                         write_char('S');
  2831  0EFF  3053               	movlw	83
  2832  0F00  160A  118A  26C2  120A  158A  	fcall	_write_char
  2833  0F05                     l3160:	
  2834                           
  2835                           ;Button_src.c: 105:                         write_char('A');
  2836  0F05  3041               	movlw	65
  2837  0F06  160A  118A  26C2  120A  158A  	fcall	_write_char
  2838  0F0B                     l3162:	
  2839                           
  2840                           ;Button_src.c: 106:                         write_char('V');
  2841  0F0B  3056               	movlw	86
  2842  0F0C  160A  118A  26C2  120A  158A  	fcall	_write_char
  2843  0F11                     l3164:	
  2844                           
  2845                           ;Button_src.c: 107:                         write_char('E');
  2846  0F11  3045               	movlw	69
  2847  0F12  160A  118A  26C2  120A  158A  	fcall	_write_char
  2848  0F17                     l3166:	
  2849                           
  2850                           ;Button_src.c: 108:                         write_char('D');
  2851  0F17  3044               	movlw	68
  2852  0F18  160A  118A  26C2  120A  158A  	fcall	_write_char
  2853  0F1D                     l3168:	
  2854                           
  2855                           ;Button_src.c: 109:                         for(int i=0;i<30000;i++);
  2856  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0F1F  01D9               	clrf	thermometer_threshhold_settings@i
  2859  0F20  01DA               	clrf	thermometer_threshhold_settings@i+1
  2860  0F21                     l3174:	
  2861  0F21  3001               	movlw	1
  2862  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2863  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2864  0F24  07D9               	addwf	thermometer_threshhold_settings@i,f
  2865  0F25  1803               	skipnc
  2866  0F26  0ADA               	incf	thermometer_threshhold_settings@i+1,f
  2867  0F27  3000               	movlw	0
  2868  0F28  07DA               	addwf	thermometer_threshhold_settings@i+1,f
  2869  0F29                     l3176:	
  2870  0F29  085A               	movf	thermometer_threshhold_settings@i+1,w
  2871  0F2A  3A80               	xorlw	128
  2872  0F2B  00FF               	movwf	btemp+1
  2873  0F2C  30F5               	movlw	245
  2874  0F2D  027F               	subwf	btemp+1,w
  2875  0F2E  1D03               	skipz
  2876  0F2F  2F32               	goto	u1815
  2877  0F30  3030               	movlw	48
  2878  0F31  0259               	subwf	thermometer_threshhold_settings@i,w
  2879  0F32                     u1815:	
  2880  0F32  1C03               	skipc
  2881  0F33  2F35               	goto	u1811
  2882  0F34  2F36               	goto	u1810
  2883  0F35                     u1811:	
  2884  0F35  2F21               	goto	l3174
  2885  0F36                     u1810:	
  2886  0F36  2FFF               	goto	l507
  2887  0F37                     l504:	
  2888                           ;Button_src.c: 111:                     }
  2889                           
  2890                           
  2891                           ;Button_src.c: 112:                  RC0 = 1;
  2892  0F37  1407               	bsf	7,0	;volatile
  2893                           
  2894                           ;Button_src.c: 113:                  RC1 = 1;
  2895  0F38  1487               	bsf	7,1	;volatile
  2896                           
  2897                           ;Button_src.c: 114:                  RC2 = 0;
  2898  0F39  1107               	bcf	7,2	;volatile
  2899                           
  2900                           ;Button_src.c: 115:                  RC3 = 1;
  2901  0F3A  1587               	bsf	7,3	;volatile
  2902                           
  2903                           ;Button_src.c: 117:                  if(RC7 == 0){
  2904  0F3B  1B87               	btfsc	7,7	;volatile
  2905  0F3C  2F3E               	goto	u1821
  2906  0F3D  2F3F               	goto	u1820
  2907  0F3E                     u1821:	
  2908  0F3E  2FB5               	goto	l3198
  2909  0F3F                     u1820:	
  2910  0F3F                     l3178:	
  2911                           
  2912                           ;Button_src.c: 118:                     write_cmd(0x98);
  2913  0F3F  3098               	movlw	152
  2914  0F40  120A  158A  2005  120A  158A  	fcall	_write_cmd
  2915  0F45                     l3180:	
  2916                           
  2917                           ;Button_src.c: 119:                       t--;
  2918  0F45  3001               	movlw	1
  2919  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0F48  02B7               	subwf	_t,f
  2922  0F49  3000               	movlw	0
  2923  0F4A  1C03               	skipc
  2924  0F4B  03B8               	decf	_t+1,f
  2925  0F4C  02B8               	subwf	_t+1,f
  2926  0F4D                     l3182:	
  2927                           
  2928                           ;Button_src.c: 120:                     w = (unsigned char )w;
  2929  0F4D  0835               	movf	_w,w
  2930  0F4E  00D6               	movwf	??_thermometer_threshhold_settings
  2931  0F4F  01D7               	clrf	??_thermometer_threshhold_settings+1
  2932  0F50  0856               	movf	??_thermometer_threshhold_settings,w
  2933  0F51  00B5               	movwf	_w
  2934  0F52  0857               	movf	??_thermometer_threshhold_settings+1,w
  2935  0F53  00B6               	movwf	_w+1
  2936  0F54                     l3184:	
  2937                           
  2938                           ;Button_src.c: 121:                     t = (unsigned char )(modulus_func(t,10));
  2939  0F54  0838               	movf	_t+1,w
  2940  0F55  00F8               	movwf	modulus_func@x+1
  2941  0F56  0837               	movf	_t,w
  2942  0F57  00F7               	movwf	modulus_func@x
  2943  0F58  300A               	movlw	10
  2944  0F59  00F9               	movwf	modulus_func@y
  2945  0F5A  3000               	movlw	0
  2946  0F5B  00FA               	movwf	modulus_func@y+1
  2947  0F5C  160A  118A  260B  120A  158A  	fcall	_modulus_func
  2948  0F61  0877               	movf	?_modulus_func,w
  2949  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0F64  00D6               	movwf	??_thermometer_threshhold_settings
  2952  0F65  01D7               	clrf	??_thermometer_threshhold_settings+1
  2953  0F66  0856               	movf	??_thermometer_threshhold_settings,w
  2954  0F67  00B7               	movwf	_t
  2955  0F68  0857               	movf	??_thermometer_threshhold_settings+1,w
  2956  0F69  00B8               	movwf	_t+1
  2957  0F6A                     l3186:	
  2958                           
  2959                           ;Button_src.c: 122:                     write_char(w + '0');
  2960  0F6A  0835               	movf	_w,w
  2961  0F6B  3E30               	addlw	48
  2962  0F6C  160A  118A  26C2  120A  158A  	fcall	_write_char
  2963  0F71                     l3188:	
  2964                           
  2965                           ;Button_src.c: 123:                     write_char(t + '0');
  2966  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0F73  0837               	movf	_t,w
  2969  0F74  3E30               	addlw	48
  2970  0F75  160A  118A  26C2  120A  158A  	fcall	_write_char
  2971  0F7A                     l3190:	
  2972                           
  2973                           ;Button_src.c: 124:                     w = decrementor(w,t,'0');
  2974  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0F7C  0836               	movf	_w+1,w
  2977  0F7D  00D2               	movwf	decrementor@lower_val+1
  2978  0F7E  0835               	movf	_w,w
  2979  0F7F  00D1               	movwf	decrementor@lower_val
  2980  0F80  0838               	movf	_t+1,w
  2981  0F81  00D4               	movwf	decrementor@upper_val+1
  2982  0F82  0837               	movf	_t,w
  2983  0F83  00D3               	movwf	decrementor@upper_val
  2984  0F84  3030               	movlw	48
  2985  0F85  00D6               	movwf	??_thermometer_threshhold_settings
  2986  0F86  0856               	movf	??_thermometer_threshhold_settings,w
  2987  0F87  00D5               	movwf	decrementor@z
  2988  0F88  160A  118A  27D4  120A  158A  	fcall	_decrementor
  2989  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0F8F  00D7               	movwf	??_thermometer_threshhold_settings+1
  2992  0F90  01D8               	clrf	??_thermometer_threshhold_settings+2
  2993  0F91  0857               	movf	??_thermometer_threshhold_settings+1,w
  2994  0F92  00B5               	movwf	_w
  2995  0F93  0858               	movf	??_thermometer_threshhold_settings+2,w
  2996  0F94  00B6               	movwf	_w+1
  2997  0F95                     l3192:	
  2998                           
  2999                           ;Button_src.c: 125:                     if((t + '0')=='0'){
  3000  0F95  0837               	movf	_t,w
  3001  0F96  3E30               	addlw	48
  3002  0F97  00D6               	movwf	??_thermometer_threshhold_settings
  3003  0F98  0838               	movf	_t+1,w
  3004  0F99  1803               	skipnc
  3005  0F9A  3E01               	addlw	1
  3006  0F9B  3E00               	addlw	0
  3007  0F9C  00D7               	movwf	??_thermometer_threshhold_settings+1
  3008  0F9D  3030               	movlw	48
  3009  0F9E  0656               	xorwf	??_thermometer_threshhold_settings,w
  3010  0F9F  0457               	iorwf	??_thermometer_threshhold_settings+1,w
  3011  0FA0  1D03               	btfss	3,2
  3012  0FA1  2FA3               	goto	u1831
  3013  0FA2  2FA4               	goto	u1830
  3014  0FA3                     u1831:	
  3015  0FA3  2FA8               	goto	l509
  3016  0FA4                     u1830:	
  3017  0FA4                     l3194:	
  3018                           
  3019                           ;Button_src.c: 126:                         t = 10;
  3020  0FA4  300A               	movlw	10
  3021  0FA5  00B7               	movwf	_t
  3022  0FA6  3000               	movlw	0
  3023  0FA7  00B8               	movwf	_t+1
  3024  0FA8                     l509:	
  3025                           ;Button_src.c: 127:                     }
  3026                           
  3027                           
  3028                           ;Button_src.c: 129:                     x = t;
  3029  0FA8  0838               	movf	_t+1,w
  3030  0FA9  00B4               	movwf	_x+1
  3031  0FAA  0837               	movf	_t,w
  3032  0FAB  00B3               	movwf	_x
  3033                           
  3034                           ;Button_src.c: 130:                     y = w;
  3035  0FAC  0836               	movf	_w+1,w
  3036  0FAD  00B2               	movwf	_y+1
  3037  0FAE  0835               	movf	_w,w
  3038  0FAF  00B1               	movwf	_y
  3039  0FB0                     l3196:	
  3040                           
  3041                           ;Button_src.c: 131:                     button_delay();
  3042  0FB0  160A  118A  2669  120A  158A  	fcall	_button_delay
  3043  0FB5                     l3198:	
  3044                           
  3045                           ;Button_src.c: 133:                 RC0 = 0;
  3046  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0FB7  1007               	bcf	7,0	;volatile
  3049  0FB8                     l3200:	
  3050                           
  3051                           ;Button_src.c: 134:                 RC1 = 1;
  3052  0FB8  1487               	bsf	7,1	;volatile
  3053  0FB9                     l3202:	
  3054                           
  3055                           ;Button_src.c: 135:                 RC2 = 1;
  3056  0FB9  1507               	bsf	7,2	;volatile
  3057  0FBA                     l3204:	
  3058                           
  3059                           ;Button_src.c: 136:                 RC3 = 1;
  3060  0FBA  1587               	bsf	7,3	;volatile
  3061  0FBB                     l3206:	
  3062                           
  3063                           ;Button_src.c: 137:                     if(RC6 == 0){
  3064  0FBB  1B07               	btfsc	7,6	;volatile
  3065  0FBC  2FBE               	goto	u1841
  3066  0FBD  2FBF               	goto	u1840
  3067  0FBE                     u1841:	
  3068  0FBE  2FF1               	goto	l510
  3069  0FBF                     u1840:	
  3070  0FBF                     l3208:	
  3071                           
  3072                           ;Button_src.c: 138:                         var1 = w;
  3073  0FBF  0835               	movf	_w,w
  3074  0FC0  00D6               	movwf	??_thermometer_threshhold_settings
  3075  0FC1  0856               	movf	??_thermometer_threshhold_settings,w
  3076  0FC2  00BD               	movwf	_var1
  3077                           
  3078                           ;Button_src.c: 139:                         var2 = t;
  3079  0FC3  0837               	movf	_t,w
  3080  0FC4  00D6               	movwf	??_thermometer_threshhold_settings
  3081  0FC5  0856               	movf	??_thermometer_threshhold_settings,w
  3082  0FC6  00BC               	movwf	_var2
  3083  0FC7                     l3210:	
  3084                           
  3085                           ;Button_src.c: 141:                         write_cmd(0x1);
  3086  0FC7  3001               	movlw	1
  3087  0FC8  120A  158A  2005  120A  158A  	fcall	_write_cmd
  3088  0FCD                     l3212:	
  3089                           
  3090                           ;Button_src.c: 142:                         write_char('S');
  3091  0FCD  3053               	movlw	83
  3092  0FCE  160A  118A  26C2  120A  158A  	fcall	_write_char
  3093  0FD3                     l3214:	
  3094                           
  3095                           ;Button_src.c: 143:                         write_char('A');
  3096  0FD3  3041               	movlw	65
  3097  0FD4  160A  118A  26C2  120A  158A  	fcall	_write_char
  3098  0FD9                     l3216:	
  3099                           
  3100                           ;Button_src.c: 144:                         write_char('V');
  3101  0FD9  3056               	movlw	86
  3102  0FDA  160A  118A  26C2  120A  158A  	fcall	_write_char
  3103  0FDF                     l3218:	
  3104                           
  3105                           ;Button_src.c: 145:                         write_char('E');
  3106  0FDF  3045               	movlw	69
  3107  0FE0  160A  118A  26C2  120A  158A  	fcall	_write_char
  3108  0FE5                     l3220:	
  3109                           
  3110                           ;Button_src.c: 146:                         write_char('D');
  3111  0FE5  3044               	movlw	68
  3112  0FE6  160A  118A  26C2  120A  158A  	fcall	_write_char
  3113  0FEB                     l3222:	
  3114                           
  3115                           ;Button_src.c: 147:                         button_delay();
  3116  0FEB  160A  118A  2669  120A  158A  	fcall	_button_delay
  3117  0FF0  2FFF               	goto	l507
  3118  0FF1                     l510:	
  3119                           ;Button_src.c: 149:                     }
  3120                           
  3121                           
  3122                           ;Button_src.c: 150:             RC0 = 0;
  3123  0FF1  1007               	bcf	7,0	;volatile
  3124                           
  3125                           ;Button_src.c: 151:             RC1 = 1;
  3126  0FF2  1487               	bsf	7,1	;volatile
  3127                           
  3128                           ;Button_src.c: 152:             RC2 = 1;
  3129  0FF3  1507               	bsf	7,2	;volatile
  3130                           
  3131                           ;Button_src.c: 153:             RC3 = 1;
  3132  0FF4  1587               	bsf	7,3	;volatile
  3133                           
  3134                           ;Button_src.c: 154:             if (RC7 == 0 ){
  3135  0FF5  1B87               	btfsc	7,7	;volatile
  3136  0FF6  2FF8               	goto	u1851
  3137  0FF7  2FF9               	goto	u1850
  3138  0FF8                     u1851:	
  3139  0FF8  2E7C               	goto	l3116
  3140  0FF9                     u1850:	
  3141  0FF9                     l3226:	
  3142                           
  3143                           ;Button_src.c: 155:             write_cmd(0x1);
  3144  0FF9  3001               	movlw	1
  3145  0FFA  120A  158A  2005  120A  158A  	fcall	_write_cmd
  3146  0FFF                     l507:	
  3147  0FFF  0008               	return
  3148  1000                     __end_of_thermometer_threshhold_settings:	
  3149                           
  3150                           	psect	text3
  3151  17D4                     __ptext3:	
  3152 ;; *************** function _decrementor *****************
  3153 ;; Defined at:
  3154 ;;		line 19 in file "math_src.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  lower_val       2    0[BANK0 ] int 
  3157 ;;  upper_val       2    2[BANK0 ] int 
  3158 ;;  z               1    4[BANK0 ] unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      unsigned char 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, pclath, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3170 ;;      Params:         0       5       0       0       0
  3171 ;;      Locals:         0       0       0       0       0
  3172 ;;      Temps:          2       0       0       0       0
  3173 ;;      Totals:         2       5       0       0       0
  3174 ;;Total ram usage:        7 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    2
  3177 ;; This function calls:
  3178 ;;		_modulus_func
  3179 ;; This function is called by:
  3180 ;;		_thermometer_threshhold_settings
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _decrementor
  3186  17D4                     _decrementor:	
  3187  17D4                     l2778:	
  3188                           ;incstack = 0
  3189                           ; Regs used in _decrementor: [wreg+status,2+status,0+pclath+cstack]
  3190                           
  3191                           
  3192                           ;math_src.c: 20:      if(z == (upper_val + '0')){
  3193  17D4  1283               	bcf	3,5	;RP0=0, select bank0
  3194  17D5  1303               	bcf	3,6	;RP1=0, select bank0
  3195  17D6  0853               	movf	decrementor@upper_val,w
  3196  17D7  3E30               	addlw	48
  3197  17D8  00FB               	movwf	??_decrementor
  3198  17D9  0854               	movf	decrementor@upper_val+1,w
  3199  17DA  1803               	skipnc
  3200  17DB  3E01               	addlw	1
  3201  17DC  3E00               	addlw	0
  3202  17DD  00FC               	movwf	??_decrementor+1
  3203  17DE  0855               	movf	decrementor@z,w
  3204  17DF  067B               	xorwf	??_decrementor,w
  3205  17E0  047C               	iorwf	??_decrementor+1,w
  3206  17E1  1D03               	skipz
  3207  17E2  2FE4               	goto	u1421
  3208  17E3  2FE5               	goto	u1420
  3209  17E4                     u1421:	
  3210  17E4  2FFE               	goto	l2784
  3211  17E5                     u1420:	
  3212  17E5                     l2780:	
  3213                           
  3214                           ;math_src.c: 21:         lower_val--;
  3215  17E5  30FF               	movlw	255
  3216  17E6  07D1               	addwf	decrementor@lower_val,f
  3217  17E7  1803               	skipnc
  3218  17E8  0AD2               	incf	decrementor@lower_val+1,f
  3219  17E9  30FF               	movlw	255
  3220  17EA  07D2               	addwf	decrementor@lower_val+1,f
  3221  17EB                     l2782:	
  3222                           
  3223                           ;math_src.c: 22:         lower_val = (modulus_func(lower_val,10));
  3224  17EB  0852               	movf	decrementor@lower_val+1,w
  3225  17EC  00F8               	movwf	modulus_func@x+1
  3226  17ED  0851               	movf	decrementor@lower_val,w
  3227  17EE  00F7               	movwf	modulus_func@x
  3228  17EF  300A               	movlw	10
  3229  17F0  00F9               	movwf	modulus_func@y
  3230  17F1  3000               	movlw	0
  3231  17F2  00FA               	movwf	modulus_func@y+1
  3232  17F3  160A  118A  260B  160A  118A  	fcall	_modulus_func
  3233  17F8  0878               	movf	?_modulus_func+1,w
  3234  17F9  1283               	bcf	3,5	;RP0=0, select bank0
  3235  17FA  1303               	bcf	3,6	;RP1=0, select bank0
  3236  17FB  00D2               	movwf	decrementor@lower_val+1
  3237  17FC  0877               	movf	?_modulus_func,w
  3238  17FD  00D1               	movwf	decrementor@lower_val
  3239  17FE                     l2784:	
  3240                           
  3241                           ;math_src.c: 24:      return lower_val;
  3242  17FE  0851               	movf	decrementor@lower_val,w
  3243  17FF                     l562:	
  3244  17FF  0008               	return
  3245  1800                     __end_of_decrementor:	
  3246                           
  3247                           	psect	text4
  3248  096C                     __ptext4:	
  3249 ;; *************** function _set_upper_threshold *****************
  3250 ;; Defined at:
  3251 ;;		line 5 in file "threshold_src.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  upper_val       2    3[COMMON] int 
  3254 ;;  lower_val       2    5[COMMON] int 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3266 ;;      Params:         4       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0
  3268 ;;      Temps:          2       0       0       0       0
  3269 ;;      Totals:         6       0       0       0       0
  3270 ;;Total ram usage:        6 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    2
  3273 ;; This function calls:
  3274 ;;		_write_char
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _set_upper_threshold
  3282  096C                     _set_upper_threshold:	
  3283  096C                     l3646:	
  3284                           ;incstack = 0
  3285                           ; Regs used in _set_upper_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3286                           
  3287                           
  3288                           ;threshold_src.c: 6:     if(shi == upper_val && ge > lower_val && count == 2){
  3289  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3290  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3291  096E  084C               	movf	_shi,w
  3292  096F  00F7               	movwf	??_set_upper_threshold
  3293  0970  01F8               	clrf	??_set_upper_threshold+1
  3294  0971  0874               	movf	set_upper_threshold@upper_val+1,w
  3295  0972  0678               	xorwf	??_set_upper_threshold+1,w
  3296  0973  1D03               	skipz
  3297  0974  2977               	goto	u2245
  3298  0975  0873               	movf	set_upper_threshold@upper_val,w
  3299  0976  0677               	xorwf	??_set_upper_threshold,w
  3300  0977                     u2245:	
  3301  0977  1D03               	skipz
  3302  0978  297A               	goto	u2241
  3303  0979  297B               	goto	u2240
  3304  097A                     u2241:	
  3305  097A  29AD               	goto	l618
  3306  097B                     u2240:	
  3307  097B                     l3648:	
  3308  097B  0876               	movf	set_upper_threshold@lower_val+1,w
  3309  097C  3A80               	xorlw	128
  3310  097D  00F7               	movwf	??_set_upper_threshold
  3311  097E  3080               	movlw	128
  3312  097F  0277               	subwf	??_set_upper_threshold,w
  3313  0980  1D03               	skipz
  3314  0981  2984               	goto	u2255
  3315  0982  084B               	movf	_ge,w
  3316  0983  0275               	subwf	set_upper_threshold@lower_val,w
  3317  0984                     u2255:	
  3318  0984  1803               	skipnc
  3319  0985  2987               	goto	u2251
  3320  0986  2988               	goto	u2250
  3321  0987                     u2251:	
  3322  0987  29AD               	goto	l618
  3323  0988                     u2250:	
  3324  0988                     l3650:	
  3325  0988  3002               	movlw	2
  3326  0989  1283               	bcf	3,5	;RP0=0, select bank0
  3327  098A  1303               	bcf	3,6	;RP1=0, select bank0
  3328  098B  0627               	xorwf	_count,w
  3329  098C  0428               	iorwf	_count+1,w
  3330  098D  1D03               	btfss	3,2
  3331  098E  2990               	goto	u2261
  3332  098F  2991               	goto	u2260
  3333  0990                     u2261:	
  3334  0990  29AD               	goto	l618
  3335  0991                     u2260:	
  3336  0991                     l3652:	
  3337                           
  3338                           ;threshold_src.c: 8:     buzzer_watcher = 'w';
  3339  0991  3077               	movlw	119
  3340  0992  00F7               	movwf	??_set_upper_threshold
  3341  0993  0877               	movf	??_set_upper_threshold,w
  3342  0994  00BF               	movwf	_buzzer_watcher
  3343  0995                     l3654:	
  3344                           
  3345                           ;threshold_src.c: 9:     write_char('W');
  3346  0995  3057               	movlw	87
  3347  0996  160A  118A  26C2  120A  158A  	fcall	_write_char
  3348  099B                     l3656:	
  3349                           
  3350                           ;threshold_src.c: 10:     write_char('A');
  3351  099B  3041               	movlw	65
  3352  099C  160A  118A  26C2  120A  158A  	fcall	_write_char
  3353  09A1                     l3658:	
  3354                           
  3355                           ;threshold_src.c: 11:     write_char('R');
  3356  09A1  3052               	movlw	82
  3357  09A2  160A  118A  26C2  120A  158A  	fcall	_write_char
  3358  09A7                     l3660:	
  3359                           
  3360                           ;threshold_src.c: 12:     write_char('M');
  3361  09A7  304D               	movlw	77
  3362  09A8  160A  118A  26C2  120A  158A  	fcall	_write_char
  3363  09AD                     l618:	
  3364  09AD  0008               	return
  3365  09AE                     __end_of_set_upper_threshold:	
  3366                           
  3367                           	psect	text5
  3368  092F                     __ptext5:	
  3369 ;; *************** function _set_lower_threshold *****************
  3370 ;; Defined at:
  3371 ;;		line 17 in file "threshold_src.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  upper_val       2    3[COMMON] int 
  3374 ;;  lower_val       2    5[COMMON] int 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         4       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          2       0       0       0       0
  3389 ;;      Totals:         6       0       0       0       0
  3390 ;;Total ram usage:        6 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    2
  3393 ;; This function calls:
  3394 ;;		_write_char
  3395 ;; This function is called by:
  3396 ;;		_main
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function _set_lower_threshold
  3402  092F                     _set_lower_threshold:	
  3403  092F                     l3632:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _set_lower_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3406                           
  3407                           
  3408                           ;threshold_src.c: 18:     if(shi == upper_val && ge < lower_val)
  3409  092F  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0930  1303               	bcf	3,6	;RP1=0, select bank0
  3411  0931  084C               	movf	_shi,w
  3412  0932  00F7               	movwf	??_set_lower_threshold
  3413  0933  01F8               	clrf	??_set_lower_threshold+1
  3414  0934  0874               	movf	set_lower_threshold@upper_val+1,w
  3415  0935  0678               	xorwf	??_set_lower_threshold+1,w
  3416  0936  1D03               	skipz
  3417  0937  293A               	goto	u2225
  3418  0938  0873               	movf	set_lower_threshold@upper_val,w
  3419  0939  0677               	xorwf	??_set_lower_threshold,w
  3420  093A                     u2225:	
  3421  093A  1D03               	skipz
  3422  093B  293D               	goto	u2221
  3423  093C  293E               	goto	u2220
  3424  093D                     u2221:	
  3425  093D  296B               	goto	l622
  3426  093E                     u2220:	
  3427  093E                     l3634:	
  3428  093E  0876               	movf	set_lower_threshold@lower_val+1,w
  3429  093F  3A80               	xorlw	128
  3430  0940  3C80               	sublw	128
  3431  0941  1D03               	skipz
  3432  0942  2945               	goto	u2235
  3433  0943  0875               	movf	set_lower_threshold@lower_val,w
  3434  0944  024B               	subwf	_ge,w
  3435  0945                     u2235:	
  3436  0945  1803               	skipnc
  3437  0946  2948               	goto	u2231
  3438  0947  2949               	goto	u2230
  3439  0948                     u2231:	
  3440  0948  296B               	goto	l622
  3441  0949                     u2230:	
  3442  0949                     l3636:	
  3443                           
  3444                           ;threshold_src.c: 19:     {;threshold_src.c: 20:     count = 2;
  3445  0949  3002               	movlw	2
  3446  094A  1283               	bcf	3,5	;RP0=0, select bank0
  3447  094B  1303               	bcf	3,6	;RP1=0, select bank0
  3448  094C  00A7               	movwf	_count
  3449  094D  3000               	movlw	0
  3450  094E  00A8               	movwf	_count+1
  3451                           
  3452                           ;threshold_src.c: 21:     buzzer_watcher = 'x';
  3453  094F  3078               	movlw	120
  3454  0950  00F7               	movwf	??_set_lower_threshold
  3455  0951  0877               	movf	??_set_lower_threshold,w
  3456  0952  00BF               	movwf	_buzzer_watcher
  3457  0953                     l3638:	
  3458                           
  3459                           ;threshold_src.c: 22:     write_char('O');
  3460  0953  304F               	movlw	79
  3461  0954  160A  118A  26C2  120A  158A  	fcall	_write_char
  3462  0959                     l3640:	
  3463                           
  3464                           ;threshold_src.c: 23:     write_char('K');
  3465  0959  304B               	movlw	75
  3466  095A  160A  118A  26C2  120A  158A  	fcall	_write_char
  3467  095F                     l3642:	
  3468                           
  3469                           ;threshold_src.c: 24:     write_char(' ');
  3470  095F  3020               	movlw	32
  3471  0960  160A  118A  26C2  120A  158A  	fcall	_write_char
  3472  0965                     l3644:	
  3473                           
  3474                           ;threshold_src.c: 25:     write_char(' ');
  3475  0965  3020               	movlw	32
  3476  0966  160A  118A  26C2  120A  158A  	fcall	_write_char
  3477  096B                     l622:	
  3478  096B  0008               	return
  3479  096C                     __end_of_set_lower_threshold:	
  3480                           
  3481                           	psect	text6
  3482  16DB                     __ptext6:	
  3483 ;; *************** function _set_beep_threshhold *****************
  3484 ;; Defined at:
  3485 ;;		line 5 in file "buzzer_src.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  x               1    wreg     unsigned char 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;  x               1    2[COMMON] unsigned char 
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3499 ;;      Params:         0       0       0       0       0
  3500 ;;      Locals:         1       0       0       0       0
  3501 ;;      Temps:          0       0       0       0       0
  3502 ;;      Totals:         1       0       0       0       0
  3503 ;;Total ram usage:        1 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    1
  3506 ;; This function calls:
  3507 ;;		_button_delay
  3508 ;; This function is called by:
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           
  3514                           ;psect for function _set_beep_threshhold
  3515  16DB                     _set_beep_threshhold:	
  3516                           
  3517                           ;incstack = 0
  3518                           ; Regs used in _set_beep_threshhold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3519                           ;set_beep_threshhold@x stored from wreg
  3520  16DB  00F2               	movwf	set_beep_threshhold@x
  3521  16DC                     l3662:	
  3522                           
  3523                           ;buzzer_src.c: 6:     if (x == 'w'){
  3524  16DC  3077               	movlw	119
  3525  16DD  0672               	xorwf	set_beep_threshhold@x,w
  3526  16DE  1D03               	btfss	3,2
  3527  16DF  2EE1               	goto	u2271
  3528  16E0  2EE2               	goto	u2270
  3529  16E1                     u2271:	
  3530  16E1  2EFA               	goto	l3672
  3531  16E2                     u2270:	
  3532  16E2                     l3664:	
  3533                           
  3534                           ;buzzer_src.c: 7:         RE2 = 1;
  3535  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  3536  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  3537  16E4  1509               	bsf	9,2	;volatile
  3538  16E5                     l3666:	
  3539                           
  3540                           ;buzzer_src.c: 8:         button_delay();
  3541  16E5  160A  118A  2669  160A  118A  	fcall	_button_delay
  3542  16EA                     l3668:	
  3543                           
  3544                           ;buzzer_src.c: 9:         RE2 = 0;
  3545  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  3546  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  3547  16EC  1109               	bcf	9,2	;volatile
  3548                           
  3549                           ;buzzer_src.c: 10:         button_delay();
  3550  16ED  160A  118A  2669  160A  118A  	fcall	_button_delay
  3551  16F2                     l3670:	
  3552                           
  3553                           ;buzzer_src.c: 11:         RE2 = 1;
  3554  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  3555  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  3556  16F4  1509               	bsf	9,2	;volatile
  3557                           
  3558                           ;buzzer_src.c: 12:         button_delay();
  3559  16F5  160A  118A  2669  160A  118A  	fcall	_button_delay
  3560  16FA                     l3672:	
  3561                           
  3562                           ;buzzer_src.c: 13:         RE2 = 0;
  3563  16FA  1283               	bcf	3,5	;RP0=0, select bank0
  3564  16FB  1303               	bcf	3,6	;RP1=0, select bank0
  3565  16FC  1109               	bcf	9,2	;volatile
  3566  16FD                     l401:	
  3567  16FD  0008               	return
  3568  16FE                     __end_of_set_beep_threshhold:	
  3569                           
  3570                           	psect	text7
  3571  15FA                     __ptext7:	
  3572 ;; *************** function _reset_alarm *****************
  3573 ;; Defined at:
  3574 ;;		line 29 in file "threshold_src.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3588 ;;      Params:         0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0
  3590 ;;      Temps:          1       0       0       0       0
  3591 ;;      Totals:         1       0       0       0       0
  3592 ;;Total ram usage:        1 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_main
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           
  3602                           ;psect for function _reset_alarm
  3603  15FA                     _reset_alarm:	
  3604  15FA                     l3678:	
  3605                           ;incstack = 0
  3606                           ; Regs used in _reset_alarm: [wreg+status,2]
  3607                           
  3608                           
  3609                           ;threshold_src.c: 30:     RC0 = 1;
  3610  15FA  1283               	bcf	3,5	;RP0=0, select bank0
  3611  15FB  1303               	bcf	3,6	;RP1=0, select bank0
  3612  15FC  1407               	bsf	7,0	;volatile
  3613                           
  3614                           ;threshold_src.c: 31:     RC1 = 1;
  3615  15FD  1487               	bsf	7,1	;volatile
  3616                           
  3617                           ;threshold_src.c: 32:     RC2 = 1;
  3618  15FE  1507               	bsf	7,2	;volatile
  3619                           
  3620                           ;threshold_src.c: 33:     RC3 = 0;
  3621  15FF  1187               	bcf	7,3	;volatile
  3622                           
  3623                           ;threshold_src.c: 34:     if(RC4 == 0){
  3624  1600  1A07               	btfsc	7,4	;volatile
  3625  1601  2E03               	goto	u2281
  3626  1602  2E04               	goto	u2280
  3627  1603                     u2281:	
  3628  1603  2E0A               	goto	l626
  3629  1604                     u2280:	
  3630  1604                     l3680:	
  3631                           
  3632                           ;threshold_src.c: 35:         count = 0;
  3633  1604  01A7               	clrf	_count
  3634  1605  01A8               	clrf	_count+1
  3635  1606                     l3682:	
  3636                           
  3637                           ;threshold_src.c: 36:         buzzer_watcher = 'x';
  3638  1606  3078               	movlw	120
  3639  1607  00F0               	movwf	??_reset_alarm
  3640  1608  0870               	movf	??_reset_alarm,w
  3641  1609  00BF               	movwf	_buzzer_watcher
  3642  160A                     l626:	
  3643  160A  0008               	return
  3644  160B                     __end_of_reset_alarm:	
  3645                           
  3646                           	psect	text8
  3647  16FE                     __ptext8:	
  3648 ;; *************** function _lcd_init *****************
  3649 ;; Defined at:
  3650 ;;		line 14 in file "LCD_src.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  i               2    0        int 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3664 ;;      Params:         0       0       0       0       0
  3665 ;;      Locals:         0       0       0       0       0
  3666 ;;      Temps:          0       0       0       0       0
  3667 ;;      Totals:         0       0       0       0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    2
  3671 ;; This function calls:
  3672 ;;		_delay_screen
  3673 ;;		_write_cmd
  3674 ;; This function is called by:
  3675 ;;		_main
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           
  3680                           ;psect for function _lcd_init
  3681  16FE                     _lcd_init:	
  3682  16FE                     l2916:	
  3683                           ;incstack = 0
  3684                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3685                           
  3686                           
  3687                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  3688  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  3689  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  3690  1700  0185               	clrf	5	;volatile
  3691  1701                     l2918:	
  3692                           
  3693                           ;LCD_src.c: 18:  RA0=0;
  3694  1701  1283               	bcf	3,5	;RP0=0, select bank0
  3695  1702  1303               	bcf	3,6	;RP1=0, select bank0
  3696  1703  1005               	bcf	5,0	;volatile
  3697  1704                     l2920:	
  3698                           
  3699                           ;LCD_src.c: 19:  delay_screen();
  3700  1704  160A  118A  267F  160A  118A  	fcall	_delay_screen
  3701  1709                     l2922:	
  3702                           
  3703                           ;LCD_src.c: 20:  RA0=1;
  3704  1709  1283               	bcf	3,5	;RP0=0, select bank0
  3705  170A  1303               	bcf	3,6	;RP1=0, select bank0
  3706  170B  1405               	bsf	5,0	;volatile
  3707  170C                     l2924:	
  3708                           
  3709                           ;LCD_src.c: 21:  RA2=1;
  3710  170C  1505               	bsf	5,2	;volatile
  3711  170D                     l2926:	
  3712                           
  3713                           ;LCD_src.c: 22:  write_cmd(0x30);
  3714  170D  3030               	movlw	48
  3715  170E  120A  158A  2005  160A  118A  	fcall	_write_cmd
  3716  1713                     l2928:	
  3717                           
  3718                           ;LCD_src.c: 23:  write_cmd(0x01);
  3719  1713  3001               	movlw	1
  3720  1714  120A  158A  2005  160A  118A  	fcall	_write_cmd
  3721  1719                     l2930:	
  3722                           
  3723                           ;LCD_src.c: 24:  write_cmd(0x06);
  3724  1719  3006               	movlw	6
  3725  171A  120A  158A  2005  160A  118A  	fcall	_write_cmd
  3726  171F                     l2932:	
  3727                           
  3728                           ;LCD_src.c: 25:  write_cmd(0x0c);
  3729  171F  300C               	movlw	12
  3730  1720  120A  158A  2005  160A  118A  	fcall	_write_cmd
  3731  1725                     l150:	
  3732  1725  0008               	return
  3733  1726                     __end_of_lcd_init:	
  3734                           
  3735                           	psect	text9
  3736  15EC                     __ptext9:	
  3737 ;; *************** function _initialise_buttons *****************
  3738 ;; Defined at:
  3739 ;;		line 10 in file "Button_src.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;		None
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;		None
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         0       0       0       0       0
  3754 ;;      Locals:         0       0       0       0       0
  3755 ;;      Temps:          0       0       0       0       0
  3756 ;;      Totals:         0       0       0       0       0
  3757 ;;Total ram usage:        0 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; This function calls:
  3760 ;;		Nothing
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _initialise_buttons
  3768  15EC                     _initialise_buttons:	
  3769  15EC                     l2934:	
  3770                           ;incstack = 0
  3771                           ; Regs used in _initialise_buttons: [wreg+status,2]
  3772                           
  3773                           
  3774                           ;Button_src.c: 11:     ADCON1 = 0x06;
  3775  15EC  3006               	movlw	6
  3776  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  3777  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  3778  15EF  009F               	movwf	31	;volatile
  3779                           
  3780                           ;Button_src.c: 12:     TRISC = 0xf0;
  3781  15F0  30F0               	movlw	240
  3782  15F1  0087               	movwf	7	;volatile
  3783  15F2                     l2936:	
  3784                           
  3785                           ;Button_src.c: 13:     a = 0x00;
  3786  15F2  1283               	bcf	3,5	;RP0=0, select bank0
  3787  15F3  1303               	bcf	3,6	;RP1=0, select bank0
  3788  15F4  01C6               	clrf	_a
  3789  15F5                     l2938:	
  3790                           
  3791                           ;Button_src.c: 14:     b = 0x00;
  3792  15F5  01C5               	clrf	_b
  3793  15F6                     l2940:	
  3794                           
  3795                           ;Button_src.c: 15:     c = 0x00;
  3796  15F6  01C4               	clrf	_c
  3797  15F7                     l2942:	
  3798                           
  3799                           ;Button_src.c: 16:     z = 0;
  3800  15F7  01AF               	clrf	_z
  3801  15F8  01B0               	clrf	_z+1
  3802  15F9                     l497:	
  3803  15F9  0008               	return
  3804  15FA                     __end_of_initialise_buttons:	
  3805                           
  3806                           	psect	text10
  3807  15CC                     __ptext10:	
  3808 ;; *************** function _init_temp *****************
  3809 ;; Defined at:
  3810 ;;		line 6 in file "Thermometer_src.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		status,2
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3824 ;;      Params:         0       0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0
  3827 ;;      Totals:         0       0       0       0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function _init_temp
  3839  15CC                     _init_temp:	
  3840  15CC                     l2898:	
  3841                           ;incstack = 0
  3842                           ; Regs used in _init_temp: [status,2]
  3843                           
  3844                           
  3845                           ;Thermometer_src.c: 8:     TRISE=0X00;
  3846  15CC  1683               	bsf	3,5	;RP0=1, select bank1
  3847  15CD  1303               	bcf	3,6	;RP1=0, select bank1
  3848  15CE  0189               	clrf	9	;volatile
  3849                           
  3850                           ;Thermometer_src.c: 9:     PORTE = 0X00;
  3851  15CF  1283               	bcf	3,5	;RP0=0, select bank0
  3852  15D0  1303               	bcf	3,6	;RP1=0, select bank0
  3853  15D1  0189               	clrf	9	;volatile
  3854  15D2                     l237:	
  3855  15D2  0008               	return
  3856  15D3                     __end_of_init_temp:	
  3857                           
  3858                           	psect	text11
  3859  15E3                     __ptext11:	
  3860 ;; *************** function _init *****************
  3861 ;; Defined at:
  3862 ;;		line 5 in file "LCD_src.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, status,2
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3876 ;;      Params:         0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0
  3879 ;;      Totals:         0       0       0       0       0
  3880 ;;Total ram usage:        0 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_main
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           
  3890                           ;psect for function _init
  3891  15E3                     _init:	
  3892  15E3                     l2906:	
  3893                           ;incstack = 0
  3894                           ; Regs used in _init: [wreg+status,2]
  3895                           
  3896                           
  3897                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  3898  15E3  3007               	movlw	7
  3899  15E4  1683               	bsf	3,5	;RP0=1, select bank1
  3900  15E5  1303               	bcf	3,6	;RP1=0, select bank1
  3901  15E6  009F               	movwf	31	;volatile
  3902  15E7                     l2908:	
  3903                           
  3904                           ;LCD_src.c: 8:  TRISA0=1;
  3905  15E7  1405               	bsf	5,0	;volatile
  3906  15E8                     l2910:	
  3907                           
  3908                           ;LCD_src.c: 9:  TRISD=0X00;
  3909  15E8  0188               	clrf	8	;volatile
  3910  15E9                     l2912:	
  3911                           
  3912                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  3913  15E9  0181               	clrf	1	;volatile
  3914  15EA                     l2914:	
  3915                           
  3916                           ;LCD_src.c: 11:  TRISE = 0X00;
  3917  15EA  0189               	clrf	9	;volatile
  3918  15EB                     l147:	
  3919  15EB  0008               	return
  3920  15EC                     __end_of_init:	
  3921                           
  3922                           	psect	text12
  3923  081E                     __ptext12:	
  3924 ;; *************** function _get_time *****************
  3925 ;; Defined at:
  3926 ;;		line 26 in file "clock_src.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  i               2    6[COMMON] int 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       0       0       0
  3941 ;;      Locals:         2       0       0       0       0
  3942 ;;      Temps:          1       0       0       0       0
  3943 ;;      Totals:         3       0       0       0       0
  3944 ;;Total ram usage:        3 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    1
  3947 ;; This function calls:
  3948 ;;		_time_read_1
  3949 ;;		_time_write_1
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _get_time
  3957  081E                     _get_time:	
  3958  081E                     l3000:	
  3959                           ;incstack = 0
  3960                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3961                           
  3962                           
  3963                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  3964  081E  1283               	bcf	3,5	;RP0=0, select bank0
  3965  081F  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0820  1686               	bsf	6,5	;volatile
  3967  0821                     l3002:	
  3968                           
  3969                           ;clock_src.c: 30:    time_write_1(0xbf);
  3970  0821  30BF               	movlw	191
  3971  0822  160A  118A  2726  120A  158A  	fcall	_time_write_1
  3972  0827                     l3004:	
  3973                           
  3974                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  3975  0827  01F6               	clrf	get_time@i
  3976  0828  01F7               	clrf	get_time@i+1
  3977  0829                     l3010:	
  3978                           
  3979                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  3980  0829  120A  158A  204C  120A  158A  	fcall	_time_read_1
  3981  082E  00F5               	movwf	??_get_time
  3982  082F  0876               	movf	get_time@i,w
  3983  0830  3E20               	addlw	(low (_table1| 0))& (0+255)
  3984  0831  0084               	movwf	4
  3985  0832  0875               	movf	??_get_time,w
  3986  0833  1383               	bcf	3,7	;select IRP bank0
  3987  0834  0080               	movwf	0
  3988  0835                     l3012:	
  3989                           
  3990                           ;clock_src.c: 34:      }
  3991  0835  3001               	movlw	1
  3992  0836  07F6               	addwf	get_time@i,f
  3993  0837  1803               	skipnc
  3994  0838  0AF7               	incf	get_time@i+1,f
  3995  0839  3000               	movlw	0
  3996  083A  07F7               	addwf	get_time@i+1,f
  3997  083B                     l3014:	
  3998  083B  0877               	movf	get_time@i+1,w
  3999  083C  3A80               	xorlw	128
  4000  083D  00FF               	movwf	btemp+1
  4001  083E  3080               	movlw	128
  4002  083F  027F               	subwf	btemp+1,w
  4003  0840  1D03               	skipz
  4004  0841  2844               	goto	u1755
  4005  0842  3007               	movlw	7
  4006  0843  0276               	subwf	get_time@i,w
  4007  0844                     u1755:	
  4008  0844  1C03               	skipc
  4009  0845  2847               	goto	u1751
  4010  0846  2848               	goto	u1750
  4011  0847                     u1751:	
  4012  0847  2829               	goto	l3010
  4013  0848                     u1750:	
  4014  0848                     l314:	
  4015                           
  4016                           ;clock_src.c: 35:    RB5=0;
  4017  0848  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0849  1303               	bcf	3,6	;RP1=0, select bank0
  4019  084A  1286               	bcf	6,5	;volatile
  4020  084B                     l315:	
  4021  084B  0008               	return
  4022  084C                     __end_of_get_time:	
  4023                           
  4024                           	psect	text13
  4025  084C                     __ptext13:	
  4026 ;; *************** function _time_read_1 *****************
  4027 ;; Defined at:
  4028 ;;		line 132 in file "clock_src.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  j               2    2[COMMON] int 
  4033 ;;  time_rx         1    4[COMMON] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      unsigned char 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0, btemp+1
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4043 ;;      Params:         0       0       0       0       0
  4044 ;;      Locals:         3       0       0       0       0
  4045 ;;      Temps:          2       0       0       0       0
  4046 ;;      Totals:         5       0       0       0       0
  4047 ;;Total ram usage:        5 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_get_time
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           
  4057                           ;psect for function _time_read_1
  4058  084C                     _time_read_1:	
  4059  084C                     l2734:	
  4060                           ;incstack = 0
  4061                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  4062                           
  4063                           
  4064                           ;clock_src.c: 134:    unsigned char time_rx=0;
  4065  084C  01F4               	clrf	time_read_1@time_rx
  4066  084D                     l2736:	
  4067                           
  4068                           ;clock_src.c: 135:    int j;;clock_src.c: 136:    TRISB4=1;
  4069  084D  1683               	bsf	3,5	;RP0=1, select bank1
  4070  084E  1303               	bcf	3,6	;RP1=0, select bank1
  4071  084F  1606               	bsf	6,4	;volatile
  4072                           
  4073                           ;clock_src.c: 137:    for(j=0;j<8;j++)
  4074  0850  01F2               	clrf	time_read_1@j
  4075  0851  01F3               	clrf	time_read_1@j+1
  4076  0852                     l332:	
  4077                           
  4078                           ;clock_src.c: 138:       {;clock_src.c: 139:         RB0=0;
  4079  0852  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0853  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0854  1006               	bcf	6,0	;volatile
  4082  0855                     l2742:	
  4083                           
  4084                           ;clock_src.c: 140:         time_rx=time_rx>>1;
  4085  0855  0874               	movf	time_read_1@time_rx,w
  4086  0856  00F0               	movwf	??_time_read_1
  4087  0857  1003               	clrc
  4088  0858  0C70               	rrf	??_time_read_1,w
  4089  0859  00F1               	movwf	??_time_read_1+1
  4090  085A  0871               	movf	??_time_read_1+1,w
  4091  085B  00F4               	movwf	time_read_1@time_rx
  4092  085C                     l2744:	
  4093                           
  4094                           ;clock_src.c: 141:         if(RB4)time_rx=time_rx|0x80;
  4095  085C  1E06               	btfss	6,4	;volatile
  4096  085D  285F               	goto	u1381
  4097  085E  2860               	goto	u1380
  4098  085F                     u1381:	
  4099  085F  2865               	goto	l2748
  4100  0860                     u1380:	
  4101  0860                     l2746:	
  4102  0860  0874               	movf	time_read_1@time_rx,w
  4103  0861  3880               	iorlw	128
  4104  0862  00F0               	movwf	??_time_read_1
  4105  0863  0870               	movf	??_time_read_1,w
  4106  0864  00F4               	movwf	time_read_1@time_rx
  4107  0865                     l2748:	
  4108                           
  4109                           ;clock_src.c: 143:        RB0=1;
  4110  0865  1406               	bsf	6,0	;volatile
  4111  0866                     l2750:	
  4112                           
  4113                           ;clock_src.c: 144:       }
  4114  0866  3001               	movlw	1
  4115  0867  07F2               	addwf	time_read_1@j,f
  4116  0868  1803               	skipnc
  4117  0869  0AF3               	incf	time_read_1@j+1,f
  4118  086A  3000               	movlw	0
  4119  086B  07F3               	addwf	time_read_1@j+1,f
  4120  086C                     l2752:	
  4121  086C  0873               	movf	time_read_1@j+1,w
  4122  086D  3A80               	xorlw	128
  4123  086E  00FF               	movwf	btemp+1
  4124  086F  3080               	movlw	128
  4125  0870  027F               	subwf	btemp+1,w
  4126  0871  1D03               	skipz
  4127  0872  2875               	goto	u1395
  4128  0873  3008               	movlw	8
  4129  0874  0272               	subwf	time_read_1@j,w
  4130  0875                     u1395:	
  4131  0875  1C03               	skipc
  4132  0876  2878               	goto	u1391
  4133  0877  2879               	goto	u1390
  4134  0878                     u1391:	
  4135  0878  2852               	goto	l332
  4136  0879                     u1390:	
  4137  0879                     l333:	
  4138                           
  4139                           ;clock_src.c: 145:     TRISB4=0;
  4140  0879  1683               	bsf	3,5	;RP0=1, select bank1
  4141  087A  1303               	bcf	3,6	;RP1=0, select bank1
  4142  087B  1206               	bcf	6,4	;volatile
  4143                           
  4144                           ;clock_src.c: 146:     RB0=0;
  4145  087C  1283               	bcf	3,5	;RP0=0, select bank0
  4146  087D  1303               	bcf	3,6	;RP1=0, select bank0
  4147  087E  1006               	bcf	6,0	;volatile
  4148  087F                     l2754:	
  4149                           
  4150                           ;clock_src.c: 147:     return(time_rx);
  4151  087F  0874               	movf	time_read_1@time_rx,w
  4152  0880                     l335:	
  4153  0880  0008               	return
  4154  0881                     __end_of_time_read_1:	
  4155                           
  4156                           	psect	text14
  4157  0C4A                     __ptext14:	
  4158 ;; *************** function _get_temp *****************
  4159 ;; Defined at:
  4160 ;;		line 89 in file "Thermometer_src.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  i               2    0        int 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4174 ;;      Params:         0       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0
  4176 ;;      Temps:          0       4       0       0       0
  4177 ;;      Totals:         0       4       0       0       0
  4178 ;;Total ram usage:        4 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    2
  4181 ;; This function calls:
  4182 ;;		___awdiv
  4183 ;;		___awmod
  4184 ;;		___lwdiv
  4185 ;;		___lwmod
  4186 ;;		_delay2
  4187 ;;		_read_byte
  4188 ;;		_reset_temp
  4189 ;;		_write_byte
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           
  4196                           ;psect for function _get_temp
  4197  0C4A                     _get_temp:	
  4198  0C4A                     l2944:	
  4199                           ;incstack = 0
  4200                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4201                           
  4202                           
  4203                           ;Thermometer_src.c: 91: int i;;Thermometer_src.c: 92: TRISE0 =1;
  4204  0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  4205  0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  4206  0C4C  1409               	bsf	9,0	;volatile
  4207  0C4D                     l2946:	
  4208                           
  4209                           ;Thermometer_src.c: 93: reset_temp();
  4210  0C4D  120A  158A  20F5  120A  158A  	fcall	_reset_temp
  4211                           
  4212                           ;Thermometer_src.c: 94: write_byte(0XCC);
  4213  0C52  30CC               	movlw	204
  4214  0C53  120A  118A  2004  120A  158A  	fcall	_write_byte
  4215  0C58                     l2948:	
  4216                           
  4217                           ;Thermometer_src.c: 95: delay2();
  4218  0C58  160A  118A  2695  120A  158A  	fcall	_delay2
  4219  0C5D                     l2950:	
  4220                           
  4221                           ;Thermometer_src.c: 96: write_byte(0X44);
  4222  0C5D  3044               	movlw	68
  4223  0C5E  120A  118A  2004  120A  158A  	fcall	_write_byte
  4224  0C63                     l2952:	
  4225                           
  4226                           ;Thermometer_src.c: 98: reset_temp();
  4227  0C63  120A  158A  20F5  120A  158A  	fcall	_reset_temp
  4228  0C68                     l2954:	
  4229                           
  4230                           ;Thermometer_src.c: 99: write_byte(0XCC);
  4231  0C68  30CC               	movlw	204
  4232  0C69  120A  118A  2004  120A  158A  	fcall	_write_byte
  4233  0C6E                     l2956:	
  4234                           
  4235                           ;Thermometer_src.c: 100: write_byte(0XBE);
  4236  0C6E  30BE               	movlw	190
  4237  0C6F  120A  118A  2004  120A  158A  	fcall	_write_byte
  4238  0C74                     l2958:	
  4239                           
  4240                           ;Thermometer_src.c: 101: TLV=read_byte();
  4241  0C74  120A  158A  20BB  120A  158A  	fcall	_read_byte
  4242  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0C7B  00D1               	movwf	??_get_temp
  4245  0C7C  0851               	movf	??_get_temp,w
  4246  0C7D  00D0               	movwf	_TLV
  4247  0C7E                     l2960:	
  4248                           
  4249                           ;Thermometer_src.c: 102: THV=read_byte();
  4250  0C7E  120A  158A  20BB  120A  158A  	fcall	_read_byte
  4251  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0C85  00D1               	movwf	??_get_temp
  4254  0C86  0851               	movf	??_get_temp,w
  4255  0C87  00CF               	movwf	_THV
  4256  0C88                     l2962:	
  4257                           
  4258                           ;Thermometer_src.c: 103: TRISE0 =1;
  4259  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  4260  0C89  1303               	bcf	3,6	;RP1=0, select bank1
  4261  0C8A  1409               	bsf	9,0	;volatile
  4262  0C8B                     l2964:	
  4263                           
  4264                           ;Thermometer_src.c: 104: TZ=(TLV>>4)|(THV<<4)&0X3f;
  4265  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  4267  0C8D  084F               	movf	_THV,w
  4268  0C8E  00D1               	movwf	??_get_temp
  4269  0C8F  3004               	movlw	4
  4270  0C90                     u1685:	
  4271  0C90  1003               	clrc
  4272  0C91  0DD1               	rlf	??_get_temp,f
  4273  0C92  3EFF               	addlw	-1
  4274  0C93  1D03               	skipz
  4275  0C94  2C90               	goto	u1685
  4276  0C95  303F               	movlw	63
  4277  0C96  0551               	andwf	??_get_temp,w
  4278  0C97  00D2               	movwf	??_get_temp+1
  4279  0C98  0850               	movf	_TLV,w
  4280  0C99  00D3               	movwf	??_get_temp+2
  4281  0C9A  3004               	movlw	4
  4282  0C9B                     u1695:	
  4283  0C9B  1003               	clrc
  4284  0C9C  0CD3               	rrf	??_get_temp+2,f
  4285  0C9D  3EFF               	addlw	-1
  4286  0C9E  1D03               	skipz
  4287  0C9F  2C9B               	goto	u1695
  4288  0CA0  0853               	movf	??_get_temp+2,w
  4289  0CA1  0452               	iorwf	??_get_temp+1,w
  4290  0CA2  00D4               	movwf	??_get_temp+3
  4291  0CA3  0854               	movf	??_get_temp+3,w
  4292  0CA4  00CE               	movwf	_TZ
  4293  0CA5                     l2966:	
  4294                           
  4295                           ;Thermometer_src.c: 105: TX=TLV<<4;
  4296  0CA5  0850               	movf	_TLV,w
  4297  0CA6  00D1               	movwf	??_get_temp
  4298  0CA7  3003               	movlw	3
  4299  0CA8                     u1705:	
  4300  0CA8  1003               	clrc
  4301  0CA9  0DD1               	rlf	??_get_temp,f
  4302  0CAA  3EFF               	addlw	-1
  4303  0CAB  1D03               	skipz
  4304  0CAC  2CA8               	goto	u1705
  4305  0CAD  1003               	clrc
  4306  0CAE  0D51               	rlf	??_get_temp,w
  4307  0CAF  00D2               	movwf	??_get_temp+1
  4308  0CB0  0852               	movf	??_get_temp+1,w
  4309  0CB1  00CD               	movwf	_TX
  4310  0CB2                     l2970:	
  4311                           
  4312                           ;Thermometer_src.c: 107: ge=TZ%10;
  4313  0CB2  300A               	movlw	10
  4314  0CB3  00F0               	movwf	___awmod@divisor
  4315  0CB4  3000               	movlw	0
  4316  0CB5  00F1               	movwf	___awmod@divisor+1
  4317  0CB6  084E               	movf	_TZ,w
  4318  0CB7  00D1               	movwf	??_get_temp
  4319  0CB8  01D2               	clrf	??_get_temp+1
  4320  0CB9  0851               	movf	??_get_temp,w
  4321  0CBA  00F2               	movwf	___awmod@dividend
  4322  0CBB  0852               	movf	??_get_temp+1,w
  4323  0CBC  00F3               	movwf	___awmod@dividend+1
  4324  0CBD  120A  158A  21F2  120A  158A  	fcall	___awmod
  4325  0CC2  0870               	movf	?___awmod,w
  4326  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  4327  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  4328  0CC5  00D3               	movwf	??_get_temp+2
  4329  0CC6  0853               	movf	??_get_temp+2,w
  4330  0CC7  00CB               	movwf	_ge
  4331                           
  4332                           ;Thermometer_src.c: 108: shi=TZ/10;
  4333  0CC8  300A               	movlw	10
  4334  0CC9  00F0               	movwf	___awdiv@divisor
  4335  0CCA  3000               	movlw	0
  4336  0CCB  00F1               	movwf	___awdiv@divisor+1
  4337  0CCC  084E               	movf	_TZ,w
  4338  0CCD  00D1               	movwf	??_get_temp
  4339  0CCE  01D2               	clrf	??_get_temp+1
  4340  0CCF  0851               	movf	??_get_temp,w
  4341  0CD0  00F2               	movwf	___awdiv@dividend
  4342  0CD1  0852               	movf	??_get_temp+1,w
  4343  0CD2  00F3               	movwf	___awdiv@dividend+1
  4344  0CD3  120A  158A  224B  120A  158A  	fcall	___awdiv
  4345  0CD8  0870               	movf	?___awdiv,w
  4346  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0CDB  00D3               	movwf	??_get_temp+2
  4349  0CDC  0853               	movf	??_get_temp+2,w
  4350  0CDD  00CC               	movwf	_shi
  4351  0CDE                     l2972:	
  4352                           
  4353                           ;Thermometer_src.c: 109: wd=0;
  4354  0CDE  01B9               	clrf	_wd
  4355  0CDF  01BA               	clrf	_wd+1
  4356  0CE0                     l2974:	
  4357                           
  4358                           ;Thermometer_src.c: 110: if (TX & 0x80) wd=wd+5000;
  4359  0CE0  1FCD               	btfss	_TX,7
  4360  0CE1  2CE3               	goto	u1711
  4361  0CE2  2CE4               	goto	u1710
  4362  0CE3                     u1711:	
  4363  0CE3  2CEC               	goto	l2978
  4364  0CE4                     u1710:	
  4365  0CE4                     l2976:	
  4366  0CE4  0839               	movf	_wd,w
  4367  0CE5  3E88               	addlw	136
  4368  0CE6  00B9               	movwf	_wd
  4369  0CE7  083A               	movf	_wd+1,w
  4370  0CE8  1803               	skipnc
  4371  0CE9  3E01               	addlw	1
  4372  0CEA  3E13               	addlw	19
  4373  0CEB  00BA               	movwf	_wd+1
  4374  0CEC                     l2978:	
  4375                           
  4376                           ;Thermometer_src.c: 111: if (TX & 0x40) wd=wd+2500;
  4377  0CEC  1F4D               	btfss	_TX,6
  4378  0CED  2CEF               	goto	u1721
  4379  0CEE  2CF0               	goto	u1720
  4380  0CEF                     u1721:	
  4381  0CEF  2CF8               	goto	l2982
  4382  0CF0                     u1720:	
  4383  0CF0                     l2980:	
  4384  0CF0  0839               	movf	_wd,w
  4385  0CF1  3EC4               	addlw	196
  4386  0CF2  00B9               	movwf	_wd
  4387  0CF3  083A               	movf	_wd+1,w
  4388  0CF4  1803               	skipnc
  4389  0CF5  3E01               	addlw	1
  4390  0CF6  3E09               	addlw	9
  4391  0CF7  00BA               	movwf	_wd+1
  4392  0CF8                     l2982:	
  4393                           
  4394                           ;Thermometer_src.c: 112: if (TX & 0x20) wd=wd+1250;
  4395  0CF8  1ECD               	btfss	_TX,5
  4396  0CF9  2CFB               	goto	u1731
  4397  0CFA  2CFC               	goto	u1730
  4398  0CFB                     u1731:	
  4399  0CFB  2D04               	goto	l2986
  4400  0CFC                     u1730:	
  4401  0CFC                     l2984:	
  4402  0CFC  0839               	movf	_wd,w
  4403  0CFD  3EE2               	addlw	226
  4404  0CFE  00B9               	movwf	_wd
  4405  0CFF  083A               	movf	_wd+1,w
  4406  0D00  1803               	skipnc
  4407  0D01  3E01               	addlw	1
  4408  0D02  3E04               	addlw	4
  4409  0D03  00BA               	movwf	_wd+1
  4410  0D04                     l2986:	
  4411                           
  4412                           ;Thermometer_src.c: 113: if (TX & 0x10) wd=wd+625;
  4413  0D04  1E4D               	btfss	_TX,4
  4414  0D05  2D07               	goto	u1741
  4415  0D06  2D08               	goto	u1740
  4416  0D07                     u1741:	
  4417  0D07  2D10               	goto	l2990
  4418  0D08                     u1740:	
  4419  0D08                     l2988:	
  4420  0D08  0839               	movf	_wd,w
  4421  0D09  3E71               	addlw	113
  4422  0D0A  00B9               	movwf	_wd
  4423  0D0B  083A               	movf	_wd+1,w
  4424  0D0C  1803               	skipnc
  4425  0D0D  3E01               	addlw	1
  4426  0D0E  3E02               	addlw	2
  4427  0D0F  00BA               	movwf	_wd+1
  4428  0D10                     l2990:	
  4429                           
  4430                           ;Thermometer_src.c: 114: shifen=wd/1000;
  4431  0D10  30E8               	movlw	232
  4432  0D11  00F6               	movwf	___lwdiv@divisor
  4433  0D12  3003               	movlw	3
  4434  0D13  00F7               	movwf	___lwdiv@divisor+1
  4435  0D14  083A               	movf	_wd+1,w
  4436  0D15  00F9               	movwf	___lwdiv@dividend+1
  4437  0D16  0839               	movf	_wd,w
  4438  0D17  00F8               	movwf	___lwdiv@dividend
  4439  0D18  120A  158A  21AE  120A  158A  	fcall	___lwdiv
  4440  0D1D  0876               	movf	?___lwdiv,w
  4441  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  4442  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  4443  0D20  00D1               	movwf	??_get_temp
  4444  0D21  0851               	movf	??_get_temp,w
  4445  0D22  00CA               	movwf	_shifen
  4446  0D23                     l2992:	
  4447                           
  4448                           ;Thermometer_src.c: 115: baifen=(wd%1000)/100;
  4449  0D23  3064               	movlw	100
  4450  0D24  00F6               	movwf	___lwdiv@divisor
  4451  0D25  3000               	movlw	0
  4452  0D26  00F7               	movwf	___lwdiv@divisor+1
  4453  0D27  083A               	movf	_wd+1,w
  4454  0D28  00F3               	movwf	___lwmod@dividend+1
  4455  0D29  0839               	movf	_wd,w
  4456  0D2A  00F2               	movwf	___lwmod@dividend
  4457  0D2B  30E8               	movlw	232
  4458  0D2C  00F0               	movwf	___lwmod@divisor
  4459  0D2D  3003               	movlw	3
  4460  0D2E  00F1               	movwf	___lwmod@divisor+1
  4461  0D2F  120A  158A  2081  120A  158A  	fcall	___lwmod
  4462  0D34  0871               	movf	?___lwmod+1,w
  4463  0D35  00F9               	movwf	___lwdiv@dividend+1
  4464  0D36  0870               	movf	?___lwmod,w
  4465  0D37  00F8               	movwf	___lwdiv@dividend
  4466  0D38  120A  158A  21AE  120A  158A  	fcall	___lwdiv
  4467  0D3D  0876               	movf	?___lwdiv,w
  4468  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  4469  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  4470  0D40  00D1               	movwf	??_get_temp
  4471  0D41  0851               	movf	??_get_temp,w
  4472  0D42  00C9               	movwf	_baifen
  4473  0D43                     l2994:	
  4474                           
  4475                           ;Thermometer_src.c: 116: qianfen=(wd%100)/10;
  4476  0D43  300A               	movlw	10
  4477  0D44  00F6               	movwf	___lwdiv@divisor
  4478  0D45  3000               	movlw	0
  4479  0D46  00F7               	movwf	___lwdiv@divisor+1
  4480  0D47  083A               	movf	_wd+1,w
  4481  0D48  00F3               	movwf	___lwmod@dividend+1
  4482  0D49  0839               	movf	_wd,w
  4483  0D4A  00F2               	movwf	___lwmod@dividend
  4484  0D4B  3064               	movlw	100
  4485  0D4C  00F0               	movwf	___lwmod@divisor
  4486  0D4D  3000               	movlw	0
  4487  0D4E  00F1               	movwf	___lwmod@divisor+1
  4488  0D4F  120A  158A  2081  120A  158A  	fcall	___lwmod
  4489  0D54  0871               	movf	?___lwmod+1,w
  4490  0D55  00F9               	movwf	___lwdiv@dividend+1
  4491  0D56  0870               	movf	?___lwmod,w
  4492  0D57  00F8               	movwf	___lwdiv@dividend
  4493  0D58  120A  158A  21AE  120A  158A  	fcall	___lwdiv
  4494  0D5D  0876               	movf	?___lwdiv,w
  4495  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0D60  00D1               	movwf	??_get_temp
  4498  0D61  0851               	movf	??_get_temp,w
  4499  0D62  00C8               	movwf	_qianfen
  4500  0D63                     l2996:	
  4501                           
  4502                           ;Thermometer_src.c: 117: wanfen=wd%10;
  4503  0D63  300A               	movlw	10
  4504  0D64  00F0               	movwf	___lwmod@divisor
  4505  0D65  3000               	movlw	0
  4506  0D66  00F1               	movwf	___lwmod@divisor+1
  4507  0D67  083A               	movf	_wd+1,w
  4508  0D68  00F3               	movwf	___lwmod@dividend+1
  4509  0D69  0839               	movf	_wd,w
  4510  0D6A  00F2               	movwf	___lwmod@dividend
  4511  0D6B  120A  158A  2081  120A  158A  	fcall	___lwmod
  4512  0D70  0870               	movf	?___lwmod,w
  4513  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  4514  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  4515  0D73  00D1               	movwf	??_get_temp
  4516  0D74  0851               	movf	??_get_temp,w
  4517  0D75  00C7               	movwf	_wanfen
  4518  0D76                     l2998:	
  4519                           
  4520                           ;Thermometer_src.c: 118: __nop();
  4521  0D76  0000               	nop
  4522  0D77                     l270:	
  4523  0D77  0008               	return
  4524  0D78                     __end_of_get_temp:	
  4525                           
  4526                           	psect	text15
  4527  0004                     __ptext15:	
  4528 ;; *************** function _write_byte *****************
  4529 ;; Defined at:
  4530 ;;		line 40 in file "Thermometer_src.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  val             1    wreg     unsigned char 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  val             1    7[COMMON] unsigned char 
  4535 ;;  i               1    8[COMMON] unsigned char 
  4536 ;;  temp            1    6[COMMON] unsigned char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0, pclath, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4546 ;;      Params:         0       0       0       0       0
  4547 ;;      Locals:         3       0       0       0       0
  4548 ;;      Temps:          2       0       0       0       0
  4549 ;;      Totals:         5       0       0       0       0
  4550 ;;Total ram usage:        5 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    1
  4553 ;; This function calls:
  4554 ;;		_delay_temp
  4555 ;; This function is called by:
  4556 ;;		_get_temp
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function _write_byte
  4562  0004                     _write_byte:	
  4563                           
  4564                           ;incstack = 0
  4565                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4566                           ;write_byte@val stored from wreg
  4567  0004  00F7               	movwf	write_byte@val
  4568  0005                     l2630:	
  4569                           
  4570                           ;Thermometer_src.c: 40: void write_byte(unsigned char val);Thermometer_src.c: 41: {;Ther
      +                          mometer_src.c: 42:  unsigned char i;;Thermometer_src.c: 43:  unsigned char temp;;Thermom
      +                          eter_src.c: 44:  for(i=8;i>0;i--)
  4571  0005  3008               	movlw	8
  4572  0006  00F4               	movwf	??_write_byte
  4573  0007  0874               	movf	??_write_byte,w
  4574  0008  00F8               	movwf	write_byte@i
  4575  0009                     l2636:	
  4576                           
  4577                           ;Thermometer_src.c: 45:  {;Thermometer_src.c: 46:    temp=val&0x01;
  4578  0009  0877               	movf	write_byte@val,w
  4579  000A  3901               	andlw	1
  4580  000B  00F4               	movwf	??_write_byte
  4581  000C  0874               	movf	??_write_byte,w
  4582  000D  00F6               	movwf	write_byte@temp
  4583  000E                     l2638:	
  4584                           
  4585                           ;Thermometer_src.c: 47:    RE0 = 0; TRISE0 = 0;
  4586  000E  1283               	bcf	3,5	;RP0=0, select bank0
  4587  000F  1303               	bcf	3,6	;RP1=0, select bank0
  4588  0010  1009               	bcf	9,0	;volatile
  4589  0011                     l2640:	
  4590  0011  1683               	bsf	3,5	;RP0=1, select bank1
  4591  0012  1303               	bcf	3,6	;RP1=0, select bank1
  4592  0013  1009               	bcf	9,0	;volatile
  4593  0014                     l2642:	
  4594                           
  4595                           ;Thermometer_src.c: 48:    __nop();
  4596  0014  0000               	nop
  4597  0015                     l2644:	
  4598                           
  4599                           ;Thermometer_src.c: 49:    __nop();
  4600  0015  0000               	nop
  4601  0016                     l2646:	
  4602                           
  4603                           ;Thermometer_src.c: 50:    __nop();
  4604  0016  0000               	nop
  4605  0017                     l2648:	
  4606                           
  4607                           ;Thermometer_src.c: 51:    __nop();
  4608  0017  0000               	nop
  4609  0018                     l2650:	
  4610                           
  4611                           ;Thermometer_src.c: 52:    __nop();
  4612  0018  0000               	nop
  4613  0019                     l2652:	
  4614                           
  4615                           ;Thermometer_src.c: 53:    if(temp==1) TRISE0 =1;
  4616  0019  0376               	decf	write_byte@temp,w
  4617  001A  1D03               	btfss	3,2
  4618  001B  281D               	goto	u1331
  4619  001C  281E               	goto	u1330
  4620  001D                     u1331:	
  4621  001D  2821               	goto	l2656
  4622  001E                     u1330:	
  4623  001E                     l2654:	
  4624  001E  1683               	bsf	3,5	;RP0=1, select bank1
  4625  001F  1303               	bcf	3,6	;RP1=0, select bank1
  4626  0020  1409               	bsf	9,0	;volatile
  4627  0021                     l2656:	
  4628                           
  4629                           ;Thermometer_src.c: 54:    delay_temp(2,7);
  4630  0021  3007               	movlw	7
  4631  0022  00F4               	movwf	??_write_byte
  4632  0023  0874               	movf	??_write_byte,w
  4633  0024  00F0               	movwf	delay_temp@y
  4634  0025  3002               	movlw	2
  4635  0026  160A  118A  262F  120A  118A  	fcall	_delay_temp
  4636  002B                     l2658:	
  4637                           
  4638                           ;Thermometer_src.c: 55:    TRISE0 =1;
  4639  002B  1683               	bsf	3,5	;RP0=1, select bank1
  4640  002C  1303               	bcf	3,6	;RP1=0, select bank1
  4641  002D  1409               	bsf	9,0	;volatile
  4642  002E                     l2660:	
  4643                           
  4644                           ;Thermometer_src.c: 56:    __nop();
  4645  002E  0000               	nop
  4646  002F                     l2662:	
  4647                           
  4648                           ;Thermometer_src.c: 57:    __nop();
  4649  002F  0000               	nop
  4650  0030                     l2664:	
  4651                           
  4652                           ;Thermometer_src.c: 58:    val=val>>1;
  4653  0030  0877               	movf	write_byte@val,w
  4654  0031  00F4               	movwf	??_write_byte
  4655  0032  1003               	clrc
  4656  0033  0C74               	rrf	??_write_byte,w
  4657  0034  00F5               	movwf	??_write_byte+1
  4658  0035  0875               	movf	??_write_byte+1,w
  4659  0036  00F7               	movwf	write_byte@val
  4660  0037                     l2666:	
  4661                           
  4662                           ;Thermometer_src.c: 59:   }
  4663  0037  3001               	movlw	1
  4664  0038  02F8               	subwf	write_byte@i,f
  4665  0039                     l2668:	
  4666  0039  0878               	movf	write_byte@i,w
  4667  003A  1D03               	btfss	3,2
  4668  003B  283D               	goto	u1341
  4669  003C  283E               	goto	u1340
  4670  003D                     u1341:	
  4671  003D  2809               	goto	l2636
  4672  003E                     u1340:	
  4673  003E                     l254:	
  4674  003E  0008               	return
  4675  003F                     __end_of_write_byte:	
  4676                           
  4677                           	psect	text16
  4678  08F5                     __ptext16:	
  4679 ;; *************** function _reset_temp *****************
  4680 ;; Defined at:
  4681 ;;		line 25 in file "Thermometer_src.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  presence        1    5[COMMON] unsigned char 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0, pclath, cstack
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4695 ;;      Params:         0       0       0       0       0
  4696 ;;      Locals:         1       0       0       0       0
  4697 ;;      Temps:          1       0       0       0       0
  4698 ;;      Totals:         2       0       0       0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    1
  4702 ;; This function calls:
  4703 ;;		_delay_temp
  4704 ;; This function is called by:
  4705 ;;		_get_temp
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _reset_temp
  4711  08F5                     _reset_temp:	
  4712  08F5                     l2614:	
  4713                           ;incstack = 0
  4714                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  4715                           
  4716                           
  4717                           ;Thermometer_src.c: 27:   char presence=1;
  4718  08F5  01F5               	clrf	reset_temp@presence
  4719  08F6  0AF5               	incf	reset_temp@presence,f
  4720                           
  4721                           ;Thermometer_src.c: 28:   while(presence)
  4722  08F7  2929               	goto	l2628
  4723  08F8                     l244:	
  4724                           
  4725                           ;Thermometer_src.c: 29:   {;Thermometer_src.c: 30:     RE0 = 0; TRISE0 = 0 ;
  4726  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  4727  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  4728  08FA  1009               	bcf	9,0	;volatile
  4729  08FB  1683               	bsf	3,5	;RP0=1, select bank1
  4730  08FC  1303               	bcf	3,6	;RP1=0, select bank1
  4731  08FD  1009               	bcf	9,0	;volatile
  4732  08FE                     l2616:	
  4733                           
  4734                           ;Thermometer_src.c: 31:     delay_temp(2,70);
  4735  08FE  3046               	movlw	70
  4736  08FF  00F4               	movwf	??_reset_temp
  4737  0900  0874               	movf	??_reset_temp,w
  4738  0901  00F0               	movwf	delay_temp@y
  4739  0902  3002               	movlw	2
  4740  0903  160A  118A  262F  120A  158A  	fcall	_delay_temp
  4741  0908                     l2618:	
  4742                           
  4743                           ;Thermometer_src.c: 32:     TRISE0 =1;
  4744  0908  1683               	bsf	3,5	;RP0=1, select bank1
  4745  0909  1303               	bcf	3,6	;RP1=0, select bank1
  4746  090A  1409               	bsf	9,0	;volatile
  4747                           
  4748                           ;Thermometer_src.c: 33:     delay_temp(2,8);
  4749  090B  3008               	movlw	8
  4750  090C  00F4               	movwf	??_reset_temp
  4751  090D  0874               	movf	??_reset_temp,w
  4752  090E  00F0               	movwf	delay_temp@y
  4753  090F  3002               	movlw	2
  4754  0910  160A  118A  262F  120A  158A  	fcall	_delay_temp
  4755  0915                     l2620:	
  4756                           
  4757                           ;Thermometer_src.c: 34:     if(RE0==1) presence=1;
  4758  0915  1283               	bcf	3,5	;RP0=0, select bank0
  4759  0916  1303               	bcf	3,6	;RP1=0, select bank0
  4760  0917  1C09               	btfss	9,0	;volatile
  4761  0918  291A               	goto	u1311
  4762  0919  291B               	goto	u1310
  4763  091A                     u1311:	
  4764  091A  291E               	goto	l2624
  4765  091B                     u1310:	
  4766  091B                     l2622:	
  4767  091B  01F5               	clrf	reset_temp@presence
  4768  091C  0AF5               	incf	reset_temp@presence,f
  4769  091D  291F               	goto	l2626
  4770  091E                     l2624:	
  4771  091E  01F5               	clrf	reset_temp@presence
  4772  091F                     l2626:	
  4773                           
  4774                           ;Thermometer_src.c: 36:     delay_temp(2,60);
  4775  091F  303C               	movlw	60
  4776  0920  00F4               	movwf	??_reset_temp
  4777  0921  0874               	movf	??_reset_temp,w
  4778  0922  00F0               	movwf	delay_temp@y
  4779  0923  3002               	movlw	2
  4780  0924  160A  118A  262F  120A  158A  	fcall	_delay_temp
  4781  0929                     l2628:	
  4782                           
  4783                           ;Thermometer_src.c: 28:   while(presence)
  4784  0929  0875               	movf	reset_temp@presence,w
  4785  092A  1D03               	btfss	3,2
  4786  092B  292D               	goto	u1321
  4787  092C  292E               	goto	u1320
  4788  092D                     u1321:	
  4789  092D  28F8               	goto	l244
  4790  092E                     u1320:	
  4791  092E                     l248:	
  4792  092E  0008               	return
  4793  092F                     __end_of_reset_temp:	
  4794                           
  4795                           	psect	text17
  4796  08BB                     __ptext17:	
  4797 ;; *************** function _read_byte *****************
  4798 ;; Defined at:
  4799 ;;		line 62 in file "Thermometer_src.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;		None
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  i               1    6[COMMON] unsigned char 
  4804 ;;  value           1    5[COMMON] unsigned char 
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      unsigned char 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, pclath, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4814 ;;      Params:         0       0       0       0       0
  4815 ;;      Locals:         2       0       0       0       0
  4816 ;;      Temps:          1       0       0       0       0
  4817 ;;      Totals:         3       0       0       0       0
  4818 ;;Total ram usage:        3 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    1
  4821 ;; This function calls:
  4822 ;;		_delay_temp
  4823 ;; This function is called by:
  4824 ;;		_get_temp
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           
  4829                           ;psect for function _read_byte
  4830  08BB                     _read_byte:	
  4831  08BB                     l2670:	
  4832                           ;incstack = 0
  4833                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  4834                           
  4835                           
  4836                           ;Thermometer_src.c: 64:  unsigned char i;;Thermometer_src.c: 65:  unsigned char value=0;
  4837  08BB  01F5               	clrf	read_byte@value
  4838  08BC                     l2672:	
  4839                           
  4840                           ;Thermometer_src.c: 66:  static _Bool j;;Thermometer_src.c: 67:  for(i=8;i>0;i--)
  4841  08BC  3008               	movlw	8
  4842  08BD  00F4               	movwf	??_read_byte
  4843  08BE  0874               	movf	??_read_byte,w
  4844  08BF  00F6               	movwf	read_byte@i
  4845  08C0                     l2678:	
  4846                           
  4847                           ;Thermometer_src.c: 68:  {;Thermometer_src.c: 69:    value>>=1;
  4848  08C0  1003               	clrc
  4849  08C1  0CF5               	rrf	read_byte@value,f
  4850  08C2                     l2680:	
  4851                           
  4852                           ;Thermometer_src.c: 70:    RE0 = 0; TRISE0 = 0;
  4853  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  4854  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  4855  08C4  1009               	bcf	9,0	;volatile
  4856  08C5                     l2682:	
  4857  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  4858  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  4859  08C7  1009               	bcf	9,0	;volatile
  4860  08C8                     l2684:	
  4861                           
  4862                           ;Thermometer_src.c: 71:    __nop();
  4863  08C8  0000               	nop
  4864  08C9                     l2686:	
  4865                           
  4866                           ;Thermometer_src.c: 72:    __nop();
  4867  08C9  0000               	nop
  4868  08CA                     l2688:	
  4869                           
  4870                           ;Thermometer_src.c: 73:    __nop();
  4871  08CA  0000               	nop
  4872  08CB                     l2690:	
  4873                           
  4874                           ;Thermometer_src.c: 74:    __nop();
  4875  08CB  0000               	nop
  4876  08CC                     l2692:	
  4877                           
  4878                           ;Thermometer_src.c: 75:    __nop();
  4879  08CC  0000               	nop
  4880  08CD                     l2694:	
  4881                           
  4882                           ;Thermometer_src.c: 76:    __nop();
  4883  08CD  0000               	nop
  4884  08CE                     l2696:	
  4885                           
  4886                           ;Thermometer_src.c: 77:    TRISE0 =1;
  4887  08CE  1683               	bsf	3,5	;RP0=1, select bank1
  4888  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  4889  08D0  1409               	bsf	9,0	;volatile
  4890  08D1                     l2698:	
  4891                           
  4892                           ;Thermometer_src.c: 78:    __nop();
  4893  08D1  0000               	nop
  4894  08D2                     l2700:	
  4895                           
  4896                           ;Thermometer_src.c: 79:    __nop();
  4897  08D2  0000               	nop
  4898  08D3                     l2702:	
  4899                           
  4900                           ;Thermometer_src.c: 80:    __nop();
  4901  08D3  0000               	nop
  4902  08D4                     l2704:	
  4903                           
  4904                           ;Thermometer_src.c: 81:    __nop();
  4905  08D4  0000               	nop
  4906  08D5                     l2706:	
  4907                           
  4908                           ;Thermometer_src.c: 82:    __nop();
  4909  08D5  0000               	nop
  4910  08D6                     l2708:	
  4911                           
  4912                           ;Thermometer_src.c: 83:    j=RE0;
  4913  08D6  3000               	movlw	0
  4914  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  4915  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  4916  08D9  1809               	btfsc	9,0	;volatile
  4917  08DA  3001               	movlw	1
  4918  08DB  00BB               	movwf	read_byte@j
  4919  08DC                     l2710:	
  4920                           
  4921                           ;Thermometer_src.c: 84:    if(j) value|=0x80;
  4922  08DC  083B               	movf	read_byte@j,w
  4923  08DD  1903               	btfsc	3,2
  4924  08DE  28E0               	goto	u1351
  4925  08DF  28E1               	goto	u1350
  4926  08E0                     u1351:	
  4927  08E0  28E2               	goto	l2714
  4928  08E1                     u1350:	
  4929  08E1                     l2712:	
  4930  08E1  17F5               	bsf	read_byte@value,7
  4931  08E2                     l2714:	
  4932                           
  4933                           ;Thermometer_src.c: 85:    delay_temp(2,7);
  4934  08E2  3007               	movlw	7
  4935  08E3  00F4               	movwf	??_read_byte
  4936  08E4  0874               	movf	??_read_byte,w
  4937  08E5  00F0               	movwf	delay_temp@y
  4938  08E6  3002               	movlw	2
  4939  08E7  160A  118A  262F  120A  158A  	fcall	_delay_temp
  4940  08EC                     l2716:	
  4941                           
  4942                           ;Thermometer_src.c: 86:   }
  4943  08EC  3001               	movlw	1
  4944  08ED  02F6               	subwf	read_byte@i,f
  4945  08EE                     l2718:	
  4946  08EE  0876               	movf	read_byte@i,w
  4947  08EF  1D03               	btfss	3,2
  4948  08F0  28F2               	goto	u1361
  4949  08F1  28F3               	goto	u1360
  4950  08F2                     u1361:	
  4951  08F2  28C0               	goto	l2678
  4952  08F3                     u1360:	
  4953  08F3                     l2720:	
  4954                           
  4955                           ;Thermometer_src.c: 87:   return(value);
  4956  08F3  0875               	movf	read_byte@value,w
  4957  08F4                     l262:	
  4958  08F4  0008               	return
  4959  08F5                     __end_of_read_byte:	
  4960                           
  4961                           	psect	text18
  4962  162F                     __ptext18:	
  4963 ;; *************** function _delay_temp *****************
  4964 ;; Defined at:
  4965 ;;		line 121 in file "Thermometer_src.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  x               1    wreg     unsigned char 
  4968 ;;  y               1    0[COMMON] unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  x               1    2[COMMON] unsigned char 
  4971 ;;  z               1    3[COMMON] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         1       0       0       0       0
  4982 ;;      Locals:         2       0       0       0       0
  4983 ;;      Temps:          1       0       0       0       0
  4984 ;;      Totals:         4       0       0       0       0
  4985 ;;Total ram usage:        4 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_reset_temp
  4991 ;;		_write_byte
  4992 ;;		_read_byte
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           
  4997                           ;psect for function _delay_temp
  4998  162F                     _delay_temp:	
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  5002                           ;delay_temp@x stored from wreg
  5003  162F  00F2               	movwf	delay_temp@x
  5004  1630                     l273:	
  5005                           ;Thermometer_src.c: 121: void delay_temp(char x, char y);Thermometer_src.c: 122: {;Therm
      +                          ometer_src.c: 123:  char z;;Thermometer_src.c: 124:  do{
  5006                           
  5007  1630                     l2546:	
  5008                           
  5009                           ;Thermometer_src.c: 125:  z=y;
  5010  1630  0870               	movf	delay_temp@y,w
  5011  1631  00F1               	movwf	??_delay_temp
  5012  1632  0871               	movf	??_delay_temp,w
  5013  1633  00F3               	movwf	delay_temp@z
  5014  1634                     l2548:	
  5015  1634  3001               	movlw	1
  5016  1635  02F3               	subwf	delay_temp@z,f
  5017  1636  1D03               	btfss	3,2
  5018  1637  2E39               	goto	u1261
  5019  1638  2E3A               	goto	u1260
  5020  1639                     u1261:	
  5021  1639  2E34               	goto	l2548
  5022  163A                     u1260:	
  5023  163A                     l2550:	
  5024                           
  5025                           ;Thermometer_src.c: 127:  }while(--x);
  5026  163A  3001               	movlw	1
  5027  163B  02F2               	subwf	delay_temp@x,f
  5028  163C  1D03               	btfss	3,2
  5029  163D  2E3F               	goto	u1271
  5030  163E  2E40               	goto	u1270
  5031  163F                     u1271:	
  5032  163F  2E30               	goto	l273
  5033  1640                     u1270:	
  5034  1640                     l277:	
  5035  1640  0008               	return
  5036  1641                     __end_of_delay_temp:	
  5037                           
  5038                           	psect	text19
  5039  1695                     __ptext19:	
  5040 ;; *************** function _delay2 *****************
  5041 ;; Defined at:
  5042 ;;		line 130 in file "Thermometer_src.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  i               2    0[COMMON] int 
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, btemp+1
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5056 ;;      Params:         0       0       0       0       0
  5057 ;;      Locals:         2       0       0       0       0
  5058 ;;      Temps:          0       0       0       0       0
  5059 ;;      Totals:         2       0       0       0       0
  5060 ;;Total ram usage:        2 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_get_temp
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _delay2
  5071  1695                     _delay2:	
  5072  1695                     l2724:	
  5073                           ;incstack = 0
  5074                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  5075                           
  5076                           
  5077                           ;Thermometer_src.c: 131:  for (int i = 0; i<50;i++){
  5078  1695  01F0               	clrf	delay2@i
  5079  1696  01F1               	clrf	delay2@i+1
  5080  1697                     l2730:	
  5081                           
  5082                           ;Thermometer_src.c: 132:  }
  5083  1697  3001               	movlw	1
  5084  1698  07F0               	addwf	delay2@i,f
  5085  1699  1803               	skipnc
  5086  169A  0AF1               	incf	delay2@i+1,f
  5087  169B  3000               	movlw	0
  5088  169C  07F1               	addwf	delay2@i+1,f
  5089  169D                     l2732:	
  5090  169D  0871               	movf	delay2@i+1,w
  5091  169E  3A80               	xorlw	128
  5092  169F  00FF               	movwf	btemp+1
  5093  16A0  3080               	movlw	128
  5094  16A1  027F               	subwf	btemp+1,w
  5095  16A2  1D03               	skipz
  5096  16A3  2EA6               	goto	u1375
  5097  16A4  3032               	movlw	50
  5098  16A5  0270               	subwf	delay2@i,w
  5099  16A6                     u1375:	
  5100  16A6  1C03               	skipc
  5101  16A7  2EA9               	goto	u1371
  5102  16A8  2EAA               	goto	u1370
  5103  16A9                     u1371:	
  5104  16A9  2E97               	goto	l2730
  5105  16AA                     u1370:	
  5106  16AA                     l282:	
  5107  16AA  0008               	return
  5108  16AB                     __end_of_delay2:	
  5109                           
  5110                           	psect	text20
  5111  0881                     __ptext20:	
  5112 ;; *************** function ___lwmod *****************
  5113 ;; Defined at:
  5114 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;  divisor         2    0[COMMON] unsigned int 
  5117 ;;  dividend        2    2[COMMON] unsigned int 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  counter         1    5[COMMON] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  2    0[COMMON] unsigned int 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5129 ;;      Params:         4       0       0       0       0
  5130 ;;      Locals:         1       0       0       0       0
  5131 ;;      Temps:          1       0       0       0       0
  5132 ;;      Totals:         6       0       0       0       0
  5133 ;;Total ram usage:        6 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_get_temp
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function ___lwmod
  5144  0881                     ___lwmod:	
  5145  0881                     l2876:	
  5146                           ;incstack = 0
  5147                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5148                           
  5149  0881  0870               	movf	___lwmod@divisor,w
  5150  0882  0471               	iorwf	___lwmod@divisor+1,w
  5151  0883  1903               	btfsc	3,2
  5152  0884  2886               	goto	u1621
  5153  0885  2887               	goto	u1620
  5154  0886                     u1621:	
  5155  0886  28B6               	goto	l2894
  5156  0887                     u1620:	
  5157  0887                     l2878:	
  5158  0887  01F5               	clrf	___lwmod@counter
  5159  0888  0AF5               	incf	___lwmod@counter,f
  5160  0889  2895               	goto	l2884
  5161  088A                     l2880:	
  5162  088A  3001               	movlw	1
  5163  088B                     u1635:	
  5164  088B  1003               	clrc
  5165  088C  0DF0               	rlf	___lwmod@divisor,f
  5166  088D  0DF1               	rlf	___lwmod@divisor+1,f
  5167  088E  3EFF               	addlw	-1
  5168  088F  1D03               	skipz
  5169  0890  288B               	goto	u1635
  5170  0891                     l2882:	
  5171  0891  3001               	movlw	1
  5172  0892  00F4               	movwf	??___lwmod
  5173  0893  0874               	movf	??___lwmod,w
  5174  0894  07F5               	addwf	___lwmod@counter,f
  5175  0895                     l2884:	
  5176  0895  1FF1               	btfss	___lwmod@divisor+1,7
  5177  0896  2898               	goto	u1641
  5178  0897  2899               	goto	u1640
  5179  0898                     u1641:	
  5180  0898  288A               	goto	l2880
  5181  0899                     u1640:	
  5182  0899                     l2886:	
  5183  0899  0871               	movf	___lwmod@divisor+1,w
  5184  089A  0273               	subwf	___lwmod@dividend+1,w
  5185  089B  1D03               	skipz
  5186  089C  289F               	goto	u1655
  5187  089D  0870               	movf	___lwmod@divisor,w
  5188  089E  0272               	subwf	___lwmod@dividend,w
  5189  089F                     u1655:	
  5190  089F  1C03               	skipc
  5191  08A0  28A2               	goto	u1651
  5192  08A1  28A3               	goto	u1650
  5193  08A2                     u1651:	
  5194  08A2  28A9               	goto	l2890
  5195  08A3                     u1650:	
  5196  08A3                     l2888:	
  5197  08A3  0870               	movf	___lwmod@divisor,w
  5198  08A4  02F2               	subwf	___lwmod@dividend,f
  5199  08A5  0871               	movf	___lwmod@divisor+1,w
  5200  08A6  1C03               	skipc
  5201  08A7  03F3               	decf	___lwmod@dividend+1,f
  5202  08A8  02F3               	subwf	___lwmod@dividend+1,f
  5203  08A9                     l2890:	
  5204  08A9  3001               	movlw	1
  5205  08AA                     u1665:	
  5206  08AA  1003               	clrc
  5207  08AB  0CF1               	rrf	___lwmod@divisor+1,f
  5208  08AC  0CF0               	rrf	___lwmod@divisor,f
  5209  08AD  3EFF               	addlw	-1
  5210  08AE  1D03               	skipz
  5211  08AF  28AA               	goto	u1665
  5212  08B0                     l2892:	
  5213  08B0  3001               	movlw	1
  5214  08B1  02F5               	subwf	___lwmod@counter,f
  5215  08B2  1D03               	btfss	3,2
  5216  08B3  28B5               	goto	u1671
  5217  08B4  28B6               	goto	u1670
  5218  08B5                     u1671:	
  5219  08B5  2899               	goto	l2886
  5220  08B6                     u1670:	
  5221  08B6                     l2894:	
  5222  08B6  0873               	movf	___lwmod@dividend+1,w
  5223  08B7  00F1               	movwf	?___lwmod+1
  5224  08B8  0872               	movf	___lwmod@dividend,w
  5225  08B9  00F0               	movwf	?___lwmod
  5226  08BA                     l994:	
  5227  08BA  0008               	return
  5228  08BB                     __end_of___lwmod:	
  5229                           
  5230                           	psect	text21
  5231  09AE                     __ptext21:	
  5232 ;; *************** function ___lwdiv *****************
  5233 ;; Defined at:
  5234 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  divisor         2    6[COMMON] unsigned int 
  5237 ;;  dividend        2    8[COMMON] unsigned int 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  quotient        2   11[COMMON] unsigned int 
  5240 ;;  counter         1   13[COMMON] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  2    6[COMMON] unsigned int 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5250 ;;      Params:         4       0       0       0       0
  5251 ;;      Locals:         3       0       0       0       0
  5252 ;;      Temps:          1       0       0       0       0
  5253 ;;      Totals:         8       0       0       0       0
  5254 ;;Total ram usage:        8 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_get_temp
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           
  5264                           ;psect for function ___lwdiv
  5265  09AE                     ___lwdiv:	
  5266  09AE                     l2850:	
  5267                           ;incstack = 0
  5268                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5269                           
  5270  09AE  01FB               	clrf	___lwdiv@quotient
  5271  09AF  01FC               	clrf	___lwdiv@quotient+1
  5272  09B0                     l2852:	
  5273  09B0  0876               	movf	___lwdiv@divisor,w
  5274  09B1  0477               	iorwf	___lwdiv@divisor+1,w
  5275  09B2  1903               	btfsc	3,2
  5276  09B3  29B5               	goto	u1551
  5277  09B4  29B6               	goto	u1550
  5278  09B5                     u1551:	
  5279  09B5  29ED               	goto	l2872
  5280  09B6                     u1550:	
  5281  09B6                     l2854:	
  5282  09B6  01FD               	clrf	___lwdiv@counter
  5283  09B7  0AFD               	incf	___lwdiv@counter,f
  5284  09B8  29C4               	goto	l2860
  5285  09B9                     l2856:	
  5286  09B9  3001               	movlw	1
  5287  09BA                     u1565:	
  5288  09BA  1003               	clrc
  5289  09BB  0DF6               	rlf	___lwdiv@divisor,f
  5290  09BC  0DF7               	rlf	___lwdiv@divisor+1,f
  5291  09BD  3EFF               	addlw	-1
  5292  09BE  1D03               	skipz
  5293  09BF  29BA               	goto	u1565
  5294  09C0                     l2858:	
  5295  09C0  3001               	movlw	1
  5296  09C1  00FA               	movwf	??___lwdiv
  5297  09C2  087A               	movf	??___lwdiv,w
  5298  09C3  07FD               	addwf	___lwdiv@counter,f
  5299  09C4                     l2860:	
  5300  09C4  1FF7               	btfss	___lwdiv@divisor+1,7
  5301  09C5  29C7               	goto	u1571
  5302  09C6  29C8               	goto	u1570
  5303  09C7                     u1571:	
  5304  09C7  29B9               	goto	l2856
  5305  09C8                     u1570:	
  5306  09C8                     l2862:	
  5307  09C8  3001               	movlw	1
  5308  09C9                     u1585:	
  5309  09C9  1003               	clrc
  5310  09CA  0DFB               	rlf	___lwdiv@quotient,f
  5311  09CB  0DFC               	rlf	___lwdiv@quotient+1,f
  5312  09CC  3EFF               	addlw	-1
  5313  09CD  1D03               	skipz
  5314  09CE  29C9               	goto	u1585
  5315  09CF  0877               	movf	___lwdiv@divisor+1,w
  5316  09D0  0279               	subwf	___lwdiv@dividend+1,w
  5317  09D1  1D03               	skipz
  5318  09D2  29D5               	goto	u1595
  5319  09D3  0876               	movf	___lwdiv@divisor,w
  5320  09D4  0278               	subwf	___lwdiv@dividend,w
  5321  09D5                     u1595:	
  5322  09D5  1C03               	skipc
  5323  09D6  29D8               	goto	u1591
  5324  09D7  29D9               	goto	u1590
  5325  09D8                     u1591:	
  5326  09D8  29E0               	goto	l2868
  5327  09D9                     u1590:	
  5328  09D9                     l2864:	
  5329  09D9  0876               	movf	___lwdiv@divisor,w
  5330  09DA  02F8               	subwf	___lwdiv@dividend,f
  5331  09DB  0877               	movf	___lwdiv@divisor+1,w
  5332  09DC  1C03               	skipc
  5333  09DD  03F9               	decf	___lwdiv@dividend+1,f
  5334  09DE  02F9               	subwf	___lwdiv@dividend+1,f
  5335  09DF                     l2866:	
  5336  09DF  147B               	bsf	___lwdiv@quotient,0
  5337  09E0                     l2868:	
  5338  09E0  3001               	movlw	1
  5339  09E1                     u1605:	
  5340  09E1  1003               	clrc
  5341  09E2  0CF7               	rrf	___lwdiv@divisor+1,f
  5342  09E3  0CF6               	rrf	___lwdiv@divisor,f
  5343  09E4  3EFF               	addlw	-1
  5344  09E5  1D03               	skipz
  5345  09E6  29E1               	goto	u1605
  5346  09E7                     l2870:	
  5347  09E7  3001               	movlw	1
  5348  09E8  02FD               	subwf	___lwdiv@counter,f
  5349  09E9  1D03               	btfss	3,2
  5350  09EA  29EC               	goto	u1611
  5351  09EB  29ED               	goto	u1610
  5352  09EC                     u1611:	
  5353  09EC  29C8               	goto	l2862
  5354  09ED                     u1610:	
  5355  09ED                     l2872:	
  5356  09ED  087C               	movf	___lwdiv@quotient+1,w
  5357  09EE  00F7               	movwf	?___lwdiv+1
  5358  09EF  087B               	movf	___lwdiv@quotient,w
  5359  09F0  00F6               	movwf	?___lwdiv
  5360  09F1                     l984:	
  5361  09F1  0008               	return
  5362  09F2                     __end_of___lwdiv:	
  5363                           
  5364                           	psect	text22
  5365  0A4B                     __ptext22:	
  5366 ;; *************** function ___awdiv *****************
  5367 ;; Defined at:
  5368 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  divisor         2    0[COMMON] int 
  5371 ;;  dividend        2    2[COMMON] int 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  quotient        2    7[COMMON] int 
  5374 ;;  sign            1    6[COMMON] unsigned char 
  5375 ;;  counter         1    5[COMMON] unsigned char 
  5376 ;; Return value:  Size  Location     Type
  5377 ;;                  2    0[COMMON] int 
  5378 ;; Registers used:
  5379 ;;		wreg, status,2, status,0
  5380 ;; Tracked objects:
  5381 ;;		On entry : 0/0
  5382 ;;		On exit  : 0/0
  5383 ;;		Unchanged: 0/0
  5384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5385 ;;      Params:         4       0       0       0       0
  5386 ;;      Locals:         4       0       0       0       0
  5387 ;;      Temps:          1       0       0       0       0
  5388 ;;      Totals:         9       0       0       0       0
  5389 ;;Total ram usage:        9 bytes
  5390 ;; Hardware stack levels used:    1
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_get_temp
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function ___awdiv
  5400  0A4B                     ___awdiv:	
  5401  0A4B                     l2806:	
  5402                           ;incstack = 0
  5403                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5404                           
  5405  0A4B  01F6               	clrf	___awdiv@sign
  5406  0A4C                     l2808:	
  5407  0A4C  1FF1               	btfss	___awdiv@divisor+1,7
  5408  0A4D  2A4F               	goto	u1451
  5409  0A4E  2A50               	goto	u1450
  5410  0A4F                     u1451:	
  5411  0A4F  2A57               	goto	l2814
  5412  0A50                     u1450:	
  5413  0A50                     l2810:	
  5414  0A50  09F0               	comf	___awdiv@divisor,f
  5415  0A51  09F1               	comf	___awdiv@divisor+1,f
  5416  0A52  0AF0               	incf	___awdiv@divisor,f
  5417  0A53  1903               	skipnz
  5418  0A54  0AF1               	incf	___awdiv@divisor+1,f
  5419  0A55                     l2812:	
  5420  0A55  01F6               	clrf	___awdiv@sign
  5421  0A56  0AF6               	incf	___awdiv@sign,f
  5422  0A57                     l2814:	
  5423  0A57  1FF3               	btfss	___awdiv@dividend+1,7
  5424  0A58  2A5A               	goto	u1461
  5425  0A59  2A5B               	goto	u1460
  5426  0A5A                     u1461:	
  5427  0A5A  2A64               	goto	l2820
  5428  0A5B                     u1460:	
  5429  0A5B                     l2816:	
  5430  0A5B  09F2               	comf	___awdiv@dividend,f
  5431  0A5C  09F3               	comf	___awdiv@dividend+1,f
  5432  0A5D  0AF2               	incf	___awdiv@dividend,f
  5433  0A5E  1903               	skipnz
  5434  0A5F  0AF3               	incf	___awdiv@dividend+1,f
  5435  0A60                     l2818:	
  5436  0A60  3001               	movlw	1
  5437  0A61  00F4               	movwf	??___awdiv
  5438  0A62  0874               	movf	??___awdiv,w
  5439  0A63  06F6               	xorwf	___awdiv@sign,f
  5440  0A64                     l2820:	
  5441  0A64  01F7               	clrf	___awdiv@quotient
  5442  0A65  01F8               	clrf	___awdiv@quotient+1
  5443  0A66                     l2822:	
  5444  0A66  0870               	movf	___awdiv@divisor,w
  5445  0A67  0471               	iorwf	___awdiv@divisor+1,w
  5446  0A68  1903               	btfsc	3,2
  5447  0A69  2A6B               	goto	u1471
  5448  0A6A  2A6C               	goto	u1470
  5449  0A6B                     u1471:	
  5450  0A6B  2AA3               	goto	l2842
  5451  0A6C                     u1470:	
  5452  0A6C                     l2824:	
  5453  0A6C  01F5               	clrf	___awdiv@counter
  5454  0A6D  0AF5               	incf	___awdiv@counter,f
  5455  0A6E  2A7A               	goto	l2830
  5456  0A6F                     l2826:	
  5457  0A6F  3001               	movlw	1
  5458  0A70                     u1485:	
  5459  0A70  1003               	clrc
  5460  0A71  0DF0               	rlf	___awdiv@divisor,f
  5461  0A72  0DF1               	rlf	___awdiv@divisor+1,f
  5462  0A73  3EFF               	addlw	-1
  5463  0A74  1D03               	skipz
  5464  0A75  2A70               	goto	u1485
  5465  0A76                     l2828:	
  5466  0A76  3001               	movlw	1
  5467  0A77  00F4               	movwf	??___awdiv
  5468  0A78  0874               	movf	??___awdiv,w
  5469  0A79  07F5               	addwf	___awdiv@counter,f
  5470  0A7A                     l2830:	
  5471  0A7A  1FF1               	btfss	___awdiv@divisor+1,7
  5472  0A7B  2A7D               	goto	u1491
  5473  0A7C  2A7E               	goto	u1490
  5474  0A7D                     u1491:	
  5475  0A7D  2A6F               	goto	l2826
  5476  0A7E                     u1490:	
  5477  0A7E                     l2832:	
  5478  0A7E  3001               	movlw	1
  5479  0A7F                     u1505:	
  5480  0A7F  1003               	clrc
  5481  0A80  0DF7               	rlf	___awdiv@quotient,f
  5482  0A81  0DF8               	rlf	___awdiv@quotient+1,f
  5483  0A82  3EFF               	addlw	-1
  5484  0A83  1D03               	skipz
  5485  0A84  2A7F               	goto	u1505
  5486  0A85  0871               	movf	___awdiv@divisor+1,w
  5487  0A86  0273               	subwf	___awdiv@dividend+1,w
  5488  0A87  1D03               	skipz
  5489  0A88  2A8B               	goto	u1515
  5490  0A89  0870               	movf	___awdiv@divisor,w
  5491  0A8A  0272               	subwf	___awdiv@dividend,w
  5492  0A8B                     u1515:	
  5493  0A8B  1C03               	skipc
  5494  0A8C  2A8E               	goto	u1511
  5495  0A8D  2A8F               	goto	u1510
  5496  0A8E                     u1511:	
  5497  0A8E  2A96               	goto	l2838
  5498  0A8F                     u1510:	
  5499  0A8F                     l2834:	
  5500  0A8F  0870               	movf	___awdiv@divisor,w
  5501  0A90  02F2               	subwf	___awdiv@dividend,f
  5502  0A91  0871               	movf	___awdiv@divisor+1,w
  5503  0A92  1C03               	skipc
  5504  0A93  03F3               	decf	___awdiv@dividend+1,f
  5505  0A94  02F3               	subwf	___awdiv@dividend+1,f
  5506  0A95                     l2836:	
  5507  0A95  1477               	bsf	___awdiv@quotient,0
  5508  0A96                     l2838:	
  5509  0A96  3001               	movlw	1
  5510  0A97                     u1525:	
  5511  0A97  1003               	clrc
  5512  0A98  0CF1               	rrf	___awdiv@divisor+1,f
  5513  0A99  0CF0               	rrf	___awdiv@divisor,f
  5514  0A9A  3EFF               	addlw	-1
  5515  0A9B  1D03               	skipz
  5516  0A9C  2A97               	goto	u1525
  5517  0A9D                     l2840:	
  5518  0A9D  3001               	movlw	1
  5519  0A9E  02F5               	subwf	___awdiv@counter,f
  5520  0A9F  1D03               	btfss	3,2
  5521  0AA0  2AA2               	goto	u1531
  5522  0AA1  2AA3               	goto	u1530
  5523  0AA2                     u1531:	
  5524  0AA2  2A7E               	goto	l2832
  5525  0AA3                     u1530:	
  5526  0AA3                     l2842:	
  5527  0AA3  0876               	movf	___awdiv@sign,w
  5528  0AA4  1903               	btfsc	3,2
  5529  0AA5  2AA7               	goto	u1541
  5530  0AA6  2AA8               	goto	u1540
  5531  0AA7                     u1541:	
  5532  0AA7  2AAD               	goto	l2846
  5533  0AA8                     u1540:	
  5534  0AA8                     l2844:	
  5535  0AA8  09F7               	comf	___awdiv@quotient,f
  5536  0AA9  09F8               	comf	___awdiv@quotient+1,f
  5537  0AAA  0AF7               	incf	___awdiv@quotient,f
  5538  0AAB  1903               	skipnz
  5539  0AAC  0AF8               	incf	___awdiv@quotient+1,f
  5540  0AAD                     l2846:	
  5541  0AAD  0878               	movf	___awdiv@quotient+1,w
  5542  0AAE  00F1               	movwf	?___awdiv+1
  5543  0AAF  0877               	movf	___awdiv@quotient,w
  5544  0AB0  00F0               	movwf	?___awdiv
  5545  0AB1                     l865:	
  5546  0AB1  0008               	return
  5547  0AB2                     __end_of___awdiv:	
  5548                           
  5549                           	psect	text23
  5550  1654                     __ptext23:	
  5551 ;; *************** function _ds1302_init *****************
  5552 ;; Defined at:
  5553 ;;		line 6 in file "clock_src.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5567 ;;      Params:         0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    1
  5574 ;; This function calls:
  5575 ;;		_time_write_1
  5576 ;; This function is called by:
  5577 ;;		_main
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _ds1302_init
  5583  1654                     _ds1302_init:	
  5584  1654                     l2900:	
  5585                           ;incstack = 0
  5586                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5587                           
  5588                           
  5589                           ;clock_src.c: 8:    RB0=0;
  5590  1654  1283               	bcf	3,5	;RP0=0, select bank0
  5591  1655  1303               	bcf	3,6	;RP1=0, select bank0
  5592  1656  1006               	bcf	6,0	;volatile
  5593                           
  5594                           ;clock_src.c: 9:    RB5 =0;
  5595  1657  1286               	bcf	6,5	;volatile
  5596                           
  5597                           ;clock_src.c: 10:    RB5=1;
  5598  1658  1686               	bsf	6,5	;volatile
  5599  1659                     l2902:	
  5600                           
  5601                           ;clock_src.c: 11:    time_write_1(0x8e);
  5602  1659  308E               	movlw	142
  5603  165A  160A  118A  2726  160A  118A  	fcall	_time_write_1
  5604                           
  5605                           ;clock_src.c: 12:    time_write_1(0);
  5606  165F  3000               	movlw	0
  5607  1660  160A  118A  2726  160A  118A  	fcall	_time_write_1
  5608  1665                     l2904:	
  5609                           
  5610                           ;clock_src.c: 13:    RB5=0;
  5611  1665  1283               	bcf	3,5	;RP0=0, select bank0
  5612  1666  1303               	bcf	3,6	;RP1=0, select bank0
  5613  1667  1286               	bcf	6,5	;volatile
  5614  1668                     l305:	
  5615  1668  0008               	return
  5616  1669                     __end_of_ds1302_init:	
  5617                           
  5618                           	psect	text24
  5619  1751                     __ptext24:	
  5620 ;; *************** function _display_temp *****************
  5621 ;; Defined at:
  5622 ;;		line 12 in file "Thermometer_src.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;		None
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;		None
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  1    wreg      void 
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5636 ;;      Params:         0       0       0       0       0
  5637 ;;      Locals:         0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0
  5639 ;;      Totals:         0       0       0       0       0
  5640 ;;Total ram usage:        0 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    2
  5643 ;; This function calls:
  5644 ;;		_write_char
  5645 ;; This function is called by:
  5646 ;;		_main
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function _display_temp
  5652  1751                     _display_temp:	
  5653  1751                     l3016:	
  5654                           ;incstack = 0
  5655                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5656                           
  5657                           
  5658                           ;Thermometer_src.c: 14:  write_char(shi + '0');
  5659  1751  1283               	bcf	3,5	;RP0=0, select bank0
  5660  1752  1303               	bcf	3,6	;RP1=0, select bank0
  5661  1753  084C               	movf	_shi,w
  5662  1754  3E30               	addlw	48
  5663  1755  160A  118A  26C2  160A  118A  	fcall	_write_char
  5664                           
  5665                           ;Thermometer_src.c: 16:  write_char(ge + '0');
  5666  175A  1283               	bcf	3,5	;RP0=0, select bank0
  5667  175B  1303               	bcf	3,6	;RP1=0, select bank0
  5668  175C  084B               	movf	_ge,w
  5669  175D  3E30               	addlw	48
  5670  175E  160A  118A  26C2  160A  118A  	fcall	_write_char
  5671                           
  5672                           ;Thermometer_src.c: 17:  write_char('.');
  5673  1763  302E               	movlw	46
  5674  1764  160A  118A  26C2  160A  118A  	fcall	_write_char
  5675                           
  5676                           ;Thermometer_src.c: 19:  write_char(shifen + '0');
  5677  1769  1283               	bcf	3,5	;RP0=0, select bank0
  5678  176A  1303               	bcf	3,6	;RP1=0, select bank0
  5679  176B  084A               	movf	_shifen,w
  5680  176C  3E30               	addlw	48
  5681  176D  160A  118A  26C2  160A  118A  	fcall	_write_char
  5682                           
  5683                           ;Thermometer_src.c: 21:  write_char(baifen + '0');
  5684  1772  1283               	bcf	3,5	;RP0=0, select bank0
  5685  1773  1303               	bcf	3,6	;RP1=0, select bank0
  5686  1774  0849               	movf	_baifen,w
  5687  1775  3E30               	addlw	48
  5688  1776  160A  118A  26C2  160A  118A  	fcall	_write_char
  5689  177B                     l240:	
  5690  177B  0008               	return
  5691  177C                     __end_of_display_temp:	
  5692                           
  5693                           	psect	text25
  5694  003F                     __ptext25:	
  5695 ;; *************** function _display_date *****************
  5696 ;; Defined at:
  5697 ;;		line 79 in file "clock_src.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;		None
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  i               2    5[COMMON] int 
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5711 ;;      Params:         0       0       0       0       0
  5712 ;;      Locals:         2       0       0       0       0
  5713 ;;      Temps:          2       0       0       0       0
  5714 ;;      Totals:         4       0       0       0       0
  5715 ;;Total ram usage:        4 bytes
  5716 ;; Hardware stack levels used:    1
  5717 ;; Hardware stack levels required when called:    2
  5718 ;; This function calls:
  5719 ;;		_write_char
  5720 ;; This function is called by:
  5721 ;;		_main
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           
  5726                           ;psect for function _display_date
  5727  003F                     _display_date:	
  5728  003F                     l3018:	
  5729                           ;incstack = 0
  5730                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5731                           
  5732                           
  5733                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  5734  003F  1283               	bcf	3,5	;RP0=0, select bank0
  5735  0040  1303               	bcf	3,6	;RP1=0, select bank0
  5736  0041  1886               	btfsc	6,1	;volatile
  5737  0042  2844               	goto	u1761
  5738  0043  2845               	goto	u1760
  5739  0044                     u1761:	
  5740  0044  284D               	goto	l3022
  5741  0045                     u1760:	
  5742  0045                     l3020:	
  5743                           
  5744                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  5745  0045  0823               	movf	_table1+3,w
  5746  0046  00F3               	movwf	??_display_date
  5747  0047  0873               	movf	??_display_date,w
  5748  0048  00A0               	movwf	_table1
  5749                           
  5750                           ;clock_src.c: 85:           table1[1]=table1[4];
  5751  0049  0824               	movf	_table1+4,w
  5752  004A  00F3               	movwf	??_display_date
  5753  004B  0873               	movf	??_display_date,w
  5754  004C  00A1               	movwf	_table1+1
  5755  004D                     l3022:	
  5756                           
  5757                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  5758  004D  0823               	movf	_table1+3,w
  5759  004E  39F0               	andlw	240
  5760  004F  00F3               	movwf	??_display_date
  5761  0050  01F4               	clrf	??_display_date+1
  5762  0051  0873               	movf	??_display_date,w
  5763  0052  00F5               	movwf	display_date@i
  5764  0053  0874               	movf	??_display_date+1,w
  5765  0054  00F6               	movwf	display_date@i+1
  5766  0055                     l3024:	
  5767                           
  5768                           ;clock_src.c: 88:      i=i>>4;
  5769  0055  0E75               	swapf	display_date@i,w
  5770  0056  390F               	andlw	15
  5771  0057  00F5               	movwf	display_date@i
  5772  0058  0E76               	swapf	display_date@i+1,w
  5773  0059  39F0               	andlw	240
  5774  005A  04F5               	iorwf	display_date@i,f
  5775  005B  0E76               	swapf	display_date@i+1,w
  5776  005C  390F               	andlw	15
  5777  005D  00F6               	movwf	display_date@i+1
  5778  005E  30F0               	movlw	240
  5779  005F  1DF6               	btfss	display_date@i+1,3
  5780  0060  3000               	movlw	0
  5781  0061  04F6               	iorwf	display_date@i+1,f
  5782  0062                     l3026:	
  5783                           
  5784                           ;clock_src.c: 89:      write_char(i + '0');
  5785  0062  0875               	movf	display_date@i,w
  5786  0063  3E30               	addlw	48
  5787  0064  160A  118A  26C2  120A  118A  	fcall	_write_char
  5788  0069                     l3028:	
  5789                           
  5790                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  5791  0069  1283               	bcf	3,5	;RP0=0, select bank0
  5792  006A  1303               	bcf	3,6	;RP1=0, select bank0
  5793  006B  0823               	movf	_table1+3,w
  5794  006C  390F               	andlw	15
  5795  006D  00F3               	movwf	??_display_date
  5796  006E  01F4               	clrf	??_display_date+1
  5797  006F  0873               	movf	??_display_date,w
  5798  0070  00F5               	movwf	display_date@i
  5799  0071  0874               	movf	??_display_date+1,w
  5800  0072  00F6               	movwf	display_date@i+1
  5801  0073                     l3030:	
  5802                           
  5803                           ;clock_src.c: 92:      write_char(i + '0');
  5804  0073  0875               	movf	display_date@i,w
  5805  0074  3E30               	addlw	48
  5806  0075  160A  118A  26C2  120A  118A  	fcall	_write_char
  5807  007A                     l3032:	
  5808                           
  5809                           ;clock_src.c: 93:      write_char('/');
  5810  007A  302F               	movlw	47
  5811  007B  160A  118A  26C2  120A  118A  	fcall	_write_char
  5812  0080                     l3034:	
  5813                           
  5814                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  5815  0080  1283               	bcf	3,5	;RP0=0, select bank0
  5816  0081  1303               	bcf	3,6	;RP1=0, select bank0
  5817  0082  0824               	movf	_table1+4,w
  5818  0083  39F0               	andlw	240
  5819  0084  00F3               	movwf	??_display_date
  5820  0085  01F4               	clrf	??_display_date+1
  5821  0086  0873               	movf	??_display_date,w
  5822  0087  00F5               	movwf	display_date@i
  5823  0088  0874               	movf	??_display_date+1,w
  5824  0089  00F6               	movwf	display_date@i+1
  5825  008A                     l3036:	
  5826                           
  5827                           ;clock_src.c: 98:      i=i>>4;
  5828  008A  0E75               	swapf	display_date@i,w
  5829  008B  390F               	andlw	15
  5830  008C  00F5               	movwf	display_date@i
  5831  008D  0E76               	swapf	display_date@i+1,w
  5832  008E  39F0               	andlw	240
  5833  008F  04F5               	iorwf	display_date@i,f
  5834  0090  0E76               	swapf	display_date@i+1,w
  5835  0091  390F               	andlw	15
  5836  0092  00F6               	movwf	display_date@i+1
  5837  0093  30F0               	movlw	240
  5838  0094  1DF6               	btfss	display_date@i+1,3
  5839  0095  3000               	movlw	0
  5840  0096  04F6               	iorwf	display_date@i+1,f
  5841  0097                     l3038:	
  5842                           
  5843                           ;clock_src.c: 99:      write_char(i + '0');
  5844  0097  0875               	movf	display_date@i,w
  5845  0098  3E30               	addlw	48
  5846  0099  160A  118A  26C2  120A  118A  	fcall	_write_char
  5847  009E                     l3040:	
  5848                           
  5849                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  5850  009E  1283               	bcf	3,5	;RP0=0, select bank0
  5851  009F  1303               	bcf	3,6	;RP1=0, select bank0
  5852  00A0  0824               	movf	_table1+4,w
  5853  00A1  390F               	andlw	15
  5854  00A2  00F3               	movwf	??_display_date
  5855  00A3  01F4               	clrf	??_display_date+1
  5856  00A4  0873               	movf	??_display_date,w
  5857  00A5  00F5               	movwf	display_date@i
  5858  00A6  0874               	movf	??_display_date+1,w
  5859  00A7  00F6               	movwf	display_date@i+1
  5860  00A8                     l3042:	
  5861                           
  5862                           ;clock_src.c: 102:      write_char(i + '0');
  5863  00A8  0875               	movf	display_date@i,w
  5864  00A9  3E30               	addlw	48
  5865  00AA  160A  118A  26C2  120A  118A  	fcall	_write_char
  5866  00AF                     l3044:	
  5867                           
  5868                           ;clock_src.c: 103:      write_char('/');
  5869  00AF  302F               	movlw	47
  5870  00B0  160A  118A  26C2  120A  118A  	fcall	_write_char
  5871  00B5                     l3046:	
  5872                           
  5873                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  5874  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  5875  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  5876  00B7  0826               	movf	_table1+6,w
  5877  00B8  39F0               	andlw	240
  5878  00B9  00F3               	movwf	??_display_date
  5879  00BA  01F4               	clrf	??_display_date+1
  5880  00BB  0873               	movf	??_display_date,w
  5881  00BC  00F5               	movwf	display_date@i
  5882  00BD  0874               	movf	??_display_date+1,w
  5883  00BE  00F6               	movwf	display_date@i+1
  5884  00BF                     l3048:	
  5885                           
  5886                           ;clock_src.c: 108:      i=i>>4;
  5887  00BF  0E75               	swapf	display_date@i,w
  5888  00C0  390F               	andlw	15
  5889  00C1  00F5               	movwf	display_date@i
  5890  00C2  0E76               	swapf	display_date@i+1,w
  5891  00C3  39F0               	andlw	240
  5892  00C4  04F5               	iorwf	display_date@i,f
  5893  00C5  0E76               	swapf	display_date@i+1,w
  5894  00C6  390F               	andlw	15
  5895  00C7  00F6               	movwf	display_date@i+1
  5896  00C8  30F0               	movlw	240
  5897  00C9  1DF6               	btfss	display_date@i+1,3
  5898  00CA  3000               	movlw	0
  5899  00CB  04F6               	iorwf	display_date@i+1,f
  5900  00CC                     l3050:	
  5901                           
  5902                           ;clock_src.c: 109:      write_char(i + '0');
  5903  00CC  0875               	movf	display_date@i,w
  5904  00CD  3E30               	addlw	48
  5905  00CE  160A  118A  26C2  120A  118A  	fcall	_write_char
  5906  00D3                     l3052:	
  5907                           
  5908                           ;clock_src.c: 111:      i=table1[6]&0x0f;
  5909  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  5910  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  5911  00D5  0826               	movf	_table1+6,w
  5912  00D6  390F               	andlw	15
  5913  00D7  00F3               	movwf	??_display_date
  5914  00D8  01F4               	clrf	??_display_date+1
  5915  00D9  0873               	movf	??_display_date,w
  5916  00DA  00F5               	movwf	display_date@i
  5917  00DB  0874               	movf	??_display_date+1,w
  5918  00DC  00F6               	movwf	display_date@i+1
  5919  00DD                     l3054:	
  5920                           
  5921                           ;clock_src.c: 112:      write_char(i + '0');
  5922  00DD  0875               	movf	display_date@i,w
  5923  00DE  3E30               	addlw	48
  5924  00DF  160A  118A  26C2  120A  118A  	fcall	_write_char
  5925  00E4                     l323:	
  5926  00E4  0008               	return
  5927  00E5                     __end_of_display_date:	
  5928                           
  5929                           	psect	text26
  5930  0AB2                     __ptext26:	
  5931 ;; *************** function _display_clock *****************
  5932 ;; Defined at:
  5933 ;;		line 37 in file "clock_src.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;		None
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  i               2    5[COMMON] int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5947 ;;      Params:         0       0       0       0       0
  5948 ;;      Locals:         2       0       0       0       0
  5949 ;;      Temps:          2       0       0       0       0
  5950 ;;      Totals:         4       0       0       0       0
  5951 ;;Total ram usage:        4 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    2
  5954 ;; This function calls:
  5955 ;;		_write_char
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;; This function uses a non-reentrant model
  5959 ;;
  5960                           
  5961                           
  5962                           ;psect for function _display_clock
  5963  0AB2                     _display_clock:	
  5964  0AB2                     l3056:	
  5965                           ;incstack = 0
  5966                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5967                           
  5968                           
  5969                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  5970  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  5971  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  5972  0AB4  1886               	btfsc	6,1	;volatile
  5973  0AB5  2AB7               	goto	u1771
  5974  0AB6  2AB8               	goto	u1770
  5975  0AB7                     u1771:	
  5976  0AB7  2AC0               	goto	l3060
  5977  0AB8                     u1770:	
  5978  0AB8                     l3058:	
  5979                           
  5980                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  5981  0AB8  0823               	movf	_table1+3,w
  5982  0AB9  00F3               	movwf	??_display_clock
  5983  0ABA  0873               	movf	??_display_clock,w
  5984  0ABB  00A0               	movwf	_table1
  5985                           
  5986                           ;clock_src.c: 43:           table1[1]=table1[4];
  5987  0ABC  0824               	movf	_table1+4,w
  5988  0ABD  00F3               	movwf	??_display_clock
  5989  0ABE  0873               	movf	??_display_clock,w
  5990  0ABF  00A1               	movwf	_table1+1
  5991  0AC0                     l3060:	
  5992                           
  5993                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  5994  0AC0  0822               	movf	_table1+2,w
  5995  0AC1  39F0               	andlw	240
  5996  0AC2  00F3               	movwf	??_display_clock
  5997  0AC3  01F4               	clrf	??_display_clock+1
  5998  0AC4  0873               	movf	??_display_clock,w
  5999  0AC5  00F5               	movwf	display_clock@i
  6000  0AC6  0874               	movf	??_display_clock+1,w
  6001  0AC7  00F6               	movwf	display_clock@i+1
  6002  0AC8                     l3062:	
  6003                           
  6004                           ;clock_src.c: 47:      i=i>>4;
  6005  0AC8  0E75               	swapf	display_clock@i,w
  6006  0AC9  390F               	andlw	15
  6007  0ACA  00F5               	movwf	display_clock@i
  6008  0ACB  0E76               	swapf	display_clock@i+1,w
  6009  0ACC  39F0               	andlw	240
  6010  0ACD  04F5               	iorwf	display_clock@i,f
  6011  0ACE  0E76               	swapf	display_clock@i+1,w
  6012  0ACF  390F               	andlw	15
  6013  0AD0  00F6               	movwf	display_clock@i+1
  6014  0AD1  30F0               	movlw	240
  6015  0AD2  1DF6               	btfss	display_clock@i+1,3
  6016  0AD3  3000               	movlw	0
  6017  0AD4  04F6               	iorwf	display_clock@i+1,f
  6018  0AD5                     l3064:	
  6019                           
  6020                           ;clock_src.c: 48:      write_char(i + '0');
  6021  0AD5  0875               	movf	display_clock@i,w
  6022  0AD6  3E30               	addlw	48
  6023  0AD7  160A  118A  26C2  120A  158A  	fcall	_write_char
  6024  0ADC                     l3066:	
  6025                           
  6026                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  6027  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  6028  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  6029  0ADE  0822               	movf	_table1+2,w
  6030  0ADF  390F               	andlw	15
  6031  0AE0  00F3               	movwf	??_display_clock
  6032  0AE1  01F4               	clrf	??_display_clock+1
  6033  0AE2  0873               	movf	??_display_clock,w
  6034  0AE3  00F5               	movwf	display_clock@i
  6035  0AE4  0874               	movf	??_display_clock+1,w
  6036  0AE5  00F6               	movwf	display_clock@i+1
  6037  0AE6                     l3068:	
  6038                           
  6039                           ;clock_src.c: 53:      write_char(i + '0');
  6040  0AE6  0875               	movf	display_clock@i,w
  6041  0AE7  3E30               	addlw	48
  6042  0AE8  160A  118A  26C2  120A  158A  	fcall	_write_char
  6043  0AED                     l3070:	
  6044                           
  6045                           ;clock_src.c: 54:      write_char(':');
  6046  0AED  303A               	movlw	58
  6047  0AEE  160A  118A  26C2  120A  158A  	fcall	_write_char
  6048  0AF3                     l3072:	
  6049                           
  6050                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  6051  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  6052  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  6053  0AF5  0821               	movf	_table1+1,w
  6054  0AF6  39F0               	andlw	240
  6055  0AF7  00F3               	movwf	??_display_clock
  6056  0AF8  01F4               	clrf	??_display_clock+1
  6057  0AF9  0873               	movf	??_display_clock,w
  6058  0AFA  00F5               	movwf	display_clock@i
  6059  0AFB  0874               	movf	??_display_clock+1,w
  6060  0AFC  00F6               	movwf	display_clock@i+1
  6061  0AFD                     l3074:	
  6062                           
  6063                           ;clock_src.c: 59:      i=i>>4;
  6064  0AFD  0E75               	swapf	display_clock@i,w
  6065  0AFE  390F               	andlw	15
  6066  0AFF  00F5               	movwf	display_clock@i
  6067  0B00  0E76               	swapf	display_clock@i+1,w
  6068  0B01  39F0               	andlw	240
  6069  0B02  04F5               	iorwf	display_clock@i,f
  6070  0B03  0E76               	swapf	display_clock@i+1,w
  6071  0B04  390F               	andlw	15
  6072  0B05  00F6               	movwf	display_clock@i+1
  6073  0B06  30F0               	movlw	240
  6074  0B07  1DF6               	btfss	display_clock@i+1,3
  6075  0B08  3000               	movlw	0
  6076  0B09  04F6               	iorwf	display_clock@i+1,f
  6077  0B0A                     l3076:	
  6078                           
  6079                           ;clock_src.c: 60:      write_char(i + '0');
  6080  0B0A  0875               	movf	display_clock@i,w
  6081  0B0B  3E30               	addlw	48
  6082  0B0C  160A  118A  26C2  120A  158A  	fcall	_write_char
  6083  0B11                     l3078:	
  6084                           
  6085                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  6086  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  6087  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  6088  0B13  0821               	movf	_table1+1,w
  6089  0B14  390F               	andlw	15
  6090  0B15  00F3               	movwf	??_display_clock
  6091  0B16  01F4               	clrf	??_display_clock+1
  6092  0B17  0873               	movf	??_display_clock,w
  6093  0B18  00F5               	movwf	display_clock@i
  6094  0B19  0874               	movf	??_display_clock+1,w
  6095  0B1A  00F6               	movwf	display_clock@i+1
  6096  0B1B                     l3080:	
  6097                           
  6098                           ;clock_src.c: 64:      write_char(i + '0');
  6099  0B1B  0875               	movf	display_clock@i,w
  6100  0B1C  3E30               	addlw	48
  6101  0B1D  160A  118A  26C2  120A  158A  	fcall	_write_char
  6102  0B22                     l3082:	
  6103                           
  6104                           ;clock_src.c: 65:      write_char(':');
  6105  0B22  303A               	movlw	58
  6106  0B23  160A  118A  26C2  120A  158A  	fcall	_write_char
  6107  0B28                     l3084:	
  6108                           
  6109                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  6110  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  6111  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  6112  0B2A  0820               	movf	_table1,w
  6113  0B2B  39F0               	andlw	240
  6114  0B2C  00F3               	movwf	??_display_clock
  6115  0B2D  01F4               	clrf	??_display_clock+1
  6116  0B2E  0873               	movf	??_display_clock,w
  6117  0B2F  00F5               	movwf	display_clock@i
  6118  0B30  0874               	movf	??_display_clock+1,w
  6119  0B31  00F6               	movwf	display_clock@i+1
  6120  0B32                     l3086:	
  6121                           
  6122                           ;clock_src.c: 69:      i=i>>4;
  6123  0B32  0E75               	swapf	display_clock@i,w
  6124  0B33  390F               	andlw	15
  6125  0B34  00F5               	movwf	display_clock@i
  6126  0B35  0E76               	swapf	display_clock@i+1,w
  6127  0B36  39F0               	andlw	240
  6128  0B37  04F5               	iorwf	display_clock@i,f
  6129  0B38  0E76               	swapf	display_clock@i+1,w
  6130  0B39  390F               	andlw	15
  6131  0B3A  00F6               	movwf	display_clock@i+1
  6132  0B3B  30F0               	movlw	240
  6133  0B3C  1DF6               	btfss	display_clock@i+1,3
  6134  0B3D  3000               	movlw	0
  6135  0B3E  04F6               	iorwf	display_clock@i+1,f
  6136  0B3F                     l3088:	
  6137                           
  6138                           ;clock_src.c: 70:      write_char(i + '0');
  6139  0B3F  0875               	movf	display_clock@i,w
  6140  0B40  3E30               	addlw	48
  6141  0B41  160A  118A  26C2  120A  158A  	fcall	_write_char
  6142  0B46                     l3090:	
  6143                           
  6144                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  6145  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  6146  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  6147  0B48  0820               	movf	_table1,w
  6148  0B49  390F               	andlw	15
  6149  0B4A  00F3               	movwf	??_display_clock
  6150  0B4B  01F4               	clrf	??_display_clock+1
  6151  0B4C  0873               	movf	??_display_clock,w
  6152  0B4D  00F5               	movwf	display_clock@i
  6153  0B4E  0874               	movf	??_display_clock+1,w
  6154  0B4F  00F6               	movwf	display_clock@i+1
  6155  0B50                     l3092:	
  6156                           
  6157                           ;clock_src.c: 74:      write_char(i + '0');
  6158  0B50  0875               	movf	display_clock@i,w
  6159  0B51  3E30               	addlw	48
  6160  0B52  160A  118A  26C2  120A  158A  	fcall	_write_char
  6161  0B57                     l319:	
  6162  0B57  0008               	return
  6163  0B58                     __end_of_display_clock:	
  6164                           
  6165                           	psect	text27
  6166  03D3                     __ptext27:	
  6167 ;; *************** function _date_settings *****************
  6168 ;; Defined at:
  6169 ;;		line 324 in file "Button_src.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;		None
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6183 ;;      Params:         0       0       0       0       0
  6184 ;;      Locals:         0       0       0       0       0
  6185 ;;      Temps:          0       3       0       0       0
  6186 ;;      Totals:         0       3       0       0       0
  6187 ;;Total ram usage:        3 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    3
  6190 ;; This function calls:
  6191 ;;		_button_delay
  6192 ;;		_incrementor
  6193 ;;		_modulus_func
  6194 ;;		_set_time
  6195 ;;		_time_date_delimiter
  6196 ;;		_time_date_hex_terminator
  6197 ;;		_write_char
  6198 ;;		_write_cmd
  6199 ;; This function is called by:
  6200 ;;		_main
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           
  6205                           ;psect for function _date_settings
  6206  03D3                     _date_settings:	
  6207  03D3                     l3230:	
  6208                           ;incstack = 0
  6209                           ; Regs used in _date_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6210                           
  6211                           
  6212                           ;Button_src.c: 325:  RC0 = 0;
  6213  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  6214  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  6215  03D5  1007               	bcf	7,0	;volatile
  6216                           
  6217                           ;Button_src.c: 326:  RC1 = 1;
  6218  03D6  1487               	bsf	7,1	;volatile
  6219                           
  6220                           ;Button_src.c: 327:  RC2 = 1;
  6221  03D7  1507               	bsf	7,2	;volatile
  6222                           
  6223                           ;Button_src.c: 328:  RC3 = 1;
  6224  03D8  1587               	bsf	7,3	;volatile
  6225                           
  6226                           ;Button_src.c: 329:   if (RC4 == 0){
  6227  03D9  1A07               	btfsc	7,4	;volatile
  6228  03DA  2BDC               	goto	u1861
  6229  03DB  2BDD               	goto	u1860
  6230  03DC                     u1861:	
  6231  03DC  2FE5               	goto	l541
  6232  03DD                     u1860:	
  6233  03DD                     l3232:	
  6234                           
  6235                           ;Button_src.c: 330:       write_cmd(0x1);
  6236  03DD  3001               	movlw	1
  6237  03DE  120A  158A  2005  120A  118A  	fcall	_write_cmd
  6238  03E3                     l532:	
  6239                           ;Button_src.c: 331:       for(;;){
  6240                           
  6241                           
  6242                           ;Button_src.c: 332:             write_cmd(0x80);
  6243  03E3  3080               	movlw	128
  6244  03E4  120A  158A  2005  120A  118A  	fcall	_write_cmd
  6245                           
  6246                           ;Button_src.c: 333:             write_char('D');
  6247  03E9  3044               	movlw	68
  6248  03EA  160A  118A  26C2  120A  118A  	fcall	_write_char
  6249                           
  6250                           ;Button_src.c: 334:             write_char('a');
  6251  03EF  3061               	movlw	97
  6252  03F0  160A  118A  26C2  120A  118A  	fcall	_write_char
  6253                           
  6254                           ;Button_src.c: 335:             write_char('t');
  6255  03F5  3074               	movlw	116
  6256  03F6  160A  118A  26C2  120A  118A  	fcall	_write_char
  6257                           
  6258                           ;Button_src.c: 336:             write_char('e');
  6259  03FB  3065               	movlw	101
  6260  03FC  160A  118A  26C2  120A  118A  	fcall	_write_char
  6261                           
  6262                           ;Button_src.c: 337:             write_char('_');
  6263  0401  305F               	movlw	95
  6264  0402  160A  118A  26C2  120A  118A  	fcall	_write_char
  6265                           
  6266                           ;Button_src.c: 338:             write_char('S');
  6267  0407  3053               	movlw	83
  6268  0408  160A  118A  26C2  120A  118A  	fcall	_write_char
  6269                           
  6270                           ;Button_src.c: 339:             write_char('e');
  6271  040D  3065               	movlw	101
  6272  040E  160A  118A  26C2  120A  118A  	fcall	_write_char
  6273                           
  6274                           ;Button_src.c: 340:             write_char('t');
  6275  0413  3074               	movlw	116
  6276  0414  160A  118A  26C2  120A  118A  	fcall	_write_char
  6277                           
  6278                           ;Button_src.c: 341:             write_char('t');
  6279  0419  3074               	movlw	116
  6280  041A  160A  118A  26C2  120A  118A  	fcall	_write_char
  6281                           
  6282                           ;Button_src.c: 342:             write_char('i');
  6283  041F  3069               	movlw	105
  6284  0420  160A  118A  26C2  120A  118A  	fcall	_write_char
  6285                           
  6286                           ;Button_src.c: 343:             write_char('n');
  6287  0425  306E               	movlw	110
  6288  0426  160A  118A  26C2  120A  118A  	fcall	_write_char
  6289                           
  6290                           ;Button_src.c: 344:             write_char('g');
  6291  042B  3067               	movlw	103
  6292  042C  160A  118A  26C2  120A  118A  	fcall	_write_char
  6293                           
  6294                           ;Button_src.c: 345:             write_char('s');
  6295  0431  3073               	movlw	115
  6296  0432  160A  118A  26C2  120A  118A  	fcall	_write_char
  6297  0437                     l3234:	
  6298                           
  6299                           ;Button_src.c: 346:             RC0 = 1;
  6300  0437  1283               	bcf	3,5	;RP0=0, select bank0
  6301  0438  1303               	bcf	3,6	;RP1=0, select bank0
  6302  0439  1407               	bsf	7,0	;volatile
  6303  043A                     l3236:	
  6304                           
  6305                           ;Button_src.c: 347:             RC1 = 0;
  6306  043A  1087               	bcf	7,1	;volatile
  6307  043B                     l3238:	
  6308                           
  6309                           ;Button_src.c: 348:             RC2 = 1;
  6310  043B  1507               	bsf	7,2	;volatile
  6311  043C                     l3240:	
  6312                           
  6313                           ;Button_src.c: 349:             RC3 = 1;
  6314  043C  1587               	bsf	7,3	;volatile
  6315  043D                     l3242:	
  6316                           
  6317                           ;Button_src.c: 350:             if(RC7 == 0 && b =='x'){
  6318  043D  1B87               	btfsc	7,7	;volatile
  6319  043E  2C40               	goto	u1871
  6320  043F  2C41               	goto	u1870
  6321  0440                     u1871:	
  6322  0440  2CA2               	goto	l3264
  6323  0441                     u1870:	
  6324  0441                     l3244:	
  6325  0441  3078               	movlw	120
  6326  0442  0645               	xorwf	_b,w
  6327  0443  1D03               	btfss	3,2
  6328  0444  2C46               	goto	u1881
  6329  0445  2C47               	goto	u1880
  6330  0446                     u1881:	
  6331  0446  2CA2               	goto	l3264
  6332  0447                     u1880:	
  6333  0447                     l3246:	
  6334                           
  6335                           ;Button_src.c: 351:                     a++;
  6336  0447  3001               	movlw	1
  6337  0448  00D6               	movwf	??_date_settings
  6338  0449  0856               	movf	??_date_settings,w
  6339  044A  07C6               	addwf	_a,f
  6340  044B                     l3248:	
  6341                           
  6342                           ;Button_src.c: 352:                     x++ ;
  6343  044B  3001               	movlw	1
  6344  044C  07B3               	addwf	_x,f
  6345  044D  1803               	skipnc
  6346  044E  0AB4               	incf	_x+1,f
  6347  044F  3000               	movlw	0
  6348  0450  07B4               	addwf	_x+1,f
  6349  0451                     l3250:	
  6350                           
  6351                           ;Button_src.c: 353:                     x = modulus_func(x,10);
  6352  0451  0834               	movf	_x+1,w
  6353  0452  00F8               	movwf	modulus_func@x+1
  6354  0453  0833               	movf	_x,w
  6355  0454  00F7               	movwf	modulus_func@x
  6356  0455  300A               	movlw	10
  6357  0456  00F9               	movwf	modulus_func@y
  6358  0457  3000               	movlw	0
  6359  0458  00FA               	movwf	modulus_func@y+1
  6360  0459  160A  118A  260B  120A  118A  	fcall	_modulus_func
  6361  045E  0878               	movf	?_modulus_func+1,w
  6362  045F  1283               	bcf	3,5	;RP0=0, select bank0
  6363  0460  1303               	bcf	3,6	;RP1=0, select bank0
  6364  0461  00B4               	movwf	_x+1
  6365  0462  0877               	movf	?_modulus_func,w
  6366  0463  00B3               	movwf	_x
  6367  0464                     l3252:	
  6368                           
  6369                           ;Button_src.c: 354:                     y = incrementor(y,x,'9');
  6370  0464  0832               	movf	_y+1,w
  6371  0465  00D2               	movwf	incrementor@upper_val+1
  6372  0466  0831               	movf	_y,w
  6373  0467  00D1               	movwf	incrementor@upper_val
  6374  0468  0834               	movf	_x+1,w
  6375  0469  00D4               	movwf	incrementor@lower_val+1
  6376  046A  0833               	movf	_x,w
  6377  046B  00D3               	movwf	incrementor@lower_val
  6378  046C  3039               	movlw	57
  6379  046D  00D6               	movwf	??_date_settings
  6380  046E  0856               	movf	??_date_settings,w
  6381  046F  00D5               	movwf	incrementor@z
  6382  0470  160A  118A  277C  120A  118A  	fcall	_incrementor
  6383  0475  1283               	bcf	3,5	;RP0=0, select bank0
  6384  0476  1303               	bcf	3,6	;RP1=0, select bank0
  6385  0477  00D7               	movwf	??_date_settings+1
  6386  0478  01D8               	clrf	??_date_settings+2
  6387  0479  0857               	movf	??_date_settings+1,w
  6388  047A  00B1               	movwf	_y
  6389  047B  0858               	movf	??_date_settings+2,w
  6390  047C  00B2               	movwf	_y+1
  6391  047D                     l3254:	
  6392                           
  6393                           ;Button_src.c: 355:                     a = time_date_hex_terminator(a,'C');
  6394  047D  3043               	movlw	67
  6395  047E  00D6               	movwf	??_date_settings
  6396  047F  0856               	movf	??_date_settings,w
  6397  0480  00F0               	movwf	time_date_hex_terminator@limiter
  6398  0481  0846               	movf	_a,w
  6399  0482  160A  118A  261D  120A  118A  	fcall	_time_date_hex_terminator
  6400  0487  1283               	bcf	3,5	;RP0=0, select bank0
  6401  0488  1303               	bcf	3,6	;RP1=0, select bank0
  6402  0489  00D7               	movwf	??_date_settings+1
  6403  048A  0857               	movf	??_date_settings+1,w
  6404  048B  00C6               	movwf	_a
  6405  048C                     l3256:	
  6406                           
  6407                           ;Button_src.c: 356:                     if(y == 1 && x == 3){
  6408  048C  0331               	decf	_y,w
  6409  048D  0432               	iorwf	_y+1,w
  6410  048E  1D03               	btfss	3,2
  6411  048F  2C91               	goto	u1891
  6412  0490  2C92               	goto	u1890
  6413  0491                     u1891:	
  6414  0491  2C9D               	goto	l3262
  6415  0492                     u1890:	
  6416  0492                     l3258:	
  6417  0492  3003               	movlw	3
  6418  0493  0633               	xorwf	_x,w
  6419  0494  0434               	iorwf	_x+1,w
  6420  0495  1D03               	btfss	3,2
  6421  0496  2C98               	goto	u1901
  6422  0497  2C99               	goto	u1900
  6423  0498                     u1901:	
  6424  0498  2C9D               	goto	l3262
  6425  0499                     u1900:	
  6426  0499                     l3260:	
  6427                           
  6428                           ;Button_src.c: 357:                         x = 0;
  6429  0499  01B3               	clrf	_x
  6430  049A  01B4               	clrf	_x+1
  6431                           
  6432                           ;Button_src.c: 358:                         y = 0;
  6433  049B  01B1               	clrf	_y
  6434  049C  01B2               	clrf	_y+1
  6435  049D                     l3262:	
  6436                           
  6437                           ;Button_src.c: 360:                     button_delay();
  6438  049D  160A  118A  2669  120A  118A  	fcall	_button_delay
  6439  04A2                     l3264:	
  6440                           
  6441                           ;Button_src.c: 362:             if(RC7==0 && b == 'y'){
  6442  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  6443  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  6444  04A4  1B87               	btfsc	7,7	;volatile
  6445  04A5  2CA7               	goto	u1911
  6446  04A6  2CA8               	goto	u1910
  6447  04A7                     u1911:	
  6448  04A7  2D0A               	goto	l3286
  6449  04A8                     u1910:	
  6450  04A8                     l3266:	
  6451  04A8  3079               	movlw	121
  6452  04A9  0645               	xorwf	_b,w
  6453  04AA  1D03               	btfss	3,2
  6454  04AB  2CAD               	goto	u1921
  6455  04AC  2CAE               	goto	u1920
  6456  04AD                     u1921:	
  6457  04AD  2D0A               	goto	l3286
  6458  04AE                     u1920:	
  6459  04AE                     l3268:	
  6460                           
  6461                           ;Button_src.c: 363:                     day_hex++;
  6462  04AE  3001               	movlw	1
  6463  04AF  00D6               	movwf	??_date_settings
  6464  04B0  0856               	movf	??_date_settings,w
  6465  04B1  07C3               	addwf	_day_hex,f
  6466  04B2                     l3270:	
  6467                           
  6468                           ;Button_src.c: 364:                     day_low++;
  6469  04B2  3001               	movlw	1
  6470  04B3  07AD               	addwf	_day_low,f
  6471  04B4  1803               	skipnc
  6472  04B5  0AAE               	incf	_day_low+1,f
  6473  04B6  3000               	movlw	0
  6474  04B7  07AE               	addwf	_day_low+1,f
  6475  04B8                     l3272:	
  6476                           
  6477                           ;Button_src.c: 365:                     day_low = modulus_func(day_low,10);
  6478  04B8  082E               	movf	_day_low+1,w
  6479  04B9  00F8               	movwf	modulus_func@x+1
  6480  04BA  082D               	movf	_day_low,w
  6481  04BB  00F7               	movwf	modulus_func@x
  6482  04BC  300A               	movlw	10
  6483  04BD  00F9               	movwf	modulus_func@y
  6484  04BE  3000               	movlw	0
  6485  04BF  00FA               	movwf	modulus_func@y+1
  6486  04C0  160A  118A  260B  120A  118A  	fcall	_modulus_func
  6487  04C5  0878               	movf	?_modulus_func+1,w
  6488  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  6489  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  6490  04C8  00AE               	movwf	_day_low+1
  6491  04C9  0877               	movf	?_modulus_func,w
  6492  04CA  00AD               	movwf	_day_low
  6493  04CB                     l3274:	
  6494                           
  6495                           ;Button_src.c: 366:                     day_high = incrementor(day_high,day_low,'9');
  6496  04CB  082C               	movf	_day_high+1,w
  6497  04CC  00D2               	movwf	incrementor@upper_val+1
  6498  04CD  082B               	movf	_day_high,w
  6499  04CE  00D1               	movwf	incrementor@upper_val
  6500  04CF  082E               	movf	_day_low+1,w
  6501  04D0  00D4               	movwf	incrementor@lower_val+1
  6502  04D1  082D               	movf	_day_low,w
  6503  04D2  00D3               	movwf	incrementor@lower_val
  6504  04D3  3039               	movlw	57
  6505  04D4  00D6               	movwf	??_date_settings
  6506  04D5  0856               	movf	??_date_settings,w
  6507  04D6  00D5               	movwf	incrementor@z
  6508  04D7  160A  118A  277C  120A  118A  	fcall	_incrementor
  6509  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  6510  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  6511  04DE  00D7               	movwf	??_date_settings+1
  6512  04DF  01D8               	clrf	??_date_settings+2
  6513  04E0  0857               	movf	??_date_settings+1,w
  6514  04E1  00AB               	movwf	_day_high
  6515  04E2  0858               	movf	??_date_settings+2,w
  6516  04E3  00AC               	movwf	_day_high+1
  6517  04E4                     l3276:	
  6518                           
  6519                           ;Button_src.c: 367:                     day_hex = time_date_hex_terminator(day_hex,'c');
  6520  04E4  3063               	movlw	99
  6521  04E5  00D6               	movwf	??_date_settings
  6522  04E6  0856               	movf	??_date_settings,w
  6523  04E7  00F0               	movwf	time_date_hex_terminator@limiter
  6524  04E8  0843               	movf	_day_hex,w
  6525  04E9  160A  118A  261D  120A  118A  	fcall	_time_date_hex_terminator
  6526  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  6527  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  6528  04F0  00D7               	movwf	??_date_settings+1
  6529  04F1  0857               	movf	??_date_settings+1,w
  6530  04F2  00C3               	movwf	_day_hex
  6531  04F3                     l3278:	
  6532                           
  6533                           ;Button_src.c: 368:                     if(day_high == 3 && day_low==2 ){
  6534  04F3  3003               	movlw	3
  6535  04F4  062B               	xorwf	_day_high,w
  6536  04F5  042C               	iorwf	_day_high+1,w
  6537  04F6  1D03               	btfss	3,2
  6538  04F7  2CF9               	goto	u1931
  6539  04F8  2CFA               	goto	u1930
  6540  04F9                     u1931:	
  6541  04F9  2D05               	goto	l3284
  6542  04FA                     u1930:	
  6543  04FA                     l3280:	
  6544  04FA  3002               	movlw	2
  6545  04FB  062D               	xorwf	_day_low,w
  6546  04FC  042E               	iorwf	_day_low+1,w
  6547  04FD  1D03               	btfss	3,2
  6548  04FE  2D00               	goto	u1941
  6549  04FF  2D01               	goto	u1940
  6550  0500                     u1941:	
  6551  0500  2D05               	goto	l3284
  6552  0501                     u1940:	
  6553  0501                     l3282:	
  6554                           
  6555                           ;Button_src.c: 369:                         day_high = 0;
  6556  0501  01AB               	clrf	_day_high
  6557  0502  01AC               	clrf	_day_high+1
  6558                           
  6559                           ;Button_src.c: 370:                         day_low = 0;
  6560  0503  01AD               	clrf	_day_low
  6561  0504  01AE               	clrf	_day_low+1
  6562  0505                     l3284:	
  6563                           
  6564                           ;Button_src.c: 372:                     button_delay();
  6565  0505  160A  118A  2669  120A  118A  	fcall	_button_delay
  6566  050A                     l3286:	
  6567                           
  6568                           ;Button_src.c: 374:             if(RC7==0 && b == 'z'){
  6569  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6570  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6571  050C  1B87               	btfsc	7,7	;volatile
  6572  050D  2D0F               	goto	u1951
  6573  050E  2D10               	goto	u1950
  6574  050F                     u1951:	
  6575  050F  2D63               	goto	l3308
  6576  0510                     u1950:	
  6577  0510                     l3288:	
  6578  0510  307A               	movlw	122
  6579  0511  0645               	xorwf	_b,w
  6580  0512  1D03               	btfss	3,2
  6581  0513  2D15               	goto	u1961
  6582  0514  2D16               	goto	u1960
  6583  0515                     u1961:	
  6584  0515  2D63               	goto	l3308
  6585  0516                     u1960:	
  6586  0516                     l3290:	
  6587                           
  6588                           ;Button_src.c: 375:                     c++;
  6589  0516  3001               	movlw	1
  6590  0517  00D6               	movwf	??_date_settings
  6591  0518  0856               	movf	??_date_settings,w
  6592  0519  07C4               	addwf	_c,f
  6593  051A                     l3292:	
  6594                           
  6595                           ;Button_src.c: 376:                     t++;
  6596  051A  3001               	movlw	1
  6597  051B  07B7               	addwf	_t,f
  6598  051C  1803               	skipnc
  6599  051D  0AB8               	incf	_t+1,f
  6600  051E  3000               	movlw	0
  6601  051F  07B8               	addwf	_t+1,f
  6602  0520                     l3294:	
  6603                           
  6604                           ;Button_src.c: 377:                     t = modulus_func(t,10);
  6605  0520  0838               	movf	_t+1,w
  6606  0521  00F8               	movwf	modulus_func@x+1
  6607  0522  0837               	movf	_t,w
  6608  0523  00F7               	movwf	modulus_func@x
  6609  0524  300A               	movlw	10
  6610  0525  00F9               	movwf	modulus_func@y
  6611  0526  3000               	movlw	0
  6612  0527  00FA               	movwf	modulus_func@y+1
  6613  0528  160A  118A  260B  120A  118A  	fcall	_modulus_func
  6614  052D  0878               	movf	?_modulus_func+1,w
  6615  052E  1283               	bcf	3,5	;RP0=0, select bank0
  6616  052F  1303               	bcf	3,6	;RP1=0, select bank0
  6617  0530  00B8               	movwf	_t+1
  6618  0531  0877               	movf	?_modulus_func,w
  6619  0532  00B7               	movwf	_t
  6620  0533                     l3296:	
  6621                           
  6622                           ;Button_src.c: 378:                     w = incrementor(w,t,'9');
  6623  0533  0836               	movf	_w+1,w
  6624  0534  00D2               	movwf	incrementor@upper_val+1
  6625  0535  0835               	movf	_w,w
  6626  0536  00D1               	movwf	incrementor@upper_val
  6627  0537  0838               	movf	_t+1,w
  6628  0538  00D4               	movwf	incrementor@lower_val+1
  6629  0539  0837               	movf	_t,w
  6630  053A  00D3               	movwf	incrementor@lower_val
  6631  053B  3039               	movlw	57
  6632  053C  00D6               	movwf	??_date_settings
  6633  053D  0856               	movf	??_date_settings,w
  6634  053E  00D5               	movwf	incrementor@z
  6635  053F  160A  118A  277C  120A  118A  	fcall	_incrementor
  6636  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6637  0545  1303               	bcf	3,6	;RP1=0, select bank0
  6638  0546  00D7               	movwf	??_date_settings+1
  6639  0547  01D8               	clrf	??_date_settings+2
  6640  0548  0857               	movf	??_date_settings+1,w
  6641  0549  00B5               	movwf	_w
  6642  054A  0858               	movf	??_date_settings+2,w
  6643  054B  00B6               	movwf	_w+1
  6644  054C                     l3298:	
  6645                           
  6646                           ;Button_src.c: 379:                      if(c == (0x59 + 1)){
  6647  054C  305A               	movlw	90
  6648  054D  0644               	xorwf	_c,w
  6649  054E  1D03               	btfss	3,2
  6650  054F  2D51               	goto	u1971
  6651  0550  2D52               	goto	u1970
  6652  0551                     u1971:	
  6653  0551  2D53               	goto	l3302
  6654  0552                     u1970:	
  6655  0552                     l3300:	
  6656                           
  6657                           ;Button_src.c: 380:                         c = 0x00;
  6658  0552  01C4               	clrf	_c
  6659  0553                     l3302:	
  6660                           
  6661                           ;Button_src.c: 382:                     if(w == 6){
  6662  0553  3006               	movlw	6
  6663  0554  0635               	xorwf	_w,w
  6664  0555  0436               	iorwf	_w+1,w
  6665  0556  1D03               	btfss	3,2
  6666  0557  2D59               	goto	u1981
  6667  0558  2D5A               	goto	u1980
  6668  0559                     u1981:	
  6669  0559  2D5E               	goto	l3306
  6670  055A                     u1980:	
  6671  055A                     l3304:	
  6672                           
  6673                           ;Button_src.c: 383:                         w = 0;
  6674  055A  01B5               	clrf	_w
  6675  055B  01B6               	clrf	_w+1
  6676                           
  6677                           ;Button_src.c: 384:                         t = 0;
  6678  055C  01B7               	clrf	_t
  6679  055D  01B8               	clrf	_t+1
  6680  055E                     l3306:	
  6681                           
  6682                           ;Button_src.c: 386:                     button_delay();
  6683  055E  160A  118A  2669  120A  118A  	fcall	_button_delay
  6684  0563                     l3308:	
  6685                           
  6686                           ;Button_src.c: 390:              table[4] = a;
  6687  0563  1283               	bcf	3,5	;RP0=0, select bank0
  6688  0564  1303               	bcf	3,6	;RP1=0, select bank0
  6689  0565  0846               	movf	_a,w
  6690  0566  00D6               	movwf	??_date_settings
  6691  0567  0856               	movf	??_date_settings,w
  6692  0568  00DF               	movwf	_table+4
  6693  0569                     l3310:	
  6694                           
  6695                           ;Button_src.c: 391:              table[6] = c;
  6696  0569  0844               	movf	_c,w
  6697  056A  00D6               	movwf	??_date_settings
  6698  056B  0856               	movf	??_date_settings,w
  6699  056C  00E1               	movwf	_table+6
  6700  056D                     l3312:	
  6701                           
  6702                           ;Button_src.c: 392:              table[3] = day_hex;
  6703  056D  0843               	movf	_day_hex,w
  6704  056E  00D6               	movwf	??_date_settings
  6705  056F  0856               	movf	??_date_settings,w
  6706  0570  00DE               	movwf	_table+3
  6707  0571                     l3314:	
  6708                           
  6709                           ;Button_src.c: 394:                     a = time_date_delimiter(a,0x11,'9');
  6710  0571  3011               	movlw	17
  6711  0572  00D6               	movwf	??_date_settings
  6712  0573  0856               	movf	??_date_settings,w
  6713  0574  00F0               	movwf	time_date_delimiter@hex
  6714  0575  3039               	movlw	57
  6715  0576  00D7               	movwf	??_date_settings+1
  6716  0577  0857               	movf	??_date_settings+1,w
  6717  0578  00F1               	movwf	time_date_delimiter@limiter
  6718  0579  0846               	movf	_a,w
  6719  057A  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6720  057F  1283               	bcf	3,5	;RP0=0, select bank0
  6721  0580  1303               	bcf	3,6	;RP1=0, select bank0
  6722  0581  00D8               	movwf	??_date_settings+2
  6723  0582  0858               	movf	??_date_settings+2,w
  6724  0583  00C6               	movwf	_a
  6725  0584                     l3316:	
  6726                           
  6727                           ;Button_src.c: 396:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  6728  0584  3011               	movlw	17
  6729  0585  00D6               	movwf	??_date_settings
  6730  0586  0856               	movf	??_date_settings,w
  6731  0587  00F0               	movwf	time_date_delimiter@hex
  6732  0588  3039               	movlw	57
  6733  0589  00D7               	movwf	??_date_settings+1
  6734  058A  0857               	movf	??_date_settings+1,w
  6735  058B  00F1               	movwf	time_date_delimiter@limiter
  6736  058C  0843               	movf	_day_hex,w
  6737  058D  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6738  0592  1283               	bcf	3,5	;RP0=0, select bank0
  6739  0593  1303               	bcf	3,6	;RP1=0, select bank0
  6740  0594  00D8               	movwf	??_date_settings+2
  6741  0595  0858               	movf	??_date_settings+2,w
  6742  0596  00C3               	movwf	_day_hex
  6743  0597                     l3318:	
  6744                           
  6745                           ;Button_src.c: 397:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  6746  0597  3021               	movlw	33
  6747  0598  00D6               	movwf	??_date_settings
  6748  0599  0856               	movf	??_date_settings,w
  6749  059A  00F0               	movwf	time_date_delimiter@hex
  6750  059B  304A               	movlw	74
  6751  059C  00D7               	movwf	??_date_settings+1
  6752  059D  0857               	movf	??_date_settings+1,w
  6753  059E  00F1               	movwf	time_date_delimiter@limiter
  6754  059F  0843               	movf	_day_hex,w
  6755  05A0  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6756  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6757  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6758  05A7  00D8               	movwf	??_date_settings+2
  6759  05A8  0858               	movf	??_date_settings+2,w
  6760  05A9  00C3               	movwf	_day_hex
  6761  05AA                     l3320:	
  6762                           
  6763                           ;Button_src.c: 398:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  6764  05AA  3011               	movlw	17
  6765  05AB  00D6               	movwf	??_date_settings
  6766  05AC  0856               	movf	??_date_settings,w
  6767  05AD  00F0               	movwf	time_date_delimiter@hex
  6768  05AE  3039               	movlw	57
  6769  05AF  00D7               	movwf	??_date_settings+1
  6770  05B0  0857               	movf	??_date_settings+1,w
  6771  05B1  00F1               	movwf	time_date_delimiter@limiter
  6772  05B2  0843               	movf	_day_hex,w
  6773  05B3  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6774  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  6775  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  6776  05BA  00D8               	movwf	??_date_settings+2
  6777  05BB  0858               	movf	??_date_settings+2,w
  6778  05BC  00C3               	movwf	_day_hex
  6779  05BD                     l3322:	
  6780                           
  6781                           ;Button_src.c: 399:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  6782  05BD  3021               	movlw	33
  6783  05BE  00D6               	movwf	??_date_settings
  6784  05BF  0856               	movf	??_date_settings,w
  6785  05C0  00F0               	movwf	time_date_delimiter@hex
  6786  05C1  304A               	movlw	74
  6787  05C2  00D7               	movwf	??_date_settings+1
  6788  05C3  0857               	movf	??_date_settings+1,w
  6789  05C4  00F1               	movwf	time_date_delimiter@limiter
  6790  05C5  0843               	movf	_day_hex,w
  6791  05C6  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6792  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  6793  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  6794  05CD  00D8               	movwf	??_date_settings+2
  6795  05CE  0858               	movf	??_date_settings+2,w
  6796  05CF  00C3               	movwf	_day_hex
  6797  05D0                     l3324:	
  6798                           
  6799                           ;Button_src.c: 400:                     day_hex = time_date_delimiter(day_hex,0x31,'Y');
  6800  05D0  3031               	movlw	49
  6801  05D1  00D6               	movwf	??_date_settings
  6802  05D2  0856               	movf	??_date_settings,w
  6803  05D3  00F0               	movwf	time_date_delimiter@hex
  6804  05D4  3059               	movlw	89
  6805  05D5  00D7               	movwf	??_date_settings+1
  6806  05D6  0857               	movf	??_date_settings+1,w
  6807  05D7  00F1               	movwf	time_date_delimiter@limiter
  6808  05D8  0843               	movf	_day_hex,w
  6809  05D9  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6810  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  6811  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  6812  05E0  00D8               	movwf	??_date_settings+2
  6813  05E1  0858               	movf	??_date_settings+2,w
  6814  05E2  00C3               	movwf	_day_hex
  6815  05E3                     l3326:	
  6816                           
  6817                           ;Button_src.c: 402:                     c = time_date_delimiter(c,0x11,'9');
  6818  05E3  3011               	movlw	17
  6819  05E4  00D6               	movwf	??_date_settings
  6820  05E5  0856               	movf	??_date_settings,w
  6821  05E6  00F0               	movwf	time_date_delimiter@hex
  6822  05E7  3039               	movlw	57
  6823  05E8  00D7               	movwf	??_date_settings+1
  6824  05E9  0857               	movf	??_date_settings+1,w
  6825  05EA  00F1               	movwf	time_date_delimiter@limiter
  6826  05EB  0844               	movf	_c,w
  6827  05EC  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6828  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  6829  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  6830  05F3  00D8               	movwf	??_date_settings+2
  6831  05F4  0858               	movf	??_date_settings+2,w
  6832  05F5  00C4               	movwf	_c
  6833  05F6                     l3328:	
  6834                           
  6835                           ;Button_src.c: 403:                     c = time_date_delimiter(c,0x21,'J');
  6836  05F6  3021               	movlw	33
  6837  05F7  00D6               	movwf	??_date_settings
  6838  05F8  0856               	movf	??_date_settings,w
  6839  05F9  00F0               	movwf	time_date_delimiter@hex
  6840  05FA  304A               	movlw	74
  6841  05FB  00D7               	movwf	??_date_settings+1
  6842  05FC  0857               	movf	??_date_settings+1,w
  6843  05FD  00F1               	movwf	time_date_delimiter@limiter
  6844  05FE  0844               	movf	_c,w
  6845  05FF  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6846  0604  1283               	bcf	3,5	;RP0=0, select bank0
  6847  0605  1303               	bcf	3,6	;RP1=0, select bank0
  6848  0606  00D8               	movwf	??_date_settings+2
  6849  0607  0858               	movf	??_date_settings+2,w
  6850  0608  00C4               	movwf	_c
  6851  0609                     l3330:	
  6852                           
  6853                           ;Button_src.c: 404:                     c = time_date_delimiter(c,0x11,'9');
  6854  0609  3011               	movlw	17
  6855  060A  00D6               	movwf	??_date_settings
  6856  060B  0856               	movf	??_date_settings,w
  6857  060C  00F0               	movwf	time_date_delimiter@hex
  6858  060D  3039               	movlw	57
  6859  060E  00D7               	movwf	??_date_settings+1
  6860  060F  0857               	movf	??_date_settings+1,w
  6861  0610  00F1               	movwf	time_date_delimiter@limiter
  6862  0611  0844               	movf	_c,w
  6863  0612  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6864  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6865  0618  1303               	bcf	3,6	;RP1=0, select bank0
  6866  0619  00D8               	movwf	??_date_settings+2
  6867  061A  0858               	movf	??_date_settings+2,w
  6868  061B  00C4               	movwf	_c
  6869  061C                     l3332:	
  6870                           
  6871                           ;Button_src.c: 405:                     c = time_date_delimiter(c,0x21,'J');
  6872  061C  3021               	movlw	33
  6873  061D  00D6               	movwf	??_date_settings
  6874  061E  0856               	movf	??_date_settings,w
  6875  061F  00F0               	movwf	time_date_delimiter@hex
  6876  0620  304A               	movlw	74
  6877  0621  00D7               	movwf	??_date_settings+1
  6878  0622  0857               	movf	??_date_settings+1,w
  6879  0623  00F1               	movwf	time_date_delimiter@limiter
  6880  0624  0844               	movf	_c,w
  6881  0625  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6882  062A  1283               	bcf	3,5	;RP0=0, select bank0
  6883  062B  1303               	bcf	3,6	;RP1=0, select bank0
  6884  062C  00D8               	movwf	??_date_settings+2
  6885  062D  0858               	movf	??_date_settings+2,w
  6886  062E  00C4               	movwf	_c
  6887  062F                     l3334:	
  6888                           
  6889                           ;Button_src.c: 406:                     c = time_date_delimiter(c,0x31,'Y');
  6890  062F  3031               	movlw	49
  6891  0630  00D6               	movwf	??_date_settings
  6892  0631  0856               	movf	??_date_settings,w
  6893  0632  00F0               	movwf	time_date_delimiter@hex
  6894  0633  3059               	movlw	89
  6895  0634  00D7               	movwf	??_date_settings+1
  6896  0635  0857               	movf	??_date_settings+1,w
  6897  0636  00F1               	movwf	time_date_delimiter@limiter
  6898  0637  0844               	movf	_c,w
  6899  0638  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6900  063D  1283               	bcf	3,5	;RP0=0, select bank0
  6901  063E  1303               	bcf	3,6	;RP1=0, select bank0
  6902  063F  00D8               	movwf	??_date_settings+2
  6903  0640  0858               	movf	??_date_settings+2,w
  6904  0641  00C4               	movwf	_c
  6905  0642                     l3336:	
  6906                           
  6907                           ;Button_src.c: 407:                     c = time_date_delimiter(c,0x41,'j');
  6908  0642  3041               	movlw	65
  6909  0643  00D6               	movwf	??_date_settings
  6910  0644  0856               	movf	??_date_settings,w
  6911  0645  00F0               	movwf	time_date_delimiter@hex
  6912  0646  306A               	movlw	106
  6913  0647  00D7               	movwf	??_date_settings+1
  6914  0648  0857               	movf	??_date_settings+1,w
  6915  0649  00F1               	movwf	time_date_delimiter@limiter
  6916  064A  0844               	movf	_c,w
  6917  064B  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6918  0650  1283               	bcf	3,5	;RP0=0, select bank0
  6919  0651  1303               	bcf	3,6	;RP1=0, select bank0
  6920  0652  00D8               	movwf	??_date_settings+2
  6921  0653  0858               	movf	??_date_settings+2,w
  6922  0654  00C4               	movwf	_c
  6923  0655                     l3338:	
  6924                           
  6925                           ;Button_src.c: 408:                     c = time_date_delimiter(c,0x51,'z');
  6926  0655  3051               	movlw	81
  6927  0656  00D6               	movwf	??_date_settings
  6928  0657  0856               	movf	??_date_settings,w
  6929  0658  00F0               	movwf	time_date_delimiter@hex
  6930  0659  307A               	movlw	122
  6931  065A  00D7               	movwf	??_date_settings+1
  6932  065B  0857               	movf	??_date_settings+1,w
  6933  065C  00F1               	movwf	time_date_delimiter@limiter
  6934  065D  0844               	movf	_c,w
  6935  065E  160A  118A  26AB  120A  118A  	fcall	_time_date_delimiter
  6936  0663  1283               	bcf	3,5	;RP0=0, select bank0
  6937  0664  1303               	bcf	3,6	;RP1=0, select bank0
  6938  0665  00D8               	movwf	??_date_settings+2
  6939  0666  0858               	movf	??_date_settings+2,w
  6940  0667  00C4               	movwf	_c
  6941  0668                     l3340:	
  6942                           
  6943                           ;Button_src.c: 410:              write_cmd(0x88);
  6944  0668  3088               	movlw	136
  6945  0669  120A  158A  2005  120A  118A  	fcall	_write_cmd
  6946  066E                     l3342:	
  6947                           
  6948                           ;Button_src.c: 412:                   RC0 = 0;
  6949  066E  1283               	bcf	3,5	;RP0=0, select bank0
  6950  066F  1303               	bcf	3,6	;RP1=0, select bank0
  6951  0670  1007               	bcf	7,0	;volatile
  6952  0671                     l3344:	
  6953                           
  6954                           ;Button_src.c: 413:                   RC1 = 1;
  6955  0671  1487               	bsf	7,1	;volatile
  6956  0672                     l3346:	
  6957                           
  6958                           ;Button_src.c: 414:                   RC2 = 1;
  6959  0672  1507               	bsf	7,2	;volatile
  6960  0673                     l3348:	
  6961                           
  6962                           ;Button_src.c: 415:                   RC3 = 1;
  6963  0673  1587               	bsf	7,3	;volatile
  6964  0674                     l3350:	
  6965                           
  6966                           ;Button_src.c: 417:                     if (RC6 == 0 ){
  6967  0674  1B07               	btfsc	7,6	;volatile
  6968  0675  2E77               	goto	u1991
  6969  0676  2E78               	goto	u1990
  6970  0677                     u1991:	
  6971  0677  2E8F               	goto	l540
  6972  0678                     u1990:	
  6973  0678                     l3352:	
  6974                           
  6975                           ;Button_src.c: 418:                           a = 0x00;
  6976  0678  01C6               	clrf	_a
  6977                           
  6978                           ;Button_src.c: 419:                           c = 0x00;
  6979  0679  01C4               	clrf	_c
  6980                           
  6981                           ;Button_src.c: 420:                           day_hex = 0x00;
  6982  067A  01C3               	clrf	_day_hex
  6983                           
  6984                           ;Button_src.c: 421:                           x = 0;
  6985  067B  01B3               	clrf	_x
  6986  067C  01B4               	clrf	_x+1
  6987                           
  6988                           ;Button_src.c: 422:                           y = 0;
  6989  067D  01B1               	clrf	_y
  6990  067E  01B2               	clrf	_y+1
  6991                           
  6992                           ;Button_src.c: 423:                           w = 0;
  6993  067F  01B5               	clrf	_w
  6994  0680  01B6               	clrf	_w+1
  6995                           
  6996                           ;Button_src.c: 424:                           t = 0;
  6997  0681  01B7               	clrf	_t
  6998  0682  01B8               	clrf	_t+1
  6999  0683                     l3354:	
  7000                           
  7001                           ;Button_src.c: 425:                           write_cmd(0x1);
  7002  0683  3001               	movlw	1
  7003  0684  120A  158A  2005  120A  118A  	fcall	_write_cmd
  7004  0689                     l3356:	
  7005                           
  7006                           ;Button_src.c: 426:                           set_time();
  7007  0689  160A  118A  27A8  120A  118A  	fcall	_set_time
  7008  068E  2FE5               	goto	l541
  7009  068F                     l540:	
  7010                           ;Button_src.c: 428:                             }
  7011                           
  7012                           
  7013                           ;Button_src.c: 429:                   RC0 = 0;
  7014  068F  1007               	bcf	7,0	;volatile
  7015                           
  7016                           ;Button_src.c: 430:                   RC1 = 1;
  7017  0690  1487               	bsf	7,1	;volatile
  7018                           
  7019                           ;Button_src.c: 431:                   RC2 = 1;
  7020  0691  1507               	bsf	7,2	;volatile
  7021                           
  7022                           ;Button_src.c: 432:                   RC3 = 1;
  7023  0692  1587               	bsf	7,3	;volatile
  7024  0693                     l3360:	
  7025                           
  7026                           ;Button_src.c: 433:                   z = modulus_func(z,3);
  7027  0693  0830               	movf	_z+1,w
  7028  0694  00F8               	movwf	modulus_func@x+1
  7029  0695  082F               	movf	_z,w
  7030  0696  00F7               	movwf	modulus_func@x
  7031  0697  3003               	movlw	3
  7032  0698  00F9               	movwf	modulus_func@y
  7033  0699  3000               	movlw	0
  7034  069A  00FA               	movwf	modulus_func@y+1
  7035  069B  160A  118A  260B  120A  118A  	fcall	_modulus_func
  7036  06A0  0878               	movf	?_modulus_func+1,w
  7037  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  7038  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  7039  06A3  00B0               	movwf	_z+1
  7040  06A4  0877               	movf	?_modulus_func,w
  7041  06A5  00AF               	movwf	_z
  7042  06A6                     l3362:	
  7043                           
  7044                           ;Button_src.c: 434:                   if(RC4 == 0 && z ==0){
  7045  06A6  1A07               	btfsc	7,4	;volatile
  7046  06A7  2EA9               	goto	u2001
  7047  06A8  2EAA               	goto	u2000
  7048  06A9                     u2001:	
  7049  06A9  2EED               	goto	l3372
  7050  06AA                     u2000:	
  7051  06AA                     l3364:	
  7052  06AA  082F               	movf	_z,w
  7053  06AB  0430               	iorwf	_z+1,w
  7054  06AC  1D03               	btfss	3,2
  7055  06AD  2EAF               	goto	u2011
  7056  06AE  2EB0               	goto	u2010
  7057  06AF                     u2011:	
  7058  06AF  2EED               	goto	l3372
  7059  06B0                     u2010:	
  7060  06B0                     l3366:	
  7061                           
  7062                           ;Button_src.c: 435:                       write_cmd(0x90);
  7063  06B0  3090               	movlw	144
  7064  06B1  120A  158A  2005  120A  118A  	fcall	_write_cmd
  7065                           
  7066                           ;Button_src.c: 436:                       write_char('D');
  7067  06B6  3044               	movlw	68
  7068  06B7  160A  118A  26C2  120A  118A  	fcall	_write_char
  7069                           
  7070                           ;Button_src.c: 437:                       write_char('a');
  7071  06BC  3061               	movlw	97
  7072  06BD  160A  118A  26C2  120A  118A  	fcall	_write_char
  7073                           
  7074                           ;Button_src.c: 438:                       write_char('y');
  7075  06C2  3079               	movlw	121
  7076  06C3  160A  118A  26C2  120A  118A  	fcall	_write_char
  7077                           
  7078                           ;Button_src.c: 439:                       write_char(':');
  7079  06C8  303A               	movlw	58
  7080  06C9  160A  118A  26C2  120A  118A  	fcall	_write_char
  7081                           
  7082                           ;Button_src.c: 440:                       write_char(' ');
  7083  06CE  3020               	movlw	32
  7084  06CF  160A  118A  26C2  120A  118A  	fcall	_write_char
  7085                           
  7086                           ;Button_src.c: 441:                       write_char(' ');
  7087  06D4  3020               	movlw	32
  7088  06D5  160A  118A  26C2  120A  118A  	fcall	_write_char
  7089  06DA                     l3368:	
  7090                           
  7091                           ;Button_src.c: 442:                       b = 'y';
  7092  06DA  3079               	movlw	121
  7093  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  7094  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  7095  06DD  00D6               	movwf	??_date_settings
  7096  06DE  0856               	movf	??_date_settings,w
  7097  06DF  00C5               	movwf	_b
  7098  06E0                     l3370:	
  7099                           
  7100                           ;Button_src.c: 444:                       button_delay();
  7101  06E0  160A  118A  2669  120A  118A  	fcall	_button_delay
  7102                           
  7103                           ;Button_src.c: 445:                       z++;
  7104  06E5  3001               	movlw	1
  7105  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  7106  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  7107  06E8  07AF               	addwf	_z,f
  7108  06E9  1803               	skipnc
  7109  06EA  0AB0               	incf	_z+1,f
  7110  06EB  3000               	movlw	0
  7111  06EC  07B0               	addwf	_z+1,f
  7112  06ED                     l3372:	
  7113                           
  7114                           ;Button_src.c: 447:                   RC0 = 0;
  7115  06ED  1007               	bcf	7,0	;volatile
  7116  06EE                     l3374:	
  7117                           
  7118                           ;Button_src.c: 448:                   RC1 = 1;
  7119  06EE  1487               	bsf	7,1	;volatile
  7120  06EF                     l3376:	
  7121                           
  7122                           ;Button_src.c: 449:                   RC2 = 1;
  7123  06EF  1507               	bsf	7,2	;volatile
  7124  06F0                     l3378:	
  7125                           
  7126                           ;Button_src.c: 450:                   RC3 = 1;
  7127  06F0  1587               	bsf	7,3	;volatile
  7128  06F1                     l3380:	
  7129                           
  7130                           ;Button_src.c: 451:                   if(RC4 == 0&& z ==1){
  7131  06F1  1A07               	btfsc	7,4	;volatile
  7132  06F2  2EF4               	goto	u2021
  7133  06F3  2EF5               	goto	u2020
  7134  06F4                     u2021:	
  7135  06F4  2F36               	goto	l3402
  7136  06F5                     u2020:	
  7137  06F5                     l3382:	
  7138  06F5  032F               	decf	_z,w
  7139  06F6  0430               	iorwf	_z+1,w
  7140  06F7  1D03               	btfss	3,2
  7141  06F8  2EFA               	goto	u2031
  7142  06F9  2EFB               	goto	u2030
  7143  06FA                     u2031:	
  7144  06FA  2F36               	goto	l3402
  7145  06FB                     u2030:	
  7146  06FB                     l3384:	
  7147                           
  7148                           ;Button_src.c: 452:                       z++;
  7149  06FB  3001               	movlw	1
  7150  06FC  07AF               	addwf	_z,f
  7151  06FD  1803               	skipnc
  7152  06FE  0AB0               	incf	_z+1,f
  7153  06FF  3000               	movlw	0
  7154  0700  07B0               	addwf	_z+1,f
  7155  0701                     l3386:	
  7156                           
  7157                           ;Button_src.c: 453:                       button_delay();
  7158  0701  160A  118A  2669  120A  118A  	fcall	_button_delay
  7159  0706                     l3388:	
  7160                           
  7161                           ;Button_src.c: 455:                       write_cmd(0x90);
  7162  0706  3090               	movlw	144
  7163  0707  120A  158A  2005  120A  118A  	fcall	_write_cmd
  7164  070C                     l3390:	
  7165                           
  7166                           ;Button_src.c: 456:                       write_char('M');
  7167  070C  304D               	movlw	77
  7168  070D  160A  118A  26C2  120A  118A  	fcall	_write_char
  7169  0712                     l3392:	
  7170                           
  7171                           ;Button_src.c: 457:                       write_char('o');
  7172  0712  306F               	movlw	111
  7173  0713  160A  118A  26C2  120A  118A  	fcall	_write_char
  7174  0718                     l3394:	
  7175                           
  7176                           ;Button_src.c: 458:                       write_char('n');
  7177  0718  306E               	movlw	110
  7178  0719  160A  118A  26C2  120A  118A  	fcall	_write_char
  7179  071E                     l3396:	
  7180                           
  7181                           ;Button_src.c: 459:                       write_char('t');
  7182  071E  3074               	movlw	116
  7183  071F  160A  118A  26C2  120A  118A  	fcall	_write_char
  7184  0724                     l3398:	
  7185                           
  7186                           ;Button_src.c: 460:                       write_char('h');
  7187  0724  3068               	movlw	104
  7188  0725  160A  118A  26C2  120A  118A  	fcall	_write_char
  7189  072A                     l3400:	
  7190                           
  7191                           ;Button_src.c: 461:                       write_char(':');
  7192  072A  303A               	movlw	58
  7193  072B  160A  118A  26C2  120A  118A  	fcall	_write_char
  7194                           
  7195                           ;Button_src.c: 462:                       b = 'x';
  7196  0730  3078               	movlw	120
  7197  0731  1283               	bcf	3,5	;RP0=0, select bank0
  7198  0732  1303               	bcf	3,6	;RP1=0, select bank0
  7199  0733  00D6               	movwf	??_date_settings
  7200  0734  0856               	movf	??_date_settings,w
  7201  0735  00C5               	movwf	_b
  7202  0736                     l3402:	
  7203                           
  7204                           ;Button_src.c: 465:                   RC0 = 0;
  7205  0736  1007               	bcf	7,0	;volatile
  7206  0737                     l3404:	
  7207                           
  7208                           ;Button_src.c: 466:                   RC1 = 1;
  7209  0737  1487               	bsf	7,1	;volatile
  7210  0738                     l3406:	
  7211                           
  7212                           ;Button_src.c: 467:                   RC2 = 1;
  7213  0738  1507               	bsf	7,2	;volatile
  7214  0739                     l3408:	
  7215                           
  7216                           ;Button_src.c: 468:                   RC3 = 1;
  7217  0739  1587               	bsf	7,3	;volatile
  7218  073A                     l3410:	
  7219                           
  7220                           ;Button_src.c: 469:                   if(RC4 == 0&& z ==2){
  7221  073A  1A07               	btfsc	7,4	;volatile
  7222  073B  2F3D               	goto	u2041
  7223  073C  2F3E               	goto	u2040
  7224  073D                     u2041:	
  7225  073D  2F82               	goto	l3432
  7226  073E                     u2040:	
  7227  073E                     l3412:	
  7228  073E  3002               	movlw	2
  7229  073F  062F               	xorwf	_z,w
  7230  0740  0430               	iorwf	_z+1,w
  7231  0741  1D03               	btfss	3,2
  7232  0742  2F44               	goto	u2051
  7233  0743  2F45               	goto	u2050
  7234  0744                     u2051:	
  7235  0744  2F82               	goto	l3432
  7236  0745                     u2050:	
  7237  0745                     l3414:	
  7238                           
  7239                           ;Button_src.c: 470:                       button_delay();
  7240  0745  160A  118A  2669  120A  118A  	fcall	_button_delay
  7241  074A                     l3416:	
  7242                           
  7243                           ;Button_src.c: 471:                       z++;
  7244  074A  3001               	movlw	1
  7245  074B  1283               	bcf	3,5	;RP0=0, select bank0
  7246  074C  1303               	bcf	3,6	;RP1=0, select bank0
  7247  074D  07AF               	addwf	_z,f
  7248  074E  1803               	skipnc
  7249  074F  0AB0               	incf	_z+1,f
  7250  0750  3000               	movlw	0
  7251  0751  07B0               	addwf	_z+1,f
  7252  0752                     l3418:	
  7253                           
  7254                           ;Button_src.c: 473:                       write_cmd(0x90);
  7255  0752  3090               	movlw	144
  7256  0753  120A  158A  2005  120A  118A  	fcall	_write_cmd
  7257  0758                     l3420:	
  7258                           
  7259                           ;Button_src.c: 474:                       write_char('Y');
  7260  0758  3059               	movlw	89
  7261  0759  160A  118A  26C2  120A  118A  	fcall	_write_char
  7262  075E                     l3422:	
  7263                           
  7264                           ;Button_src.c: 475:                       write_char('e');
  7265  075E  3065               	movlw	101
  7266  075F  160A  118A  26C2  120A  118A  	fcall	_write_char
  7267  0764                     l3424:	
  7268                           
  7269                           ;Button_src.c: 476:                       write_char('a');
  7270  0764  3061               	movlw	97
  7271  0765  160A  118A  26C2  120A  118A  	fcall	_write_char
  7272  076A                     l3426:	
  7273                           
  7274                           ;Button_src.c: 477:                       write_char('r');
  7275  076A  3072               	movlw	114
  7276  076B  160A  118A  26C2  120A  118A  	fcall	_write_char
  7277  0770                     l3428:	
  7278                           
  7279                           ;Button_src.c: 478:                       write_char(':');
  7280  0770  303A               	movlw	58
  7281  0771  160A  118A  26C2  120A  118A  	fcall	_write_char
  7282  0776                     l3430:	
  7283                           
  7284                           ;Button_src.c: 479:                       write_char(' ');
  7285  0776  3020               	movlw	32
  7286  0777  160A  118A  26C2  120A  118A  	fcall	_write_char
  7287                           
  7288                           ;Button_src.c: 480:                       b = 'z';
  7289  077C  307A               	movlw	122
  7290  077D  1283               	bcf	3,5	;RP0=0, select bank0
  7291  077E  1303               	bcf	3,6	;RP1=0, select bank0
  7292  077F  00D6               	movwf	??_date_settings
  7293  0780  0856               	movf	??_date_settings,w
  7294  0781  00C5               	movwf	_b
  7295  0782                     l3432:	
  7296                           
  7297                           ;Button_src.c: 483:               write_cmd(0x88);
  7298  0782  3088               	movlw	136
  7299  0783  120A  158A  2005  120A  118A  	fcall	_write_cmd
  7300  0788                     l3434:	
  7301                           
  7302                           ;Button_src.c: 484:               write_char(day_high + '0');
  7303  0788  1283               	bcf	3,5	;RP0=0, select bank0
  7304  0789  1303               	bcf	3,6	;RP1=0, select bank0
  7305  078A  082B               	movf	_day_high,w
  7306  078B  3E30               	addlw	48
  7307  078C  160A  118A  26C2  120A  118A  	fcall	_write_char
  7308  0791                     l3436:	
  7309                           
  7310                           ;Button_src.c: 485:               write_char(day_low + '0');
  7311  0791  1283               	bcf	3,5	;RP0=0, select bank0
  7312  0792  1303               	bcf	3,6	;RP1=0, select bank0
  7313  0793  082D               	movf	_day_low,w
  7314  0794  3E30               	addlw	48
  7315  0795  160A  118A  26C2  120A  118A  	fcall	_write_char
  7316  079A                     l3438:	
  7317                           
  7318                           ;Button_src.c: 486:               write_char('/');
  7319  079A  302F               	movlw	47
  7320  079B  160A  118A  26C2  120A  118A  	fcall	_write_char
  7321  07A0                     l3440:	
  7322                           
  7323                           ;Button_src.c: 487:               write_char(y + '0');
  7324  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  7325  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  7326  07A2  0831               	movf	_y,w
  7327  07A3  3E30               	addlw	48
  7328  07A4  160A  118A  26C2  120A  118A  	fcall	_write_char
  7329  07A9                     l3442:	
  7330                           
  7331                           ;Button_src.c: 488:               write_char(x + '0');
  7332  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  7333  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  7334  07AB  0833               	movf	_x,w
  7335  07AC  3E30               	addlw	48
  7336  07AD  160A  118A  26C2  120A  118A  	fcall	_write_char
  7337  07B2                     l3444:	
  7338                           
  7339                           ;Button_src.c: 489:               write_char('/');
  7340  07B2  302F               	movlw	47
  7341  07B3  160A  118A  26C2  120A  118A  	fcall	_write_char
  7342  07B8                     l3446:	
  7343                           
  7344                           ;Button_src.c: 490:               write_char(w+ '0');
  7345  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  7346  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  7347  07BA  0835               	movf	_w,w
  7348  07BB  3E30               	addlw	48
  7349  07BC  160A  118A  26C2  120A  118A  	fcall	_write_char
  7350  07C1                     l3448:	
  7351                           
  7352                           ;Button_src.c: 491:               write_char(t+ '0');
  7353  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  7354  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  7355  07C3  0837               	movf	_t,w
  7356  07C4  3E30               	addlw	48
  7357  07C5  160A  118A  26C2  120A  118A  	fcall	_write_char
  7358  07CA                     l3450:	
  7359                           
  7360                           ;Button_src.c: 494:             RC0 = 0;
  7361  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  7362  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  7363  07CC  1007               	bcf	7,0	;volatile
  7364  07CD                     l3452:	
  7365                           
  7366                           ;Button_src.c: 495:             RC1 = 1;
  7367  07CD  1487               	bsf	7,1	;volatile
  7368  07CE                     l3454:	
  7369                           
  7370                           ;Button_src.c: 496:             RC2 = 1;
  7371  07CE  1507               	bsf	7,2	;volatile
  7372  07CF                     l3456:	
  7373                           
  7374                           ;Button_src.c: 497:             RC3 = 1;
  7375  07CF  1587               	bsf	7,3	;volatile
  7376  07D0                     l3458:	
  7377                           
  7378                           ;Button_src.c: 498:             if (RC7 == 0 ){
  7379  07D0  1B87               	btfsc	7,7	;volatile
  7380  07D1  2FD3               	goto	u2061
  7381  07D2  2FD4               	goto	u2060
  7382  07D3                     u2061:	
  7383  07D3  2BE3               	goto	l532
  7384  07D4                     u2060:	
  7385  07D4                     l3460:	
  7386                           
  7387                           ;Button_src.c: 499:             a = 0x00;
  7388  07D4  01C6               	clrf	_a
  7389                           
  7390                           ;Button_src.c: 500:             c = 0x00;
  7391  07D5  01C4               	clrf	_c
  7392                           
  7393                           ;Button_src.c: 501:             day_hex = 0x00;
  7394  07D6  01C3               	clrf	_day_hex
  7395                           
  7396                           ;Button_src.c: 502:             x = 0;
  7397  07D7  01B3               	clrf	_x
  7398  07D8  01B4               	clrf	_x+1
  7399                           
  7400                           ;Button_src.c: 503:             y = 0;
  7401  07D9  01B1               	clrf	_y
  7402  07DA  01B2               	clrf	_y+1
  7403                           
  7404                           ;Button_src.c: 504:             w = 0;
  7405  07DB  01B5               	clrf	_w
  7406  07DC  01B6               	clrf	_w+1
  7407                           
  7408                           ;Button_src.c: 505:             t = 0;
  7409  07DD  01B7               	clrf	_t
  7410  07DE  01B8               	clrf	_t+1
  7411  07DF                     l3462:	
  7412                           
  7413                           ;Button_src.c: 506:             write_cmd(0x1);
  7414  07DF  3001               	movlw	1
  7415  07E0  120A  158A  2005  120A  118A  	fcall	_write_cmd
  7416  07E5                     l541:	
  7417                           ;Button_src.c: 507:             break;
  7418                           
  7419  07E5  0008               	return
  7420  07E6                     __end_of_date_settings:	
  7421                           
  7422                           	psect	text28
  7423  0805                     __ptext28:	
  7424 ;; *************** function _write_cmd *****************
  7425 ;; Defined at:
  7426 ;;		line 41 in file "LCD_src.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;  x               1    wreg     unsigned char 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;  x               1    2[COMMON] unsigned char 
  7431 ;;  i               2    0        int 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7441 ;;      Params:         0       0       0       0       0
  7442 ;;      Locals:         1       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0
  7444 ;;      Totals:         1       0       0       0       0
  7445 ;;Total ram usage:        1 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    1
  7448 ;; This function calls:
  7449 ;;		_delay_screen
  7450 ;; This function is called by:
  7451 ;;		_main
  7452 ;;		_lcd_init
  7453 ;;		_thermometer_threshhold_settings
  7454 ;;		_time_settings
  7455 ;;		_date_settings
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           
  7460                           ;psect for function _write_cmd
  7461  0805                     _write_cmd:	
  7462                           
  7463                           ;incstack = 0
  7464                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7465                           ;write_cmd@x stored from wreg
  7466  0805  00F2               	movwf	write_cmd@x
  7467  0806                     l2590:	
  7468                           
  7469                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  7470  0806  1283               	bcf	3,5	;RP0=0, select bank0
  7471  0807  1303               	bcf	3,6	;RP1=0, select bank0
  7472  0808  1285               	bcf	5,5	;volatile
  7473                           
  7474                           ;LCD_src.c: 45:  RA4=0;
  7475  0809  1205               	bcf	5,4	;volatile
  7476                           
  7477                           ;LCD_src.c: 46:  RA3=0;
  7478  080A  1185               	bcf	5,3	;volatile
  7479  080B                     l2592:	
  7480                           
  7481                           ;LCD_src.c: 47:  delay_screen();
  7482  080B  160A  118A  267F  120A  158A  	fcall	_delay_screen
  7483  0810                     l2594:	
  7484                           
  7485                           ;LCD_src.c: 48:  RA3=1;
  7486  0810  1283               	bcf	3,5	;RP0=0, select bank0
  7487  0811  1303               	bcf	3,6	;RP1=0, select bank0
  7488  0812  1585               	bsf	5,3	;volatile
  7489  0813                     l2596:	
  7490                           
  7491                           ;LCD_src.c: 49:  PORTD=x;
  7492  0813  0872               	movf	write_cmd@x,w
  7493  0814  0088               	movwf	8	;volatile
  7494  0815                     l2598:	
  7495                           
  7496                           ;LCD_src.c: 50:  delay_screen();
  7497  0815  160A  118A  267F  120A  158A  	fcall	_delay_screen
  7498  081A                     l2600:	
  7499                           
  7500                           ;LCD_src.c: 51:  RA3=0;
  7501  081A  1283               	bcf	3,5	;RP0=0, select bank0
  7502  081B  1303               	bcf	3,6	;RP1=0, select bank0
  7503  081C  1185               	bcf	5,3	;volatile
  7504  081D                     l156:	
  7505  081D  0008               	return
  7506  081E                     __end_of_write_cmd:	
  7507                           
  7508                           	psect	text29
  7509  16C2                     __ptext29:	
  7510 ;; *************** function _write_char *****************
  7511 ;; Defined at:
  7512 ;;		line 28 in file "LCD_src.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  x               1    wreg     unsigned char 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  x               1    2[COMMON] unsigned char 
  7517 ;;  i               2    0        int 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  1    wreg      void 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7527 ;;      Params:         0       0       0       0       0
  7528 ;;      Locals:         1       0       0       0       0
  7529 ;;      Temps:          0       0       0       0       0
  7530 ;;      Totals:         1       0       0       0       0
  7531 ;;Total ram usage:        1 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    1
  7534 ;; This function calls:
  7535 ;;		_delay_screen
  7536 ;; This function is called by:
  7537 ;;		_main
  7538 ;;		_display_temp
  7539 ;;		_display_clock
  7540 ;;		_display_date
  7541 ;;		_thermometer_threshhold_settings
  7542 ;;		_time_settings
  7543 ;;		_date_settings
  7544 ;;		_set_upper_threshold
  7545 ;;		_set_lower_threshold
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _write_char
  7551  16C2                     _write_char:	
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7555                           ;write_char@x stored from wreg
  7556  16C2  00F2               	movwf	write_char@x
  7557  16C3                     l2602:	
  7558                           
  7559                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  7560  16C3  1283               	bcf	3,5	;RP0=0, select bank0
  7561  16C4  1303               	bcf	3,6	;RP1=0, select bank0
  7562  16C5  1685               	bsf	5,5	;volatile
  7563                           
  7564                           ;LCD_src.c: 32:  RA4=0;
  7565  16C6  1205               	bcf	5,4	;volatile
  7566                           
  7567                           ;LCD_src.c: 33:  RA3=0;
  7568  16C7  1185               	bcf	5,3	;volatile
  7569  16C8                     l2604:	
  7570                           
  7571                           ;LCD_src.c: 34:  delay_screen();
  7572  16C8  160A  118A  267F  160A  118A  	fcall	_delay_screen
  7573  16CD                     l2606:	
  7574                           
  7575                           ;LCD_src.c: 35:  RA3=1;
  7576  16CD  1283               	bcf	3,5	;RP0=0, select bank0
  7577  16CE  1303               	bcf	3,6	;RP1=0, select bank0
  7578  16CF  1585               	bsf	5,3	;volatile
  7579  16D0                     l2608:	
  7580                           
  7581                           ;LCD_src.c: 36:  PORTD= x;
  7582  16D0  0872               	movf	write_char@x,w
  7583  16D1  0088               	movwf	8	;volatile
  7584  16D2                     l2610:	
  7585                           
  7586                           ;LCD_src.c: 37:  delay_screen();
  7587  16D2  160A  118A  267F  160A  118A  	fcall	_delay_screen
  7588  16D7                     l2612:	
  7589                           
  7590                           ;LCD_src.c: 38:  RA3=0;
  7591  16D7  1283               	bcf	3,5	;RP0=0, select bank0
  7592  16D8  1303               	bcf	3,6	;RP1=0, select bank0
  7593  16D9  1185               	bcf	5,3	;volatile
  7594  16DA                     l153:	
  7595  16DA  0008               	return
  7596  16DB                     __end_of_write_char:	
  7597                           
  7598                           	psect	text30
  7599  167F                     __ptext30:	
  7600 ;; *************** function _delay_screen *****************
  7601 ;; Defined at:
  7602 ;;		line 70 in file "LCD_src.c"
  7603 ;; Parameters:    Size  Location     Type
  7604 ;;		None
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;  i               2    0[COMMON] int 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  1    wreg      void 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, btemp+1
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7616 ;;      Params:         0       0       0       0       0
  7617 ;;      Locals:         2       0       0       0       0
  7618 ;;      Temps:          0       0       0       0       0
  7619 ;;      Totals:         2       0       0       0       0
  7620 ;;Total ram usage:        2 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_lcd_init
  7626 ;;		_write_char
  7627 ;;		_write_cmd
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           
  7632                           ;psect for function _delay_screen
  7633  167F                     _delay_screen:	
  7634  167F                     l2536:	
  7635                           ;incstack = 0
  7636                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  7637                           
  7638                           
  7639                           ;LCD_src.c: 71:     int i;;LCD_src.c: 72:  for(i=0;i<5;i++);
  7640  167F  01F0               	clrf	delay_screen@i
  7641  1680  01F1               	clrf	delay_screen@i+1
  7642  1681                     l2542:	
  7643  1681  3001               	movlw	1
  7644  1682  07F0               	addwf	delay_screen@i,f
  7645  1683  1803               	skipnc
  7646  1684  0AF1               	incf	delay_screen@i+1,f
  7647  1685  3000               	movlw	0
  7648  1686  07F1               	addwf	delay_screen@i+1,f
  7649  1687                     l2544:	
  7650  1687  0871               	movf	delay_screen@i+1,w
  7651  1688  3A80               	xorlw	128
  7652  1689  00FF               	movwf	btemp+1
  7653  168A  3080               	movlw	128
  7654  168B  027F               	subwf	btemp+1,w
  7655  168C  1D03               	skipz
  7656  168D  2E90               	goto	u1255
  7657  168E  3005               	movlw	5
  7658  168F  0270               	subwf	delay_screen@i,w
  7659  1690                     u1255:	
  7660  1690  1C03               	skipc
  7661  1691  2E93               	goto	u1251
  7662  1692  2E94               	goto	u1250
  7663  1693                     u1251:	
  7664  1693  2E81               	goto	l2542
  7665  1694                     u1250:	
  7666  1694                     l166:	
  7667  1694  0008               	return
  7668  1695                     __end_of_delay_screen:	
  7669                           
  7670                           	psect	text31
  7671  161D                     __ptext31:	
  7672 ;; *************** function _time_date_hex_terminator *****************
  7673 ;; Defined at:
  7674 ;;		line 35 in file "math_src.c"
  7675 ;; Parameters:    Size  Location     Type
  7676 ;;  val             1    wreg     unsigned char 
  7677 ;;  limiter         1    0[COMMON] unsigned char 
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;  val             1    3[COMMON] unsigned char 
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      unsigned char 
  7682 ;; Registers used:
  7683 ;;		wreg, status,2
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7689 ;;      Params:         1       0       0       0       0
  7690 ;;      Locals:         1       0       0       0       0
  7691 ;;      Temps:          2       0       0       0       0
  7692 ;;      Totals:         4       0       0       0       0
  7693 ;;Total ram usage:        4 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_time_settings
  7699 ;;		_date_settings
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           
  7704                           ;psect for function _time_date_hex_terminator
  7705  161D                     _time_date_hex_terminator:	
  7706                           
  7707                           ;incstack = 0
  7708                           ; Regs used in _time_date_hex_terminator: [wreg+status,2]
  7709                           ;time_date_hex_terminator@val stored from wreg
  7710  161D  00F3               	movwf	time_date_hex_terminator@val
  7711  161E                     l2788:	
  7712                           
  7713                           ;math_src.c: 36:     if((val + '0') == limiter){
  7714  161E  0873               	movf	time_date_hex_terminator@val,w
  7715  161F  3E30               	addlw	48
  7716  1620  00F1               	movwf	??_time_date_hex_terminator
  7717  1621  3000               	movlw	0
  7718  1622  1803               	skipnc
  7719  1623  3001               	movlw	1
  7720  1624  00F2               	movwf	??_time_date_hex_terminator+1
  7721  1625  0870               	movf	time_date_hex_terminator@limiter,w
  7722  1626  0671               	xorwf	??_time_date_hex_terminator,w
  7723  1627  0472               	iorwf	??_time_date_hex_terminator+1,w
  7724  1628  1D03               	skipz
  7725  1629  2E2B               	goto	u1431
  7726  162A  2E2C               	goto	u1430
  7727  162B                     u1431:	
  7728  162B  2E2D               	goto	l2792
  7729  162C                     u1430:	
  7730  162C                     l2790:	
  7731                           
  7732                           ;math_src.c: 37:     val = 0x00;
  7733  162C  01F3               	clrf	time_date_hex_terminator@val
  7734  162D                     l2792:	
  7735                           
  7736                           ;math_src.c: 39:     return val;
  7737  162D  0873               	movf	time_date_hex_terminator@val,w
  7738  162E                     l570:	
  7739  162E  0008               	return
  7740  162F                     __end_of_time_date_hex_terminator:	
  7741                           
  7742                           	psect	text32
  7743  16AB                     __ptext32:	
  7744 ;; *************** function _time_date_delimiter *****************
  7745 ;; Defined at:
  7746 ;;		line 27 in file "math_src.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  val             1    wreg     unsigned char 
  7749 ;;  hex             1    0[COMMON] unsigned char 
  7750 ;;  limiter         1    1[COMMON] unsigned char 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  val             1    4[COMMON] unsigned char 
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      unsigned char 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7762 ;;      Params:         2       0       0       0       0
  7763 ;;      Locals:         1       0       0       0       0
  7764 ;;      Temps:          2       0       0       0       0
  7765 ;;      Totals:         5       0       0       0       0
  7766 ;;Total ram usage:        5 bytes
  7767 ;; Hardware stack levels used:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_time_settings
  7772 ;;		_date_settings
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function _time_date_delimiter
  7778  16AB                     _time_date_delimiter:	
  7779                           
  7780                           ;incstack = 0
  7781                           ; Regs used in _time_date_delimiter: [wreg+status,2+status,0]
  7782                           ;time_date_delimiter@val stored from wreg
  7783  16AB  00F4               	movwf	time_date_delimiter@val
  7784  16AC                     l2796:	
  7785                           
  7786                           ;math_src.c: 28:     if((val + '0') == limiter){
  7787  16AC  0874               	movf	time_date_delimiter@val,w
  7788  16AD  3E30               	addlw	48
  7789  16AE  00F2               	movwf	??_time_date_delimiter
  7790  16AF  3000               	movlw	0
  7791  16B0  1803               	skipnc
  7792  16B1  3001               	movlw	1
  7793  16B2  00F3               	movwf	??_time_date_delimiter+1
  7794  16B3  0871               	movf	time_date_delimiter@limiter,w
  7795  16B4  0672               	xorwf	??_time_date_delimiter,w
  7796  16B5  0473               	iorwf	??_time_date_delimiter+1,w
  7797  16B6  1D03               	skipz
  7798  16B7  2EB9               	goto	u1441
  7799  16B8  2EBA               	goto	u1440
  7800  16B9                     u1441:	
  7801  16B9  2EC0               	goto	l2802
  7802  16BA                     u1440:	
  7803  16BA                     l2798:	
  7804                           
  7805                           ;math_src.c: 29:     val = hex;
  7806  16BA  0870               	movf	time_date_delimiter@hex,w
  7807  16BB  00F2               	movwf	??_time_date_delimiter
  7808  16BC  0872               	movf	??_time_date_delimiter,w
  7809  16BD  00F4               	movwf	time_date_delimiter@val
  7810  16BE                     l2800:	
  7811                           
  7812                           ;math_src.c: 30:     val--;
  7813  16BE  3001               	movlw	1
  7814  16BF  02F4               	subwf	time_date_delimiter@val,f
  7815  16C0                     l2802:	
  7816                           
  7817                           ;math_src.c: 32:     return val;
  7818  16C0  0874               	movf	time_date_delimiter@val,w
  7819  16C1                     l566:	
  7820  16C1  0008               	return
  7821  16C2                     __end_of_time_date_delimiter:	
  7822                           
  7823                           	psect	text33
  7824  17A8                     __ptext33:	
  7825 ;; *************** function _set_time *****************
  7826 ;; Defined at:
  7827 ;;		line 15 in file "clock_src.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;		None
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  i               2    5[COMMON] int 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         0       0       0       0       0
  7842 ;;      Locals:         2       0       0       0       0
  7843 ;;      Temps:          0       0       0       0       0
  7844 ;;      Totals:         2       0       0       0       0
  7845 ;;Total ram usage:        2 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; Hardware stack levels required when called:    1
  7848 ;; This function calls:
  7849 ;;		_time_write_1
  7850 ;; This function is called by:
  7851 ;;		_main
  7852 ;;		_time_settings
  7853 ;;		_date_settings
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           
  7858                           ;psect for function _set_time
  7859  17A8                     _set_time:	
  7860  17A8                     l2574:	
  7861                           ;incstack = 0
  7862                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7863                           
  7864                           
  7865                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  7866  17A8  1283               	bcf	3,5	;RP0=0, select bank0
  7867  17A9  1303               	bcf	3,6	;RP1=0, select bank0
  7868  17AA  1686               	bsf	6,5	;volatile
  7869  17AB                     l2576:	
  7870                           
  7871                           ;clock_src.c: 19:    time_write_1(0xbe);
  7872  17AB  30BE               	movlw	190
  7873  17AC  160A  118A  2726  160A  118A  	fcall	_time_write_1
  7874  17B1                     l2578:	
  7875                           
  7876                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  7877  17B1  01F5               	clrf	set_time@i
  7878  17B2  01F6               	clrf	set_time@i+1
  7879  17B3                     l2584:	
  7880                           
  7881                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  7882  17B3  0875               	movf	set_time@i,w
  7883  17B4  3E5B               	addlw	(low (_table| 0))& (0+255)
  7884  17B5  0084               	movwf	4
  7885  17B6  1383               	bcf	3,7	;select IRP bank0
  7886  17B7  0800               	movf	0,w
  7887  17B8  160A  118A  2726  160A  118A  	fcall	_time_write_1
  7888  17BD                     l2586:	
  7889                           
  7890                           ;clock_src.c: 23:      }
  7891  17BD  3001               	movlw	1
  7892  17BE  07F5               	addwf	set_time@i,f
  7893  17BF  1803               	skipnc
  7894  17C0  0AF6               	incf	set_time@i+1,f
  7895  17C1  3000               	movlw	0
  7896  17C2  07F6               	addwf	set_time@i+1,f
  7897  17C3                     l2588:	
  7898  17C3  0876               	movf	set_time@i+1,w
  7899  17C4  3A80               	xorlw	128
  7900  17C5  00FF               	movwf	btemp+1
  7901  17C6  3080               	movlw	128
  7902  17C7  027F               	subwf	btemp+1,w
  7903  17C8  1D03               	skipz
  7904  17C9  2FCC               	goto	u1305
  7905  17CA  3008               	movlw	8
  7906  17CB  0275               	subwf	set_time@i,w
  7907  17CC                     u1305:	
  7908  17CC  1C03               	skipc
  7909  17CD  2FCF               	goto	u1301
  7910  17CE  2FD0               	goto	u1300
  7911  17CF                     u1301:	
  7912  17CF  2FB3               	goto	l2584
  7913  17D0                     u1300:	
  7914  17D0                     l309:	
  7915                           
  7916                           ;clock_src.c: 24:    RB5=0;
  7917  17D0  1283               	bcf	3,5	;RP0=0, select bank0
  7918  17D1  1303               	bcf	3,6	;RP1=0, select bank0
  7919  17D2  1286               	bcf	6,5	;volatile
  7920  17D3                     l310:	
  7921  17D3  0008               	return
  7922  17D4                     __end_of_set_time:	
  7923                           
  7924                           	psect	text34
  7925  1726                     __ptext34:	
  7926 ;; *************** function _time_write_1 *****************
  7927 ;; Defined at:
  7928 ;;		line 116 in file "clock_src.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  time_tx         1    wreg     unsigned char 
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;  time_tx         1    4[COMMON] unsigned char 
  7933 ;;  j               2    2[COMMON] int 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		wreg, status,2, status,0, btemp+1
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7943 ;;      Params:         0       0       0       0       0
  7944 ;;      Locals:         3       0       0       0       0
  7945 ;;      Temps:          2       0       0       0       0
  7946 ;;      Totals:         5       0       0       0       0
  7947 ;;Total ram usage:        5 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; This function calls:
  7950 ;;		Nothing
  7951 ;; This function is called by:
  7952 ;;		_ds1302_init
  7953 ;;		_set_time
  7954 ;;		_get_time
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           
  7959                           ;psect for function _time_write_1
  7960  1726                     _time_write_1:	
  7961                           
  7962                           ;incstack = 0
  7963                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  7964                           ;time_write_1@time_tx stored from wreg
  7965  1726  00F4               	movwf	time_write_1@time_tx
  7966  1727                     l2552:	
  7967                           
  7968                           ;clock_src.c: 116: void time_write_1(unsigned char time_tx);clock_src.c: 117: {;clock_sr
      +                          c.c: 118:     int j;;clock_src.c: 119:     for(j=0;j<8;j++)
  7969  1727  01F2               	clrf	time_write_1@j
  7970  1728  01F3               	clrf	time_write_1@j+1
  7971  1729                     l326:	
  7972                           
  7973                           ;clock_src.c: 120:    {;clock_src.c: 121:         RB4=0;
  7974  1729  1283               	bcf	3,5	;RP0=0, select bank0
  7975  172A  1303               	bcf	3,6	;RP1=0, select bank0
  7976  172B  1206               	bcf	6,4	;volatile
  7977                           
  7978                           ;clock_src.c: 122:         RB0=0;
  7979  172C  1006               	bcf	6,0	;volatile
  7980                           
  7981                           ;clock_src.c: 123:         if(time_tx&0x01)
  7982  172D  1C74               	btfss	time_write_1@time_tx,0
  7983  172E  2F30               	goto	u1281
  7984  172F  2F31               	goto	u1280
  7985  1730                     u1281:	
  7986  1730  2F32               	goto	l2560
  7987  1731                     u1280:	
  7988  1731                     l2558:	
  7989                           
  7990                           ;clock_src.c: 124:           {;clock_src.c: 125:             RB4=1;
  7991  1731  1606               	bsf	6,4	;volatile
  7992  1732                     l2560:	
  7993                           
  7994                           ;clock_src.c: 127:         time_tx=time_tx>>1;
  7995  1732  0874               	movf	time_write_1@time_tx,w
  7996  1733  00F0               	movwf	??_time_write_1
  7997  1734  1003               	clrc
  7998  1735  0C70               	rrf	??_time_write_1,w
  7999  1736  00F1               	movwf	??_time_write_1+1
  8000  1737  0871               	movf	??_time_write_1+1,w
  8001  1738  00F4               	movwf	time_write_1@time_tx
  8002  1739                     l2562:	
  8003                           
  8004                           ;clock_src.c: 128:         RB0=1;
  8005  1739  1406               	bsf	6,0	;volatile
  8006  173A                     l2564:	
  8007                           
  8008                           ;clock_src.c: 129:     }
  8009  173A  3001               	movlw	1
  8010  173B  07F2               	addwf	time_write_1@j,f
  8011  173C  1803               	skipnc
  8012  173D  0AF3               	incf	time_write_1@j+1,f
  8013  173E  3000               	movlw	0
  8014  173F  07F3               	addwf	time_write_1@j+1,f
  8015  1740                     l2566:	
  8016  1740  0873               	movf	time_write_1@j+1,w
  8017  1741  3A80               	xorlw	128
  8018  1742  00FF               	movwf	btemp+1
  8019  1743  3080               	movlw	128
  8020  1744  027F               	subwf	btemp+1,w
  8021  1745  1D03               	skipz
  8022  1746  2F49               	goto	u1295
  8023  1747  3008               	movlw	8
  8024  1748  0272               	subwf	time_write_1@j,w
  8025  1749                     u1295:	
  8026  1749  1C03               	skipc
  8027  174A  2F4C               	goto	u1291
  8028  174B  2F4D               	goto	u1290
  8029  174C                     u1291:	
  8030  174C  2F29               	goto	l326
  8031  174D                     u1290:	
  8032  174D                     l327:	
  8033                           
  8034                           ;clock_src.c: 130:       RB0=0;
  8035  174D  1283               	bcf	3,5	;RP0=0, select bank0
  8036  174E  1303               	bcf	3,6	;RP1=0, select bank0
  8037  174F  1006               	bcf	6,0	;volatile
  8038  1750                     l329:	
  8039  1750  0008               	return
  8040  1751                     __end_of_time_write_1:	
  8041                           
  8042                           	psect	text35
  8043  177C                     __ptext35:	
  8044 ;; *************** function _incrementor *****************
  8045 ;; Defined at:
  8046 ;;		line 10 in file "math_src.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;  upper_val       2    0[BANK0 ] int 
  8049 ;;  lower_val       2    2[BANK0 ] int 
  8050 ;;  z               1    4[BANK0 ] unsigned char 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      unsigned char 
  8055 ;; Registers used:
  8056 ;;		wreg, status,2, status,0, pclath, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8062 ;;      Params:         0       5       0       0       0
  8063 ;;      Locals:         0       0       0       0       0
  8064 ;;      Temps:          2       0       0       0       0
  8065 ;;      Totals:         2       5       0       0       0
  8066 ;;Total ram usage:        7 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    2
  8069 ;; This function calls:
  8070 ;;		_modulus_func
  8071 ;; This function is called by:
  8072 ;;		_thermometer_threshhold_settings
  8073 ;;		_time_settings
  8074 ;;		_date_settings
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           
  8079                           ;psect for function _incrementor
  8080  177C                     _incrementor:	
  8081  177C                     l2768:	
  8082                           ;incstack = 0
  8083                           ; Regs used in _incrementor: [wreg+status,2+status,0+pclath+cstack]
  8084                           
  8085                           
  8086                           ;math_src.c: 11:      if(z == (lower_val + '0')){
  8087  177C  1283               	bcf	3,5	;RP0=0, select bank0
  8088  177D  1303               	bcf	3,6	;RP1=0, select bank0
  8089  177E  0853               	movf	incrementor@lower_val,w
  8090  177F  3E30               	addlw	48
  8091  1780  00FB               	movwf	??_incrementor
  8092  1781  0854               	movf	incrementor@lower_val+1,w
  8093  1782  1803               	skipnc
  8094  1783  3E01               	addlw	1
  8095  1784  3E00               	addlw	0
  8096  1785  00FC               	movwf	??_incrementor+1
  8097  1786  0855               	movf	incrementor@z,w
  8098  1787  067B               	xorwf	??_incrementor,w
  8099  1788  047C               	iorwf	??_incrementor+1,w
  8100  1789  1D03               	skipz
  8101  178A  2F8C               	goto	u1411
  8102  178B  2F8D               	goto	u1410
  8103  178C                     u1411:	
  8104  178C  2FA6               	goto	l2774
  8105  178D                     u1410:	
  8106  178D                     l2770:	
  8107                           
  8108                           ;math_src.c: 12:      upper_val++;
  8109  178D  3001               	movlw	1
  8110  178E  07D1               	addwf	incrementor@upper_val,f
  8111  178F  1803               	skipnc
  8112  1790  0AD2               	incf	incrementor@upper_val+1,f
  8113  1791  3000               	movlw	0
  8114  1792  07D2               	addwf	incrementor@upper_val+1,f
  8115  1793                     l2772:	
  8116                           
  8117                           ;math_src.c: 13:      upper_val =(modulus_func(upper_val,10));
  8118  1793  0852               	movf	incrementor@upper_val+1,w
  8119  1794  00F8               	movwf	modulus_func@x+1
  8120  1795  0851               	movf	incrementor@upper_val,w
  8121  1796  00F7               	movwf	modulus_func@x
  8122  1797  300A               	movlw	10
  8123  1798  00F9               	movwf	modulus_func@y
  8124  1799  3000               	movlw	0
  8125  179A  00FA               	movwf	modulus_func@y+1
  8126  179B  160A  118A  260B  160A  118A  	fcall	_modulus_func
  8127  17A0  0878               	movf	?_modulus_func+1,w
  8128  17A1  1283               	bcf	3,5	;RP0=0, select bank0
  8129  17A2  1303               	bcf	3,6	;RP1=0, select bank0
  8130  17A3  00D2               	movwf	incrementor@upper_val+1
  8131  17A4  0877               	movf	?_modulus_func,w
  8132  17A5  00D1               	movwf	incrementor@upper_val
  8133  17A6                     l2774:	
  8134                           
  8135                           ;math_src.c: 15:      return upper_val;
  8136  17A6  0851               	movf	incrementor@upper_val,w
  8137  17A7                     l558:	
  8138  17A7  0008               	return
  8139  17A8                     __end_of_incrementor:	
  8140                           
  8141                           	psect	text36
  8142  160B                     __ptext36:	
  8143 ;; *************** function _modulus_func *****************
  8144 ;; Defined at:
  8145 ;;		line 5 in file "math_src.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  x               2    7[COMMON] int 
  8148 ;;  y               2    9[COMMON] int 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;		None
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  2    7[COMMON] int 
  8153 ;; Registers used:
  8154 ;;		wreg, status,2, status,0, pclath, cstack
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8160 ;;      Params:         4       0       0       0       0
  8161 ;;      Locals:         0       0       0       0       0
  8162 ;;      Temps:          0       0       0       0       0
  8163 ;;      Totals:         4       0       0       0       0
  8164 ;;Total ram usage:        4 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    1
  8167 ;; This function calls:
  8168 ;;		___awmod
  8169 ;; This function is called by:
  8170 ;;		_thermometer_threshhold_settings
  8171 ;;		_time_settings
  8172 ;;		_date_settings
  8173 ;;		_incrementor
  8174 ;;		_decrementor
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           
  8179                           ;psect for function _modulus_func
  8180  160B                     _modulus_func:	
  8181  160B                     l2568:	
  8182                           ;incstack = 0
  8183                           ; Regs used in _modulus_func: [wreg+status,2+status,0+pclath+cstack]
  8184                           
  8185                           
  8186                           ;math_src.c: 6:     x = x % y;
  8187  160B  087A               	movf	modulus_func@y+1,w
  8188  160C  00F1               	movwf	___awmod@divisor+1
  8189  160D  0879               	movf	modulus_func@y,w
  8190  160E  00F0               	movwf	___awmod@divisor
  8191  160F  0878               	movf	modulus_func@x+1,w
  8192  1610  00F3               	movwf	___awmod@dividend+1
  8193  1611  0877               	movf	modulus_func@x,w
  8194  1612  00F2               	movwf	___awmod@dividend
  8195  1613  120A  158A  21F2  160A  118A  	fcall	___awmod
  8196  1618  0871               	movf	?___awmod+1,w
  8197  1619  00F8               	movwf	modulus_func@x+1
  8198  161A  0870               	movf	?___awmod,w
  8199  161B  00F7               	movwf	modulus_func@x
  8200  161C                     l2570:	
  8201  161C                     l554:	
  8202                           ;math_src.c: 7:     return x;
  8203                           
  8204  161C  0008               	return
  8205  161D                     __end_of_modulus_func:	
  8206                           
  8207                           	psect	text37
  8208  09F2                     __ptext37:	
  8209 ;; *************** function ___awmod *****************
  8210 ;; Defined at:
  8211 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  divisor         2    0[COMMON] int 
  8214 ;;  dividend        2    2[COMMON] int 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  sign            1    6[COMMON] unsigned char 
  8217 ;;  counter         1    5[COMMON] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  2    0[COMMON] int 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8227 ;;      Params:         4       0       0       0       0
  8228 ;;      Locals:         2       0       0       0       0
  8229 ;;      Temps:          1       0       0       0       0
  8230 ;;      Totals:         7       0       0       0       0
  8231 ;;Total ram usage:        7 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; This function calls:
  8234 ;;		Nothing
  8235 ;; This function is called by:
  8236 ;;		_get_temp
  8237 ;;		_modulus_func
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           
  8242                           ;psect for function ___awmod
  8243  09F2                     ___awmod:	
  8244  09F2                     l2498:	
  8245                           ;incstack = 0
  8246                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8247                           
  8248  09F2  01F6               	clrf	___awmod@sign
  8249  09F3                     l2500:	
  8250  09F3  1FF3               	btfss	___awmod@dividend+1,7
  8251  09F4  29F6               	goto	u1161
  8252  09F5  29F7               	goto	u1160
  8253  09F6                     u1161:	
  8254  09F6  29FE               	goto	l2506
  8255  09F7                     u1160:	
  8256  09F7                     l2502:	
  8257  09F7  09F2               	comf	___awmod@dividend,f
  8258  09F8  09F3               	comf	___awmod@dividend+1,f
  8259  09F9  0AF2               	incf	___awmod@dividend,f
  8260  09FA  1903               	skipnz
  8261  09FB  0AF3               	incf	___awmod@dividend+1,f
  8262  09FC                     l2504:	
  8263  09FC  01F6               	clrf	___awmod@sign
  8264  09FD  0AF6               	incf	___awmod@sign,f
  8265  09FE                     l2506:	
  8266  09FE  1FF1               	btfss	___awmod@divisor+1,7
  8267  09FF  2A01               	goto	u1171
  8268  0A00  2A02               	goto	u1170
  8269  0A01                     u1171:	
  8270  0A01  2A07               	goto	l2510
  8271  0A02                     u1170:	
  8272  0A02                     l2508:	
  8273  0A02  09F0               	comf	___awmod@divisor,f
  8274  0A03  09F1               	comf	___awmod@divisor+1,f
  8275  0A04  0AF0               	incf	___awmod@divisor,f
  8276  0A05  1903               	skipnz
  8277  0A06  0AF1               	incf	___awmod@divisor+1,f
  8278  0A07                     l2510:	
  8279  0A07  0870               	movf	___awmod@divisor,w
  8280  0A08  0471               	iorwf	___awmod@divisor+1,w
  8281  0A09  1903               	btfsc	3,2
  8282  0A0A  2A0C               	goto	u1181
  8283  0A0B  2A0D               	goto	u1180
  8284  0A0C                     u1181:	
  8285  0A0C  2A3C               	goto	l2528
  8286  0A0D                     u1180:	
  8287  0A0D                     l2512:	
  8288  0A0D  01F5               	clrf	___awmod@counter
  8289  0A0E  0AF5               	incf	___awmod@counter,f
  8290  0A0F  2A1B               	goto	l2518
  8291  0A10                     l2514:	
  8292  0A10  3001               	movlw	1
  8293  0A11                     u1195:	
  8294  0A11  1003               	clrc
  8295  0A12  0DF0               	rlf	___awmod@divisor,f
  8296  0A13  0DF1               	rlf	___awmod@divisor+1,f
  8297  0A14  3EFF               	addlw	-1
  8298  0A15  1D03               	skipz
  8299  0A16  2A11               	goto	u1195
  8300  0A17                     l2516:	
  8301  0A17  3001               	movlw	1
  8302  0A18  00F4               	movwf	??___awmod
  8303  0A19  0874               	movf	??___awmod,w
  8304  0A1A  07F5               	addwf	___awmod@counter,f
  8305  0A1B                     l2518:	
  8306  0A1B  1FF1               	btfss	___awmod@divisor+1,7
  8307  0A1C  2A1E               	goto	u1201
  8308  0A1D  2A1F               	goto	u1200
  8309  0A1E                     u1201:	
  8310  0A1E  2A10               	goto	l2514
  8311  0A1F                     u1200:	
  8312  0A1F                     l2520:	
  8313  0A1F  0871               	movf	___awmod@divisor+1,w
  8314  0A20  0273               	subwf	___awmod@dividend+1,w
  8315  0A21  1D03               	skipz
  8316  0A22  2A25               	goto	u1215
  8317  0A23  0870               	movf	___awmod@divisor,w
  8318  0A24  0272               	subwf	___awmod@dividend,w
  8319  0A25                     u1215:	
  8320  0A25  1C03               	skipc
  8321  0A26  2A28               	goto	u1211
  8322  0A27  2A29               	goto	u1210
  8323  0A28                     u1211:	
  8324  0A28  2A2F               	goto	l2524
  8325  0A29                     u1210:	
  8326  0A29                     l2522:	
  8327  0A29  0870               	movf	___awmod@divisor,w
  8328  0A2A  02F2               	subwf	___awmod@dividend,f
  8329  0A2B  0871               	movf	___awmod@divisor+1,w
  8330  0A2C  1C03               	skipc
  8331  0A2D  03F3               	decf	___awmod@dividend+1,f
  8332  0A2E  02F3               	subwf	___awmod@dividend+1,f
  8333  0A2F                     l2524:	
  8334  0A2F  3001               	movlw	1
  8335  0A30                     u1225:	
  8336  0A30  1003               	clrc
  8337  0A31  0CF1               	rrf	___awmod@divisor+1,f
  8338  0A32  0CF0               	rrf	___awmod@divisor,f
  8339  0A33  3EFF               	addlw	-1
  8340  0A34  1D03               	skipz
  8341  0A35  2A30               	goto	u1225
  8342  0A36                     l2526:	
  8343  0A36  3001               	movlw	1
  8344  0A37  02F5               	subwf	___awmod@counter,f
  8345  0A38  1D03               	btfss	3,2
  8346  0A39  2A3B               	goto	u1231
  8347  0A3A  2A3C               	goto	u1230
  8348  0A3B                     u1231:	
  8349  0A3B  2A1F               	goto	l2520
  8350  0A3C                     u1230:	
  8351  0A3C                     l2528:	
  8352  0A3C  0876               	movf	___awmod@sign,w
  8353  0A3D  1903               	btfsc	3,2
  8354  0A3E  2A40               	goto	u1241
  8355  0A3F  2A41               	goto	u1240
  8356  0A40                     u1241:	
  8357  0A40  2A46               	goto	l2532
  8358  0A41                     u1240:	
  8359  0A41                     l2530:	
  8360  0A41  09F2               	comf	___awmod@dividend,f
  8361  0A42  09F3               	comf	___awmod@dividend+1,f
  8362  0A43  0AF2               	incf	___awmod@dividend,f
  8363  0A44  1903               	skipnz
  8364  0A45  0AF3               	incf	___awmod@dividend+1,f
  8365  0A46                     l2532:	
  8366  0A46  0873               	movf	___awmod@dividend+1,w
  8367  0A47  00F1               	movwf	?___awmod+1
  8368  0A48  0872               	movf	___awmod@dividend,w
  8369  0A49  00F0               	movwf	?___awmod
  8370  0A4A                     l878:	
  8371  0A4A  0008               	return
  8372  0A4B                     __end_of___awmod:	
  8373                           
  8374                           	psect	text38
  8375  1669                     __ptext38:	
  8376 ;; *************** function _button_delay *****************
  8377 ;; Defined at:
  8378 ;;		line 513 in file "Button_src.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  i               2    0[COMMON] int 
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2, btemp+1
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8392 ;;      Params:         0       0       0       0       0
  8393 ;;      Locals:         2       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0
  8395 ;;      Totals:         2       0       0       0       0
  8396 ;;Total ram usage:        2 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_set_beep_threshhold
  8402 ;;		_thermometer_threshhold_settings
  8403 ;;		_time_settings
  8404 ;;		_date_settings
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           
  8409                           ;psect for function _button_delay
  8410  1669                     _button_delay:	
  8411  1669                     l2758:	
  8412                           ;incstack = 0
  8413                           ; Regs used in _button_delay: [wreg+status,2+btemp+1]
  8414                           
  8415                           
  8416                           ;Button_src.c: 514:     for(int i=0;i<10000;i++);
  8417  1669  01F0               	clrf	button_delay@i
  8418  166A  01F1               	clrf	button_delay@i+1
  8419  166B                     l2764:	
  8420  166B  3001               	movlw	1
  8421  166C  07F0               	addwf	button_delay@i,f
  8422  166D  1803               	skipnc
  8423  166E  0AF1               	incf	button_delay@i+1,f
  8424  166F  3000               	movlw	0
  8425  1670  07F1               	addwf	button_delay@i+1,f
  8426  1671                     l2766:	
  8427  1671  0871               	movf	button_delay@i+1,w
  8428  1672  3A80               	xorlw	128
  8429  1673  00FF               	movwf	btemp+1
  8430  1674  30A7               	movlw	167
  8431  1675  027F               	subwf	btemp+1,w
  8432  1676  1D03               	skipz
  8433  1677  2E7A               	goto	u1405
  8434  1678  3010               	movlw	16
  8435  1679  0270               	subwf	button_delay@i,w
  8436  167A                     u1405:	
  8437  167A  1C03               	skipc
  8438  167B  2E7D               	goto	u1401
  8439  167C  2E7E               	goto	u1400
  8440  167D                     u1401:	
  8441  167D  2E6B               	goto	l2764
  8442  167E                     u1400:	
  8443  167E                     l551:	
  8444  167E  0008               	return
  8445  167F                     __end_of_button_delay:	
  8446  007E                     btemp	set	126	;btemp
  8447  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _decrementor->_modulus_func
    _set_upper_threshold->_write_char
    _set_lower_threshold->_write_char
    _set_beep_threshhold->_button_delay
    _lcd_init->_write_cmd
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_write_char
    _display_date->_write_char
    _display_clock->_write_char
    _date_settings->_incrementor
    _write_cmd->_delay_screen
    _write_char->_delay_screen
    _set_time->_time_write_1
    _incrementor->_modulus_func
    _modulus_func->___awmod

Critical Paths under _main in BANK0

    _main->_thermometer_threshhold_settings
    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _date_settings->_incrementor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   34695
                      _date_settings
                      _display_clock
                       _display_date
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                 _initialise_buttons
                           _lcd_init
                        _reset_alarm
                _set_beep_threshhold
                _set_lower_threshold
                           _set_time
                _set_upper_threshold
    _thermometer_threshhold_settings
                      _time_settings
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _time_settings                                        3     3      0    9902
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _thermometer_threshhold_settings                      5     5      0    9021
                                              5 BANK0      5     5      0
                       _button_delay
                        _decrementor
                        _incrementor
                       _modulus_func
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _decrementor                                          7     2      5    2657
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (1) _set_upper_threshold                                  6     2      4     264
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_lower_threshold                                  6     2      4     264
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_beep_threshhold                                  1     1      0      68
                                              2 COMMON     1     1      0
                       _button_delay
 ---------------------------------------------------------------------------------
 (1) _reset_alarm                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _initialise_buttons                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    3882
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0      68
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _date_settings                                        3     3      0    9902
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _time_date_hex_terminator                             4     3      1     295
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _time_date_delimiter                                  5     3      2    3130
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (3) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _incrementor                                          7     2      5    3797
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (2) _modulus_func                                         4     0      4    2339
                                              7 COMMON     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _button_delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _date_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _display_clock
     _write_char
       _delay_screen
   _display_date
     _write_char
       _delay_screen
   _display_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _initialise_buttons
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _reset_alarm
   _set_beep_threshhold
     _button_delay
   _set_lower_threshold
     _write_char
       _delay_screen
   _set_time
     _time_write_1
   _set_upper_threshold
     _write_char
       _delay_screen
   _thermometer_threshhold_settings
     _button_delay
     _decrementor
       _modulus_func
         ___awmod
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _time_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 03 11:12:03 2019

                                       _a 0046                                         _b 0045  
                                       _c 0044                                         _t 0037  
                                       _w 0035                                         _x 0033  
                                       _y 0031                                         _z 002F  
                                       pc 0002              set_lower_threshold@lower_val 0075  
                                      _TX 004D                                        _TZ 004E  
                            ___awdiv@sign 0076                                        _ge 004B  
                                      _wd 0039                                        fsr 0004  
       __size_of_time_date_hex_terminator 0012                 ?_time_date_hex_terminator 0070  
                     _set_beep_threshhold 16DB                             ?_display_date 0070  
                                     l310 17D3                                       l150 1725  
                                     l240 177B                                       l153 16DA  
                                     l305 1668                                       l401 16FD  
                                     l314 0848                                       l323 00E4  
                                     l315 084B                                       l147 15EB  
                                     l156 081D                                       l244 08F8  
                                     l332 0852                                       l309 17D0  
                                     l333 0879                                       l237 15D2  
                                     l501 0D88                                       l326 1729  
                                     l166 1694                                       l262 08F4  
                                     l254 003E                                       l270 0D77  
                                     l510 0FF1                                       l327 174D  
                                     l319 0B57                                       l335 0880  
                                     l248 092E                                       l504 0F37  
                                     l329 1750                                       l273 1630  
                                     l282 16AA                                       l507 0FFF  
                                     l523 02C3                                       l540 068F  
                                     l532 03E3                                       l524 03D2  
                                     l541 07E5                                       l277 1640  
                                     l509 0FA8                                       l517 00F5  
                                     l622 096B                                       l526 035E  
                                     l551 167E                                       l554 161C  
                                     l570 162E                                       l626 160A  
                                     l618 09AD                                       l562 17FF  
                                     l558 17A7                                       l566 16C1  
                                     l497 15F9                                       l865 0AB1  
                                     l878 0A4A                                       l984 09F1  
                                     l994 08BA                                       _RA0 0028  
                                     _RA2 002A                                       _RB0 0030  
                                     _RA3 002B                                       _RB1 0031  
                                     _RA4 002C                                       _RC0 0038  
                                     _RA5 002D                                       _RC1 0039  
                                     _RB4 0034                                       _RC2 003A  
                                     _RB5 0035                                       _RC3 003B  
                                     _RE0 0048                                       _RC4 003C  
                                     _RE2 004A                                       _RC6 003E  
                                     _RC7 003F                                       _THV 004F  
                           ?_display_temp 0070                                       _TLV 0050  
                                     _shi 004C                                       fsr0 0004  
                                     indf 0000                              ___awmod@sign 0076  
                            __CFG_FOSC$HS 0000                           ??_time_settings 0056  
                            __CFG_LVP$OFF 0000              set_lower_threshold@upper_val 0073  
                                    l3000 081E                                      l3010 0829  
                                    l3002 0821                                      l3020 0045  
                                    l3012 0835                                      l3004 0827  
                                    l3100 0E6F                                      l3030 0073  
                                    l3022 004D                                      l3014 083B  
                                    l3110 0E76                                      l3102 0E70  
                                    l3040 009E                                      l3032 007A  
                                    l3024 0055                                      l3016 1751  
                                    l3200 0FB8                                      l3120 0E7E  
                                    l3112 0E78                                      l3104 0E71  
                                    l3050 00CC                                      l3042 00A8  
                                    l3034 0080                                      l3026 0062  
                                    l3018 003F                                      l3210 0FC7  
                                    l3202 0FB9                                      l3130 0E92  
                                    l3122 0E7F                                      l3114 0E7A  
                                    l3106 0E72                                      l2500 09F3  
                                    l3300 0552                                      l3060 0AC0  
                                    l3052 00D3                                      l3044 00AF  
                                    l3036 008A                                      l3028 0069  
                                    l3220 0FE5                                      l3212 0FCD  
                                    l3204 0FBA                                      l3140 0EDA  
                                    l3132 0E99                                      l3124 0E80  
                                    l3116 0E7C                                      l3108 0E74  
                                    l2510 0A07                                      l2502 09F7  
                                    l3310 0569                                      l3302 0553  
                                    l3230 03D3                                      l3070 0AED  
                                    l3062 0AC8                                      l3054 00DD  
                                    l3046 00B5                                      l3038 0097  
                                    l3222 0FEB                                      l3214 0FD3  
                                    l3206 0FBB                                      l3150 0EEC  
                                    l3142 0EDE                                      l3134 0EAF  
                                    l3126 0E84                                      l3118 0E7D  
                                    l2520 0A1F                                      l2512 0A0D  
                                    l2504 09FC                                      l2600 081A  
                                    l3400 072A                                      l3320 05AA  
                                    l3312 056D                                      l3304 055A  
                                    l3240 043C                                      l3232 03DD  
                                    l3080 0B1B                                      l3072 0AF3  
                                    l3064 0AD5                                      l3056 0AB2  
                                    l3048 00BF                                      l3216 0FD9  
                                    l3208 0FBF                                      l3160 0F05  
                                    l3152 0EED                                      l3136 0EB6  
                                    l3128 0E8A                                      l3144 0EE7  
                                    l2530 0A41                                      l2522 0A29  
                                    l2514 0A10                                      l2506 09FE  
                                    l2610 16D2                                      l2602 16C3  
                                    l3410 073A                                      l3402 0736  
                                    l3330 0609                                      l3322 05BD  
                                    l3314 0571                                      l3306 055E  
                                    l3250 0451                                      l3242 043D  
                                    l3234 0437                                      l3090 0B46  
                                    l3082 0B22                                      l3074 0AFD  
                                    l3066 0ADC                                      l3058 0AB8  
                                    l3226 0FF9                                      l3218 0FDF  
                                    l3162 0F0B                                      l3154 0EF1  
                                    l3146 0EEA                                      l3138 0EBF  
                                    l2532 0A46                                      l2524 0A2F  
                                    l2516 0A17                                      l2508 0A02  
                                    l2612 16D7                                      l2604 16C8  
                                    l3420 0758                                      l3412 073E  
                                    l3404 0737                                      l3340 0668  
                                    l3332 061C                                      l3324 05D0  
                                    l3316 0584                                      l3308 0563  
                                    l3260 0499                                      l3252 0464  
                                    l3244 0441                                      l3236 043A  
                                    l3092 0B50                                      l3084 0B28  
                                    l3076 0B0A                                      l3068 0AE6  
                                    l2700 08D2                                      l2620 0915  
                                    l3180 0F45                                      l3164 0F11  
                                    l3156 0EF9                                      l3148 0EEB  
                                    l3500 01BB                                      l2526 0A36  
                                    l2518 0A1B                                      l2542 1681  
                                    l2606 16CD                                      l3430 0776  
                                    l3422 075E                                      l3414 0745  
                                    l3406 0738                                      l3350 0674  
                                    l3342 066E                                      l3334 062F  
                                    l3326 05E3                                      l3318 0597  
                                    l3270 04B2                                      l3262 049D  
                                    l3254 047D                                      l3246 0447  
                                    l3238 043B                                      l3086 0B32  
                                    l3078 0B11                                      l2550 163A  
                                    l2710 08DC                                      l2702 08D3  
                                    l2622 091B                                      l2614 08F5  
                                    l2630 0005                                      l3190 0F7A  
                                    l3182 0F4D                                      l3174 0F21  
                                    l3166 0F17                                      l3158 0EFF  
                                    l3094 0D78                                      l3510 01F7  
                                    l3502 01C1                                      l2528 0A3C  
                                    l2560 1732                                      l2552 1727  
                                    l2800 16BE                                      l2544 1687  
                                    l2536 167F                                      l2608 16D0  
                                    l3440 07A0                                      l3424 0764  
                                    l3416 074A                                      l3432 0782  
                                    l3408 0739                                      l3360 0693  
                                    l3352 0678                                      l3344 0671  
                                    l3336 0642                                      l3328 05F6  
                                    l3280 04FA                                      l3272 04B8  
                                    l3256 048C                                      l3248 044B  
                                    l3264 04A2                                      l3088 0B3F  
                                    l2720 08F3                                      l2712 08E1  
                                    l2704 08D4                                      l2624 091E  
                                    l2616 08FE                                      l2640 0011  
                                    l3192 0F95                                      l3184 0F54  
                                    l3176 0F29                                      l3168 0F1D  
                                    l3096 0D82                                      l3600 0340  
                                    l3512 01FD                                      l3504 01C5  
                                    l3520 020E                                      l2570 161C  
                                    l2562 1739                                      l2802 16C0  
                                    l3450 07CA                                      l3442 07A9  
                                    l3434 0788                                      l3426 076A  
                                    l3418 0752                                      l3370 06E0  
                                    l3362 06A6                                      l3354 0683  
                                    l3346 0672                                      l3338 0655  
                                    l3290 0516                                      l3282 0501  
                                    l3274 04CB                                      l3266 04A8  
                                    l3258 0492                                      l2810 0A50  
                                    l2730 1697                                      l2546 1630  
                                    l2714 08E2                                      l2706 08D5  
                                    l2626 091F                                      l2618 0908  
                                    l2650 0018                                      l2642 0014  
                                    l3194 0FA4                                      l3186 0F6A  
                                    l3178 0F3F                                      l3098 0E6C  
                                    l3610 0364                                      l3602 0346  
                                    l3530 0244                                      l3522 0214  
                                    l3514 01FE                                      l3506 01CB  
                                    l2564 173A                                      l3460 07D4  
                                    l3452 07CD                                      l3444 07B2  
                                    l3436 0791                                      l3428 0770  
                                    l3380 06F1                                      l3364 06AA  
                                    l3372 06ED                                      l3356 0689  
                                    l3348 0673                                      l3292 051A  
                                    l3284 0505                                      l3276 04E4  
                                    l3268 04AE                                      l2900 1654  
                                    l2820 0A64                                      l2812 0A55  
                                    l2732 169D                                      l2724 1695  
                                    l2548 1634                                      l2716 08EC  
                                    l2708 08D6                                      l2628 0929  
                                    l2660 002E                                      l2652 0019  
                                    l2644 0015                                      l2636 0009  
                                    l3196 0FB0                                      l3188 0F71  
                                    l3620 03BB                                      l3612 0367  
                                    l3604 034C                                      l3540 02A3  
                                    l3532 0257                                      l3524 021A  
                                    l3516 0205                                      l3508 01DE  
                                    l3700 0B7F                                      l2566 1740  
                                    l2558 1731                                      l2574 17A8  
                                    l2590 0806                                      l3462 07DF  
                                    l3454 07CE                                      l3446 07B8  
                                    l3438 079A                                      l3390 070C  
                                    l3382 06F5                                      l3374 06EE  
                                    l3366 06B0                                      l3294 0520  
                                    l3278 04F3                                      l3286 050A  
                                    l2902 1659                                      l2830 0A7A  
                                    l2822 0A66                                      l2814 0A57  
                                    l2806 0A4B                                      l2718 08EE  
                                    l2670 08BB                                      l2662 002F  
                                    l2654 001E                                      l2646 0016  
                                    l2638 000E                                      l2750 0866  
                                    l2742 0855                                      l2734 084C  
                                    l2910 15E8                                      l3198 0FB5  
                                    l3630 03CC                                      l3622 03BC  
                                    l3614 0368                                      l3606 0352  
                                    l3550 02AB                                      l3542 02A4  
                                    l3534 026A                                      l3526 021E  
                                    l3518 0209                                      l3470 014C  
                                    l3710 0B9B                                      l3702 0B84  
                                    l2568 160B                                      l2584 17B3  
                                    l2576 17AB                                      l2592 080B  
                                    l3456 07CF                                      l3448 07C1  
                                    l3392 0712                                      l3384 06FB  
                                    l3376 06EF                                      l3368 06DA  
                                    l3296 0533                                      l3288 0510  
                                    l2904 1665                                      l2840 0A9D  
                                    l2832 0A7E                                      l2824 0A6C  
                                    l2816 0A5B                                      l2808 0A4C  
                                    l2680 08C2                                      l2672 08BC  
                                    l2664 0030                                      l2656 0021  
                                    l2648 0017                                      l2752 086C  
                                    l2744 085C                                      l2736 084D  
                                    l2912 15E9                                      l2920 1704  
                                    l3640 0959                                      l3632 092F  
                                    l3624 03BD                                      l3616 0369  
                                    l3608 0358                                      l3560 02B9  
                                    l3552 02B1                                      l3544 02A5  
                                    l3536 027D                                      l3528 0231  
                                    l3480 0159                                      l3472 014D  
                                    l3464 00E5                                      l3720 0BB8  
                                    l3712 0BA1                                      l3704 0B89  
                                    l2498 09F2                                      l2770 178D  
                                    l2586 17BD                                      l2578 17B1  
                                    l2594 0810                                      l3458 07D0  
                                    l3394 0718                                      l3386 0701  
                                    l3378 06F0                                      l3298 054C  
                                    l2834 0A8F                                      l2826 0A6F  
                                    l2842 0AA3                                      l2818 0A60  
                                    l2850 09AE                                      l2690 08CB  
                                    l2682 08C5                                      l2666 0037  
                                    l2658 002B                                      l2754 087F  
                                    l2746 0860                                      l2914 15EA  
                                    l2906 15E3                                      l2930 1719  
                                    l2922 1709                                      l3642 095F  
                                    l3634 093E                                      l3650 0988  
                                    l3626 03BE                                      l3618 03B8  
                                    l3570 02DA                                      l3562 02BB  
                                    l3554 02B4                                      l3546 02A6  
                                    l3538 0290                                      l3490 019E  
                                    l3482 015D                                      l3474 014E  
                                    l3466 00EF                                      l3730 0BD6  
                                    l3722 0BBE                                      l3714 0BA7  
                                    l3706 0B8F                                      l2764 166B  
                                    l2772 1793                                      l2588 17C3  
                                    l2596 0813                                      l3396 071E  
                                    l3388 0706                                      l2844 0AA8  
                                    l2836 0A95                                      l2828 0A76  
                                    l2860 09C4                                      l2852 09B0  
                                    l2692 08CC                                      l2684 08C8  
                                    l2668 0039                                      l2748 0865  
                                    l2908 15E7                                      l2940 15F6  
                                    l2932 171F                                      l2924 170C  
                                    l2916 16FE                                      l3644 0965  
                                    l3636 0949                                      l3660 09A7  
                                    l3652 0991                                      l2780 17E5  
                                    l3628 03C2                                      l3572 02DE  
                                    l3580 031B                                      l3564 02BD  
                                    l3556 02B5                                      l3548 02A7  
                                    l3492 01A5                                      l3484 0163  
                                    l3476 014F                                      l3468 0149  
                                    l3740 0BF3                                      l3732 0BDC  
                                    l3724 0BC4                                      l3716 0BAD  
                                    l3708 0B95                                      l2766 1671  
                                    l2758 1669                                      l2774 17A6  
                                    l2790 162C                                      l2598 0815  
                                    l3398 0724                                      l2846 0AAD  
                                    l2838 0A96                                      l2870 09E7  
                                    l2862 09C8                                      l2854 09B6  
                                    l2694 08CD                                      l2686 08C9  
                                    l2678 08C0                                      l2950 0C5D  
                                    l2942 15F7                                      l2934 15EC  
                                    l2926 170D                                      l2918 1701  
                                    l3670 16F2                                      l3662 16DC  
                                    l3638 0953                                      l3654 0995  
                                    l3646 096C                                      l2782 17EB  
                                    l3590 0323                                      l3582 031C  
                                    l3574 02E4                                      l3558 02B7  
                                    l3494 01AC                                      l3486 0176  
                                    l3478 0153                                      l3750 0C0F  
                                    l3742 0BF9                                      l3734 0BE1  
                                    l3726 0BCA                                      l3718 0BB2  
                                    l2768 177C                                      l2792 162D  
                                    l2864 09D9                                      l2856 09B9  
                                    l2872 09ED                                      l2880 088A  
                                    l2696 08CE                                      l2688 08CA  
                                    l2960 0C7E                                      l2952 0C63  
                                    l2944 0C4A                                      l2936 15F2  
                                    l2928 1713                                      l3680 1604  
                                    l3664 16E2                                      l3672 16FA  
                                    l3656 099B                                      l3648 097B  
                                    l2784 17FE                                      l3592 0329  
                                    l3584 031D                                      l3576 0308  
                                    l3568 02C7                                      l3496 01B0  
                                    l3488 018F                                      l3760 0C39  
                                    l3752 0C14                                      l3744 0BFF  
                                    l3736 0BE7                                      l3728 0BD0  
                                    l2866 09DF                                      l2858 09C0  
                                    l2890 08A9                                      l2882 0891  
                                    l2698 08D1                                      l2970 0CB2  
                                    l2962 0C88                                      l2954 0C68  
                                    l2946 0C4D                                      l2938 15F5  
                                    l3682 1606                                      l3666 16E5  
                                    l3658 09A1                                      l2778 17D4  
                                    l3594 032F                                      l3586 031E  
                                    l3578 030E                                      l3498 01B5  
                                    l3762 0C41                                      l3754 0C19  
                                    l3746 0C05                                      l3738 0BED  
                                    l3690 0B66                                      l2796 16AC  
                                    l2788 161E                                      l2868 09E0  
                                    l2892 08B0                                      l2884 0895  
                                    l2876 0881                                      l2980 0CF0  
                                    l2972 0CDE                                      l2964 0C8B  
                                    l2956 0C6E                                      l2948 0C58  
                                    l3668 16EA                                      l3596 0334  
                                    l3588 031F                                      l3756 0C1F  
                                    l3748 0C0A                                      l3692 0B6B  
                                    l3684 0B58                                      l2798 16BA  
                                    l2886 0899                                      l2878 0887  
                                    l2894 08B6                                      l2990 0D10  
                                    l2982 0CF8                                      l2974 0CE0  
                                    l2966 0CA5                                      l2958 0C74  
                                    l3678 15FA                                      l3598 033A  
                                    l3758 0C2C                                      l3694 0B70  
                                    l3686 0B5C                                      l2888 08A3  
                                    l2992 0D23                                      l2984 0CFC  
                                    l2976 0CE4                                      l3696 0B75  
                                    l3688 0B61                                      l2994 0D43  
                                    l2986 0D04                                      l2978 0CEC  
                                    l2898 15CC                                      l3698 0B7A  
                                    l2996 0D63                                      l2988 0D08  
                                    l2998 0D76                            ?_display_clock 0070  
                                    u1200 0A1F                                      u2000 06AA  
                                    u1201 0A1E                                      u2001 06A9  
                                    u1210 0A29                                      u2010 06B0  
                                    u1211 0A28                                      u2011 06AF  
                                    u1300 17D0                                      u2020 06F5  
                                    u2100 01A5                                      u1301 17CF  
                                    u2021 06F4                                      u2101 01A4  
                                    u1230 0A3C                                      u2030 06FB  
                                    u1310 091B                                      u2110 01AC  
                                    u1231 0A3B                                      u1215 0A25  
                                    u2031 06FA                                      u1311 091A  
                                    u2111 01AB                                      u1400 167E  
                                    u1240 0A41                                      u1160 09F7  
                                    u2040 073E                                      u1320 092E  
                                    u2200 0329                                      u2120 01BB  
                                    u1401 167D                                      u1241 0A40  
                                    u1225 0A30                                      u1161 09F6  
                                    u1305 17CC                                      u2041 073D  
                                    u1321 092D                                      u2201 0328  
                                    u2121 01BA                                      u1170 0A02  
                                    u1410 178D                                      u1250 1694  
                                    u2050 0745                                      u1330 001E  
                                    u2210 03C2                                      u2130 01C1  
                                    u1171 0A01                                      u1411 178C  
                                    u1251 1693                                      u2051 0744  
                                    u1331 001D                                      u2211 03C1  
                                    u2131 01C0                                      u1180 0A0D  
                                    u2060 07D4                                      u1260 163A  
                                    u1340 003E                                      u2220 093E  
                                    u1420 17E5                                      u2140 01FD  
                                    u1405 167A                                      u1181 0A0C  
                                    u2061 07D3                                      u1261 1639  
                                    u1341 003D                                      u2221 093D  
                                    u1421 17E4                                      u2141 01FC  
                                    u1430 162C                                      u1510 0A8F  
                                    u1270 1640                                      u1350 08E1  
                                    u2230 0949                                      u2150 0205  
                                    u2070 00EF                                      u1431 162B  
                                    u1255 1690                                      u1511 0A8E  
                                    u1271 163F                                      u1351 08E0  
                                    u2231 0948                                      u2151 0204  
                                    u2071 00EE                                      u1280 1731  
                                    u1440 16BA                                      u1360 08F3  
                                    u2240 097B                                      u2160 02AB  
                                    u2080 0153                                      u1281 1730  
                                    u1441 16B9                                      u1505 0A7F  
                                    u1361 08F2                                      u2225 093A  
                                    u2241 097A                                      u2161 02AA  
                                    u2081 0152                                      u1290 174D  
                                    u1530 0AA3                                      u1450 0A50  
                                    u1610 09ED                                      u1370 16AA  
                                    u2250 0988                                      u2170 02DE  
                                    u2090 0159                                      u1195 0A11  
                                    u1291 174C                                      u1531 0AA2  
                                    u1515 0A8B                                      u1451 0A4F  
                                    u1611 09EC                                      u1371 16A9  
                                    u2235 0945                                      u2251 0987  
                                    u2171 02DD                                      u2091 0158  
                                    u1540 0AA8                                      u1460 0A5B  
                                    u1620 0887                                      u1380 0860  
                                    u2260 0991                                      u2180 02E4  
                                    u1541 0AA7                                      u1525 0A97  
                                    u1461 0A5A                                      u1605 09E1  
                                    u1621 0886                                      u1381 085F  
                                    u2261 0990                                      u2245 0977  
                                    u2181 02E3                                      u1470 0A6C  
                                    u1550 09B6                                      u1710 0CE4  
                                    u1390 0879                                      u2270 16E2  
                                    u2190 0323                                      u1295 1749  
                                    u1471 0A6B                                      u1551 09B5  
                                    u1375 16A6                                      u1711 0CE3  
                                    u1391 0878                                      u2271 16E1  
                                    u2255 0984                                      u2191 0322  
                                    u1640 0899                                      u1720 0CF0  
                                    u2280 1604                                      u1800 0EF1  
                                    u1641 0898                                      u1721 0CEF  
                                    u1705 0CA8                                      u2281 1603  
                                    u1801 0EF0                                      u1490 0A7E  
                                    u1570 09C8                                      u1650 08A3  
                                    u1730 0CFC                                      u1810 0F36  
                                    u1491 0A7D                                      u1571 09C7  
                                    u1651 08A2                                      u1635 088B  
                                    u1731 0CFB                                      u1395 0875  
                                    u1811 0F35                                      u1900 0499  
                                    u1740 0D08                                      u1820 0F3F  
                                    u1901 0498                                      u1485 0A70  
                                    u1565 09BA                                      u1741 0D07  
                                    u1821 0F3E                                      u1910 04A8  
                                    u1590 09D9                                      u1670 08B6  
                                    u1750 0848                                      u1830 0FA4  
                                    u1911 04A7                                      u1591 09D8  
                                    u1671 08B5                                      u1655 089F  
                                    u1751 0847                                      u1831 0FA3  
                                    u1815 0F32                                      u1920 04AE  
                                    u1760 0045                                      u1840 0FBF  
                                    u1921 04AD                                      u1761 0044  
                                    u1585 09C9                                      u1665 08AA  
                                    u1841 0FBE                                      u1930 04FA  
                                    u1770 0AB8                                      u1850 0FF9  
                                    u1931 04F9                                      u1771 0AB7  
                                    u1595 09D5                                      u1755 0844  
                                    u1851 0FF8                                      u1940 0501  
                                    u1860 03DD                                      u1780 0D82  
                                    u1941 0500                                      u1861 03DC  
                                    u1685 0C90                                      u1781 0D81  
                                    u1950 0510                                      u1870 0441  
                                    u1790 0E84                                      u1951 050F  
                                    u1871 0440                                      u1695 0C9B  
                                    u1791 0E83                                      u1960 0516  
                                    u1880 0447                                      u1961 0515  
                                    u1881 0446                                      u1970 0552  
                                    u1890 0492                                      u1971 0551  
                                    u1891 0491                                      u1980 055A  
                                    u1981 0559                                      u1990 0678  
                                    u1991 0677               time_date_hex_terminator@val 0073  
                    ?_set_beep_threshhold 0070                                      _main 0B58  
                                    _init 15E3                                      _var1 003D  
                                    _var2 003C                                      btemp 007E  
         time_date_hex_terminator@limiter 0070                             write_byte@val 0077  
                                    start 0000                    time_date_delimiter@hex 0070  
                  time_date_delimiter@val 0074                              ?_incrementor 0051  
             __size_of_initialise_buttons 000E                            ??_display_date 0073  
                                   ?_main 0070                            ??_display_temp 0073  
                                   ?_init 0070                           __end_of___awdiv 0AB2  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0A4B  
                         ___awdiv@divisor 0070                      __end_of_delay_screen 1695  
                         __end_of___lwdiv 09F2                           __end_of___lwmod 08BB  
                         ___awdiv@counter 0075                                     _PORTD 0008  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                                   _TRISD 0088                                     _TRISE 0089  
                           __CFG_PWRTE$ON 0000                                     _count 0027  
                                   _table 005B                            write_byte@temp 0076  
                     _set_lower_threshold 092F                            __CFG_BOREN$OFF 0000  
                                   pclath 000A                     ??_set_beep_threshhold 0072  
                                   status 0003                      __size_of_decrementor 002C  
                                   wtemp0 007E                             ??_ds1302_init 0075  
                         __initialization 07E6                              __end_of_main 0C4A  
                            __end_of_init 15EC                     __end_of_date_settings 07E6  
                    ?_set_lower_threshold 0073                                    ??_main 007E  
                                  ??_init 0070                      incrementor@lower_val 0053  
                         ??_display_clock 0073                                    _ADCON1 009F  
                        ___awdiv@dividend 0072                                    _TRISA0 0428  
                                  _TRISB4 0434                                    _TRISE0 0448  
                           ?_button_delay 0070                              ?_reset_alarm 0070  
                    incrementor@upper_val 0051                          __end_of_lcd_init 1726  
                        __end_of_get_temp 0D78                          __end_of_get_time 084C  
                                  _baifen 0049                                 ??___awdiv 0074  
                               ??___awmod 0074                                    _delay2 1695  
                   ??_set_lower_threshold 0077                                 ??___lwdiv 007A  
                               ??___lwmod 0074                       __end_of_ds1302_init 1669  
                     _set_upper_threshold 096C                                    _table1 0020  
                        ___awdiv@quotient 0077                           ___awmod@divisor 0070  
                                  _shifen 004A                                    _wanfen 0047  
                         ___awmod@counter 0075                              ?_time_read_1 0070  
                     time_write_1@time_tx 0074                             display_date@i 0075  
                        __end_of_set_time 17D4                        reset_temp@presence 0075  
                    ?_set_upper_threshold 0073                   __end_of__initialization 07FC  
                          ??_button_delay 0070              __size_of_time_date_delimiter 0017  
                    __end_of_display_date 00E5                      __end_of_display_temp 177C  
                          __pcstackCOMMON 0070                              __pidataBANK0 15DB  
                   __size_of_delay_screen 0016                      __size_of_incrementor 002C  
                   ??_set_upper_threshold 0077                                __pbssBANK0 0020  
                            _delay_screen 167F                        __size_of_init_temp 0007  
                      __size_of_read_byte 003A                               _ds1302_init 1654  
                              _delay_temp 162F                                __pmaintext 0B58  
                                 ?_delay2 0070                             ?_modulus_func 0077  
                      time_read_1@time_rx 0074                              incrementor@z 0055  
                               ?_lcd_init 0070                                 ?_get_temp 0070  
                   __end_of_time_settings 03D3                                 ?_get_time 0070  
                      __size_of_write_cmd 0019                                 ?_set_time 0070  
                    __size_of_reset_alarm 0011                            ??_modulus_func 007B  
            set_upper_threshold@lower_val 0075                __end_of_initialise_buttons 15FA  
                _time_date_hex_terminator 161D                                   ___awdiv 0A4B  
                                 ___awmod 09F2                           __size_of_delay2 0016  
                                 ___lwdiv 09AE                                   ___lwmod 0881  
                                 _day_hex 0043                                   _day_low 002D  
                                 __ptext1 00E5                                   __ptext2 0D78  
                                 __ptext3 17D4                                   __ptext4 096C  
                                 __ptext5 092F                                   __ptext6 16DB  
                                 __ptext7 15FA                                   __ptext8 16FE  
                                 __ptext9 15EC                      __end_of_button_delay 167F  
                                 delay2@i 0070                         __end_of_init_temp 15D3  
                        ___awmod@dividend 0072                         __end_of_read_byte 08F5  
                                 _qianfen 0048                      __size_of_time_read_1 0035  
                                 _lower_t 0040               __end_of_set_beep_threshhold 16FE  
            set_upper_threshold@upper_val 0073                     __size_of_display_date 00A6  
                                 clrloop0 15D4                                ??_lcd_init 0073  
                                 _upper_t 0041                             ??_decrementor 007B  
                              ??_get_temp 0051                                ??_get_time 0075  
                   __size_of_display_temp 002B                      end_of_initialization 07FC  
                          display_clock@i 0075                             ?_time_write_1 0070  
                             ?_delay_temp 0070                                _reset_temp 08F5  
                              ??_set_time 0075                       _time_date_delimiter 16AB  
                    decrementor@lower_val 0051                              _display_date 003F  
                            _display_temp 1751                         __end_of_write_cmd 081E  
                           modulus_func@x 0077                             modulus_func@y 0079  
                   __end_of_display_clock 0B58                    __size_of_date_settings 0413  
                    ?_time_date_delimiter 0070                      decrementor@upper_val 0053  
                          ??_time_write_1 0070               __end_of_set_lower_threshold 096C  
                     __end_of_decrementor 1800                            __end_of_delay2 16AB  
                              _write_char 16C2                                _write_byte 0004  
                     start_initialization 07E6                             delay_screen@i 0070  
                     __size_of_delay_temp 0012                      __end_of_modulus_func 161D  
                   ??_time_date_delimiter 0072                              ?_ds1302_init 0070  
                             ?_reset_temp 0070                             ??_incrementor 007B  
                              init_fetch0 1641                                  ??_delay2 0070  
                   __size_of_button_delay 0016                             _date_settings 03D3  
                             __pdataBANK0 005B                                read_byte@i 0076  
                              read_byte@j 003B               __end_of_set_upper_threshold 09AE  
                               ___latbits 0002                             __pcstackBANK0 0051  
                             _decrementor 17D4                      set_beep_threshhold@x 0072  
                       __size_of_lcd_init 0028                         __size_of_get_temp 012E  
                       __size_of_get_time 002E                ??_time_date_hex_terminator 0071  
                            _button_delay 1669                          ___lwdiv@dividend 0078  
                                ?___awdiv 0070                            ?_date_settings 0070  
                                ?___awmod 0070                                  ?___lwdiv 0076  
                                ?___lwmod 0070                         __size_of_set_time 002C  
                             ?_write_char 0070                               ?_write_byte 0070  
                     __end_of_incrementor 17A8                      __end_of_time_write_1 1751  
                      _initialise_buttons 15EC                           _day_of_week_var 0029  
                     __size_of_reset_temp 003A                          ___lwdiv@quotient 007B  
                               _init_temp 15CC                                 _read_byte 08BB  
                            decrementor@z 0055                       ?_initialise_buttons 0070  
                               clear_ram0 15D3                             ??_reset_alarm 0070  
                            ??_delay_temp 0071   __end_of_thermometer_threshhold_settings 1000  
__size_of_thermometer_threshhold_settings 0288         ??_thermometer_threshhold_settings 0056  
        ?_thermometer_threshhold_settings 0070           _thermometer_threshhold_settings 0D78  
                    ??_initialise_buttons 0070                    __size_of_time_settings 02EE  
        thermometer_threshhold_settings@i 0059                             ??_time_read_1 0070  
                             write_char@x 0072                     __size_of_modulus_func 0012  
                               get_time@i 0076                               write_byte@i 0078  
                      __end_of_delay_temp 1641                                 _write_cmd 0805  
                              ?_init_temp 0070                                ?_read_byte 0070  
                         _buzzer_watcher1 003E                       __size_of_write_char 0019  
            __size_of_set_beep_threshhold 0023                       __size_of_write_byte 003B  
                         ??_date_settings 0056                      __size_of_ds1302_init 0015  
                             _incrementor 177C                              _modulus_func 160B  
                     __end_of_reset_alarm 160B                          __size_of___awdiv 0067  
                        __size_of___awmod 0059                          __size_of___lwdiv 0044  
                        __size_of___lwmod 003A                                  _day_high 002B  
                         ___lwdiv@divisor 0076                           ___lwdiv@counter 007D  
                                __ptext10 15CC                                  __ptext11 15E3  
                                __ptext20 0881                                  __ptext12 081E  
                                __ptext21 09AE                                  __ptext13 084C  
                                __ptext30 167F                                  __ptext22 0A4B  
                                __ptext14 0C4A                                  __ptext31 161D  
                                __ptext23 1654                                  __ptext15 0004  
                                __ptext32 16AB                                  __ptext24 1751  
                                __ptext16 08F5                                  __ptext33 17A8  
                                __ptext25 003F                                  __ptext17 08BB  
                                __ptext34 1726                                  __ptext26 0AB2  
                                __ptext18 162F                                  __ptext35 177C  
                                __ptext27 03D3                                  __ptext19 1695  
                                __ptext36 160B                                  __ptext28 0805  
                                __ptext37 09F2                                  __ptext29 16C2  
                                __ptext38 1669                       __end_of_time_read_1 0881  
                              ?_write_cmd 0070                                  _lcd_init 16FE  
                                _get_temp 0C4A                                  _get_time 081E  
                           _time_settings 00E5          __end_of_time_date_hex_terminator 162F  
                           __size_of_main 00F2                             __size_of_init 0009  
                           ?_delay_screen 0070                               _hrs_limiter 0042  
                               set_time@i 0075                              ??_reset_temp 0074  
                                _set_time 17A8                time_date_delimiter@limiter 0071  
            __size_of_set_lower_threshold 003D                                write_cmd@x 0072  
                   __size_of_time_write_1 002B                    __size_of_display_clock 00A6  
                          _buzzer_watcher 003F                               delay_temp@x 0072  
                             delay_temp@y 0070                               delay_temp@z 0073  
                          read_byte@value 0075               __end_of_time_date_delimiter 16C2  
                                init_ram0 1645                             button_delay@i 0070  
                             ??_init_temp 0070                        __end_of_reset_temp 092F  
                             ??_read_byte 0074                            ?_time_settings 0070  
                            ?_decrementor 0051                          ___lwmod@dividend 0072  
                          ??_delay_screen 0070                               _reset_alarm 15FA  
                            _time_write_1 1726                              ??_write_char 0072  
                            ??_write_byte 0074                                _OPTION_REG 0081  
                             _time_read_1 084C                              time_read_1@j 0072  
                         ___lwmod@divisor 0070                           ___lwmod@counter 0075  
                             ??_write_cmd 0072              __size_of_set_upper_threshold 0042  
                           _display_clock 0AB2                             time_write_1@j 0072  
                      __end_of_write_char 16DB                        __end_of_write_byte 003F  
