

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 02 22:36:48 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.10
    53                           ; Generated 31/07/2019 GMT
    54                           ; 
    55                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0088                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0000                     	;# 
   447  0001                     	;# 
   448  0002                     	;# 
   449  0003                     	;# 
   450  0004                     	;# 
   451  0005                     	;# 
   452  0006                     	;# 
   453  0007                     	;# 
   454  0008                     	;# 
   455  0009                     	;# 
   456  000A                     	;# 
   457  000B                     	;# 
   458  000C                     	;# 
   459  000D                     	;# 
   460  000E                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0015                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001B                     	;# 
   477  001C                     	;# 
   478  001D                     	;# 
   479  001E                     	;# 
   480  001F                     	;# 
   481  0081                     	;# 
   482  0085                     	;# 
   483  0086                     	;# 
   484  0087                     	;# 
   485  0088                     	;# 
   486  0089                     	;# 
   487  008C                     	;# 
   488  008D                     	;# 
   489  008E                     	;# 
   490  0091                     	;# 
   491  0092                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0098                     	;# 
   495  0099                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  010F                     	;# 
   504  018C                     	;# 
   505  018D                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  000E                     	;# 
   522  000F                     	;# 
   523  0010                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0014                     	;# 
   528  0015                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  001D                     	;# 
   539  001E                     	;# 
   540  001F                     	;# 
   541  0081                     	;# 
   542  0085                     	;# 
   543  0086                     	;# 
   544  0087                     	;# 
   545  0088                     	;# 
   546  0089                     	;# 
   547  008C                     	;# 
   548  008D                     	;# 
   549  008E                     	;# 
   550  0091                     	;# 
   551  0092                     	;# 
   552  0093                     	;# 
   553  0094                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009C                     	;# 
   557  009D                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  010C                     	;# 
   561  010D                     	;# 
   562  010E                     	;# 
   563  010F                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566                           
   567                           	psect	idataBANK0
   568  15FF                     __pidataBANK0:	
   569                           
   570                           ;initializer for _table
   571  15FF  3400               	retlw	0
   572  1600  3400               	retlw	0
   573  1601  3440               	retlw	64
   574  1602  3424               	retlw	36
   575  1603  3411               	retlw	17
   576  1604  3406               	retlw	6
   577  1605  3422               	retlw	34
   578  1606  3400               	retlw	0
   579  0009                     _PORTE	set	9
   580  0008                     _PORTD	set	8
   581  003E                     _RC6	set	62
   582  003F                     _RC7	set	63
   583  003C                     _RC4	set	60
   584  003B                     _RC3	set	59
   585  003A                     _RC2	set	58
   586  0039                     _RC1	set	57
   587  0038                     _RC0	set	56
   588  004A                     _RE2	set	74
   589  0034                     _RB4	set	52
   590  0031                     _RB1	set	49
   591  0035                     _RB5	set	53
   592  0030                     _RB0	set	48
   593  0048                     _RE0	set	72
   594  002B                     _RA3	set	43
   595  002C                     _RA4	set	44
   596  002D                     _RA5	set	45
   597  002A                     _RA2	set	42
   598  0028                     _RA0	set	40
   599  0087                     _TRISC	set	135
   600  0085                     _TRISA	set	133
   601  0089                     _TRISE	set	137
   602  0081                     _OPTION_REG	set	129
   603  0088                     _TRISD	set	136
   604  009F                     _ADCON1	set	159
   605  0086                     _TRISB	set	134
   606  0434                     _TRISB4	set	1076
   607  0448                     _TRISE0	set	1096
   608  0428                     _TRISA0	set	1064
   609                           
   610                           ; #config settings
   611  0000                     
   612                           	psect	cinit
   613  07E6                     start_initialization:	
   614  07E6                     __initialization:	
   615                           
   616                           ; Initialize objects allocated to BANK0
   617  07E6  1383               	bcf	3,7	;select IRP bank0
   618  07E7  3060               	movlw	low (__pdataBANK0+8)
   619  07E8  00FD               	movwf	btemp+-1
   620  07E9  3015               	movlw	high __pidataBANK0
   621  07EA  00FE               	movwf	btemp
   622  07EB  30FF               	movlw	low __pidataBANK0
   623  07EC  00FF               	movwf	btemp+1
   624  07ED  3058               	movlw	low __pdataBANK0
   625  07EE  0084               	movwf	4
   626  07EF  160A  118A  2658  120A  118A  	fcall	init_ram0
   627                           
   628                           ; Clear objects allocated to BANK0
   629  07F4  3020               	movlw	low __pbssBANK0
   630  07F5  0084               	movwf	4
   631  07F6  304E               	movlw	low (__pbssBANK0+46)
   632  07F7  160A  118A  25F7  120A  118A  	fcall	clear_ram0
   633  07FC                     end_of_initialization:	
   634                           ;End of C runtime variable initialization code
   635                           
   636  07FC                     __end_of__initialization:	
   637  07FC  0183               	clrf	3
   638  07FD  120A  158A  2B5D   	ljmp	_main	;jump to C main() function
   639                           
   640                           	psect	bssBANK0
   641  0020                     __pbssBANK0:	
   642  0020                     _table1:	
   643  0020                     	ds	7
   644  0027                     _day_of_week_var:	
   645  0027                     	ds	2
   646  0029                     _day_high:	
   647  0029                     	ds	2
   648  002B                     _day_low:	
   649  002B                     	ds	2
   650  002D                     _z:	
   651  002D                     	ds	2
   652  002F                     _y:	
   653  002F                     	ds	2
   654  0031                     _x:	
   655  0031                     	ds	2
   656  0033                     _w:	
   657  0033                     	ds	2
   658  0035                     _t:	
   659  0035                     	ds	2
   660  0037                     _wd:	
   661  0037                     	ds	2
   662  0039                     read_byte@j:	
   663  0039                     	ds	1
   664  003A                     _var2:	
   665  003A                     	ds	1
   666  003B                     _var1:	
   667  003B                     	ds	1
   668  003C                     _buzzer_watcher:	
   669  003C                     	ds	1
   670  003D                     _lower_t:	
   671  003D                     	ds	1
   672  003E                     _upper_t:	
   673  003E                     	ds	1
   674  003F                     _hrs_limiter:	
   675  003F                     	ds	1
   676  0040                     _day_hex:	
   677  0040                     	ds	1
   678  0041                     _c:	
   679  0041                     	ds	1
   680  0042                     _b:	
   681  0042                     	ds	1
   682  0043                     _a:	
   683  0043                     	ds	1
   684  0044                     _wanfen:	
   685  0044                     	ds	1
   686  0045                     _qianfen:	
   687  0045                     	ds	1
   688  0046                     _baifen:	
   689  0046                     	ds	1
   690  0047                     _shifen:	
   691  0047                     	ds	1
   692  0048                     _ge:	
   693  0048                     	ds	1
   694  0049                     _shi:	
   695  0049                     	ds	1
   696  004A                     _TX:	
   697  004A                     	ds	1
   698  004B                     _TZ:	
   699  004B                     	ds	1
   700  004C                     _THV:	
   701  004C                     	ds	1
   702  004D                     _TLV:	
   703  004D                     	ds	1
   704                           
   705                           	psect	dataBANK0
   706  0058                     __pdataBANK0:	
   707  0058                     _table:	
   708  0058                     	ds	8
   709                           
   710                           	psect	inittext
   711  1654                     init_fetch0:	
   712                           ;	Called with low address in FSR and high address in W
   713                           
   714  1654  087E               	movf	btemp,w
   715  1655  008A               	movwf	10
   716  1656  087F               	movf	btemp+1,w
   717  1657  0082               	movwf	2
   718  1658                     init_ram0:	
   719                           ;Called with:
   720                           ;	high address of idata address in btemp 
   721                           ;	low address of idata address in btemp+1 
   722                           ;	low address of data in FSR
   723                           ;	high address + 1 of data in btemp-1
   724                           
   725  1658  160A  118A  2654  160A  118A  	fcall	init_fetch0
   726  165D  0080               	movwf	0
   727  165E  0A84               	incf	4,f
   728  165F  0804               	movf	4,w
   729  1660  067D               	xorwf	btemp+-1,w
   730  1661  1903               	btfsc	3,2
   731  1662  3400               	retlw	0
   732  1663  0AFF               	incf	btemp+1,f
   733  1664  1903               	btfsc	3,2
   734  1665  0AFE               	incf	btemp,f
   735  1666  2E58               	goto	init_ram0
   736                           
   737                           	psect	clrtext
   738  15F7                     clear_ram0:	
   739                           ;	Called with FSR containing the base address, and
   740                           ;	W with the last address+1
   741                           
   742  15F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   743  15F8                     clrloop0:	
   744  15F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   745  15F9  0A84               	incf	4,f	;increment pointer
   746  15FA  0604               	xorwf	4,w	;XOR with final address
   747  15FB  1903               	btfsc	3,2	;have we reached the end yet?
   748  15FC  3400               	retlw	0	;all done for this memory range, return
   749  15FD  0604               	xorwf	4,w	;XOR again to restore value
   750  15FE  2DF8               	goto	clrloop0	;do the next byte
   751                           
   752                           	psect	cstackCOMMON
   753  0070                     __pcstackCOMMON:	
   754  0070                     ?_init_temp:	
   755  0070                     ??_init_temp:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ?_set_time:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_ds1302_init:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ?_init:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ??_init:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_lcd_init:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_initialise_buttons:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_initialise_buttons:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_get_temp:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?_get_time:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0070                     ?_write_cmd:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0070                     ?_write_char:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0070                     ?_display_temp:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0070                     ?_display_date:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_display_clock:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ?_thermometer_threshhold_settings:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_date_settings:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ?_time_settings:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_set_beep_threshhold:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_delay_screen:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ??_delay_screen:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_delay_temp:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_delay2:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ??_delay2:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_time_write_1:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ??_time_write_1:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_time_read_1:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ??_time_read_1:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_button_delay:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ??_button_delay:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_time_date_hex_terminator:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_time_date_delimiter:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ?_main:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_reset_temp:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ?_write_byte:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0070                     ?_read_byte:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0070                     ?___awdiv:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0070                     ?___awmod:	
   867                           ; 2 bytes @ 0x0
   868                           
   869  0070                     ?___lwmod:	
   870                           ; 2 bytes @ 0x0
   871                           
   872  0070                     delay_temp@y:	
   873                           ; 2 bytes @ 0x0
   874                           
   875  0070                     time_date_delimiter@hex:	
   876                           ; 1 bytes @ 0x0
   877                           
   878  0070                     time_date_hex_terminator@limiter:	
   879                           ; 1 bytes @ 0x0
   880                           
   881  0070                     delay_screen@i:	
   882                           ; 1 bytes @ 0x0
   883                           
   884  0070                     delay2@i:	
   885                           ; 2 bytes @ 0x0
   886                           
   887  0070                     button_delay@i:	
   888                           ; 2 bytes @ 0x0
   889                           
   890  0070                     ___awdiv@divisor:	
   891                           ; 2 bytes @ 0x0
   892                           
   893  0070                     ___awmod@divisor:	
   894                           ; 2 bytes @ 0x0
   895                           
   896  0070                     ___lwmod@divisor:	
   897                           ; 2 bytes @ 0x0
   898                           
   899                           
   900                           ; 2 bytes @ 0x0
   901  0070                     	ds	1
   902  0071                     ??_delay_temp:	
   903  0071                     ??_time_date_hex_terminator:	
   904                           ; 1 bytes @ 0x1
   905                           
   906  0071                     time_date_delimiter@limiter:	
   907                           ; 1 bytes @ 0x1
   908                           
   909                           
   910                           ; 1 bytes @ 0x1
   911  0071                     	ds	1
   912  0072                     ??_write_cmd:	
   913  0072                     ??_write_char:	
   914                           ; 1 bytes @ 0x2
   915                           
   916  0072                     ??_set_beep_threshhold:	
   917                           ; 1 bytes @ 0x2
   918                           
   919  0072                     ??_time_date_delimiter:	
   920                           ; 1 bytes @ 0x2
   921                           
   922  0072                     write_char@x:	
   923                           ; 1 bytes @ 0x2
   924                           
   925  0072                     write_cmd@x:	
   926                           ; 1 bytes @ 0x2
   927                           
   928  0072                     delay_temp@x:	
   929                           ; 1 bytes @ 0x2
   930                           
   931  0072                     set_beep_threshhold@x:	
   932                           ; 1 bytes @ 0x2
   933                           
   934  0072                     time_write_1@j:	
   935                           ; 1 bytes @ 0x2
   936                           
   937  0072                     time_read_1@j:	
   938                           ; 2 bytes @ 0x2
   939                           
   940  0072                     ___awdiv@dividend:	
   941                           ; 2 bytes @ 0x2
   942                           
   943  0072                     ___awmod@dividend:	
   944                           ; 2 bytes @ 0x2
   945                           
   946  0072                     ___lwmod@dividend:	
   947                           ; 2 bytes @ 0x2
   948                           
   949                           
   950                           ; 2 bytes @ 0x2
   951  0072                     	ds	1
   952  0073                     ??_lcd_init:	
   953  0073                     ??_display_temp:	
   954                           ; 1 bytes @ 0x3
   955                           
   956  0073                     ??_display_date:	
   957                           ; 1 bytes @ 0x3
   958                           
   959  0073                     ??_display_clock:	
   960                           ; 1 bytes @ 0x3
   961                           
   962  0073                     ?_set_lower_threshold:	
   963                           ; 1 bytes @ 0x3
   964                           
   965  0073                     ?_set_upper_threshold:	
   966                           ; 1 bytes @ 0x3
   967                           
   968  0073                     delay_temp@z:	
   969                           ; 1 bytes @ 0x3
   970                           
   971  0073                     time_date_hex_terminator@val:	
   972                           ; 1 bytes @ 0x3
   973                           
   974  0073                     set_upper_threshold@upper_val:	
   975                           ; 1 bytes @ 0x3
   976                           
   977  0073                     set_lower_threshold@upper_val:	
   978                           ; 2 bytes @ 0x3
   979                           
   980                           
   981                           ; 2 bytes @ 0x3
   982  0073                     	ds	1
   983  0074                     ??_reset_temp:	
   984  0074                     ??_write_byte:	
   985                           ; 1 bytes @ 0x4
   986                           
   987  0074                     ??_read_byte:	
   988                           ; 1 bytes @ 0x4
   989                           
   990  0074                     ??___awdiv:	
   991                           ; 1 bytes @ 0x4
   992                           
   993  0074                     ??___awmod:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  0074                     ??___lwmod:	
   997                           ; 1 bytes @ 0x4
   998                           
   999  0074                     time_write_1@time_tx:	
  1000                           ; 1 bytes @ 0x4
  1001                           
  1002  0074                     time_read_1@time_rx:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  0074                     time_date_delimiter@val:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008                           
  1009                           ; 1 bytes @ 0x4
  1010  0074                     	ds	1
  1011  0075                     ??_set_time:	
  1012  0075                     ??_ds1302_init:	
  1013                           ; 1 bytes @ 0x5
  1014                           
  1015  0075                     ??_get_time:	
  1016                           ; 1 bytes @ 0x5
  1017                           
  1018  0075                     reset_temp@presence:	
  1019                           ; 1 bytes @ 0x5
  1020                           
  1021  0075                     read_byte@value:	
  1022                           ; 1 bytes @ 0x5
  1023                           
  1024  0075                     ___awdiv@counter:	
  1025                           ; 1 bytes @ 0x5
  1026                           
  1027  0075                     ___awmod@counter:	
  1028                           ; 1 bytes @ 0x5
  1029                           
  1030  0075                     ___lwmod@counter:	
  1031                           ; 1 bytes @ 0x5
  1032                           
  1033  0075                     set_time@i:	
  1034                           ; 1 bytes @ 0x5
  1035                           
  1036  0075                     display_clock@i:	
  1037                           ; 2 bytes @ 0x5
  1038                           
  1039  0075                     display_date@i:	
  1040                           ; 2 bytes @ 0x5
  1041                           
  1042  0075                     set_upper_threshold@lower_val:	
  1043                           ; 2 bytes @ 0x5
  1044                           
  1045  0075                     set_lower_threshold@lower_val:	
  1046                           ; 2 bytes @ 0x5
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x5
  1050  0075                     	ds	1
  1051  0076                     ?___lwdiv:	
  1052  0076                     write_byte@temp:	
  1053                           ; 2 bytes @ 0x6
  1054                           
  1055  0076                     read_byte@i:	
  1056                           ; 1 bytes @ 0x6
  1057                           
  1058  0076                     ___awdiv@sign:	
  1059                           ; 1 bytes @ 0x6
  1060                           
  1061  0076                     ___awmod@sign:	
  1062                           ; 1 bytes @ 0x6
  1063                           
  1064  0076                     get_time@i:	
  1065                           ; 1 bytes @ 0x6
  1066                           
  1067  0076                     ___lwdiv@divisor:	
  1068                           ; 2 bytes @ 0x6
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x6
  1072  0076                     	ds	1
  1073  0077                     ??_set_lower_threshold:	
  1074  0077                     ??_set_upper_threshold:	
  1075                           ; 1 bytes @ 0x7
  1076                           
  1077  0077                     ?_modulus_func:	
  1078                           ; 1 bytes @ 0x7
  1079                           
  1080  0077                     write_byte@val:	
  1081                           ; 2 bytes @ 0x7
  1082                           
  1083  0077                     modulus_func@x:	
  1084                           ; 1 bytes @ 0x7
  1085                           
  1086  0077                     ___awdiv@quotient:	
  1087                           ; 2 bytes @ 0x7
  1088                           
  1089                           
  1090                           ; 2 bytes @ 0x7
  1091  0077                     	ds	1
  1092  0078                     write_byte@i:	
  1093  0078                     ___lwdiv@dividend:	
  1094                           ; 1 bytes @ 0x8
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x8
  1098  0078                     	ds	1
  1099  0079                     modulus_func@y:	
  1100                           
  1101                           ; 2 bytes @ 0x9
  1102  0079                     	ds	1
  1103  007A                     ??___lwdiv:	
  1104                           
  1105                           ; 1 bytes @ 0xA
  1106  007A                     	ds	1
  1107  007B                     ??_modulus_func:	
  1108  007B                     ??_incrementor:	
  1109                           ; 1 bytes @ 0xB
  1110                           
  1111  007B                     ??_decrementor:	
  1112                           ; 1 bytes @ 0xB
  1113                           
  1114  007B                     ___lwdiv@quotient:	
  1115                           ; 1 bytes @ 0xB
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0xB
  1119  007B                     	ds	2
  1120  007D                     ___lwdiv@counter:	
  1121                           
  1122                           ; 1 bytes @ 0xD
  1123  007D                     	ds	1
  1124  007E                     ??_main:	
  1125                           
  1126                           	psect	cstackBANK0
  1127  004E                     __pcstackBANK0:	
  1128                           ; 1 bytes @ 0xE
  1129                           
  1130  004E                     ??_get_temp:	
  1131  004E                     ?_incrementor:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  004E                     ?_decrementor:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  004E                     incrementor@upper_val:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  004E                     decrementor@lower_val:	
  1141                           ; 2 bytes @ 0x0
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0x0
  1145  004E                     	ds	2
  1146  0050                     incrementor@lower_val:	
  1147  0050                     decrementor@upper_val:	
  1148                           ; 2 bytes @ 0x2
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x2
  1152  0050                     	ds	2
  1153  0052                     incrementor@z:	
  1154  0052                     decrementor@z:	
  1155                           ; 1 bytes @ 0x4
  1156                           
  1157                           
  1158                           ; 1 bytes @ 0x4
  1159  0052                     	ds	1
  1160  0053                     ??_thermometer_threshhold_settings:	
  1161  0053                     ??_date_settings:	
  1162                           ; 1 bytes @ 0x5
  1163                           
  1164  0053                     ??_time_settings:	
  1165                           ; 1 bytes @ 0x5
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0x5
  1169  0053                     	ds	3
  1170  0056                     thermometer_threshhold_settings@i:	
  1171                           
  1172                           ; 2 bytes @ 0x8
  1173  0056                     	ds	2
  1174                           
  1175                           	psect	maintext
  1176  0B5D                     __pmaintext:	
  1177 ;;
  1178 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1179 ;;
  1180 ;; *************** function _main *****************
  1181 ;; Defined at:
  1182 ;;		line 8 in file "mainLogic.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : B00/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels required when called:    4
  1202 ;; This function calls:
  1203 ;;		_date_settings
  1204 ;;		_display_clock
  1205 ;;		_display_date
  1206 ;;		_display_temp
  1207 ;;		_ds1302_init
  1208 ;;		_get_temp
  1209 ;;		_get_time
  1210 ;;		_init
  1211 ;;		_init_temp
  1212 ;;		_initialise_buttons
  1213 ;;		_lcd_init
  1214 ;;		_set_beep_threshhold
  1215 ;;		_set_lower_threshold
  1216 ;;		_set_time
  1217 ;;		_set_upper_threshold
  1218 ;;		_thermometer_threshhold_settings
  1219 ;;		_time_settings
  1220 ;;		_write_char
  1221 ;;		_write_cmd
  1222 ;; This function is called by:
  1223 ;;		Startup code after reset
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _main
  1229  0B5D                     _main:	
  1230  0B5D                     l3642:	
  1231                           ;incstack = 0
  1232                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1233                           
  1234                           
  1235                           ;mainLogic.c: 9:     TRISB=0X02;
  1236  0B5D  3002               	movlw	2
  1237  0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  1238  0B5F  1303               	bcf	3,6	;RP1=0, select bank1
  1239  0B60  0086               	movwf	6	;volatile
  1240  0B61                     l3644:	
  1241                           
  1242                           ;mainLogic.c: 10:     init_temp();
  1243  0B61  160A  118A  25F0  120A  158A  	fcall	_init_temp
  1244  0B66                     l3646:	
  1245                           
  1246                           ;mainLogic.c: 11:     set_time();
  1247  0B66  160A  118A  27D4  120A  158A  	fcall	_set_time
  1248  0B6B                     l3648:	
  1249                           
  1250                           ;mainLogic.c: 12:     ds1302_init();
  1251  0B6B  160A  118A  2667  120A  158A  	fcall	_ds1302_init
  1252  0B70                     l3650:	
  1253                           
  1254                           ;mainLogic.c: 14:     init();
  1255  0B70  160A  118A  2607  120A  158A  	fcall	_init
  1256  0B75                     l3652:	
  1257                           
  1258                           ;mainLogic.c: 15:     lcd_init();
  1259  0B75  160A  118A  272A  120A  158A  	fcall	_lcd_init
  1260  0B7A                     l3654:	
  1261                           
  1262                           ;mainLogic.c: 16:     init_temp();
  1263  0B7A  160A  118A  25F0  120A  158A  	fcall	_init_temp
  1264  0B7F                     l3656:	
  1265                           
  1266                           ;mainLogic.c: 17:     initialise_buttons();
  1267  0B7F  160A  118A  2610  120A  158A  	fcall	_initialise_buttons
  1268  0B84                     l3658:	
  1269                           
  1270                           ;mainLogic.c: 22:     get_temp();
  1271  0B84  120A  158A  244A  120A  158A  	fcall	_get_temp
  1272  0B89                     l3660:	
  1273                           
  1274                           ;mainLogic.c: 23:     get_time();
  1275  0B89  120A  158A  202E  120A  158A  	fcall	_get_time
  1276  0B8E                     l3662:	
  1277                           
  1278                           ;mainLogic.c: 24:     write_cmd(0x80);
  1279  0B8E  3080               	movlw	128
  1280  0B8F  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  1281  0B94                     l3664:	
  1282                           
  1283                           ;mainLogic.c: 25:     write_char('T');
  1284  0B94  3054               	movlw	84
  1285  0B95  160A  118A  26D5  120A  158A  	fcall	_write_char
  1286  0B9A                     l3666:	
  1287                           
  1288                           ;mainLogic.c: 26:     write_char('e');
  1289  0B9A  3065               	movlw	101
  1290  0B9B  160A  118A  26D5  120A  158A  	fcall	_write_char
  1291  0BA0                     l3668:	
  1292                           
  1293                           ;mainLogic.c: 27:     write_char('m');
  1294  0BA0  306D               	movlw	109
  1295  0BA1  160A  118A  26D5  120A  158A  	fcall	_write_char
  1296  0BA6                     l3670:	
  1297                           
  1298                           ;mainLogic.c: 28:     write_char('p');
  1299  0BA6  3070               	movlw	112
  1300  0BA7  160A  118A  26D5  120A  158A  	fcall	_write_char
  1301  0BAC                     l3672:	
  1302                           
  1303                           ;mainLogic.c: 29:     write_char(':');
  1304  0BAC  303A               	movlw	58
  1305  0BAD  160A  118A  26D5  120A  158A  	fcall	_write_char
  1306  0BB2                     l3674:	
  1307                           
  1308                           ;mainLogic.c: 30:     display_temp();
  1309  0BB2  160A  118A  277D  120A  158A  	fcall	_display_temp
  1310  0BB7                     l3676:	
  1311                           
  1312                           ;mainLogic.c: 32:     write_cmd(0x90);
  1313  0BB7  3090               	movlw	144
  1314  0BB8  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  1315  0BBD                     l3678:	
  1316                           
  1317                           ;mainLogic.c: 33:     write_char('D');
  1318  0BBD  3044               	movlw	68
  1319  0BBE  160A  118A  26D5  120A  158A  	fcall	_write_char
  1320  0BC3                     l3680:	
  1321                           
  1322                           ;mainLogic.c: 34:     write_char('a');
  1323  0BC3  3061               	movlw	97
  1324  0BC4  160A  118A  26D5  120A  158A  	fcall	_write_char
  1325  0BC9                     l3682:	
  1326                           
  1327                           ;mainLogic.c: 35:     write_char('t');
  1328  0BC9  3074               	movlw	116
  1329  0BCA  160A  118A  26D5  120A  158A  	fcall	_write_char
  1330  0BCF                     l3684:	
  1331                           
  1332                           ;mainLogic.c: 36:     write_char('e');
  1333  0BCF  3065               	movlw	101
  1334  0BD0  160A  118A  26D5  120A  158A  	fcall	_write_char
  1335  0BD5                     l3686:	
  1336                           
  1337                           ;mainLogic.c: 37:     write_char(':');
  1338  0BD5  303A               	movlw	58
  1339  0BD6  160A  118A  26D5  120A  158A  	fcall	_write_char
  1340  0BDB                     l3688:	
  1341                           
  1342                           ;mainLogic.c: 38:     write_char(' ');
  1343  0BDB  3020               	movlw	32
  1344  0BDC  160A  118A  26D5  120A  158A  	fcall	_write_char
  1345  0BE1                     l3690:	
  1346                           
  1347                           ;mainLogic.c: 40:     display_date();
  1348  0BE1  120A  118A  203F  120A  158A  	fcall	_display_date
  1349  0BE6                     l3692:	
  1350                           
  1351                           ;mainLogic.c: 42:     write_cmd(0x88);
  1352  0BE6  3088               	movlw	136
  1353  0BE7  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  1354  0BEC                     l3694:	
  1355                           
  1356                           ;mainLogic.c: 43:     write_char('T');
  1357  0BEC  3054               	movlw	84
  1358  0BED  160A  118A  26D5  120A  158A  	fcall	_write_char
  1359  0BF2                     l3696:	
  1360                           
  1361                           ;mainLogic.c: 44:     write_char('i');
  1362  0BF2  3069               	movlw	105
  1363  0BF3  160A  118A  26D5  120A  158A  	fcall	_write_char
  1364  0BF8                     l3698:	
  1365                           
  1366                           ;mainLogic.c: 45:     write_char('m');
  1367  0BF8  306D               	movlw	109
  1368  0BF9  160A  118A  26D5  120A  158A  	fcall	_write_char
  1369  0BFE                     l3700:	
  1370                           
  1371                           ;mainLogic.c: 46:     write_char('e');
  1372  0BFE  3065               	movlw	101
  1373  0BFF  160A  118A  26D5  120A  158A  	fcall	_write_char
  1374  0C04                     l3702:	
  1375                           
  1376                           ;mainLogic.c: 47:     write_char(':');
  1377  0C04  303A               	movlw	58
  1378  0C05  160A  118A  26D5  120A  158A  	fcall	_write_char
  1379  0C0A                     l3704:	
  1380                           
  1381                           ;mainLogic.c: 48:     display_clock();
  1382  0C0A  120A  158A  22B7  120A  158A  	fcall	_display_clock
  1383  0C0F                     l3706:	
  1384                           
  1385                           ;mainLogic.c: 49:     thermometer_threshhold_settings();
  1386  0C0F  120A  158A  2578  120A  158A  	fcall	_thermometer_threshhold_settings
  1387  0C14                     l3708:	
  1388                           
  1389                           ;mainLogic.c: 50:     date_settings();
  1390  0C14  120A  118A  23D3  120A  158A  	fcall	_date_settings
  1391  0C19                     l3710:	
  1392                           
  1393                           ;mainLogic.c: 51:     time_settings();
  1394  0C19  120A  118A  20E5  120A  158A  	fcall	_time_settings
  1395  0C1E                     l3712:	
  1396                           
  1397                           ;mainLogic.c: 52:     write_cmd(0x98);
  1398  0C1E  3098               	movlw	152
  1399  0C1F  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  1400  0C24                     l3714:	
  1401                           
  1402                           ;mainLogic.c: 53:     set_lower_threshold(2,4);
  1403  0C24  3002               	movlw	2
  1404  0C25  00F3               	movwf	set_lower_threshold@upper_val
  1405  0C26  3000               	movlw	0
  1406  0C27  00F4               	movwf	set_lower_threshold@upper_val+1
  1407  0C28  3004               	movlw	4
  1408  0C29  00F5               	movwf	set_lower_threshold@lower_val
  1409  0C2A  3000               	movlw	0
  1410  0C2B  00F6               	movwf	set_lower_threshold@lower_val+1
  1411  0C2C  120A  158A  2091  120A  158A  	fcall	_set_lower_threshold
  1412  0C31                     l3716:	
  1413                           
  1414                           ;mainLogic.c: 54:     set_upper_threshold(2,5);
  1415  0C31  3002               	movlw	2
  1416  0C32  00F3               	movwf	set_upper_threshold@upper_val
  1417  0C33  3000               	movlw	0
  1418  0C34  00F4               	movwf	set_upper_threshold@upper_val+1
  1419  0C35  3005               	movlw	5
  1420  0C36  00F5               	movwf	set_upper_threshold@lower_val
  1421  0C37  3000               	movlw	0
  1422  0C38  00F6               	movwf	set_upper_threshold@lower_val+1
  1423  0C39  120A  118A  2004  120A  158A  	fcall	_set_upper_threshold
  1424  0C3E                     l3718:	
  1425                           
  1426                           ;mainLogic.c: 55:     set_beep_threshhold(buzzer_watcher);
  1427  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0C40  083C               	movf	_buzzer_watcher,w
  1430  0C41  160A  118A  2707  120A  158A  	fcall	_set_beep_threshhold
  1431  0C46  2B84               	goto	l3658
  1432  0C47  120A  118A  2800   	ljmp	start
  1433  0C4A                     __end_of_main:	
  1434                           
  1435                           	psect	text1
  1436  00E5                     __ptext1:	
  1437 ;; *************** function _time_settings *****************
  1438 ;; Defined at:
  1439 ;;		line 163 in file "Button_src.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       3       0       0       0
  1456 ;;      Totals:         0       3       0       0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    3
  1460 ;; This function calls:
  1461 ;;		_button_delay
  1462 ;;		_incrementor
  1463 ;;		_modulus_func
  1464 ;;		_set_time
  1465 ;;		_time_date_delimiter
  1466 ;;		_time_date_hex_terminator
  1467 ;;		_write_char
  1468 ;;		_write_cmd
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _time_settings
  1476  00E5                     _time_settings:	
  1477  00E5                     l3430:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _time_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1480                           
  1481                           
  1482                           ;Button_src.c: 164:  RC0 = 1;
  1483  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1484  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1485  00E7  1407               	bsf	7,0	;volatile
  1486                           
  1487                           ;Button_src.c: 165:  RC1 = 1;
  1488  00E8  1487               	bsf	7,1	;volatile
  1489                           
  1490                           ;Button_src.c: 166:  RC2 = 0;
  1491  00E9  1107               	bcf	7,2	;volatile
  1492                           
  1493                           ;Button_src.c: 167:  RC3 = 1;
  1494  00EA  1587               	bsf	7,3	;volatile
  1495                           
  1496                           ;Button_src.c: 168:   if (RC4 == 0){
  1497  00EB  1A07               	btfsc	7,4	;volatile
  1498  00EC  28EE               	goto	u2051
  1499  00ED  28EF               	goto	u2050
  1500  00EE                     u2051:	
  1501  00EE  2BD2               	goto	l518
  1502  00EF                     u2050:	
  1503  00EF                     l3432:	
  1504                           
  1505                           ;Button_src.c: 169:       write_cmd(0x1);
  1506  00EF  3001               	movlw	1
  1507  00F0  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  1508  00F5                     l511:	
  1509                           ;Button_src.c: 170:       for(;;){
  1510                           
  1511                           
  1512                           ;Button_src.c: 171:             write_cmd(0x80);
  1513  00F5  3080               	movlw	128
  1514  00F6  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  1515                           
  1516                           ;Button_src.c: 172:             write_char('T');
  1517  00FB  3054               	movlw	84
  1518  00FC  160A  118A  26D5  120A  118A  	fcall	_write_char
  1519                           
  1520                           ;Button_src.c: 173:             write_char('i');
  1521  0101  3069               	movlw	105
  1522  0102  160A  118A  26D5  120A  118A  	fcall	_write_char
  1523                           
  1524                           ;Button_src.c: 174:             write_char('m');
  1525  0107  306D               	movlw	109
  1526  0108  160A  118A  26D5  120A  118A  	fcall	_write_char
  1527                           
  1528                           ;Button_src.c: 175:             write_char('e');
  1529  010D  3065               	movlw	101
  1530  010E  160A  118A  26D5  120A  118A  	fcall	_write_char
  1531                           
  1532                           ;Button_src.c: 176:             write_char('_');
  1533  0113  305F               	movlw	95
  1534  0114  160A  118A  26D5  120A  118A  	fcall	_write_char
  1535                           
  1536                           ;Button_src.c: 177:             write_char('S');
  1537  0119  3053               	movlw	83
  1538  011A  160A  118A  26D5  120A  118A  	fcall	_write_char
  1539                           
  1540                           ;Button_src.c: 178:             write_char('e');
  1541  011F  3065               	movlw	101
  1542  0120  160A  118A  26D5  120A  118A  	fcall	_write_char
  1543                           
  1544                           ;Button_src.c: 179:             write_char('t');
  1545  0125  3074               	movlw	116
  1546  0126  160A  118A  26D5  120A  118A  	fcall	_write_char
  1547                           
  1548                           ;Button_src.c: 180:             write_char('t');
  1549  012B  3074               	movlw	116
  1550  012C  160A  118A  26D5  120A  118A  	fcall	_write_char
  1551                           
  1552                           ;Button_src.c: 181:             write_char('i');
  1553  0131  3069               	movlw	105
  1554  0132  160A  118A  26D5  120A  118A  	fcall	_write_char
  1555                           
  1556                           ;Button_src.c: 182:             write_char('n');
  1557  0137  306E               	movlw	110
  1558  0138  160A  118A  26D5  120A  118A  	fcall	_write_char
  1559                           
  1560                           ;Button_src.c: 183:             write_char('g');
  1561  013D  3067               	movlw	103
  1562  013E  160A  118A  26D5  120A  118A  	fcall	_write_char
  1563                           
  1564                           ;Button_src.c: 184:             write_char('s');
  1565  0143  3073               	movlw	115
  1566  0144  160A  118A  26D5  120A  118A  	fcall	_write_char
  1567  0149                     l3434:	
  1568                           
  1569                           ;Button_src.c: 186:             RC0 = 1;
  1570  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1571  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1572  014B  1407               	bsf	7,0	;volatile
  1573  014C                     l3436:	
  1574                           
  1575                           ;Button_src.c: 187:             RC1 = 0;
  1576  014C  1087               	bcf	7,1	;volatile
  1577  014D                     l3438:	
  1578                           
  1579                           ;Button_src.c: 188:             RC2 = 1;
  1580  014D  1507               	bsf	7,2	;volatile
  1581  014E                     l3440:	
  1582                           
  1583                           ;Button_src.c: 189:             RC3 = 1;
  1584  014E  1587               	bsf	7,3	;volatile
  1585  014F                     l3442:	
  1586                           
  1587                           ;Button_src.c: 191:             if(RC7 == 0 && b =='x'){
  1588  014F  1B87               	btfsc	7,7	;volatile
  1589  0150  2952               	goto	u2061
  1590  0151  2953               	goto	u2060
  1591  0152                     u2061:	
  1592  0152  29B5               	goto	l3464
  1593  0153                     u2060:	
  1594  0153                     l3444:	
  1595  0153  3078               	movlw	120
  1596  0154  0642               	xorwf	_b,w
  1597  0155  1D03               	btfss	3,2
  1598  0156  2958               	goto	u2071
  1599  0157  2959               	goto	u2070
  1600  0158                     u2071:	
  1601  0158  29B5               	goto	l3464
  1602  0159                     u2070:	
  1603  0159                     l3446:	
  1604                           
  1605                           ;Button_src.c: 192:                     a++;
  1606  0159  3001               	movlw	1
  1607  015A  00D3               	movwf	??_time_settings
  1608  015B  0853               	movf	??_time_settings,w
  1609  015C  07C3               	addwf	_a,f
  1610  015D                     l3448:	
  1611                           
  1612                           ;Button_src.c: 193:                     x++ ;
  1613  015D  3001               	movlw	1
  1614  015E  07B1               	addwf	_x,f
  1615  015F  1803               	skipnc
  1616  0160  0AB2               	incf	_x+1,f
  1617  0161  3000               	movlw	0
  1618  0162  07B2               	addwf	_x+1,f
  1619  0163                     l3450:	
  1620                           
  1621                           ;Button_src.c: 194:                     x = modulus_func(x,10);
  1622  0163  0832               	movf	_x+1,w
  1623  0164  00F8               	movwf	modulus_func@x+1
  1624  0165  0831               	movf	_x,w
  1625  0166  00F7               	movwf	modulus_func@x
  1626  0167  300A               	movlw	10
  1627  0168  00F9               	movwf	modulus_func@y
  1628  0169  3000               	movlw	0
  1629  016A  00FA               	movwf	modulus_func@y+1
  1630  016B  160A  118A  261E  120A  118A  	fcall	_modulus_func
  1631  0170  0878               	movf	?_modulus_func+1,w
  1632  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0173  00B2               	movwf	_x+1
  1635  0174  0877               	movf	?_modulus_func,w
  1636  0175  00B1               	movwf	_x
  1637  0176                     l3452:	
  1638                           
  1639                           ;Button_src.c: 195:                     y = incrementor(y,x,'9');
  1640  0176  0830               	movf	_y+1,w
  1641  0177  00CF               	movwf	incrementor@upper_val+1
  1642  0178  082F               	movf	_y,w
  1643  0179  00CE               	movwf	incrementor@upper_val
  1644  017A  0832               	movf	_x+1,w
  1645  017B  00D1               	movwf	incrementor@lower_val+1
  1646  017C  0831               	movf	_x,w
  1647  017D  00D0               	movwf	incrementor@lower_val
  1648  017E  3039               	movlw	57
  1649  017F  00D3               	movwf	??_time_settings
  1650  0180  0853               	movf	??_time_settings,w
  1651  0181  00D2               	movwf	incrementor@z
  1652  0182  160A  118A  27A8  120A  118A  	fcall	_incrementor
  1653  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1654  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1655  0189  00D4               	movwf	??_time_settings+1
  1656  018A  01D5               	clrf	??_time_settings+2
  1657  018B  0854               	movf	??_time_settings+1,w
  1658  018C  00AF               	movwf	_y
  1659  018D  0855               	movf	??_time_settings+2,w
  1660  018E  00B0               	movwf	_y+1
  1661  018F                     l3454:	
  1662                           
  1663                           ;Button_src.c: 197:                     a = time_date_hex_terminator(a,'T');
  1664  018F  3054               	movlw	84
  1665  0190  00D3               	movwf	??_time_settings
  1666  0191  0853               	movf	??_time_settings,w
  1667  0192  00F0               	movwf	time_date_hex_terminator@limiter
  1668  0193  0843               	movf	_a,w
  1669  0194  160A  118A  2630  120A  118A  	fcall	_time_date_hex_terminator
  1670  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1671  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1672  019B  00D4               	movwf	??_time_settings+1
  1673  019C  0854               	movf	??_time_settings+1,w
  1674  019D  00C3               	movwf	_a
  1675  019E                     l3456:	
  1676                           
  1677                           ;Button_src.c: 198:                     if(y == 2 && x == 4){
  1678  019E  3002               	movlw	2
  1679  019F  062F               	xorwf	_y,w
  1680  01A0  0430               	iorwf	_y+1,w
  1681  01A1  1D03               	btfss	3,2
  1682  01A2  29A4               	goto	u2081
  1683  01A3  29A5               	goto	u2080
  1684  01A4                     u2081:	
  1685  01A4  29B0               	goto	l3462
  1686  01A5                     u2080:	
  1687  01A5                     l3458:	
  1688  01A5  3004               	movlw	4
  1689  01A6  0631               	xorwf	_x,w
  1690  01A7  0432               	iorwf	_x+1,w
  1691  01A8  1D03               	btfss	3,2
  1692  01A9  29AB               	goto	u2091
  1693  01AA  29AC               	goto	u2090
  1694  01AB                     u2091:	
  1695  01AB  29B0               	goto	l3462
  1696  01AC                     u2090:	
  1697  01AC                     l3460:	
  1698                           
  1699                           ;Button_src.c: 199:                         x = 0;
  1700  01AC  01B1               	clrf	_x
  1701  01AD  01B2               	clrf	_x+1
  1702                           
  1703                           ;Button_src.c: 200:                         y = 0;
  1704  01AE  01AF               	clrf	_y
  1705  01AF  01B0               	clrf	_y+1
  1706  01B0                     l3462:	
  1707                           
  1708                           ;Button_src.c: 202:                     button_delay();
  1709  01B0  160A  118A  267C  120A  118A  	fcall	_button_delay
  1710  01B5                     l3464:	
  1711                           
  1712                           ;Button_src.c: 204:             if(RC7==0 && b == 'y'){
  1713  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1714  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1715  01B7  1B87               	btfsc	7,7	;volatile
  1716  01B8  29BA               	goto	u2101
  1717  01B9  29BB               	goto	u2100
  1718  01BA                     u2101:	
  1719  01BA  2A0E               	goto	l3486
  1720  01BB                     u2100:	
  1721  01BB                     l3466:	
  1722  01BB  3079               	movlw	121
  1723  01BC  0642               	xorwf	_b,w
  1724  01BD  1D03               	btfss	3,2
  1725  01BE  29C0               	goto	u2111
  1726  01BF  29C1               	goto	u2110
  1727  01C0                     u2111:	
  1728  01C0  2A0E               	goto	l3486
  1729  01C1                     u2110:	
  1730  01C1                     l3468:	
  1731                           
  1732                           ;Button_src.c: 205:                     c++;
  1733  01C1  3001               	movlw	1
  1734  01C2  00D3               	movwf	??_time_settings
  1735  01C3  0853               	movf	??_time_settings,w
  1736  01C4  07C1               	addwf	_c,f
  1737  01C5                     l3470:	
  1738                           
  1739                           ;Button_src.c: 206:                     t++;
  1740  01C5  3001               	movlw	1
  1741  01C6  07B5               	addwf	_t,f
  1742  01C7  1803               	skipnc
  1743  01C8  0AB6               	incf	_t+1,f
  1744  01C9  3000               	movlw	0
  1745  01CA  07B6               	addwf	_t+1,f
  1746  01CB                     l3472:	
  1747                           
  1748                           ;Button_src.c: 207:                     t = modulus_func(t,10);
  1749  01CB  0836               	movf	_t+1,w
  1750  01CC  00F8               	movwf	modulus_func@x+1
  1751  01CD  0835               	movf	_t,w
  1752  01CE  00F7               	movwf	modulus_func@x
  1753  01CF  300A               	movlw	10
  1754  01D0  00F9               	movwf	modulus_func@y
  1755  01D1  3000               	movlw	0
  1756  01D2  00FA               	movwf	modulus_func@y+1
  1757  01D3  160A  118A  261E  120A  118A  	fcall	_modulus_func
  1758  01D8  0878               	movf	?_modulus_func+1,w
  1759  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1760  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1761  01DB  00B6               	movwf	_t+1
  1762  01DC  0877               	movf	?_modulus_func,w
  1763  01DD  00B5               	movwf	_t
  1764  01DE                     l3474:	
  1765                           
  1766                           ;Button_src.c: 208:                     w = incrementor(w,t,'9');
  1767  01DE  0834               	movf	_w+1,w
  1768  01DF  00CF               	movwf	incrementor@upper_val+1
  1769  01E0  0833               	movf	_w,w
  1770  01E1  00CE               	movwf	incrementor@upper_val
  1771  01E2  0836               	movf	_t+1,w
  1772  01E3  00D1               	movwf	incrementor@lower_val+1
  1773  01E4  0835               	movf	_t,w
  1774  01E5  00D0               	movwf	incrementor@lower_val
  1775  01E6  3039               	movlw	57
  1776  01E7  00D3               	movwf	??_time_settings
  1777  01E8  0853               	movf	??_time_settings,w
  1778  01E9  00D2               	movwf	incrementor@z
  1779  01EA  160A  118A  27A8  120A  118A  	fcall	_incrementor
  1780  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1781  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1782  01F1  00D4               	movwf	??_time_settings+1
  1783  01F2  01D5               	clrf	??_time_settings+2
  1784  01F3  0854               	movf	??_time_settings+1,w
  1785  01F4  00B3               	movwf	_w
  1786  01F5  0855               	movf	??_time_settings+2,w
  1787  01F6  00B4               	movwf	_w+1
  1788  01F7                     l3476:	
  1789                           
  1790                           ;Button_src.c: 209:                     if(c == (0x59 + 1)){
  1791  01F7  305A               	movlw	90
  1792  01F8  0641               	xorwf	_c,w
  1793  01F9  1D03               	btfss	3,2
  1794  01FA  29FC               	goto	u2121
  1795  01FB  29FD               	goto	u2120
  1796  01FC                     u2121:	
  1797  01FC  29FE               	goto	l3480
  1798  01FD                     u2120:	
  1799  01FD                     l3478:	
  1800                           
  1801                           ;Button_src.c: 210:                         c = 0x00;
  1802  01FD  01C1               	clrf	_c
  1803  01FE                     l3480:	
  1804                           
  1805                           ;Button_src.c: 212:                     if(w == 6){
  1806  01FE  3006               	movlw	6
  1807  01FF  0633               	xorwf	_w,w
  1808  0200  0434               	iorwf	_w+1,w
  1809  0201  1D03               	btfss	3,2
  1810  0202  2A04               	goto	u2131
  1811  0203  2A05               	goto	u2130
  1812  0204                     u2131:	
  1813  0204  2A09               	goto	l3484
  1814  0205                     u2130:	
  1815  0205                     l3482:	
  1816                           
  1817                           ;Button_src.c: 213:                         w = 0;
  1818  0205  01B3               	clrf	_w
  1819  0206  01B4               	clrf	_w+1
  1820                           
  1821                           ;Button_src.c: 214:                         t = 0;
  1822  0207  01B5               	clrf	_t
  1823  0208  01B6               	clrf	_t+1
  1824  0209                     l3484:	
  1825                           
  1826                           ;Button_src.c: 216:                     button_delay();
  1827  0209  160A  118A  267C  120A  118A  	fcall	_button_delay
  1828  020E                     l3486:	
  1829                           
  1830                           ;Button_src.c: 219:              write_cmd(0x88);
  1831  020E  3088               	movlw	136
  1832  020F  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  1833  0214                     l3488:	
  1834                           
  1835                           ;Button_src.c: 220:                     table[2] = a;
  1836  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0216  0843               	movf	_a,w
  1839  0217  00D3               	movwf	??_time_settings
  1840  0218  0853               	movf	??_time_settings,w
  1841  0219  00DA               	movwf	_table+2
  1842  021A                     l3490:	
  1843                           
  1844                           ;Button_src.c: 221:                     table[1] = c;
  1845  021A  0841               	movf	_c,w
  1846  021B  00D3               	movwf	??_time_settings
  1847  021C  0853               	movf	??_time_settings,w
  1848  021D  00D9               	movwf	_table+1
  1849  021E                     l3492:	
  1850                           
  1851                           ;Button_src.c: 226:                     a = time_date_delimiter(a,0x11,'9');
  1852  021E  3011               	movlw	17
  1853  021F  00D3               	movwf	??_time_settings
  1854  0220  0853               	movf	??_time_settings,w
  1855  0221  00F0               	movwf	time_date_delimiter@hex
  1856  0222  3039               	movlw	57
  1857  0223  00D4               	movwf	??_time_settings+1
  1858  0224  0854               	movf	??_time_settings+1,w
  1859  0225  00F1               	movwf	time_date_delimiter@limiter
  1860  0226  0843               	movf	_a,w
  1861  0227  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  1862  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1863  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1864  022E  00D5               	movwf	??_time_settings+2
  1865  022F  0855               	movf	??_time_settings+2,w
  1866  0230  00C3               	movwf	_a
  1867  0231                     l3494:	
  1868                           
  1869                           ;Button_src.c: 227:                     a = time_date_delimiter(a,0x21,'J');
  1870  0231  3021               	movlw	33
  1871  0232  00D3               	movwf	??_time_settings
  1872  0233  0853               	movf	??_time_settings,w
  1873  0234  00F0               	movwf	time_date_delimiter@hex
  1874  0235  304A               	movlw	74
  1875  0236  00D4               	movwf	??_time_settings+1
  1876  0237  0854               	movf	??_time_settings+1,w
  1877  0238  00F1               	movwf	time_date_delimiter@limiter
  1878  0239  0843               	movf	_a,w
  1879  023A  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  1880  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0241  00D5               	movwf	??_time_settings+2
  1883  0242  0855               	movf	??_time_settings+2,w
  1884  0243  00C3               	movwf	_a
  1885  0244                     l3496:	
  1886                           
  1887                           ;Button_src.c: 229:                     c = time_date_delimiter(c,0x11,'9');
  1888  0244  3011               	movlw	17
  1889  0245  00D3               	movwf	??_time_settings
  1890  0246  0853               	movf	??_time_settings,w
  1891  0247  00F0               	movwf	time_date_delimiter@hex
  1892  0248  3039               	movlw	57
  1893  0249  00D4               	movwf	??_time_settings+1
  1894  024A  0854               	movf	??_time_settings+1,w
  1895  024B  00F1               	movwf	time_date_delimiter@limiter
  1896  024C  0841               	movf	_c,w
  1897  024D  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  1898  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0254  00D5               	movwf	??_time_settings+2
  1901  0255  0855               	movf	??_time_settings+2,w
  1902  0256  00C1               	movwf	_c
  1903  0257                     l3498:	
  1904                           
  1905                           ;Button_src.c: 230:                     c = time_date_delimiter(c,0x21,'J');
  1906  0257  3021               	movlw	33
  1907  0258  00D3               	movwf	??_time_settings
  1908  0259  0853               	movf	??_time_settings,w
  1909  025A  00F0               	movwf	time_date_delimiter@hex
  1910  025B  304A               	movlw	74
  1911  025C  00D4               	movwf	??_time_settings+1
  1912  025D  0854               	movf	??_time_settings+1,w
  1913  025E  00F1               	movwf	time_date_delimiter@limiter
  1914  025F  0841               	movf	_c,w
  1915  0260  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  1916  0265  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0266  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0267  00D5               	movwf	??_time_settings+2
  1919  0268  0855               	movf	??_time_settings+2,w
  1920  0269  00C1               	movwf	_c
  1921  026A                     l3500:	
  1922                           
  1923                           ;Button_src.c: 231:                     c = time_date_delimiter(c,0x31,'Y');
  1924  026A  3031               	movlw	49
  1925  026B  00D3               	movwf	??_time_settings
  1926  026C  0853               	movf	??_time_settings,w
  1927  026D  00F0               	movwf	time_date_delimiter@hex
  1928  026E  3059               	movlw	89
  1929  026F  00D4               	movwf	??_time_settings+1
  1930  0270  0854               	movf	??_time_settings+1,w
  1931  0271  00F1               	movwf	time_date_delimiter@limiter
  1932  0272  0841               	movf	_c,w
  1933  0273  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  1934  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1936  027A  00D5               	movwf	??_time_settings+2
  1937  027B  0855               	movf	??_time_settings+2,w
  1938  027C  00C1               	movwf	_c
  1939  027D                     l3502:	
  1940                           
  1941                           ;Button_src.c: 232:                     c = time_date_delimiter(c,0x41,'j');
  1942  027D  3041               	movlw	65
  1943  027E  00D3               	movwf	??_time_settings
  1944  027F  0853               	movf	??_time_settings,w
  1945  0280  00F0               	movwf	time_date_delimiter@hex
  1946  0281  306A               	movlw	106
  1947  0282  00D4               	movwf	??_time_settings+1
  1948  0283  0854               	movf	??_time_settings+1,w
  1949  0284  00F1               	movwf	time_date_delimiter@limiter
  1950  0285  0841               	movf	_c,w
  1951  0286  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  1952  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1953  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1954  028D  00D5               	movwf	??_time_settings+2
  1955  028E  0855               	movf	??_time_settings+2,w
  1956  028F  00C1               	movwf	_c
  1957  0290                     l3504:	
  1958                           
  1959                           ;Button_src.c: 233:                     c = time_date_delimiter(c,0x51,'z');
  1960  0290  3051               	movlw	81
  1961  0291  00D3               	movwf	??_time_settings
  1962  0292  0853               	movf	??_time_settings,w
  1963  0293  00F0               	movwf	time_date_delimiter@hex
  1964  0294  307A               	movlw	122
  1965  0295  00D4               	movwf	??_time_settings+1
  1966  0296  0854               	movf	??_time_settings+1,w
  1967  0297  00F1               	movwf	time_date_delimiter@limiter
  1968  0298  0841               	movf	_c,w
  1969  0299  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  1970  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1971  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1972  02A0  00D5               	movwf	??_time_settings+2
  1973  02A1  0855               	movf	??_time_settings+2,w
  1974  02A2  00C1               	movwf	_c
  1975  02A3                     l3506:	
  1976                           
  1977                           ;Button_src.c: 235:                   RC0 = 0;
  1978  02A3  1007               	bcf	7,0	;volatile
  1979  02A4                     l3508:	
  1980                           
  1981                           ;Button_src.c: 236:                   RC1 = 1;
  1982  02A4  1487               	bsf	7,1	;volatile
  1983  02A5                     l3510:	
  1984                           
  1985                           ;Button_src.c: 237:                   RC2 = 1;
  1986  02A5  1507               	bsf	7,2	;volatile
  1987  02A6                     l3512:	
  1988                           
  1989                           ;Button_src.c: 238:                   RC3 = 1;
  1990  02A6  1587               	bsf	7,3	;volatile
  1991  02A7                     l3514:	
  1992                           
  1993                           ;Button_src.c: 239:                     if (RC6 == 0 ){
  1994  02A7  1B07               	btfsc	7,6	;volatile
  1995  02A8  2AAA               	goto	u2141
  1996  02A9  2AAB               	goto	u2140
  1997  02AA                     u2141:	
  1998  02AA  2AC3               	goto	l517
  1999  02AB                     u2140:	
  2000  02AB                     l3516:	
  2001                           
  2002                           ;Button_src.c: 240:                           write_cmd(0x1);
  2003  02AB  3001               	movlw	1
  2004  02AC  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  2005  02B1                     l3518:	
  2006                           
  2007                           ;Button_src.c: 241:                           a = 0x00;
  2008  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2009  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  2010  02B3  01C3               	clrf	_a
  2011  02B4                     l3520:	
  2012                           
  2013                           ;Button_src.c: 242:                           c = 0x00;
  2014  02B4  01C1               	clrf	_c
  2015  02B5                     l3522:	
  2016                           
  2017                           ;Button_src.c: 243:                           x = 0;
  2018  02B5  01B1               	clrf	_x
  2019  02B6  01B2               	clrf	_x+1
  2020  02B7                     l3524:	
  2021                           
  2022                           ;Button_src.c: 244:                           y = 0;
  2023  02B7  01AF               	clrf	_y
  2024  02B8  01B0               	clrf	_y+1
  2025  02B9                     l3526:	
  2026                           
  2027                           ;Button_src.c: 245:                           w = 0;
  2028  02B9  01B3               	clrf	_w
  2029  02BA  01B4               	clrf	_w+1
  2030  02BB                     l3528:	
  2031                           
  2032                           ;Button_src.c: 246:                           t = 0;
  2033  02BB  01B5               	clrf	_t
  2034  02BC  01B6               	clrf	_t+1
  2035  02BD                     l3530:	
  2036                           
  2037                           ;Button_src.c: 247:                           set_time();
  2038  02BD  160A  118A  27D4  120A  118A  	fcall	_set_time
  2039  02C2  2BD2               	goto	l518
  2040  02C3                     l517:	
  2041                           ;Button_src.c: 249:                             }
  2042                           
  2043                           
  2044                           ;Button_src.c: 250:                   RC0 = 1;
  2045  02C3  1407               	bsf	7,0	;volatile
  2046                           
  2047                           ;Button_src.c: 251:                   RC1 = 1;
  2048  02C4  1487               	bsf	7,1	;volatile
  2049                           
  2050                           ;Button_src.c: 252:                   RC2 = 0;
  2051  02C5  1107               	bcf	7,2	;volatile
  2052                           
  2053                           ;Button_src.c: 253:                   RC3 = 1;
  2054  02C6  1587               	bsf	7,3	;volatile
  2055  02C7                     l3534:	
  2056                           
  2057                           ;Button_src.c: 254:                   z = modulus_func(z,2);
  2058  02C7  082E               	movf	_z+1,w
  2059  02C8  00F8               	movwf	modulus_func@x+1
  2060  02C9  082D               	movf	_z,w
  2061  02CA  00F7               	movwf	modulus_func@x
  2062  02CB  3002               	movlw	2
  2063  02CC  00F9               	movwf	modulus_func@y
  2064  02CD  3000               	movlw	0
  2065  02CE  00FA               	movwf	modulus_func@y+1
  2066  02CF  160A  118A  261E  120A  118A  	fcall	_modulus_func
  2067  02D4  0878               	movf	?_modulus_func+1,w
  2068  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2069  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2070  02D7  00AE               	movwf	_z+1
  2071  02D8  0877               	movf	?_modulus_func,w
  2072  02D9  00AD               	movwf	_z
  2073  02DA                     l3536:	
  2074                           
  2075                           ;Button_src.c: 255:                   if(RC4 == 0 && z ==0){
  2076  02DA  1A07               	btfsc	7,4	;volatile
  2077  02DB  2ADD               	goto	u2151
  2078  02DC  2ADE               	goto	u2150
  2079  02DD                     u2151:	
  2080  02DD  2B1B               	goto	l3546
  2081  02DE                     u2150:	
  2082  02DE                     l3538:	
  2083  02DE  082D               	movf	_z,w
  2084  02DF  042E               	iorwf	_z+1,w
  2085  02E0  1D03               	btfss	3,2
  2086  02E1  2AE3               	goto	u2161
  2087  02E2  2AE4               	goto	u2160
  2088  02E3                     u2161:	
  2089  02E3  2B1B               	goto	l3546
  2090  02E4                     u2160:	
  2091  02E4                     l3540:	
  2092                           
  2093                           ;Button_src.c: 256:                       write_cmd(0x90);
  2094  02E4  3090               	movlw	144
  2095  02E5  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  2096                           
  2097                           ;Button_src.c: 257:                       write_char('H');
  2098  02EA  3048               	movlw	72
  2099  02EB  160A  118A  26D5  120A  118A  	fcall	_write_char
  2100                           
  2101                           ;Button_src.c: 258:                       write_char('o');
  2102  02F0  306F               	movlw	111
  2103  02F1  160A  118A  26D5  120A  118A  	fcall	_write_char
  2104                           
  2105                           ;Button_src.c: 259:                       write_char('u');
  2106  02F6  3075               	movlw	117
  2107  02F7  160A  118A  26D5  120A  118A  	fcall	_write_char
  2108                           
  2109                           ;Button_src.c: 260:                       write_char('r');
  2110  02FC  3072               	movlw	114
  2111  02FD  160A  118A  26D5  120A  118A  	fcall	_write_char
  2112                           
  2113                           ;Button_src.c: 261:                       write_char(':');
  2114  0302  303A               	movlw	58
  2115  0303  160A  118A  26D5  120A  118A  	fcall	_write_char
  2116  0308                     l3542:	
  2117                           
  2118                           ;Button_src.c: 262:                       b = 'x';
  2119  0308  3078               	movlw	120
  2120  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2121  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2122  030B  00D3               	movwf	??_time_settings
  2123  030C  0853               	movf	??_time_settings,w
  2124  030D  00C2               	movwf	_b
  2125  030E                     l3544:	
  2126                           
  2127                           ;Button_src.c: 263:                       button_delay();
  2128  030E  160A  118A  267C  120A  118A  	fcall	_button_delay
  2129                           
  2130                           ;Button_src.c: 264:                       z++;
  2131  0313  3001               	movlw	1
  2132  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0316  07AD               	addwf	_z,f
  2135  0317  1803               	skipnc
  2136  0318  0AAE               	incf	_z+1,f
  2137  0319  3000               	movlw	0
  2138  031A  07AE               	addwf	_z+1,f
  2139  031B                     l3546:	
  2140                           
  2141                           ;Button_src.c: 266:                   RC0 = 1;
  2142  031B  1407               	bsf	7,0	;volatile
  2143  031C                     l3548:	
  2144                           
  2145                           ;Button_src.c: 267:                   RC1 = 1;
  2146  031C  1487               	bsf	7,1	;volatile
  2147  031D                     l3550:	
  2148                           
  2149                           ;Button_src.c: 268:                   RC2 = 0;
  2150  031D  1107               	bcf	7,2	;volatile
  2151  031E                     l3552:	
  2152                           
  2153                           ;Button_src.c: 269:                   RC3 = 1;
  2154  031E  1587               	bsf	7,3	;volatile
  2155  031F                     l3554:	
  2156                           
  2157                           ;Button_src.c: 271:                   if(RC4 == 0&& z ==1){
  2158  031F  1A07               	btfsc	7,4	;volatile
  2159  0320  2B22               	goto	u2171
  2160  0321  2B23               	goto	u2170
  2161  0322                     u2171:	
  2162  0322  2B5E               	goto	l520
  2163  0323                     u2170:	
  2164  0323                     l3556:	
  2165  0323  032D               	decf	_z,w
  2166  0324  042E               	iorwf	_z+1,w
  2167  0325  1D03               	btfss	3,2
  2168  0326  2B28               	goto	u2181
  2169  0327  2B29               	goto	u2180
  2170  0328                     u2181:	
  2171  0328  2B5E               	goto	l520
  2172  0329                     u2180:	
  2173  0329                     l3558:	
  2174                           
  2175                           ;Button_src.c: 272:                     z++;
  2176  0329  3001               	movlw	1
  2177  032A  07AD               	addwf	_z,f
  2178  032B  1803               	skipnc
  2179  032C  0AAE               	incf	_z+1,f
  2180  032D  3000               	movlw	0
  2181  032E  07AE               	addwf	_z+1,f
  2182  032F                     l3560:	
  2183                           
  2184                           ;Button_src.c: 273:                     button_delay();
  2185  032F  160A  118A  267C  120A  118A  	fcall	_button_delay
  2186  0334                     l3562:	
  2187                           
  2188                           ;Button_src.c: 274:                     write_cmd(0x90);
  2189  0334  3090               	movlw	144
  2190  0335  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  2191  033A                     l3564:	
  2192                           
  2193                           ;Button_src.c: 275:                     write_char('M');
  2194  033A  304D               	movlw	77
  2195  033B  160A  118A  26D5  120A  118A  	fcall	_write_char
  2196  0340                     l3566:	
  2197                           
  2198                           ;Button_src.c: 276:                     write_char('i');
  2199  0340  3069               	movlw	105
  2200  0341  160A  118A  26D5  120A  118A  	fcall	_write_char
  2201  0346                     l3568:	
  2202                           
  2203                           ;Button_src.c: 277:                     write_char('n');
  2204  0346  306E               	movlw	110
  2205  0347  160A  118A  26D5  120A  118A  	fcall	_write_char
  2206  034C                     l3570:	
  2207                           
  2208                           ;Button_src.c: 278:                     write_char('s');
  2209  034C  3073               	movlw	115
  2210  034D  160A  118A  26D5  120A  118A  	fcall	_write_char
  2211  0352                     l3572:	
  2212                           
  2213                           ;Button_src.c: 279:                     write_char(':');
  2214  0352  303A               	movlw	58
  2215  0353  160A  118A  26D5  120A  118A  	fcall	_write_char
  2216  0358                     l3574:	
  2217                           
  2218                           ;Button_src.c: 280:                     b = 'y';
  2219  0358  3079               	movlw	121
  2220  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2221  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2222  035B  00D3               	movwf	??_time_settings
  2223  035C  0853               	movf	??_time_settings,w
  2224  035D  00C2               	movwf	_b
  2225  035E                     l520:	
  2226                           ;Button_src.c: 281:                   }
  2227                           
  2228                           
  2229                           ;Button_src.c: 282:                    write_cmd(0x88);
  2230  035E  3088               	movlw	136
  2231  035F  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  2232  0364                     l3576:	
  2233                           
  2234                           ;Button_src.c: 289:                   RC0 = 1;
  2235  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0366  1407               	bsf	7,0	;volatile
  2238  0367                     l3578:	
  2239                           
  2240                           ;Button_src.c: 290:                   RC1 = 1;
  2241  0367  1487               	bsf	7,1	;volatile
  2242  0368                     l3580:	
  2243                           
  2244                           ;Button_src.c: 291:                   RC2 = 0;
  2245  0368  1107               	bcf	7,2	;volatile
  2246  0369                     l3582:	
  2247                           
  2248                           ;Button_src.c: 292:                   RC3 = 1;
  2249  0369  1587               	bsf	7,3	;volatile
  2250                           
  2251                           ;Button_src.c: 294:              write_cmd(0x88);
  2252  036A  3088               	movlw	136
  2253  036B  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  2254                           
  2255                           ;Button_src.c: 295:              write_char('T');
  2256  0370  3054               	movlw	84
  2257  0371  160A  118A  26D5  120A  118A  	fcall	_write_char
  2258                           
  2259                           ;Button_src.c: 296:              write_char('i');
  2260  0376  3069               	movlw	105
  2261  0377  160A  118A  26D5  120A  118A  	fcall	_write_char
  2262                           
  2263                           ;Button_src.c: 297:              write_char('m');
  2264  037C  306D               	movlw	109
  2265  037D  160A  118A  26D5  120A  118A  	fcall	_write_char
  2266                           
  2267                           ;Button_src.c: 298:              write_char('e');
  2268  0382  3065               	movlw	101
  2269  0383  160A  118A  26D5  120A  118A  	fcall	_write_char
  2270                           
  2271                           ;Button_src.c: 299:              write_char(':');
  2272  0388  303A               	movlw	58
  2273  0389  160A  118A  26D5  120A  118A  	fcall	_write_char
  2274                           
  2275                           ;Button_src.c: 300:              write_char(y + '0');
  2276  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2277  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0390  082F               	movf	_y,w
  2279  0391  3E30               	addlw	48
  2280  0392  160A  118A  26D5  120A  118A  	fcall	_write_char
  2281                           
  2282                           ;Button_src.c: 301:              write_char(x + '0');
  2283  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0399  0831               	movf	_x,w
  2286  039A  3E30               	addlw	48
  2287  039B  160A  118A  26D5  120A  118A  	fcall	_write_char
  2288                           
  2289                           ;Button_src.c: 302:              write_char(':');
  2290  03A0  303A               	movlw	58
  2291  03A1  160A  118A  26D5  120A  118A  	fcall	_write_char
  2292                           
  2293                           ;Button_src.c: 303:              write_char(w + '0');
  2294  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2295  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2296  03A8  0833               	movf	_w,w
  2297  03A9  3E30               	addlw	48
  2298  03AA  160A  118A  26D5  120A  118A  	fcall	_write_char
  2299                           
  2300                           ;Button_src.c: 304:              write_char(t + '0');
  2301  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2302  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2303  03B1  0835               	movf	_t,w
  2304  03B2  3E30               	addlw	48
  2305  03B3  160A  118A  26D5  120A  118A  	fcall	_write_char
  2306  03B8                     l3584:	
  2307                           
  2308                           ;Button_src.c: 306:             RC0 = 0;
  2309  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2310  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2311  03BA  1007               	bcf	7,0	;volatile
  2312  03BB                     l3586:	
  2313                           
  2314                           ;Button_src.c: 307:             RC1 = 1;
  2315  03BB  1487               	bsf	7,1	;volatile
  2316  03BC                     l3588:	
  2317                           
  2318                           ;Button_src.c: 308:             RC2 = 1;
  2319  03BC  1507               	bsf	7,2	;volatile
  2320  03BD                     l3590:	
  2321                           
  2322                           ;Button_src.c: 309:             RC3 = 1;
  2323  03BD  1587               	bsf	7,3	;volatile
  2324  03BE                     l3592:	
  2325                           
  2326                           ;Button_src.c: 310:             if (RC7 == 0 ){
  2327  03BE  1B87               	btfsc	7,7	;volatile
  2328  03BF  2BC1               	goto	u2191
  2329  03C0  2BC2               	goto	u2190
  2330  03C1                     u2191:	
  2331  03C1  28F5               	goto	l511
  2332  03C2                     u2190:	
  2333  03C2                     l3594:	
  2334                           
  2335                           ;Button_src.c: 311:             a = 0x00;
  2336  03C2  01C3               	clrf	_a
  2337                           
  2338                           ;Button_src.c: 312:             c = 0x00;
  2339  03C3  01C1               	clrf	_c
  2340                           
  2341                           ;Button_src.c: 313:             x = 0;
  2342  03C4  01B1               	clrf	_x
  2343  03C5  01B2               	clrf	_x+1
  2344                           
  2345                           ;Button_src.c: 314:             y = 0;
  2346  03C6  01AF               	clrf	_y
  2347  03C7  01B0               	clrf	_y+1
  2348                           
  2349                           ;Button_src.c: 315:             w = 0;
  2350  03C8  01B3               	clrf	_w
  2351  03C9  01B4               	clrf	_w+1
  2352                           
  2353                           ;Button_src.c: 316:             t = 0;
  2354  03CA  01B5               	clrf	_t
  2355  03CB  01B6               	clrf	_t+1
  2356  03CC                     l3596:	
  2357                           
  2358                           ;Button_src.c: 317:             write_cmd(0x1);
  2359  03CC  3001               	movlw	1
  2360  03CD  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  2361  03D2                     l518:	
  2362                           ;Button_src.c: 318:             break;
  2363                           
  2364  03D2  0008               	return
  2365  03D3                     __end_of_time_settings:	
  2366                           
  2367                           	psect	text2
  2368  0D78                     __ptext2:	
  2369 ;; *************** function _thermometer_threshhold_settings *****************
  2370 ;; Defined at:
  2371 ;;		line 19 in file "Button_src.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  i               2    8[BANK0 ] int 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         0       0       0       0       0
  2386 ;;      Locals:         0       2       0       0       0
  2387 ;;      Temps:          0       3       0       0       0
  2388 ;;      Totals:         0       5       0       0       0
  2389 ;;Total ram usage:        5 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    3
  2392 ;; This function calls:
  2393 ;;		_button_delay
  2394 ;;		_decrementor
  2395 ;;		_incrementor
  2396 ;;		_modulus_func
  2397 ;;		_write_char
  2398 ;;		_write_cmd
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function _thermometer_threshhold_settings
  2406  0D78                     _thermometer_threshhold_settings:	
  2407  0D78                     l3060:	
  2408                           ;incstack = 0
  2409                           ; Regs used in _thermometer_threshhold_settings: [wreg+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2410                           
  2411                           
  2412                           ;Button_src.c: 20:  RC0 = 1;
  2413  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0D7A  1407               	bsf	7,0	;volatile
  2416                           
  2417                           ;Button_src.c: 21:  RC1 = 0;
  2418  0D7B  1087               	bcf	7,1	;volatile
  2419                           
  2420                           ;Button_src.c: 22:  RC2 = 1;
  2421  0D7C  1507               	bsf	7,2	;volatile
  2422                           
  2423                           ;Button_src.c: 23:  RC3 = 1;
  2424  0D7D  1587               	bsf	7,3	;volatile
  2425                           
  2426                           ;Button_src.c: 24:   if (RC4 == 0){
  2427  0D7E  1A07               	btfsc	7,4	;volatile
  2428  0D7F  2D81               	goto	u1761
  2429  0D80  2D82               	goto	u1760
  2430  0D81                     u1761:	
  2431  0D81  2FFF               	goto	l501
  2432  0D82                     u1760:	
  2433  0D82                     l3062:	
  2434                           
  2435                           ;Button_src.c: 25:       write_cmd(0x1);
  2436  0D82  3001               	movlw	1
  2437  0D83  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2438  0D88                     l495:	
  2439                           ;Button_src.c: 26:       for(;;){
  2440                           
  2441                           
  2442                           ;Button_src.c: 27:             write_cmd(0x80);
  2443  0D88  3080               	movlw	128
  2444  0D89  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2445                           
  2446                           ;Button_src.c: 28:             write_char('t');
  2447  0D8E  3074               	movlw	116
  2448  0D8F  160A  118A  26D5  120A  158A  	fcall	_write_char
  2449                           
  2450                           ;Button_src.c: 29:             write_char('h');
  2451  0D94  3068               	movlw	104
  2452  0D95  160A  118A  26D5  120A  158A  	fcall	_write_char
  2453                           
  2454                           ;Button_src.c: 30:             write_char('r');
  2455  0D9A  3072               	movlw	114
  2456  0D9B  160A  118A  26D5  120A  158A  	fcall	_write_char
  2457                           
  2458                           ;Button_src.c: 31:             write_char('e');
  2459  0DA0  3065               	movlw	101
  2460  0DA1  160A  118A  26D5  120A  158A  	fcall	_write_char
  2461                           
  2462                           ;Button_src.c: 32:             write_char('s');
  2463  0DA6  3073               	movlw	115
  2464  0DA7  160A  118A  26D5  120A  158A  	fcall	_write_char
  2465                           
  2466                           ;Button_src.c: 33:             write_char('h');
  2467  0DAC  3068               	movlw	104
  2468  0DAD  160A  118A  26D5  120A  158A  	fcall	_write_char
  2469                           
  2470                           ;Button_src.c: 34:             write_char('o');
  2471  0DB2  306F               	movlw	111
  2472  0DB3  160A  118A  26D5  120A  158A  	fcall	_write_char
  2473                           
  2474                           ;Button_src.c: 35:             write_char('l');
  2475  0DB8  306C               	movlw	108
  2476  0DB9  160A  118A  26D5  120A  158A  	fcall	_write_char
  2477                           
  2478                           ;Button_src.c: 36:             write_char('d');
  2479  0DBE  3064               	movlw	100
  2480  0DBF  160A  118A  26D5  120A  158A  	fcall	_write_char
  2481                           
  2482                           ;Button_src.c: 38:             write_cmd(0x90);
  2483  0DC4  3090               	movlw	144
  2484  0DC5  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2485                           
  2486                           ;Button_src.c: 39:             write_char('C');
  2487  0DCA  3043               	movlw	67
  2488  0DCB  160A  118A  26D5  120A  158A  	fcall	_write_char
  2489                           
  2490                           ;Button_src.c: 40:             write_char('u');
  2491  0DD0  3075               	movlw	117
  2492  0DD1  160A  118A  26D5  120A  158A  	fcall	_write_char
  2493                           
  2494                           ;Button_src.c: 41:             write_char('r');
  2495  0DD6  3072               	movlw	114
  2496  0DD7  160A  118A  26D5  120A  158A  	fcall	_write_char
  2497                           
  2498                           ;Button_src.c: 42:             write_char('r');
  2499  0DDC  3072               	movlw	114
  2500  0DDD  160A  118A  26D5  120A  158A  	fcall	_write_char
  2501                           
  2502                           ;Button_src.c: 43:             write_char('e');
  2503  0DE2  3065               	movlw	101
  2504  0DE3  160A  118A  26D5  120A  158A  	fcall	_write_char
  2505                           
  2506                           ;Button_src.c: 44:             write_char('n');
  2507  0DE8  306E               	movlw	110
  2508  0DE9  160A  118A  26D5  120A  158A  	fcall	_write_char
  2509                           
  2510                           ;Button_src.c: 45:             write_char('t');
  2511  0DEE  3074               	movlw	116
  2512  0DEF  160A  118A  26D5  120A  158A  	fcall	_write_char
  2513                           
  2514                           ;Button_src.c: 46:             write_char(':');
  2515  0DF4  303A               	movlw	58
  2516  0DF5  160A  118A  26D5  120A  158A  	fcall	_write_char
  2517                           
  2518                           ;Button_src.c: 48:             write_char(var1 + '0');
  2519  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0DFC  083B               	movf	_var1,w
  2522  0DFD  3E30               	addlw	48
  2523  0DFE  160A  118A  26D5  120A  158A  	fcall	_write_char
  2524                           
  2525                           ;Button_src.c: 49:             write_char(var2 + '0');
  2526  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0E05  083A               	movf	_var2,w
  2529  0E06  3E30               	addlw	48
  2530  0E07  160A  118A  26D5  120A  158A  	fcall	_write_char
  2531                           
  2532                           ;Button_src.c: 51:             write_cmd(0x88);
  2533  0E0C  3088               	movlw	136
  2534  0E0D  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2535                           
  2536                           ;Button_src.c: 52:             write_char('S');
  2537  0E12  3053               	movlw	83
  2538  0E13  160A  118A  26D5  120A  158A  	fcall	_write_char
  2539                           
  2540                           ;Button_src.c: 53:             write_char('e');
  2541  0E18  3065               	movlw	101
  2542  0E19  160A  118A  26D5  120A  158A  	fcall	_write_char
  2543                           
  2544                           ;Button_src.c: 54:             write_char('t');
  2545  0E1E  3074               	movlw	116
  2546  0E1F  160A  118A  26D5  120A  158A  	fcall	_write_char
  2547                           
  2548                           ;Button_src.c: 55:             write_char('_');
  2549  0E24  305F               	movlw	95
  2550  0E25  160A  118A  26D5  120A  158A  	fcall	_write_char
  2551                           
  2552                           ;Button_src.c: 56:             write_char('t');
  2553  0E2A  3074               	movlw	116
  2554  0E2B  160A  118A  26D5  120A  158A  	fcall	_write_char
  2555                           
  2556                           ;Button_src.c: 57:             write_char('h');
  2557  0E30  3068               	movlw	104
  2558  0E31  160A  118A  26D5  120A  158A  	fcall	_write_char
  2559                           
  2560                           ;Button_src.c: 58:             write_char('r');
  2561  0E36  3072               	movlw	114
  2562  0E37  160A  118A  26D5  120A  158A  	fcall	_write_char
  2563                           
  2564                           ;Button_src.c: 59:             write_char('e');
  2565  0E3C  3065               	movlw	101
  2566  0E3D  160A  118A  26D5  120A  158A  	fcall	_write_char
  2567                           
  2568                           ;Button_src.c: 60:             write_char('s');
  2569  0E42  3073               	movlw	115
  2570  0E43  160A  118A  26D5  120A  158A  	fcall	_write_char
  2571                           
  2572                           ;Button_src.c: 61:             write_char('h');
  2573  0E48  3068               	movlw	104
  2574  0E49  160A  118A  26D5  120A  158A  	fcall	_write_char
  2575                           
  2576                           ;Button_src.c: 62:             write_char('o');
  2577  0E4E  306F               	movlw	111
  2578  0E4F  160A  118A  26D5  120A  158A  	fcall	_write_char
  2579                           
  2580                           ;Button_src.c: 63:             write_char('l');
  2581  0E54  306C               	movlw	108
  2582  0E55  160A  118A  26D5  120A  158A  	fcall	_write_char
  2583                           
  2584                           ;Button_src.c: 64:             write_char('d');
  2585  0E5A  3064               	movlw	100
  2586  0E5B  160A  118A  26D5  120A  158A  	fcall	_write_char
  2587                           
  2588                           ;Button_src.c: 65:             write_char(':');
  2589  0E60  303A               	movlw	58
  2590  0E61  160A  118A  26D5  120A  158A  	fcall	_write_char
  2591                           
  2592                           ;Button_src.c: 67:             write_cmd(0x98);
  2593  0E66  3098               	movlw	152
  2594  0E67  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2595  0E6C                     l3064:	
  2596                           
  2597                           ;Button_src.c: 68:             RC0 = 1;
  2598  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0E6E  1407               	bsf	7,0	;volatile
  2601  0E6F                     l3066:	
  2602                           
  2603                           ;Button_src.c: 69:             RC1 = 0;
  2604  0E6F  1087               	bcf	7,1	;volatile
  2605  0E70                     l3068:	
  2606                           
  2607                           ;Button_src.c: 70:             RC2 = 1;
  2608  0E70  1507               	bsf	7,2	;volatile
  2609  0E71                     l3070:	
  2610                           
  2611                           ;Button_src.c: 71:             RC3 = 1;
  2612  0E71  1587               	bsf	7,3	;volatile
  2613  0E72                     l3072:	
  2614                           
  2615                           ;Button_src.c: 72:             t = 0;
  2616  0E72  01B5               	clrf	_t
  2617  0E73  01B6               	clrf	_t+1
  2618  0E74                     l3074:	
  2619                           
  2620                           ;Button_src.c: 73:             w = 0;
  2621  0E74  01B3               	clrf	_w
  2622  0E75  01B4               	clrf	_w+1
  2623  0E76                     l3076:	
  2624                           
  2625                           ;Button_src.c: 74:             x = 0;
  2626  0E76  01B1               	clrf	_x
  2627  0E77  01B2               	clrf	_x+1
  2628  0E78                     l3078:	
  2629                           
  2630                           ;Button_src.c: 75:             y = 0;
  2631  0E78  01AF               	clrf	_y
  2632  0E79  01B0               	clrf	_y+1
  2633  0E7A                     l3080:	
  2634                           
  2635                           ;Button_src.c: 76:             x = 0x00;
  2636  0E7A  01B1               	clrf	_x
  2637  0E7B  01B2               	clrf	_x+1
  2638  0E7C                     l3082:	
  2639                           
  2640                           ;Button_src.c: 78:                  RC0 = 1;
  2641  0E7C  1407               	bsf	7,0	;volatile
  2642  0E7D                     l3084:	
  2643                           
  2644                           ;Button_src.c: 79:                  RC1 = 0;
  2645  0E7D  1087               	bcf	7,1	;volatile
  2646  0E7E                     l3086:	
  2647                           
  2648                           ;Button_src.c: 80:                  RC2 = 1;
  2649  0E7E  1507               	bsf	7,2	;volatile
  2650  0E7F                     l3088:	
  2651                           
  2652                           ;Button_src.c: 81:                  RC3 = 1;
  2653  0E7F  1587               	bsf	7,3	;volatile
  2654  0E80                     l3090:	
  2655                           
  2656                           ;Button_src.c: 83:                 if(RC7==0){
  2657  0E80  1B87               	btfsc	7,7	;volatile
  2658  0E81  2E83               	goto	u1771
  2659  0E82  2E84               	goto	u1770
  2660  0E83                     u1771:	
  2661  0E83  2EE7               	goto	l3110
  2662  0E84                     u1770:	
  2663  0E84                     l3092:	
  2664                           
  2665                           ;Button_src.c: 84:                     write_cmd(0x98);
  2666  0E84  3098               	movlw	152
  2667  0E85  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2668  0E8A                     l3094:	
  2669                           
  2670                           ;Button_src.c: 85:                     x++;
  2671  0E8A  3001               	movlw	1
  2672  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  2673  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  2674  0E8D  07B1               	addwf	_x,f
  2675  0E8E  1803               	skipnc
  2676  0E8F  0AB2               	incf	_x+1,f
  2677  0E90  3000               	movlw	0
  2678  0E91  07B2               	addwf	_x+1,f
  2679  0E92                     l3096:	
  2680                           
  2681                           ;Button_src.c: 86:                     y = (unsigned char )y;
  2682  0E92  082F               	movf	_y,w
  2683  0E93  00D3               	movwf	??_thermometer_threshhold_settings
  2684  0E94  01D4               	clrf	??_thermometer_threshhold_settings+1
  2685  0E95  0853               	movf	??_thermometer_threshhold_settings,w
  2686  0E96  00AF               	movwf	_y
  2687  0E97  0854               	movf	??_thermometer_threshhold_settings+1,w
  2688  0E98  00B0               	movwf	_y+1
  2689  0E99                     l3098:	
  2690                           
  2691                           ;Button_src.c: 87:                     x = (unsigned char )(modulus_func(x,10));
  2692  0E99  0832               	movf	_x+1,w
  2693  0E9A  00F8               	movwf	modulus_func@x+1
  2694  0E9B  0831               	movf	_x,w
  2695  0E9C  00F7               	movwf	modulus_func@x
  2696  0E9D  300A               	movlw	10
  2697  0E9E  00F9               	movwf	modulus_func@y
  2698  0E9F  3000               	movlw	0
  2699  0EA0  00FA               	movwf	modulus_func@y+1
  2700  0EA1  160A  118A  261E  120A  158A  	fcall	_modulus_func
  2701  0EA6  0877               	movf	?_modulus_func,w
  2702  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0EA9  00D3               	movwf	??_thermometer_threshhold_settings
  2705  0EAA  01D4               	clrf	??_thermometer_threshhold_settings+1
  2706  0EAB  0853               	movf	??_thermometer_threshhold_settings,w
  2707  0EAC  00B1               	movwf	_x
  2708  0EAD  0854               	movf	??_thermometer_threshhold_settings+1,w
  2709  0EAE  00B2               	movwf	_x+1
  2710  0EAF                     l3100:	
  2711                           
  2712                           ;Button_src.c: 88:                     write_char(y + '0');
  2713  0EAF  082F               	movf	_y,w
  2714  0EB0  3E30               	addlw	48
  2715  0EB1  160A  118A  26D5  120A  158A  	fcall	_write_char
  2716  0EB6                     l3102:	
  2717                           
  2718                           ;Button_src.c: 89:                     write_char(x + '0');
  2719  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  2720  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  2721  0EB8  0831               	movf	_x,w
  2722  0EB9  3E30               	addlw	48
  2723  0EBA  160A  118A  26D5  120A  158A  	fcall	_write_char
  2724  0EBF                     l3104:	
  2725                           
  2726                           ;Button_src.c: 90:                     y = incrementor(y,x,'9');
  2727  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0EC1  0830               	movf	_y+1,w
  2730  0EC2  00CF               	movwf	incrementor@upper_val+1
  2731  0EC3  082F               	movf	_y,w
  2732  0EC4  00CE               	movwf	incrementor@upper_val
  2733  0EC5  0832               	movf	_x+1,w
  2734  0EC6  00D1               	movwf	incrementor@lower_val+1
  2735  0EC7  0831               	movf	_x,w
  2736  0EC8  00D0               	movwf	incrementor@lower_val
  2737  0EC9  3039               	movlw	57
  2738  0ECA  00D3               	movwf	??_thermometer_threshhold_settings
  2739  0ECB  0853               	movf	??_thermometer_threshhold_settings,w
  2740  0ECC  00D2               	movwf	incrementor@z
  2741  0ECD  160A  118A  27A8  120A  158A  	fcall	_incrementor
  2742  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0ED4  00D4               	movwf	??_thermometer_threshhold_settings+1
  2745  0ED5  01D5               	clrf	??_thermometer_threshhold_settings+2
  2746  0ED6  0854               	movf	??_thermometer_threshhold_settings+1,w
  2747  0ED7  00AF               	movwf	_y
  2748  0ED8  0855               	movf	??_thermometer_threshhold_settings+2,w
  2749  0ED9  00B0               	movwf	_y+1
  2750  0EDA                     l3106:	
  2751                           
  2752                           ;Button_src.c: 91:                     t = x;
  2753  0EDA  0832               	movf	_x+1,w
  2754  0EDB  00B6               	movwf	_t+1
  2755  0EDC  0831               	movf	_x,w
  2756  0EDD  00B5               	movwf	_t
  2757  0EDE                     l3108:	
  2758                           
  2759                           ;Button_src.c: 92:                     w = y;
  2760  0EDE  0830               	movf	_y+1,w
  2761  0EDF  00B4               	movwf	_w+1
  2762  0EE0  082F               	movf	_y,w
  2763  0EE1  00B3               	movwf	_w
  2764                           
  2765                           ;Button_src.c: 93:                     button_delay();
  2766  0EE2  160A  118A  267C  120A  158A  	fcall	_button_delay
  2767  0EE7                     l3110:	
  2768                           
  2769                           ;Button_src.c: 95:                   RC0 = 0;
  2770  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0EE9  1007               	bcf	7,0	;volatile
  2773  0EEA                     l3112:	
  2774                           
  2775                           ;Button_src.c: 96:                     RC1 = 1;
  2776  0EEA  1487               	bsf	7,1	;volatile
  2777  0EEB                     l3114:	
  2778                           
  2779                           ;Button_src.c: 97:                     RC2 = 1;
  2780  0EEB  1507               	bsf	7,2	;volatile
  2781  0EEC                     l3116:	
  2782                           
  2783                           ;Button_src.c: 98:                     RC3 = 1;
  2784  0EEC  1587               	bsf	7,3	;volatile
  2785  0EED                     l3118:	
  2786                           
  2787                           ;Button_src.c: 99:                     if(RC6 == 0){
  2788  0EED  1B07               	btfsc	7,6	;volatile
  2789  0EEE  2EF0               	goto	u1781
  2790  0EEF  2EF1               	goto	u1780
  2791  0EF0                     u1781:	
  2792  0EF0  2F37               	goto	l498
  2793  0EF1                     u1780:	
  2794  0EF1                     l3120:	
  2795                           
  2796                           ;Button_src.c: 100:                         var1 = y;
  2797  0EF1  082F               	movf	_y,w
  2798  0EF2  00D3               	movwf	??_thermometer_threshhold_settings
  2799  0EF3  0853               	movf	??_thermometer_threshhold_settings,w
  2800  0EF4  00BB               	movwf	_var1
  2801                           
  2802                           ;Button_src.c: 101:                         var2 = x;
  2803  0EF5  0831               	movf	_x,w
  2804  0EF6  00D3               	movwf	??_thermometer_threshhold_settings
  2805  0EF7  0853               	movf	??_thermometer_threshhold_settings,w
  2806  0EF8  00BA               	movwf	_var2
  2807  0EF9                     l3122:	
  2808                           
  2809                           ;Button_src.c: 103:                         write_cmd(0x1);
  2810  0EF9  3001               	movlw	1
  2811  0EFA  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2812  0EFF                     l3124:	
  2813                           
  2814                           ;Button_src.c: 104:                         write_char('S');
  2815  0EFF  3053               	movlw	83
  2816  0F00  160A  118A  26D5  120A  158A  	fcall	_write_char
  2817  0F05                     l3126:	
  2818                           
  2819                           ;Button_src.c: 105:                         write_char('A');
  2820  0F05  3041               	movlw	65
  2821  0F06  160A  118A  26D5  120A  158A  	fcall	_write_char
  2822  0F0B                     l3128:	
  2823                           
  2824                           ;Button_src.c: 106:                         write_char('V');
  2825  0F0B  3056               	movlw	86
  2826  0F0C  160A  118A  26D5  120A  158A  	fcall	_write_char
  2827  0F11                     l3130:	
  2828                           
  2829                           ;Button_src.c: 107:                         write_char('E');
  2830  0F11  3045               	movlw	69
  2831  0F12  160A  118A  26D5  120A  158A  	fcall	_write_char
  2832  0F17                     l3132:	
  2833                           
  2834                           ;Button_src.c: 108:                         write_char('D');
  2835  0F17  3044               	movlw	68
  2836  0F18  160A  118A  26D5  120A  158A  	fcall	_write_char
  2837  0F1D                     l3134:	
  2838                           
  2839                           ;Button_src.c: 109:                         for(int i=0;i<30000;i++);
  2840  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0F1F  01D6               	clrf	thermometer_threshhold_settings@i
  2843  0F20  01D7               	clrf	thermometer_threshhold_settings@i+1
  2844  0F21                     l3140:	
  2845  0F21  3001               	movlw	1
  2846  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0F24  07D6               	addwf	thermometer_threshhold_settings@i,f
  2849  0F25  1803               	skipnc
  2850  0F26  0AD7               	incf	thermometer_threshhold_settings@i+1,f
  2851  0F27  3000               	movlw	0
  2852  0F28  07D7               	addwf	thermometer_threshhold_settings@i+1,f
  2853  0F29                     l3142:	
  2854  0F29  0857               	movf	thermometer_threshhold_settings@i+1,w
  2855  0F2A  3A80               	xorlw	128
  2856  0F2B  00FF               	movwf	btemp+1
  2857  0F2C  30F5               	movlw	245
  2858  0F2D  027F               	subwf	btemp+1,w
  2859  0F2E  1D03               	skipz
  2860  0F2F  2F32               	goto	u1795
  2861  0F30  3030               	movlw	48
  2862  0F31  0256               	subwf	thermometer_threshhold_settings@i,w
  2863  0F32                     u1795:	
  2864  0F32  1C03               	skipc
  2865  0F33  2F35               	goto	u1791
  2866  0F34  2F36               	goto	u1790
  2867  0F35                     u1791:	
  2868  0F35  2F21               	goto	l3140
  2869  0F36                     u1790:	
  2870  0F36  2FFF               	goto	l501
  2871  0F37                     l498:	
  2872                           ;Button_src.c: 111:                     }
  2873                           
  2874                           
  2875                           ;Button_src.c: 112:                  RC0 = 1;
  2876  0F37  1407               	bsf	7,0	;volatile
  2877                           
  2878                           ;Button_src.c: 113:                  RC1 = 1;
  2879  0F38  1487               	bsf	7,1	;volatile
  2880                           
  2881                           ;Button_src.c: 114:                  RC2 = 0;
  2882  0F39  1107               	bcf	7,2	;volatile
  2883                           
  2884                           ;Button_src.c: 115:                  RC3 = 1;
  2885  0F3A  1587               	bsf	7,3	;volatile
  2886                           
  2887                           ;Button_src.c: 117:                  if(RC7 == 0){
  2888  0F3B  1B87               	btfsc	7,7	;volatile
  2889  0F3C  2F3E               	goto	u1801
  2890  0F3D  2F3F               	goto	u1800
  2891  0F3E                     u1801:	
  2892  0F3E  2FB5               	goto	l3164
  2893  0F3F                     u1800:	
  2894  0F3F                     l3144:	
  2895                           
  2896                           ;Button_src.c: 118:                     write_cmd(0x98);
  2897  0F3F  3098               	movlw	152
  2898  0F40  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  2899  0F45                     l3146:	
  2900                           
  2901                           ;Button_src.c: 119:                       t--;
  2902  0F45  3001               	movlw	1
  2903  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0F48  02B5               	subwf	_t,f
  2906  0F49  3000               	movlw	0
  2907  0F4A  1C03               	skipc
  2908  0F4B  03B6               	decf	_t+1,f
  2909  0F4C  02B6               	subwf	_t+1,f
  2910  0F4D                     l3148:	
  2911                           
  2912                           ;Button_src.c: 120:                     w = (unsigned char )w;
  2913  0F4D  0833               	movf	_w,w
  2914  0F4E  00D3               	movwf	??_thermometer_threshhold_settings
  2915  0F4F  01D4               	clrf	??_thermometer_threshhold_settings+1
  2916  0F50  0853               	movf	??_thermometer_threshhold_settings,w
  2917  0F51  00B3               	movwf	_w
  2918  0F52  0854               	movf	??_thermometer_threshhold_settings+1,w
  2919  0F53  00B4               	movwf	_w+1
  2920  0F54                     l3150:	
  2921                           
  2922                           ;Button_src.c: 121:                     t = (unsigned char )(modulus_func(t,10));
  2923  0F54  0836               	movf	_t+1,w
  2924  0F55  00F8               	movwf	modulus_func@x+1
  2925  0F56  0835               	movf	_t,w
  2926  0F57  00F7               	movwf	modulus_func@x
  2927  0F58  300A               	movlw	10
  2928  0F59  00F9               	movwf	modulus_func@y
  2929  0F5A  3000               	movlw	0
  2930  0F5B  00FA               	movwf	modulus_func@y+1
  2931  0F5C  160A  118A  261E  120A  158A  	fcall	_modulus_func
  2932  0F61  0877               	movf	?_modulus_func,w
  2933  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0F64  00D3               	movwf	??_thermometer_threshhold_settings
  2936  0F65  01D4               	clrf	??_thermometer_threshhold_settings+1
  2937  0F66  0853               	movf	??_thermometer_threshhold_settings,w
  2938  0F67  00B5               	movwf	_t
  2939  0F68  0854               	movf	??_thermometer_threshhold_settings+1,w
  2940  0F69  00B6               	movwf	_t+1
  2941  0F6A                     l3152:	
  2942                           
  2943                           ;Button_src.c: 122:                     write_char(w + '0');
  2944  0F6A  0833               	movf	_w,w
  2945  0F6B  3E30               	addlw	48
  2946  0F6C  160A  118A  26D5  120A  158A  	fcall	_write_char
  2947  0F71                     l3154:	
  2948                           
  2949                           ;Button_src.c: 123:                     write_char(t + '0');
  2950  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0F73  0835               	movf	_t,w
  2953  0F74  3E30               	addlw	48
  2954  0F75  160A  118A  26D5  120A  158A  	fcall	_write_char
  2955  0F7A                     l3156:	
  2956                           
  2957                           ;Button_src.c: 124:                     w = decrementor(w,t,'0');
  2958  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0F7C  0834               	movf	_w+1,w
  2961  0F7D  00CF               	movwf	decrementor@lower_val+1
  2962  0F7E  0833               	movf	_w,w
  2963  0F7F  00CE               	movwf	decrementor@lower_val
  2964  0F80  0836               	movf	_t+1,w
  2965  0F81  00D1               	movwf	decrementor@upper_val+1
  2966  0F82  0835               	movf	_t,w
  2967  0F83  00D0               	movwf	decrementor@upper_val
  2968  0F84  3030               	movlw	48
  2969  0F85  00D3               	movwf	??_thermometer_threshhold_settings
  2970  0F86  0853               	movf	??_thermometer_threshhold_settings,w
  2971  0F87  00D2               	movwf	decrementor@z
  2972  0F88  120A  158A  2002  120A  158A  	fcall	_decrementor
  2973  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  2975  0F8F  00D4               	movwf	??_thermometer_threshhold_settings+1
  2976  0F90  01D5               	clrf	??_thermometer_threshhold_settings+2
  2977  0F91  0854               	movf	??_thermometer_threshhold_settings+1,w
  2978  0F92  00B3               	movwf	_w
  2979  0F93  0855               	movf	??_thermometer_threshhold_settings+2,w
  2980  0F94  00B4               	movwf	_w+1
  2981  0F95                     l3158:	
  2982                           
  2983                           ;Button_src.c: 125:                     if((t + '0')=='0'){
  2984  0F95  0835               	movf	_t,w
  2985  0F96  3E30               	addlw	48
  2986  0F97  00D3               	movwf	??_thermometer_threshhold_settings
  2987  0F98  0836               	movf	_t+1,w
  2988  0F99  1803               	skipnc
  2989  0F9A  3E01               	addlw	1
  2990  0F9B  3E00               	addlw	0
  2991  0F9C  00D4               	movwf	??_thermometer_threshhold_settings+1
  2992  0F9D  3030               	movlw	48
  2993  0F9E  0653               	xorwf	??_thermometer_threshhold_settings,w
  2994  0F9F  0454               	iorwf	??_thermometer_threshhold_settings+1,w
  2995  0FA0  1D03               	btfss	3,2
  2996  0FA1  2FA3               	goto	u1811
  2997  0FA2  2FA4               	goto	u1810
  2998  0FA3                     u1811:	
  2999  0FA3  2FA8               	goto	l503
  3000  0FA4                     u1810:	
  3001  0FA4                     l3160:	
  3002                           
  3003                           ;Button_src.c: 126:                         t = 10;
  3004  0FA4  300A               	movlw	10
  3005  0FA5  00B5               	movwf	_t
  3006  0FA6  3000               	movlw	0
  3007  0FA7  00B6               	movwf	_t+1
  3008  0FA8                     l503:	
  3009                           ;Button_src.c: 127:                     }
  3010                           
  3011                           
  3012                           ;Button_src.c: 129:                     x = t;
  3013  0FA8  0836               	movf	_t+1,w
  3014  0FA9  00B2               	movwf	_x+1
  3015  0FAA  0835               	movf	_t,w
  3016  0FAB  00B1               	movwf	_x
  3017                           
  3018                           ;Button_src.c: 130:                     y = w;
  3019  0FAC  0834               	movf	_w+1,w
  3020  0FAD  00B0               	movwf	_y+1
  3021  0FAE  0833               	movf	_w,w
  3022  0FAF  00AF               	movwf	_y
  3023  0FB0                     l3162:	
  3024                           
  3025                           ;Button_src.c: 131:                     button_delay();
  3026  0FB0  160A  118A  267C  120A  158A  	fcall	_button_delay
  3027  0FB5                     l3164:	
  3028                           
  3029                           ;Button_src.c: 133:                 RC0 = 0;
  3030  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0FB7  1007               	bcf	7,0	;volatile
  3033  0FB8                     l3166:	
  3034                           
  3035                           ;Button_src.c: 134:                 RC1 = 1;
  3036  0FB8  1487               	bsf	7,1	;volatile
  3037  0FB9                     l3168:	
  3038                           
  3039                           ;Button_src.c: 135:                 RC2 = 1;
  3040  0FB9  1507               	bsf	7,2	;volatile
  3041  0FBA                     l3170:	
  3042                           
  3043                           ;Button_src.c: 136:                 RC3 = 1;
  3044  0FBA  1587               	bsf	7,3	;volatile
  3045  0FBB                     l3172:	
  3046                           
  3047                           ;Button_src.c: 137:                     if(RC6 == 0){
  3048  0FBB  1B07               	btfsc	7,6	;volatile
  3049  0FBC  2FBE               	goto	u1821
  3050  0FBD  2FBF               	goto	u1820
  3051  0FBE                     u1821:	
  3052  0FBE  2FF1               	goto	l504
  3053  0FBF                     u1820:	
  3054  0FBF                     l3174:	
  3055                           
  3056                           ;Button_src.c: 138:                         var1 = w;
  3057  0FBF  0833               	movf	_w,w
  3058  0FC0  00D3               	movwf	??_thermometer_threshhold_settings
  3059  0FC1  0853               	movf	??_thermometer_threshhold_settings,w
  3060  0FC2  00BB               	movwf	_var1
  3061                           
  3062                           ;Button_src.c: 139:                         var2 = t;
  3063  0FC3  0835               	movf	_t,w
  3064  0FC4  00D3               	movwf	??_thermometer_threshhold_settings
  3065  0FC5  0853               	movf	??_thermometer_threshhold_settings,w
  3066  0FC6  00BA               	movwf	_var2
  3067  0FC7                     l3176:	
  3068                           
  3069                           ;Button_src.c: 141:                         write_cmd(0x1);
  3070  0FC7  3001               	movlw	1
  3071  0FC8  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  3072  0FCD                     l3178:	
  3073                           
  3074                           ;Button_src.c: 142:                         write_char('S');
  3075  0FCD  3053               	movlw	83
  3076  0FCE  160A  118A  26D5  120A  158A  	fcall	_write_char
  3077  0FD3                     l3180:	
  3078                           
  3079                           ;Button_src.c: 143:                         write_char('A');
  3080  0FD3  3041               	movlw	65
  3081  0FD4  160A  118A  26D5  120A  158A  	fcall	_write_char
  3082  0FD9                     l3182:	
  3083                           
  3084                           ;Button_src.c: 144:                         write_char('V');
  3085  0FD9  3056               	movlw	86
  3086  0FDA  160A  118A  26D5  120A  158A  	fcall	_write_char
  3087  0FDF                     l3184:	
  3088                           
  3089                           ;Button_src.c: 145:                         write_char('E');
  3090  0FDF  3045               	movlw	69
  3091  0FE0  160A  118A  26D5  120A  158A  	fcall	_write_char
  3092  0FE5                     l3186:	
  3093                           
  3094                           ;Button_src.c: 146:                         write_char('D');
  3095  0FE5  3044               	movlw	68
  3096  0FE6  160A  118A  26D5  120A  158A  	fcall	_write_char
  3097  0FEB                     l3188:	
  3098                           
  3099                           ;Button_src.c: 147:                         button_delay();
  3100  0FEB  160A  118A  267C  120A  158A  	fcall	_button_delay
  3101  0FF0  2FFF               	goto	l501
  3102  0FF1                     l504:	
  3103                           ;Button_src.c: 149:                     }
  3104                           
  3105                           
  3106                           ;Button_src.c: 150:             RC0 = 0;
  3107  0FF1  1007               	bcf	7,0	;volatile
  3108                           
  3109                           ;Button_src.c: 151:             RC1 = 1;
  3110  0FF2  1487               	bsf	7,1	;volatile
  3111                           
  3112                           ;Button_src.c: 152:             RC2 = 1;
  3113  0FF3  1507               	bsf	7,2	;volatile
  3114                           
  3115                           ;Button_src.c: 153:             RC3 = 1;
  3116  0FF4  1587               	bsf	7,3	;volatile
  3117                           
  3118                           ;Button_src.c: 154:             if (RC7 == 0 ){
  3119  0FF5  1B87               	btfsc	7,7	;volatile
  3120  0FF6  2FF8               	goto	u1831
  3121  0FF7  2FF9               	goto	u1830
  3122  0FF8                     u1831:	
  3123  0FF8  2E7C               	goto	l3082
  3124  0FF9                     u1830:	
  3125  0FF9                     l3192:	
  3126                           
  3127                           ;Button_src.c: 155:             write_cmd(0x1);
  3128  0FF9  3001               	movlw	1
  3129  0FFA  160A  118A  26EE  120A  158A  	fcall	_write_cmd
  3130  0FFF                     l501:	
  3131  0FFF  0008               	return
  3132  1000                     __end_of_thermometer_threshhold_settings:	
  3133                           
  3134                           	psect	text3
  3135  0802                     __ptext3:	
  3136 ;; *************** function _decrementor *****************
  3137 ;; Defined at:
  3138 ;;		line 19 in file "math_src.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  lower_val       2    0[BANK0 ] int 
  3141 ;;  upper_val       2    2[BANK0 ] int 
  3142 ;;  z               1    4[BANK0 ] unsigned char 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      unsigned char 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         0       5       0       0       0
  3155 ;;      Locals:         0       0       0       0       0
  3156 ;;      Temps:          2       0       0       0       0
  3157 ;;      Totals:         2       5       0       0       0
  3158 ;;Total ram usage:        7 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    2
  3161 ;; This function calls:
  3162 ;;		_modulus_func
  3163 ;; This function is called by:
  3164 ;;		_thermometer_threshhold_settings
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _decrementor
  3170  0802                     _decrementor:	
  3171  0802                     l2744:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _decrementor: [wreg+status,2+status,0+pclath+cstack]
  3174                           
  3175                           
  3176                           ;math_src.c: 20:      if(z == (upper_val + '0')){
  3177  0802  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0803  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0804  0850               	movf	decrementor@upper_val,w
  3180  0805  3E30               	addlw	48
  3181  0806  00FB               	movwf	??_decrementor
  3182  0807  0851               	movf	decrementor@upper_val+1,w
  3183  0808  1803               	skipnc
  3184  0809  3E01               	addlw	1
  3185  080A  3E00               	addlw	0
  3186  080B  00FC               	movwf	??_decrementor+1
  3187  080C  0852               	movf	decrementor@z,w
  3188  080D  067B               	xorwf	??_decrementor,w
  3189  080E  047C               	iorwf	??_decrementor+1,w
  3190  080F  1D03               	skipz
  3191  0810  2812               	goto	u1401
  3192  0811  2813               	goto	u1400
  3193  0812                     u1401:	
  3194  0812  282C               	goto	l2750
  3195  0813                     u1400:	
  3196  0813                     l2746:	
  3197                           
  3198                           ;math_src.c: 21:         lower_val--;
  3199  0813  30FF               	movlw	255
  3200  0814  07CE               	addwf	decrementor@lower_val,f
  3201  0815  1803               	skipnc
  3202  0816  0ACF               	incf	decrementor@lower_val+1,f
  3203  0817  30FF               	movlw	255
  3204  0818  07CF               	addwf	decrementor@lower_val+1,f
  3205  0819                     l2748:	
  3206                           
  3207                           ;math_src.c: 22:         lower_val = (modulus_func(lower_val,10));
  3208  0819  084F               	movf	decrementor@lower_val+1,w
  3209  081A  00F8               	movwf	modulus_func@x+1
  3210  081B  084E               	movf	decrementor@lower_val,w
  3211  081C  00F7               	movwf	modulus_func@x
  3212  081D  300A               	movlw	10
  3213  081E  00F9               	movwf	modulus_func@y
  3214  081F  3000               	movlw	0
  3215  0820  00FA               	movwf	modulus_func@y+1
  3216  0821  160A  118A  261E  120A  158A  	fcall	_modulus_func
  3217  0826  0878               	movf	?_modulus_func+1,w
  3218  0827  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0828  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0829  00CF               	movwf	decrementor@lower_val+1
  3221  082A  0877               	movf	?_modulus_func,w
  3222  082B  00CE               	movwf	decrementor@lower_val
  3223  082C                     l2750:	
  3224                           
  3225                           ;math_src.c: 24:      return lower_val;
  3226  082C  084E               	movf	decrementor@lower_val,w
  3227  082D                     l556:	
  3228  082D  0008               	return
  3229  082E                     __end_of_decrementor:	
  3230                           
  3231                           	psect	text4
  3232  0004                     __ptext4:	
  3233 ;; *************** function _set_upper_threshold *****************
  3234 ;; Defined at:
  3235 ;;		line 5 in file "threshold_src.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  upper_val       2    3[COMMON] int 
  3238 ;;  lower_val       2    5[COMMON] int 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3250 ;;      Params:         4       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0
  3252 ;;      Temps:          2       0       0       0       0
  3253 ;;      Totals:         6       0       0       0       0
  3254 ;;Total ram usage:        6 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    2
  3257 ;; This function calls:
  3258 ;;		_write_char
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function _set_upper_threshold
  3266  0004                     _set_upper_threshold:	
  3267  0004                     l3612:	
  3268                           ;incstack = 0
  3269                           ; Regs used in _set_upper_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3270                           
  3271                           
  3272                           ;threshold_src.c: 6:     if(shi == upper_val && ge > lower_val){
  3273  0004  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0005  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0006  0849               	movf	_shi,w
  3276  0007  00F7               	movwf	??_set_upper_threshold
  3277  0008  01F8               	clrf	??_set_upper_threshold+1
  3278  0009  0874               	movf	set_upper_threshold@upper_val+1,w
  3279  000A  0678               	xorwf	??_set_upper_threshold+1,w
  3280  000B  1D03               	skipz
  3281  000C  280F               	goto	u2225
  3282  000D  0873               	movf	set_upper_threshold@upper_val,w
  3283  000E  0677               	xorwf	??_set_upper_threshold,w
  3284  000F                     u2225:	
  3285  000F  1D03               	skipz
  3286  0010  2812               	goto	u2221
  3287  0011  2813               	goto	u2220
  3288  0012                     u2221:	
  3289  0012  283E               	goto	l598
  3290  0013                     u2220:	
  3291  0013                     l3614:	
  3292  0013  0876               	movf	set_upper_threshold@lower_val+1,w
  3293  0014  3A80               	xorlw	128
  3294  0015  00F7               	movwf	??_set_upper_threshold
  3295  0016  3080               	movlw	128
  3296  0017  0277               	subwf	??_set_upper_threshold,w
  3297  0018  1D03               	skipz
  3298  0019  281C               	goto	u2235
  3299  001A  0848               	movf	_ge,w
  3300  001B  0275               	subwf	set_upper_threshold@lower_val,w
  3301  001C                     u2235:	
  3302  001C  1803               	skipnc
  3303  001D  281F               	goto	u2231
  3304  001E  2820               	goto	u2230
  3305  001F                     u2231:	
  3306  001F  283E               	goto	l598
  3307  0020                     u2230:	
  3308  0020                     l3616:	
  3309                           
  3310                           ;threshold_src.c: 7:     buzzer_watcher = 'w';
  3311  0020  3077               	movlw	119
  3312  0021  00F7               	movwf	??_set_upper_threshold
  3313  0022  0877               	movf	??_set_upper_threshold,w
  3314  0023  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0024  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0025  00BC               	movwf	_buzzer_watcher
  3317  0026                     l3618:	
  3318                           
  3319                           ;threshold_src.c: 8:     write_char('W');
  3320  0026  3057               	movlw	87
  3321  0027  160A  118A  26D5  120A  118A  	fcall	_write_char
  3322  002C                     l3620:	
  3323                           
  3324                           ;threshold_src.c: 9:     write_char('A');
  3325  002C  3041               	movlw	65
  3326  002D  160A  118A  26D5  120A  118A  	fcall	_write_char
  3327  0032                     l3622:	
  3328                           
  3329                           ;threshold_src.c: 10:     write_char('R');
  3330  0032  3052               	movlw	82
  3331  0033  160A  118A  26D5  120A  118A  	fcall	_write_char
  3332  0038                     l3624:	
  3333                           
  3334                           ;threshold_src.c: 11:     write_char('M');
  3335  0038  304D               	movlw	77
  3336  0039  160A  118A  26D5  120A  118A  	fcall	_write_char
  3337  003E                     l598:	
  3338  003E  0008               	return
  3339  003F                     __end_of_set_upper_threshold:	
  3340                           
  3341                           	psect	text5
  3342  0891                     __ptext5:	
  3343 ;; *************** function _set_lower_threshold *****************
  3344 ;; Defined at:
  3345 ;;		line 16 in file "threshold_src.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  upper_val       2    3[COMMON] int 
  3348 ;;  lower_val       2    5[COMMON] int 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         4       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0
  3362 ;;      Temps:          2       0       0       0       0
  3363 ;;      Totals:         6       0       0       0       0
  3364 ;;Total ram usage:        6 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    2
  3367 ;; This function calls:
  3368 ;;		_write_char
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _set_lower_threshold
  3376  0891                     _set_lower_threshold:	
  3377  0891                     l3598:	
  3378                           ;incstack = 0
  3379                           ; Regs used in _set_lower_threshold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3380                           
  3381                           
  3382                           ;threshold_src.c: 17:     if(shi == upper_val && ge < lower_val){
  3383  0891  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0892  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0893  0849               	movf	_shi,w
  3386  0894  00F7               	movwf	??_set_lower_threshold
  3387  0895  01F8               	clrf	??_set_lower_threshold+1
  3388  0896  0874               	movf	set_lower_threshold@upper_val+1,w
  3389  0897  0678               	xorwf	??_set_lower_threshold+1,w
  3390  0898  1D03               	skipz
  3391  0899  289C               	goto	u2205
  3392  089A  0873               	movf	set_lower_threshold@upper_val,w
  3393  089B  0677               	xorwf	??_set_lower_threshold,w
  3394  089C                     u2205:	
  3395  089C  1D03               	skipz
  3396  089D  289F               	goto	u2201
  3397  089E  28A0               	goto	u2200
  3398  089F                     u2201:	
  3399  089F  28C9               	goto	l602
  3400  08A0                     u2200:	
  3401  08A0                     l3600:	
  3402  08A0  0876               	movf	set_lower_threshold@lower_val+1,w
  3403  08A1  3A80               	xorlw	128
  3404  08A2  3C80               	sublw	128
  3405  08A3  1D03               	skipz
  3406  08A4  28A7               	goto	u2215
  3407  08A5  0875               	movf	set_lower_threshold@lower_val,w
  3408  08A6  0248               	subwf	_ge,w
  3409  08A7                     u2215:	
  3410  08A7  1803               	skipnc
  3411  08A8  28AA               	goto	u2211
  3412  08A9  28AB               	goto	u2210
  3413  08AA                     u2211:	
  3414  08AA  28C9               	goto	l602
  3415  08AB                     u2210:	
  3416  08AB                     l3602:	
  3417                           
  3418                           ;threshold_src.c: 18:     buzzer_watcher = 'x';
  3419  08AB  3078               	movlw	120
  3420  08AC  00F7               	movwf	??_set_lower_threshold
  3421  08AD  0877               	movf	??_set_lower_threshold,w
  3422  08AE  1283               	bcf	3,5	;RP0=0, select bank0
  3423  08AF  1303               	bcf	3,6	;RP1=0, select bank0
  3424  08B0  00BC               	movwf	_buzzer_watcher
  3425  08B1                     l3604:	
  3426                           
  3427                           ;threshold_src.c: 19:     write_char('O');
  3428  08B1  304F               	movlw	79
  3429  08B2  160A  118A  26D5  120A  158A  	fcall	_write_char
  3430  08B7                     l3606:	
  3431                           
  3432                           ;threshold_src.c: 20:     write_char('K');
  3433  08B7  304B               	movlw	75
  3434  08B8  160A  118A  26D5  120A  158A  	fcall	_write_char
  3435  08BD                     l3608:	
  3436                           
  3437                           ;threshold_src.c: 21:     write_char(' ');
  3438  08BD  3020               	movlw	32
  3439  08BE  160A  118A  26D5  120A  158A  	fcall	_write_char
  3440  08C3                     l3610:	
  3441                           
  3442                           ;threshold_src.c: 22:     write_char(' ');
  3443  08C3  3020               	movlw	32
  3444  08C4  160A  118A  26D5  120A  158A  	fcall	_write_char
  3445  08C9                     l602:	
  3446  08C9  0008               	return
  3447  08CA                     __end_of_set_lower_threshold:	
  3448                           
  3449                           	psect	text6
  3450  1707                     __ptext6:	
  3451 ;; *************** function _set_beep_threshhold *****************
  3452 ;; Defined at:
  3453 ;;		line 5 in file "buzzer_src.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  x               1    wreg     unsigned char 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  x               1    2[COMMON] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  1    wreg      void 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       0       0       0       0
  3468 ;;      Locals:         1       0       0       0       0
  3469 ;;      Temps:          0       0       0       0       0
  3470 ;;      Totals:         1       0       0       0       0
  3471 ;;Total ram usage:        1 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    1
  3474 ;; This function calls:
  3475 ;;		_button_delay
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           
  3482                           ;psect for function _set_beep_threshhold
  3483  1707                     _set_beep_threshhold:	
  3484                           
  3485                           ;incstack = 0
  3486                           ; Regs used in _set_beep_threshhold: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3487                           ;set_beep_threshhold@x stored from wreg
  3488  1707  00F2               	movwf	set_beep_threshhold@x
  3489  1708                     l3626:	
  3490                           
  3491                           ;buzzer_src.c: 6:     if (x == 'w'){
  3492  1708  3077               	movlw	119
  3493  1709  0672               	xorwf	set_beep_threshhold@x,w
  3494  170A  1D03               	btfss	3,2
  3495  170B  2F0D               	goto	u2241
  3496  170C  2F0E               	goto	u2240
  3497  170D                     u2241:	
  3498  170D  2F26               	goto	l3636
  3499  170E                     u2240:	
  3500  170E                     l3628:	
  3501                           
  3502                           ;buzzer_src.c: 7:         RE2 = 1;
  3503  170E  1283               	bcf	3,5	;RP0=0, select bank0
  3504  170F  1303               	bcf	3,6	;RP1=0, select bank0
  3505  1710  1509               	bsf	9,2	;volatile
  3506  1711                     l3630:	
  3507                           
  3508                           ;buzzer_src.c: 8:         button_delay();
  3509  1711  160A  118A  267C  160A  118A  	fcall	_button_delay
  3510  1716                     l3632:	
  3511                           
  3512                           ;buzzer_src.c: 9:         RE2 = 0;
  3513  1716  1283               	bcf	3,5	;RP0=0, select bank0
  3514  1717  1303               	bcf	3,6	;RP1=0, select bank0
  3515  1718  1109               	bcf	9,2	;volatile
  3516                           
  3517                           ;buzzer_src.c: 10:         button_delay();
  3518  1719  160A  118A  267C  160A  118A  	fcall	_button_delay
  3519  171E                     l3634:	
  3520                           
  3521                           ;buzzer_src.c: 11:         RE2 = 1;
  3522  171E  1283               	bcf	3,5	;RP0=0, select bank0
  3523  171F  1303               	bcf	3,6	;RP1=0, select bank0
  3524  1720  1509               	bsf	9,2	;volatile
  3525                           
  3526                           ;buzzer_src.c: 12:         button_delay();
  3527  1721  160A  118A  267C  160A  118A  	fcall	_button_delay
  3528  1726                     l3636:	
  3529                           
  3530                           ;buzzer_src.c: 13:         RE2 = 0;
  3531  1726  1283               	bcf	3,5	;RP0=0, select bank0
  3532  1727  1303               	bcf	3,6	;RP1=0, select bank0
  3533  1728  1109               	bcf	9,2	;volatile
  3534  1729                     l395:	
  3535  1729  0008               	return
  3536  172A                     __end_of_set_beep_threshhold:	
  3537                           
  3538                           	psect	text7
  3539  172A                     __ptext7:	
  3540 ;; *************** function _lcd_init *****************
  3541 ;; Defined at:
  3542 ;;		line 14 in file "LCD_src.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  i               2    0        int 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         0       0       0       0       0
  3557 ;;      Locals:         0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0
  3559 ;;      Totals:         0       0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    2
  3563 ;; This function calls:
  3564 ;;		_delay_screen
  3565 ;;		_write_cmd
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _lcd_init
  3573  172A                     _lcd_init:	
  3574  172A                     l2882:	
  3575                           ;incstack = 0
  3576                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3577                           
  3578                           
  3579                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  3580  172A  1683               	bsf	3,5	;RP0=1, select bank1
  3581  172B  1303               	bcf	3,6	;RP1=0, select bank1
  3582  172C  0185               	clrf	5	;volatile
  3583  172D                     l2884:	
  3584                           
  3585                           ;LCD_src.c: 18:  RA0=0;
  3586  172D  1283               	bcf	3,5	;RP0=0, select bank0
  3587  172E  1303               	bcf	3,6	;RP1=0, select bank0
  3588  172F  1005               	bcf	5,0	;volatile
  3589  1730                     l2886:	
  3590                           
  3591                           ;LCD_src.c: 19:  delay_screen();
  3592  1730  160A  118A  2692  160A  118A  	fcall	_delay_screen
  3593  1735                     l2888:	
  3594                           
  3595                           ;LCD_src.c: 20:  RA0=1;
  3596  1735  1283               	bcf	3,5	;RP0=0, select bank0
  3597  1736  1303               	bcf	3,6	;RP1=0, select bank0
  3598  1737  1405               	bsf	5,0	;volatile
  3599  1738                     l2890:	
  3600                           
  3601                           ;LCD_src.c: 21:  RA2=1;
  3602  1738  1505               	bsf	5,2	;volatile
  3603  1739                     l2892:	
  3604                           
  3605                           ;LCD_src.c: 22:  write_cmd(0x30);
  3606  1739  3030               	movlw	48
  3607  173A  160A  118A  26EE  160A  118A  	fcall	_write_cmd
  3608  173F                     l2894:	
  3609                           
  3610                           ;LCD_src.c: 23:  write_cmd(0x01);
  3611  173F  3001               	movlw	1
  3612  1740  160A  118A  26EE  160A  118A  	fcall	_write_cmd
  3613  1745                     l2896:	
  3614                           
  3615                           ;LCD_src.c: 24:  write_cmd(0x06);
  3616  1745  3006               	movlw	6
  3617  1746  160A  118A  26EE  160A  118A  	fcall	_write_cmd
  3618  174B                     l2898:	
  3619                           
  3620                           ;LCD_src.c: 25:  write_cmd(0x0c);
  3621  174B  300C               	movlw	12
  3622  174C  160A  118A  26EE  160A  118A  	fcall	_write_cmd
  3623  1751                     l144:	
  3624  1751  0008               	return
  3625  1752                     __end_of_lcd_init:	
  3626                           
  3627                           	psect	text8
  3628  1610                     __ptext8:	
  3629 ;; *************** function _initialise_buttons *****************
  3630 ;; Defined at:
  3631 ;;		line 10 in file "Button_src.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function _initialise_buttons
  3660  1610                     _initialise_buttons:	
  3661  1610                     l2900:	
  3662                           ;incstack = 0
  3663                           ; Regs used in _initialise_buttons: [wreg+status,2]
  3664                           
  3665                           
  3666                           ;Button_src.c: 11:     ADCON1 = 0x06;
  3667  1610  3006               	movlw	6
  3668  1611  1683               	bsf	3,5	;RP0=1, select bank1
  3669  1612  1303               	bcf	3,6	;RP1=0, select bank1
  3670  1613  009F               	movwf	31	;volatile
  3671                           
  3672                           ;Button_src.c: 12:     TRISC = 0xf0;
  3673  1614  30F0               	movlw	240
  3674  1615  0087               	movwf	7	;volatile
  3675  1616                     l2902:	
  3676                           
  3677                           ;Button_src.c: 13:     a = 0x00;
  3678  1616  1283               	bcf	3,5	;RP0=0, select bank0
  3679  1617  1303               	bcf	3,6	;RP1=0, select bank0
  3680  1618  01C3               	clrf	_a
  3681  1619                     l2904:	
  3682                           
  3683                           ;Button_src.c: 14:     b = 0x00;
  3684  1619  01C2               	clrf	_b
  3685  161A                     l2906:	
  3686                           
  3687                           ;Button_src.c: 15:     c = 0x00;
  3688  161A  01C1               	clrf	_c
  3689  161B                     l2908:	
  3690                           
  3691                           ;Button_src.c: 16:     z = 0;
  3692  161B  01AD               	clrf	_z
  3693  161C  01AE               	clrf	_z+1
  3694  161D                     l491:	
  3695  161D  0008               	return
  3696  161E                     __end_of_initialise_buttons:	
  3697                           
  3698                           	psect	text9
  3699  15F0                     __ptext9:	
  3700 ;; *************** function _init_temp *****************
  3701 ;; Defined at:
  3702 ;;		line 6 in file "Thermometer_src.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		status,2
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3716 ;;      Params:         0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function _init_temp
  3731  15F0                     _init_temp:	
  3732  15F0                     l2864:	
  3733                           ;incstack = 0
  3734                           ; Regs used in _init_temp: [status,2]
  3735                           
  3736                           
  3737                           ;Thermometer_src.c: 8:     TRISE=0X00;
  3738  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  3739  15F1  1303               	bcf	3,6	;RP1=0, select bank1
  3740  15F2  0189               	clrf	9	;volatile
  3741                           
  3742                           ;Thermometer_src.c: 9:     PORTE = 0X00;
  3743  15F3  1283               	bcf	3,5	;RP0=0, select bank0
  3744  15F4  1303               	bcf	3,6	;RP1=0, select bank0
  3745  15F5  0189               	clrf	9	;volatile
  3746  15F6                     l231:	
  3747  15F6  0008               	return
  3748  15F7                     __end_of_init_temp:	
  3749                           
  3750                           	psect	text10
  3751  1607                     __ptext10:	
  3752 ;; *************** function _init *****************
  3753 ;; Defined at:
  3754 ;;		line 5 in file "LCD_src.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         0       0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0
  3771 ;;      Totals:         0       0       0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_main
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function _init
  3783  1607                     _init:	
  3784  1607                     l2872:	
  3785                           ;incstack = 0
  3786                           ; Regs used in _init: [wreg+status,2]
  3787                           
  3788                           
  3789                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  3790  1607  3007               	movlw	7
  3791  1608  1683               	bsf	3,5	;RP0=1, select bank1
  3792  1609  1303               	bcf	3,6	;RP1=0, select bank1
  3793  160A  009F               	movwf	31	;volatile
  3794  160B                     l2874:	
  3795                           
  3796                           ;LCD_src.c: 8:  TRISA0=1;
  3797  160B  1405               	bsf	5,0	;volatile
  3798  160C                     l2876:	
  3799                           
  3800                           ;LCD_src.c: 9:  TRISD=0X00;
  3801  160C  0188               	clrf	8	;volatile
  3802  160D                     l2878:	
  3803                           
  3804                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  3805  160D  0181               	clrf	1	;volatile
  3806  160E                     l2880:	
  3807                           
  3808                           ;LCD_src.c: 11:  TRISE = 0X00;
  3809  160E  0189               	clrf	9	;volatile
  3810  160F                     l141:	
  3811  160F  0008               	return
  3812  1610                     __end_of_init:	
  3813                           
  3814                           	psect	text11
  3815  082E                     __ptext11:	
  3816 ;; *************** function _get_time *****************
  3817 ;; Defined at:
  3818 ;;		line 26 in file "clock_src.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;  i               2    6[COMMON] int 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : 0/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3832 ;;      Params:         0       0       0       0       0
  3833 ;;      Locals:         2       0       0       0       0
  3834 ;;      Temps:          1       0       0       0       0
  3835 ;;      Totals:         3       0       0       0       0
  3836 ;;Total ram usage:        3 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    1
  3839 ;; This function calls:
  3840 ;;		_time_read_1
  3841 ;;		_time_write_1
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _get_time
  3849  082E                     _get_time:	
  3850  082E                     l2966:	
  3851                           ;incstack = 0
  3852                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3853                           
  3854                           
  3855                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  3856  082E  1283               	bcf	3,5	;RP0=0, select bank0
  3857  082F  1303               	bcf	3,6	;RP1=0, select bank0
  3858  0830  1686               	bsf	6,5	;volatile
  3859  0831                     l2968:	
  3860                           
  3861                           ;clock_src.c: 30:    time_write_1(0xbf);
  3862  0831  30BF               	movlw	191
  3863  0832  160A  118A  2752  120A  158A  	fcall	_time_write_1
  3864  0837                     l2970:	
  3865                           
  3866                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  3867  0837  01F6               	clrf	get_time@i
  3868  0838  01F7               	clrf	get_time@i+1
  3869  0839                     l2976:	
  3870                           
  3871                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  3872  0839  120A  158A  205C  120A  158A  	fcall	_time_read_1
  3873  083E  00F5               	movwf	??_get_time
  3874  083F  0876               	movf	get_time@i,w
  3875  0840  3E20               	addlw	(low (_table1| 0))& (0+255)
  3876  0841  0084               	movwf	4
  3877  0842  0875               	movf	??_get_time,w
  3878  0843  1383               	bcf	3,7	;select IRP bank0
  3879  0844  0080               	movwf	0
  3880  0845                     l2978:	
  3881                           
  3882                           ;clock_src.c: 34:      }
  3883  0845  3001               	movlw	1
  3884  0846  07F6               	addwf	get_time@i,f
  3885  0847  1803               	skipnc
  3886  0848  0AF7               	incf	get_time@i+1,f
  3887  0849  3000               	movlw	0
  3888  084A  07F7               	addwf	get_time@i+1,f
  3889  084B                     l2980:	
  3890  084B  0877               	movf	get_time@i+1,w
  3891  084C  3A80               	xorlw	128
  3892  084D  00FF               	movwf	btemp+1
  3893  084E  3080               	movlw	128
  3894  084F  027F               	subwf	btemp+1,w
  3895  0850  1D03               	skipz
  3896  0851  2854               	goto	u1735
  3897  0852  3007               	movlw	7
  3898  0853  0276               	subwf	get_time@i,w
  3899  0854                     u1735:	
  3900  0854  1C03               	skipc
  3901  0855  2857               	goto	u1731
  3902  0856  2858               	goto	u1730
  3903  0857                     u1731:	
  3904  0857  2839               	goto	l2976
  3905  0858                     u1730:	
  3906  0858                     l308:	
  3907                           
  3908                           ;clock_src.c: 35:    RB5=0;
  3909  0858  1283               	bcf	3,5	;RP0=0, select bank0
  3910  0859  1303               	bcf	3,6	;RP1=0, select bank0
  3911  085A  1286               	bcf	6,5	;volatile
  3912  085B                     l309:	
  3913  085B  0008               	return
  3914  085C                     __end_of_get_time:	
  3915                           
  3916                           	psect	text12
  3917  085C                     __ptext12:	
  3918 ;; *************** function _time_read_1 *****************
  3919 ;; Defined at:
  3920 ;;		line 132 in file "clock_src.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  j               2    2[COMMON] int 
  3925 ;;  time_rx         1    4[COMMON] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      unsigned char 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0, btemp+1
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       0       0       0       0
  3936 ;;      Locals:         3       0       0       0       0
  3937 ;;      Temps:          2       0       0       0       0
  3938 ;;      Totals:         5       0       0       0       0
  3939 ;;Total ram usage:        5 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_get_time
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function _time_read_1
  3950  085C                     _time_read_1:	
  3951  085C                     l2700:	
  3952                           ;incstack = 0
  3953                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  3954                           
  3955                           
  3956                           ;clock_src.c: 134:    unsigned char time_rx=0;
  3957  085C  01F4               	clrf	time_read_1@time_rx
  3958  085D                     l2702:	
  3959                           
  3960                           ;clock_src.c: 135:    int j;;clock_src.c: 136:    TRISB4=1;
  3961  085D  1683               	bsf	3,5	;RP0=1, select bank1
  3962  085E  1303               	bcf	3,6	;RP1=0, select bank1
  3963  085F  1606               	bsf	6,4	;volatile
  3964                           
  3965                           ;clock_src.c: 137:    for(j=0;j<8;j++)
  3966  0860  01F2               	clrf	time_read_1@j
  3967  0861  01F3               	clrf	time_read_1@j+1
  3968  0862                     l326:	
  3969                           
  3970                           ;clock_src.c: 138:       {;clock_src.c: 139:         RB0=0;
  3971  0862  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0863  1303               	bcf	3,6	;RP1=0, select bank0
  3973  0864  1006               	bcf	6,0	;volatile
  3974  0865                     l2708:	
  3975                           
  3976                           ;clock_src.c: 140:         time_rx=time_rx>>1;
  3977  0865  0874               	movf	time_read_1@time_rx,w
  3978  0866  00F0               	movwf	??_time_read_1
  3979  0867  1003               	clrc
  3980  0868  0C70               	rrf	??_time_read_1,w
  3981  0869  00F1               	movwf	??_time_read_1+1
  3982  086A  0871               	movf	??_time_read_1+1,w
  3983  086B  00F4               	movwf	time_read_1@time_rx
  3984  086C                     l2710:	
  3985                           
  3986                           ;clock_src.c: 141:         if(RB4)time_rx=time_rx|0x80;
  3987  086C  1E06               	btfss	6,4	;volatile
  3988  086D  286F               	goto	u1361
  3989  086E  2870               	goto	u1360
  3990  086F                     u1361:	
  3991  086F  2875               	goto	l2714
  3992  0870                     u1360:	
  3993  0870                     l2712:	
  3994  0870  0874               	movf	time_read_1@time_rx,w
  3995  0871  3880               	iorlw	128
  3996  0872  00F0               	movwf	??_time_read_1
  3997  0873  0870               	movf	??_time_read_1,w
  3998  0874  00F4               	movwf	time_read_1@time_rx
  3999  0875                     l2714:	
  4000                           
  4001                           ;clock_src.c: 143:        RB0=1;
  4002  0875  1406               	bsf	6,0	;volatile
  4003  0876                     l2716:	
  4004                           
  4005                           ;clock_src.c: 144:       }
  4006  0876  3001               	movlw	1
  4007  0877  07F2               	addwf	time_read_1@j,f
  4008  0878  1803               	skipnc
  4009  0879  0AF3               	incf	time_read_1@j+1,f
  4010  087A  3000               	movlw	0
  4011  087B  07F3               	addwf	time_read_1@j+1,f
  4012  087C                     l2718:	
  4013  087C  0873               	movf	time_read_1@j+1,w
  4014  087D  3A80               	xorlw	128
  4015  087E  00FF               	movwf	btemp+1
  4016  087F  3080               	movlw	128
  4017  0880  027F               	subwf	btemp+1,w
  4018  0881  1D03               	skipz
  4019  0882  2885               	goto	u1375
  4020  0883  3008               	movlw	8
  4021  0884  0272               	subwf	time_read_1@j,w
  4022  0885                     u1375:	
  4023  0885  1C03               	skipc
  4024  0886  2888               	goto	u1371
  4025  0887  2889               	goto	u1370
  4026  0888                     u1371:	
  4027  0888  2862               	goto	l326
  4028  0889                     u1370:	
  4029  0889                     l327:	
  4030                           
  4031                           ;clock_src.c: 145:     TRISB4=0;
  4032  0889  1683               	bsf	3,5	;RP0=1, select bank1
  4033  088A  1303               	bcf	3,6	;RP1=0, select bank1
  4034  088B  1206               	bcf	6,4	;volatile
  4035                           
  4036                           ;clock_src.c: 146:     RB0=0;
  4037  088C  1283               	bcf	3,5	;RP0=0, select bank0
  4038  088D  1303               	bcf	3,6	;RP1=0, select bank0
  4039  088E  1006               	bcf	6,0	;volatile
  4040  088F                     l2720:	
  4041                           
  4042                           ;clock_src.c: 147:     return(time_rx);
  4043  088F  0874               	movf	time_read_1@time_rx,w
  4044  0890                     l329:	
  4045  0890  0008               	return
  4046  0891                     __end_of_time_read_1:	
  4047                           
  4048                           	psect	text13
  4049  0C4A                     __ptext13:	
  4050 ;; *************** function _get_temp *****************
  4051 ;; Defined at:
  4052 ;;		line 89 in file "Thermometer_src.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  i               2    0        int 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0
  4068 ;;      Temps:          0       4       0       0       0
  4069 ;;      Totals:         0       4       0       0       0
  4070 ;;Total ram usage:        4 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    2
  4073 ;; This function calls:
  4074 ;;		___awdiv
  4075 ;;		___awmod
  4076 ;;		___lwdiv
  4077 ;;		___lwmod
  4078 ;;		_delay2
  4079 ;;		_read_byte
  4080 ;;		_reset_temp
  4081 ;;		_write_byte
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           
  4088                           ;psect for function _get_temp
  4089  0C4A                     _get_temp:	
  4090  0C4A                     l2910:	
  4091                           ;incstack = 0
  4092                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4093                           
  4094                           
  4095                           ;Thermometer_src.c: 91: int i;;Thermometer_src.c: 92: TRISE0 =1;
  4096  0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  4097  0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  4098  0C4C  1409               	bsf	9,0	;volatile
  4099  0C4D                     l2912:	
  4100                           
  4101                           ;Thermometer_src.c: 93: reset_temp();
  4102  0C4D  120A  158A  213E  120A  158A  	fcall	_reset_temp
  4103                           
  4104                           ;Thermometer_src.c: 94: write_byte(0XCC);
  4105  0C52  30CC               	movlw	204
  4106  0C53  120A  158A  2178  120A  158A  	fcall	_write_byte
  4107  0C58                     l2914:	
  4108                           
  4109                           ;Thermometer_src.c: 95: delay2();
  4110  0C58  160A  118A  26A8  120A  158A  	fcall	_delay2
  4111  0C5D                     l2916:	
  4112                           
  4113                           ;Thermometer_src.c: 96: write_byte(0X44);
  4114  0C5D  3044               	movlw	68
  4115  0C5E  120A  158A  2178  120A  158A  	fcall	_write_byte
  4116  0C63                     l2918:	
  4117                           
  4118                           ;Thermometer_src.c: 98: reset_temp();
  4119  0C63  120A  158A  213E  120A  158A  	fcall	_reset_temp
  4120  0C68                     l2920:	
  4121                           
  4122                           ;Thermometer_src.c: 99: write_byte(0XCC);
  4123  0C68  30CC               	movlw	204
  4124  0C69  120A  158A  2178  120A  158A  	fcall	_write_byte
  4125  0C6E                     l2922:	
  4126                           
  4127                           ;Thermometer_src.c: 100: write_byte(0XBE);
  4128  0C6E  30BE               	movlw	190
  4129  0C6F  120A  158A  2178  120A  158A  	fcall	_write_byte
  4130  0C74                     l2924:	
  4131                           
  4132                           ;Thermometer_src.c: 101: TLV=read_byte();
  4133  0C74  120A  158A  2104  120A  158A  	fcall	_read_byte
  4134  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0C7B  00CE               	movwf	??_get_temp
  4137  0C7C  084E               	movf	??_get_temp,w
  4138  0C7D  00CD               	movwf	_TLV
  4139  0C7E                     l2926:	
  4140                           
  4141                           ;Thermometer_src.c: 102: THV=read_byte();
  4142  0C7E  120A  158A  2104  120A  158A  	fcall	_read_byte
  4143  0C83  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0C84  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0C85  00CE               	movwf	??_get_temp
  4146  0C86  084E               	movf	??_get_temp,w
  4147  0C87  00CC               	movwf	_THV
  4148  0C88                     l2928:	
  4149                           
  4150                           ;Thermometer_src.c: 103: TRISE0 =1;
  4151  0C88  1683               	bsf	3,5	;RP0=1, select bank1
  4152  0C89  1303               	bcf	3,6	;RP1=0, select bank1
  4153  0C8A  1409               	bsf	9,0	;volatile
  4154  0C8B                     l2930:	
  4155                           
  4156                           ;Thermometer_src.c: 104: TZ=(TLV>>4)|(THV<<4)&0X3f;
  4157  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0C8D  084C               	movf	_THV,w
  4160  0C8E  00CE               	movwf	??_get_temp
  4161  0C8F  3004               	movlw	4
  4162  0C90                     u1665:	
  4163  0C90  1003               	clrc
  4164  0C91  0DCE               	rlf	??_get_temp,f
  4165  0C92  3EFF               	addlw	-1
  4166  0C93  1D03               	skipz
  4167  0C94  2C90               	goto	u1665
  4168  0C95  303F               	movlw	63
  4169  0C96  054E               	andwf	??_get_temp,w
  4170  0C97  00CF               	movwf	??_get_temp+1
  4171  0C98  084D               	movf	_TLV,w
  4172  0C99  00D0               	movwf	??_get_temp+2
  4173  0C9A  3004               	movlw	4
  4174  0C9B                     u1675:	
  4175  0C9B  1003               	clrc
  4176  0C9C  0CD0               	rrf	??_get_temp+2,f
  4177  0C9D  3EFF               	addlw	-1
  4178  0C9E  1D03               	skipz
  4179  0C9F  2C9B               	goto	u1675
  4180  0CA0  0850               	movf	??_get_temp+2,w
  4181  0CA1  044F               	iorwf	??_get_temp+1,w
  4182  0CA2  00D1               	movwf	??_get_temp+3
  4183  0CA3  0851               	movf	??_get_temp+3,w
  4184  0CA4  00CB               	movwf	_TZ
  4185  0CA5                     l2932:	
  4186                           
  4187                           ;Thermometer_src.c: 105: TX=TLV<<4;
  4188  0CA5  084D               	movf	_TLV,w
  4189  0CA6  00CE               	movwf	??_get_temp
  4190  0CA7  3003               	movlw	3
  4191  0CA8                     u1685:	
  4192  0CA8  1003               	clrc
  4193  0CA9  0DCE               	rlf	??_get_temp,f
  4194  0CAA  3EFF               	addlw	-1
  4195  0CAB  1D03               	skipz
  4196  0CAC  2CA8               	goto	u1685
  4197  0CAD  1003               	clrc
  4198  0CAE  0D4E               	rlf	??_get_temp,w
  4199  0CAF  00CF               	movwf	??_get_temp+1
  4200  0CB0  084F               	movf	??_get_temp+1,w
  4201  0CB1  00CA               	movwf	_TX
  4202  0CB2                     l2936:	
  4203                           
  4204                           ;Thermometer_src.c: 107: ge=TZ%10;
  4205  0CB2  300A               	movlw	10
  4206  0CB3  00F0               	movwf	___awmod@divisor
  4207  0CB4  3000               	movlw	0
  4208  0CB5  00F1               	movwf	___awmod@divisor+1
  4209  0CB6  084B               	movf	_TZ,w
  4210  0CB7  00CE               	movwf	??_get_temp
  4211  0CB8  01CF               	clrf	??_get_temp+1
  4212  0CB9  084E               	movf	??_get_temp,w
  4213  0CBA  00F2               	movwf	___awmod@dividend
  4214  0CBB  084F               	movf	??_get_temp+1,w
  4215  0CBC  00F3               	movwf	___awmod@dividend+1
  4216  0CBD  120A  158A  21F7  120A  158A  	fcall	___awmod
  4217  0CC2  0870               	movf	?___awmod,w
  4218  0CC3  1283               	bcf	3,5	;RP0=0, select bank0
  4219  0CC4  1303               	bcf	3,6	;RP1=0, select bank0
  4220  0CC5  00D0               	movwf	??_get_temp+2
  4221  0CC6  0850               	movf	??_get_temp+2,w
  4222  0CC7  00C8               	movwf	_ge
  4223                           
  4224                           ;Thermometer_src.c: 108: shi=TZ/10;
  4225  0CC8  300A               	movlw	10
  4226  0CC9  00F0               	movwf	___awdiv@divisor
  4227  0CCA  3000               	movlw	0
  4228  0CCB  00F1               	movwf	___awdiv@divisor+1
  4229  0CCC  084B               	movf	_TZ,w
  4230  0CCD  00CE               	movwf	??_get_temp
  4231  0CCE  01CF               	clrf	??_get_temp+1
  4232  0CCF  084E               	movf	??_get_temp,w
  4233  0CD0  00F2               	movwf	___awdiv@dividend
  4234  0CD1  084F               	movf	??_get_temp+1,w
  4235  0CD2  00F3               	movwf	___awdiv@dividend+1
  4236  0CD3  120A  158A  2250  120A  158A  	fcall	___awdiv
  4237  0CD8  0870               	movf	?___awdiv,w
  4238  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0CDB  00D0               	movwf	??_get_temp+2
  4241  0CDC  0850               	movf	??_get_temp+2,w
  4242  0CDD  00C9               	movwf	_shi
  4243  0CDE                     l2938:	
  4244                           
  4245                           ;Thermometer_src.c: 109: wd=0;
  4246  0CDE  01B7               	clrf	_wd
  4247  0CDF  01B8               	clrf	_wd+1
  4248  0CE0                     l2940:	
  4249                           
  4250                           ;Thermometer_src.c: 110: if (TX & 0x80) wd=wd+5000;
  4251  0CE0  1FCA               	btfss	_TX,7
  4252  0CE1  2CE3               	goto	u1691
  4253  0CE2  2CE4               	goto	u1690
  4254  0CE3                     u1691:	
  4255  0CE3  2CEC               	goto	l2944
  4256  0CE4                     u1690:	
  4257  0CE4                     l2942:	
  4258  0CE4  0837               	movf	_wd,w
  4259  0CE5  3E88               	addlw	136
  4260  0CE6  00B7               	movwf	_wd
  4261  0CE7  0838               	movf	_wd+1,w
  4262  0CE8  1803               	skipnc
  4263  0CE9  3E01               	addlw	1
  4264  0CEA  3E13               	addlw	19
  4265  0CEB  00B8               	movwf	_wd+1
  4266  0CEC                     l2944:	
  4267                           
  4268                           ;Thermometer_src.c: 111: if (TX & 0x40) wd=wd+2500;
  4269  0CEC  1F4A               	btfss	_TX,6
  4270  0CED  2CEF               	goto	u1701
  4271  0CEE  2CF0               	goto	u1700
  4272  0CEF                     u1701:	
  4273  0CEF  2CF8               	goto	l2948
  4274  0CF0                     u1700:	
  4275  0CF0                     l2946:	
  4276  0CF0  0837               	movf	_wd,w
  4277  0CF1  3EC4               	addlw	196
  4278  0CF2  00B7               	movwf	_wd
  4279  0CF3  0838               	movf	_wd+1,w
  4280  0CF4  1803               	skipnc
  4281  0CF5  3E01               	addlw	1
  4282  0CF6  3E09               	addlw	9
  4283  0CF7  00B8               	movwf	_wd+1
  4284  0CF8                     l2948:	
  4285                           
  4286                           ;Thermometer_src.c: 112: if (TX & 0x20) wd=wd+1250;
  4287  0CF8  1ECA               	btfss	_TX,5
  4288  0CF9  2CFB               	goto	u1711
  4289  0CFA  2CFC               	goto	u1710
  4290  0CFB                     u1711:	
  4291  0CFB  2D04               	goto	l2952
  4292  0CFC                     u1710:	
  4293  0CFC                     l2950:	
  4294  0CFC  0837               	movf	_wd,w
  4295  0CFD  3EE2               	addlw	226
  4296  0CFE  00B7               	movwf	_wd
  4297  0CFF  0838               	movf	_wd+1,w
  4298  0D00  1803               	skipnc
  4299  0D01  3E01               	addlw	1
  4300  0D02  3E04               	addlw	4
  4301  0D03  00B8               	movwf	_wd+1
  4302  0D04                     l2952:	
  4303                           
  4304                           ;Thermometer_src.c: 113: if (TX & 0x10) wd=wd+625;
  4305  0D04  1E4A               	btfss	_TX,4
  4306  0D05  2D07               	goto	u1721
  4307  0D06  2D08               	goto	u1720
  4308  0D07                     u1721:	
  4309  0D07  2D10               	goto	l2956
  4310  0D08                     u1720:	
  4311  0D08                     l2954:	
  4312  0D08  0837               	movf	_wd,w
  4313  0D09  3E71               	addlw	113
  4314  0D0A  00B7               	movwf	_wd
  4315  0D0B  0838               	movf	_wd+1,w
  4316  0D0C  1803               	skipnc
  4317  0D0D  3E01               	addlw	1
  4318  0D0E  3E02               	addlw	2
  4319  0D0F  00B8               	movwf	_wd+1
  4320  0D10                     l2956:	
  4321                           
  4322                           ;Thermometer_src.c: 114: shifen=wd/1000;
  4323  0D10  30E8               	movlw	232
  4324  0D11  00F6               	movwf	___lwdiv@divisor
  4325  0D12  3003               	movlw	3
  4326  0D13  00F7               	movwf	___lwdiv@divisor+1
  4327  0D14  0838               	movf	_wd+1,w
  4328  0D15  00F9               	movwf	___lwdiv@dividend+1
  4329  0D16  0837               	movf	_wd,w
  4330  0D17  00F8               	movwf	___lwdiv@dividend
  4331  0D18  120A  158A  21B3  120A  158A  	fcall	___lwdiv
  4332  0D1D  0876               	movf	?___lwdiv,w
  4333  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  4335  0D20  00CE               	movwf	??_get_temp
  4336  0D21  084E               	movf	??_get_temp,w
  4337  0D22  00C7               	movwf	_shifen
  4338  0D23                     l2958:	
  4339                           
  4340                           ;Thermometer_src.c: 115: baifen=(wd%1000)/100;
  4341  0D23  3064               	movlw	100
  4342  0D24  00F6               	movwf	___lwdiv@divisor
  4343  0D25  3000               	movlw	0
  4344  0D26  00F7               	movwf	___lwdiv@divisor+1
  4345  0D27  0838               	movf	_wd+1,w
  4346  0D28  00F3               	movwf	___lwmod@dividend+1
  4347  0D29  0837               	movf	_wd,w
  4348  0D2A  00F2               	movwf	___lwmod@dividend
  4349  0D2B  30E8               	movlw	232
  4350  0D2C  00F0               	movwf	___lwmod@divisor
  4351  0D2D  3003               	movlw	3
  4352  0D2E  00F1               	movwf	___lwmod@divisor+1
  4353  0D2F  120A  158A  20CA  120A  158A  	fcall	___lwmod
  4354  0D34  0871               	movf	?___lwmod+1,w
  4355  0D35  00F9               	movwf	___lwdiv@dividend+1
  4356  0D36  0870               	movf	?___lwmod,w
  4357  0D37  00F8               	movwf	___lwdiv@dividend
  4358  0D38  120A  158A  21B3  120A  158A  	fcall	___lwdiv
  4359  0D3D  0876               	movf	?___lwdiv,w
  4360  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  4362  0D40  00CE               	movwf	??_get_temp
  4363  0D41  084E               	movf	??_get_temp,w
  4364  0D42  00C6               	movwf	_baifen
  4365  0D43                     l2960:	
  4366                           
  4367                           ;Thermometer_src.c: 116: qianfen=(wd%100)/10;
  4368  0D43  300A               	movlw	10
  4369  0D44  00F6               	movwf	___lwdiv@divisor
  4370  0D45  3000               	movlw	0
  4371  0D46  00F7               	movwf	___lwdiv@divisor+1
  4372  0D47  0838               	movf	_wd+1,w
  4373  0D48  00F3               	movwf	___lwmod@dividend+1
  4374  0D49  0837               	movf	_wd,w
  4375  0D4A  00F2               	movwf	___lwmod@dividend
  4376  0D4B  3064               	movlw	100
  4377  0D4C  00F0               	movwf	___lwmod@divisor
  4378  0D4D  3000               	movlw	0
  4379  0D4E  00F1               	movwf	___lwmod@divisor+1
  4380  0D4F  120A  158A  20CA  120A  158A  	fcall	___lwmod
  4381  0D54  0871               	movf	?___lwmod+1,w
  4382  0D55  00F9               	movwf	___lwdiv@dividend+1
  4383  0D56  0870               	movf	?___lwmod,w
  4384  0D57  00F8               	movwf	___lwdiv@dividend
  4385  0D58  120A  158A  21B3  120A  158A  	fcall	___lwdiv
  4386  0D5D  0876               	movf	?___lwdiv,w
  4387  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0D60  00CE               	movwf	??_get_temp
  4390  0D61  084E               	movf	??_get_temp,w
  4391  0D62  00C5               	movwf	_qianfen
  4392  0D63                     l2962:	
  4393                           
  4394                           ;Thermometer_src.c: 117: wanfen=wd%10;
  4395  0D63  300A               	movlw	10
  4396  0D64  00F0               	movwf	___lwmod@divisor
  4397  0D65  3000               	movlw	0
  4398  0D66  00F1               	movwf	___lwmod@divisor+1
  4399  0D67  0838               	movf	_wd+1,w
  4400  0D68  00F3               	movwf	___lwmod@dividend+1
  4401  0D69  0837               	movf	_wd,w
  4402  0D6A  00F2               	movwf	___lwmod@dividend
  4403  0D6B  120A  158A  20CA  120A  158A  	fcall	___lwmod
  4404  0D70  0870               	movf	?___lwmod,w
  4405  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  4407  0D73  00CE               	movwf	??_get_temp
  4408  0D74  084E               	movf	??_get_temp,w
  4409  0D75  00C4               	movwf	_wanfen
  4410  0D76                     l2964:	
  4411                           
  4412                           ;Thermometer_src.c: 118: __nop();
  4413  0D76  0000               	nop
  4414  0D77                     l264:	
  4415  0D77  0008               	return
  4416  0D78                     __end_of_get_temp:	
  4417                           
  4418                           	psect	text14
  4419  0978                     __ptext14:	
  4420 ;; *************** function _write_byte *****************
  4421 ;; Defined at:
  4422 ;;		line 40 in file "Thermometer_src.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  val             1    wreg     unsigned char 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  val             1    7[COMMON] unsigned char 
  4427 ;;  i               1    8[COMMON] unsigned char 
  4428 ;;  temp            1    6[COMMON] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0, pclath, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4438 ;;      Params:         0       0       0       0       0
  4439 ;;      Locals:         3       0       0       0       0
  4440 ;;      Temps:          2       0       0       0       0
  4441 ;;      Totals:         5       0       0       0       0
  4442 ;;Total ram usage:        5 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    1
  4445 ;; This function calls:
  4446 ;;		_delay_temp
  4447 ;; This function is called by:
  4448 ;;		_get_temp
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function _write_byte
  4454  0978                     _write_byte:	
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4458                           ;write_byte@val stored from wreg
  4459  0978  00F7               	movwf	write_byte@val
  4460  0979                     l2596:	
  4461                           
  4462                           ;Thermometer_src.c: 40: void write_byte(unsigned char val);Thermometer_src.c: 41: {;Ther
      +                          mometer_src.c: 42:  unsigned char i;;Thermometer_src.c: 43:  unsigned char temp;;Thermom
      +                          eter_src.c: 44:  for(i=8;i>0;i--)
  4463  0979  3008               	movlw	8
  4464  097A  00F4               	movwf	??_write_byte
  4465  097B  0874               	movf	??_write_byte,w
  4466  097C  00F8               	movwf	write_byte@i
  4467  097D                     l2602:	
  4468                           
  4469                           ;Thermometer_src.c: 45:  {;Thermometer_src.c: 46:    temp=val&0x01;
  4470  097D  0877               	movf	write_byte@val,w
  4471  097E  3901               	andlw	1
  4472  097F  00F4               	movwf	??_write_byte
  4473  0980  0874               	movf	??_write_byte,w
  4474  0981  00F6               	movwf	write_byte@temp
  4475  0982                     l2604:	
  4476                           
  4477                           ;Thermometer_src.c: 47:    RE0 = 0; TRISE0 = 0;
  4478  0982  1283               	bcf	3,5	;RP0=0, select bank0
  4479  0983  1303               	bcf	3,6	;RP1=0, select bank0
  4480  0984  1009               	bcf	9,0	;volatile
  4481  0985                     l2606:	
  4482  0985  1683               	bsf	3,5	;RP0=1, select bank1
  4483  0986  1303               	bcf	3,6	;RP1=0, select bank1
  4484  0987  1009               	bcf	9,0	;volatile
  4485  0988                     l2608:	
  4486                           
  4487                           ;Thermometer_src.c: 48:    __nop();
  4488  0988  0000               	nop
  4489  0989                     l2610:	
  4490                           
  4491                           ;Thermometer_src.c: 49:    __nop();
  4492  0989  0000               	nop
  4493  098A                     l2612:	
  4494                           
  4495                           ;Thermometer_src.c: 50:    __nop();
  4496  098A  0000               	nop
  4497  098B                     l2614:	
  4498                           
  4499                           ;Thermometer_src.c: 51:    __nop();
  4500  098B  0000               	nop
  4501  098C                     l2616:	
  4502                           
  4503                           ;Thermometer_src.c: 52:    __nop();
  4504  098C  0000               	nop
  4505  098D                     l2618:	
  4506                           
  4507                           ;Thermometer_src.c: 53:    if(temp==1) TRISE0 =1;
  4508  098D  0376               	decf	write_byte@temp,w
  4509  098E  1D03               	btfss	3,2
  4510  098F  2991               	goto	u1311
  4511  0990  2992               	goto	u1310
  4512  0991                     u1311:	
  4513  0991  2995               	goto	l2622
  4514  0992                     u1310:	
  4515  0992                     l2620:	
  4516  0992  1683               	bsf	3,5	;RP0=1, select bank1
  4517  0993  1303               	bcf	3,6	;RP1=0, select bank1
  4518  0994  1409               	bsf	9,0	;volatile
  4519  0995                     l2622:	
  4520                           
  4521                           ;Thermometer_src.c: 54:    delay_temp(2,7);
  4522  0995  3007               	movlw	7
  4523  0996  00F4               	movwf	??_write_byte
  4524  0997  0874               	movf	??_write_byte,w
  4525  0998  00F0               	movwf	delay_temp@y
  4526  0999  3002               	movlw	2
  4527  099A  160A  118A  2642  120A  158A  	fcall	_delay_temp
  4528  099F                     l2624:	
  4529                           
  4530                           ;Thermometer_src.c: 55:    TRISE0 =1;
  4531  099F  1683               	bsf	3,5	;RP0=1, select bank1
  4532  09A0  1303               	bcf	3,6	;RP1=0, select bank1
  4533  09A1  1409               	bsf	9,0	;volatile
  4534  09A2                     l2626:	
  4535                           
  4536                           ;Thermometer_src.c: 56:    __nop();
  4537  09A2  0000               	nop
  4538  09A3                     l2628:	
  4539                           
  4540                           ;Thermometer_src.c: 57:    __nop();
  4541  09A3  0000               	nop
  4542  09A4                     l2630:	
  4543                           
  4544                           ;Thermometer_src.c: 58:    val=val>>1;
  4545  09A4  0877               	movf	write_byte@val,w
  4546  09A5  00F4               	movwf	??_write_byte
  4547  09A6  1003               	clrc
  4548  09A7  0C74               	rrf	??_write_byte,w
  4549  09A8  00F5               	movwf	??_write_byte+1
  4550  09A9  0875               	movf	??_write_byte+1,w
  4551  09AA  00F7               	movwf	write_byte@val
  4552  09AB                     l2632:	
  4553                           
  4554                           ;Thermometer_src.c: 59:   }
  4555  09AB  3001               	movlw	1
  4556  09AC  02F8               	subwf	write_byte@i,f
  4557  09AD                     l2634:	
  4558  09AD  0878               	movf	write_byte@i,w
  4559  09AE  1D03               	btfss	3,2
  4560  09AF  29B1               	goto	u1321
  4561  09B0  29B2               	goto	u1320
  4562  09B1                     u1321:	
  4563  09B1  297D               	goto	l2602
  4564  09B2                     u1320:	
  4565  09B2                     l248:	
  4566  09B2  0008               	return
  4567  09B3                     __end_of_write_byte:	
  4568                           
  4569                           	psect	text15
  4570  093E                     __ptext15:	
  4571 ;; *************** function _reset_temp *****************
  4572 ;; Defined at:
  4573 ;;		line 25 in file "Thermometer_src.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  presence        1    5[COMMON] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         0       0       0       0       0
  4588 ;;      Locals:         1       0       0       0       0
  4589 ;;      Temps:          1       0       0       0       0
  4590 ;;      Totals:         2       0       0       0       0
  4591 ;;Total ram usage:        2 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    1
  4594 ;; This function calls:
  4595 ;;		_delay_temp
  4596 ;; This function is called by:
  4597 ;;		_get_temp
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _reset_temp
  4603  093E                     _reset_temp:	
  4604  093E                     l2580:	
  4605                           ;incstack = 0
  4606                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  4607                           
  4608                           
  4609                           ;Thermometer_src.c: 27:   char presence=1;
  4610  093E  01F5               	clrf	reset_temp@presence
  4611  093F  0AF5               	incf	reset_temp@presence,f
  4612                           
  4613                           ;Thermometer_src.c: 28:   while(presence)
  4614  0940  2972               	goto	l2594
  4615  0941                     l238:	
  4616                           
  4617                           ;Thermometer_src.c: 29:   {;Thermometer_src.c: 30:     RE0 = 0; TRISE0 = 0 ;
  4618  0941  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0942  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0943  1009               	bcf	9,0	;volatile
  4621  0944  1683               	bsf	3,5	;RP0=1, select bank1
  4622  0945  1303               	bcf	3,6	;RP1=0, select bank1
  4623  0946  1009               	bcf	9,0	;volatile
  4624  0947                     l2582:	
  4625                           
  4626                           ;Thermometer_src.c: 31:     delay_temp(2,70);
  4627  0947  3046               	movlw	70
  4628  0948  00F4               	movwf	??_reset_temp
  4629  0949  0874               	movf	??_reset_temp,w
  4630  094A  00F0               	movwf	delay_temp@y
  4631  094B  3002               	movlw	2
  4632  094C  160A  118A  2642  120A  158A  	fcall	_delay_temp
  4633  0951                     l2584:	
  4634                           
  4635                           ;Thermometer_src.c: 32:     TRISE0 =1;
  4636  0951  1683               	bsf	3,5	;RP0=1, select bank1
  4637  0952  1303               	bcf	3,6	;RP1=0, select bank1
  4638  0953  1409               	bsf	9,0	;volatile
  4639                           
  4640                           ;Thermometer_src.c: 33:     delay_temp(2,8);
  4641  0954  3008               	movlw	8
  4642  0955  00F4               	movwf	??_reset_temp
  4643  0956  0874               	movf	??_reset_temp,w
  4644  0957  00F0               	movwf	delay_temp@y
  4645  0958  3002               	movlw	2
  4646  0959  160A  118A  2642  120A  158A  	fcall	_delay_temp
  4647  095E                     l2586:	
  4648                           
  4649                           ;Thermometer_src.c: 34:     if(RE0==1) presence=1;
  4650  095E  1283               	bcf	3,5	;RP0=0, select bank0
  4651  095F  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0960  1C09               	btfss	9,0	;volatile
  4653  0961  2963               	goto	u1291
  4654  0962  2964               	goto	u1290
  4655  0963                     u1291:	
  4656  0963  2967               	goto	l2590
  4657  0964                     u1290:	
  4658  0964                     l2588:	
  4659  0964  01F5               	clrf	reset_temp@presence
  4660  0965  0AF5               	incf	reset_temp@presence,f
  4661  0966  2968               	goto	l2592
  4662  0967                     l2590:	
  4663  0967  01F5               	clrf	reset_temp@presence
  4664  0968                     l2592:	
  4665                           
  4666                           ;Thermometer_src.c: 36:     delay_temp(2,60);
  4667  0968  303C               	movlw	60
  4668  0969  00F4               	movwf	??_reset_temp
  4669  096A  0874               	movf	??_reset_temp,w
  4670  096B  00F0               	movwf	delay_temp@y
  4671  096C  3002               	movlw	2
  4672  096D  160A  118A  2642  120A  158A  	fcall	_delay_temp
  4673  0972                     l2594:	
  4674                           
  4675                           ;Thermometer_src.c: 28:   while(presence)
  4676  0972  0875               	movf	reset_temp@presence,w
  4677  0973  1D03               	btfss	3,2
  4678  0974  2976               	goto	u1301
  4679  0975  2977               	goto	u1300
  4680  0976                     u1301:	
  4681  0976  2941               	goto	l238
  4682  0977                     u1300:	
  4683  0977                     l242:	
  4684  0977  0008               	return
  4685  0978                     __end_of_reset_temp:	
  4686                           
  4687                           	psect	text16
  4688  0904                     __ptext16:	
  4689 ;; *************** function _read_byte *****************
  4690 ;; Defined at:
  4691 ;;		line 62 in file "Thermometer_src.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  i               1    6[COMMON] unsigned char 
  4696 ;;  value           1    5[COMMON] unsigned char 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      unsigned char 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         0       0       0       0       0
  4707 ;;      Locals:         2       0       0       0       0
  4708 ;;      Temps:          1       0       0       0       0
  4709 ;;      Totals:         3       0       0       0       0
  4710 ;;Total ram usage:        3 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    1
  4713 ;; This function calls:
  4714 ;;		_delay_temp
  4715 ;; This function is called by:
  4716 ;;		_get_temp
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _read_byte
  4722  0904                     _read_byte:	
  4723  0904                     l2636:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  4726                           
  4727                           
  4728                           ;Thermometer_src.c: 64:  unsigned char i;;Thermometer_src.c: 65:  unsigned char value=0;
  4729  0904  01F5               	clrf	read_byte@value
  4730  0905                     l2638:	
  4731                           
  4732                           ;Thermometer_src.c: 66:  static _Bool j;;Thermometer_src.c: 67:  for(i=8;i>0;i--)
  4733  0905  3008               	movlw	8
  4734  0906  00F4               	movwf	??_read_byte
  4735  0907  0874               	movf	??_read_byte,w
  4736  0908  00F6               	movwf	read_byte@i
  4737  0909                     l2644:	
  4738                           
  4739                           ;Thermometer_src.c: 68:  {;Thermometer_src.c: 69:    value>>=1;
  4740  0909  1003               	clrc
  4741  090A  0CF5               	rrf	read_byte@value,f
  4742  090B                     l2646:	
  4743                           
  4744                           ;Thermometer_src.c: 70:    RE0 = 0; TRISE0 = 0;
  4745  090B  1283               	bcf	3,5	;RP0=0, select bank0
  4746  090C  1303               	bcf	3,6	;RP1=0, select bank0
  4747  090D  1009               	bcf	9,0	;volatile
  4748  090E                     l2648:	
  4749  090E  1683               	bsf	3,5	;RP0=1, select bank1
  4750  090F  1303               	bcf	3,6	;RP1=0, select bank1
  4751  0910  1009               	bcf	9,0	;volatile
  4752  0911                     l2650:	
  4753                           
  4754                           ;Thermometer_src.c: 71:    __nop();
  4755  0911  0000               	nop
  4756  0912                     l2652:	
  4757                           
  4758                           ;Thermometer_src.c: 72:    __nop();
  4759  0912  0000               	nop
  4760  0913                     l2654:	
  4761                           
  4762                           ;Thermometer_src.c: 73:    __nop();
  4763  0913  0000               	nop
  4764  0914                     l2656:	
  4765                           
  4766                           ;Thermometer_src.c: 74:    __nop();
  4767  0914  0000               	nop
  4768  0915                     l2658:	
  4769                           
  4770                           ;Thermometer_src.c: 75:    __nop();
  4771  0915  0000               	nop
  4772  0916                     l2660:	
  4773                           
  4774                           ;Thermometer_src.c: 76:    __nop();
  4775  0916  0000               	nop
  4776  0917                     l2662:	
  4777                           
  4778                           ;Thermometer_src.c: 77:    TRISE0 =1;
  4779  0917  1683               	bsf	3,5	;RP0=1, select bank1
  4780  0918  1303               	bcf	3,6	;RP1=0, select bank1
  4781  0919  1409               	bsf	9,0	;volatile
  4782  091A                     l2664:	
  4783                           
  4784                           ;Thermometer_src.c: 78:    __nop();
  4785  091A  0000               	nop
  4786  091B                     l2666:	
  4787                           
  4788                           ;Thermometer_src.c: 79:    __nop();
  4789  091B  0000               	nop
  4790  091C                     l2668:	
  4791                           
  4792                           ;Thermometer_src.c: 80:    __nop();
  4793  091C  0000               	nop
  4794  091D                     l2670:	
  4795                           
  4796                           ;Thermometer_src.c: 81:    __nop();
  4797  091D  0000               	nop
  4798  091E                     l2672:	
  4799                           
  4800                           ;Thermometer_src.c: 82:    __nop();
  4801  091E  0000               	nop
  4802  091F                     l2674:	
  4803                           
  4804                           ;Thermometer_src.c: 83:    j=RE0;
  4805  091F  3000               	movlw	0
  4806  0920  1283               	bcf	3,5	;RP0=0, select bank0
  4807  0921  1303               	bcf	3,6	;RP1=0, select bank0
  4808  0922  1809               	btfsc	9,0	;volatile
  4809  0923  3001               	movlw	1
  4810  0924  00B9               	movwf	read_byte@j
  4811  0925                     l2676:	
  4812                           
  4813                           ;Thermometer_src.c: 84:    if(j) value|=0x80;
  4814  0925  0839               	movf	read_byte@j,w
  4815  0926  1903               	btfsc	3,2
  4816  0927  2929               	goto	u1331
  4817  0928  292A               	goto	u1330
  4818  0929                     u1331:	
  4819  0929  292B               	goto	l2680
  4820  092A                     u1330:	
  4821  092A                     l2678:	
  4822  092A  17F5               	bsf	read_byte@value,7
  4823  092B                     l2680:	
  4824                           
  4825                           ;Thermometer_src.c: 85:    delay_temp(2,7);
  4826  092B  3007               	movlw	7
  4827  092C  00F4               	movwf	??_read_byte
  4828  092D  0874               	movf	??_read_byte,w
  4829  092E  00F0               	movwf	delay_temp@y
  4830  092F  3002               	movlw	2
  4831  0930  160A  118A  2642  120A  158A  	fcall	_delay_temp
  4832  0935                     l2682:	
  4833                           
  4834                           ;Thermometer_src.c: 86:   }
  4835  0935  3001               	movlw	1
  4836  0936  02F6               	subwf	read_byte@i,f
  4837  0937                     l2684:	
  4838  0937  0876               	movf	read_byte@i,w
  4839  0938  1D03               	btfss	3,2
  4840  0939  293B               	goto	u1341
  4841  093A  293C               	goto	u1340
  4842  093B                     u1341:	
  4843  093B  2909               	goto	l2644
  4844  093C                     u1340:	
  4845  093C                     l2686:	
  4846                           
  4847                           ;Thermometer_src.c: 87:   return(value);
  4848  093C  0875               	movf	read_byte@value,w
  4849  093D                     l256:	
  4850  093D  0008               	return
  4851  093E                     __end_of_read_byte:	
  4852                           
  4853                           	psect	text17
  4854  1642                     __ptext17:	
  4855 ;; *************** function _delay_temp *****************
  4856 ;; Defined at:
  4857 ;;		line 121 in file "Thermometer_src.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  x               1    wreg     unsigned char 
  4860 ;;  y               1    0[COMMON] unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  x               1    2[COMMON] unsigned char 
  4863 ;;  z               1    3[COMMON] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4873 ;;      Params:         1       0       0       0       0
  4874 ;;      Locals:         2       0       0       0       0
  4875 ;;      Temps:          1       0       0       0       0
  4876 ;;      Totals:         4       0       0       0       0
  4877 ;;Total ram usage:        4 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; This function calls:
  4880 ;;		Nothing
  4881 ;; This function is called by:
  4882 ;;		_reset_temp
  4883 ;;		_write_byte
  4884 ;;		_read_byte
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _delay_temp
  4890  1642                     _delay_temp:	
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  4894                           ;delay_temp@x stored from wreg
  4895  1642  00F2               	movwf	delay_temp@x
  4896  1643                     l267:	
  4897                           ;Thermometer_src.c: 121: void delay_temp(char x, char y);Thermometer_src.c: 122: {;Therm
      +                          ometer_src.c: 123:  char z;;Thermometer_src.c: 124:  do{
  4898                           
  4899  1643                     l2512:	
  4900                           
  4901                           ;Thermometer_src.c: 125:  z=y;
  4902  1643  0870               	movf	delay_temp@y,w
  4903  1644  00F1               	movwf	??_delay_temp
  4904  1645  0871               	movf	??_delay_temp,w
  4905  1646  00F3               	movwf	delay_temp@z
  4906  1647                     l2514:	
  4907  1647  3001               	movlw	1
  4908  1648  02F3               	subwf	delay_temp@z,f
  4909  1649  1D03               	btfss	3,2
  4910  164A  2E4C               	goto	u1241
  4911  164B  2E4D               	goto	u1240
  4912  164C                     u1241:	
  4913  164C  2E47               	goto	l2514
  4914  164D                     u1240:	
  4915  164D                     l2516:	
  4916                           
  4917                           ;Thermometer_src.c: 127:  }while(--x);
  4918  164D  3001               	movlw	1
  4919  164E  02F2               	subwf	delay_temp@x,f
  4920  164F  1D03               	btfss	3,2
  4921  1650  2E52               	goto	u1251
  4922  1651  2E53               	goto	u1250
  4923  1652                     u1251:	
  4924  1652  2E43               	goto	l267
  4925  1653                     u1250:	
  4926  1653                     l271:	
  4927  1653  0008               	return
  4928  1654                     __end_of_delay_temp:	
  4929                           
  4930                           	psect	text18
  4931  16A8                     __ptext18:	
  4932 ;; *************** function _delay2 *****************
  4933 ;; Defined at:
  4934 ;;		line 130 in file "Thermometer_src.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  i               2    0[COMMON] int 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, btemp+1
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4948 ;;      Params:         0       0       0       0       0
  4949 ;;      Locals:         2       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0
  4951 ;;      Totals:         2       0       0       0       0
  4952 ;;Total ram usage:        2 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_get_temp
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function _delay2
  4963  16A8                     _delay2:	
  4964  16A8                     l2690:	
  4965                           ;incstack = 0
  4966                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  4967                           
  4968                           
  4969                           ;Thermometer_src.c: 131:  for (int i = 0; i<50;i++){
  4970  16A8  01F0               	clrf	delay2@i
  4971  16A9  01F1               	clrf	delay2@i+1
  4972  16AA                     l2696:	
  4973                           
  4974                           ;Thermometer_src.c: 132:  }
  4975  16AA  3001               	movlw	1
  4976  16AB  07F0               	addwf	delay2@i,f
  4977  16AC  1803               	skipnc
  4978  16AD  0AF1               	incf	delay2@i+1,f
  4979  16AE  3000               	movlw	0
  4980  16AF  07F1               	addwf	delay2@i+1,f
  4981  16B0                     l2698:	
  4982  16B0  0871               	movf	delay2@i+1,w
  4983  16B1  3A80               	xorlw	128
  4984  16B2  00FF               	movwf	btemp+1
  4985  16B3  3080               	movlw	128
  4986  16B4  027F               	subwf	btemp+1,w
  4987  16B5  1D03               	skipz
  4988  16B6  2EB9               	goto	u1355
  4989  16B7  3032               	movlw	50
  4990  16B8  0270               	subwf	delay2@i,w
  4991  16B9                     u1355:	
  4992  16B9  1C03               	skipc
  4993  16BA  2EBC               	goto	u1351
  4994  16BB  2EBD               	goto	u1350
  4995  16BC                     u1351:	
  4996  16BC  2EAA               	goto	l2696
  4997  16BD                     u1350:	
  4998  16BD                     l276:	
  4999  16BD  0008               	return
  5000  16BE                     __end_of_delay2:	
  5001                           
  5002                           	psect	text19
  5003  08CA                     __ptext19:	
  5004 ;; *************** function ___lwmod *****************
  5005 ;; Defined at:
  5006 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  divisor         2    0[COMMON] unsigned int 
  5009 ;;  dividend        2    2[COMMON] unsigned int 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  counter         1    5[COMMON] unsigned char 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  2    0[COMMON] unsigned int 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5021 ;;      Params:         4       0       0       0       0
  5022 ;;      Locals:         1       0       0       0       0
  5023 ;;      Temps:          1       0       0       0       0
  5024 ;;      Totals:         6       0       0       0       0
  5025 ;;Total ram usage:        6 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_get_temp
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function ___lwmod
  5036  08CA                     ___lwmod:	
  5037  08CA                     l2842:	
  5038                           ;incstack = 0
  5039                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5040                           
  5041  08CA  0870               	movf	___lwmod@divisor,w
  5042  08CB  0471               	iorwf	___lwmod@divisor+1,w
  5043  08CC  1903               	btfsc	3,2
  5044  08CD  28CF               	goto	u1601
  5045  08CE  28D0               	goto	u1600
  5046  08CF                     u1601:	
  5047  08CF  28FF               	goto	l2860
  5048  08D0                     u1600:	
  5049  08D0                     l2844:	
  5050  08D0  01F5               	clrf	___lwmod@counter
  5051  08D1  0AF5               	incf	___lwmod@counter,f
  5052  08D2  28DE               	goto	l2850
  5053  08D3                     l2846:	
  5054  08D3  3001               	movlw	1
  5055  08D4                     u1615:	
  5056  08D4  1003               	clrc
  5057  08D5  0DF0               	rlf	___lwmod@divisor,f
  5058  08D6  0DF1               	rlf	___lwmod@divisor+1,f
  5059  08D7  3EFF               	addlw	-1
  5060  08D8  1D03               	skipz
  5061  08D9  28D4               	goto	u1615
  5062  08DA                     l2848:	
  5063  08DA  3001               	movlw	1
  5064  08DB  00F4               	movwf	??___lwmod
  5065  08DC  0874               	movf	??___lwmod,w
  5066  08DD  07F5               	addwf	___lwmod@counter,f
  5067  08DE                     l2850:	
  5068  08DE  1FF1               	btfss	___lwmod@divisor+1,7
  5069  08DF  28E1               	goto	u1621
  5070  08E0  28E2               	goto	u1620
  5071  08E1                     u1621:	
  5072  08E1  28D3               	goto	l2846
  5073  08E2                     u1620:	
  5074  08E2                     l2852:	
  5075  08E2  0871               	movf	___lwmod@divisor+1,w
  5076  08E3  0273               	subwf	___lwmod@dividend+1,w
  5077  08E4  1D03               	skipz
  5078  08E5  28E8               	goto	u1635
  5079  08E6  0870               	movf	___lwmod@divisor,w
  5080  08E7  0272               	subwf	___lwmod@dividend,w
  5081  08E8                     u1635:	
  5082  08E8  1C03               	skipc
  5083  08E9  28EB               	goto	u1631
  5084  08EA  28EC               	goto	u1630
  5085  08EB                     u1631:	
  5086  08EB  28F2               	goto	l2856
  5087  08EC                     u1630:	
  5088  08EC                     l2854:	
  5089  08EC  0870               	movf	___lwmod@divisor,w
  5090  08ED  02F2               	subwf	___lwmod@dividend,f
  5091  08EE  0871               	movf	___lwmod@divisor+1,w
  5092  08EF  1C03               	skipc
  5093  08F0  03F3               	decf	___lwmod@dividend+1,f
  5094  08F1  02F3               	subwf	___lwmod@dividend+1,f
  5095  08F2                     l2856:	
  5096  08F2  3001               	movlw	1
  5097  08F3                     u1645:	
  5098  08F3  1003               	clrc
  5099  08F4  0CF1               	rrf	___lwmod@divisor+1,f
  5100  08F5  0CF0               	rrf	___lwmod@divisor,f
  5101  08F6  3EFF               	addlw	-1
  5102  08F7  1D03               	skipz
  5103  08F8  28F3               	goto	u1645
  5104  08F9                     l2858:	
  5105  08F9  3001               	movlw	1
  5106  08FA  02F5               	subwf	___lwmod@counter,f
  5107  08FB  1D03               	btfss	3,2
  5108  08FC  28FE               	goto	u1651
  5109  08FD  28FF               	goto	u1650
  5110  08FE                     u1651:	
  5111  08FE  28E2               	goto	l2852
  5112  08FF                     u1650:	
  5113  08FF                     l2860:	
  5114  08FF  0873               	movf	___lwmod@dividend+1,w
  5115  0900  00F1               	movwf	?___lwmod+1
  5116  0901  0872               	movf	___lwmod@dividend,w
  5117  0902  00F0               	movwf	?___lwmod
  5118  0903                     l970:	
  5119  0903  0008               	return
  5120  0904                     __end_of___lwmod:	
  5121                           
  5122                           	psect	text20
  5123  09B3                     __ptext20:	
  5124 ;; *************** function ___lwdiv *****************
  5125 ;; Defined at:
  5126 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;  divisor         2    6[COMMON] unsigned int 
  5129 ;;  dividend        2    8[COMMON] unsigned int 
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;  quotient        2   11[COMMON] unsigned int 
  5132 ;;  counter         1   13[COMMON] unsigned char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;                  2    6[COMMON] unsigned int 
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5142 ;;      Params:         4       0       0       0       0
  5143 ;;      Locals:         3       0       0       0       0
  5144 ;;      Temps:          1       0       0       0       0
  5145 ;;      Totals:         8       0       0       0       0
  5146 ;;Total ram usage:        8 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_get_temp
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           
  5156                           ;psect for function ___lwdiv
  5157  09B3                     ___lwdiv:	
  5158  09B3                     l2816:	
  5159                           ;incstack = 0
  5160                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5161                           
  5162  09B3  01FB               	clrf	___lwdiv@quotient
  5163  09B4  01FC               	clrf	___lwdiv@quotient+1
  5164  09B5                     l2818:	
  5165  09B5  0876               	movf	___lwdiv@divisor,w
  5166  09B6  0477               	iorwf	___lwdiv@divisor+1,w
  5167  09B7  1903               	btfsc	3,2
  5168  09B8  29BA               	goto	u1531
  5169  09B9  29BB               	goto	u1530
  5170  09BA                     u1531:	
  5171  09BA  29F2               	goto	l2838
  5172  09BB                     u1530:	
  5173  09BB                     l2820:	
  5174  09BB  01FD               	clrf	___lwdiv@counter
  5175  09BC  0AFD               	incf	___lwdiv@counter,f
  5176  09BD  29C9               	goto	l2826
  5177  09BE                     l2822:	
  5178  09BE  3001               	movlw	1
  5179  09BF                     u1545:	
  5180  09BF  1003               	clrc
  5181  09C0  0DF6               	rlf	___lwdiv@divisor,f
  5182  09C1  0DF7               	rlf	___lwdiv@divisor+1,f
  5183  09C2  3EFF               	addlw	-1
  5184  09C3  1D03               	skipz
  5185  09C4  29BF               	goto	u1545
  5186  09C5                     l2824:	
  5187  09C5  3001               	movlw	1
  5188  09C6  00FA               	movwf	??___lwdiv
  5189  09C7  087A               	movf	??___lwdiv,w
  5190  09C8  07FD               	addwf	___lwdiv@counter,f
  5191  09C9                     l2826:	
  5192  09C9  1FF7               	btfss	___lwdiv@divisor+1,7
  5193  09CA  29CC               	goto	u1551
  5194  09CB  29CD               	goto	u1550
  5195  09CC                     u1551:	
  5196  09CC  29BE               	goto	l2822
  5197  09CD                     u1550:	
  5198  09CD                     l2828:	
  5199  09CD  3001               	movlw	1
  5200  09CE                     u1565:	
  5201  09CE  1003               	clrc
  5202  09CF  0DFB               	rlf	___lwdiv@quotient,f
  5203  09D0  0DFC               	rlf	___lwdiv@quotient+1,f
  5204  09D1  3EFF               	addlw	-1
  5205  09D2  1D03               	skipz
  5206  09D3  29CE               	goto	u1565
  5207  09D4  0877               	movf	___lwdiv@divisor+1,w
  5208  09D5  0279               	subwf	___lwdiv@dividend+1,w
  5209  09D6  1D03               	skipz
  5210  09D7  29DA               	goto	u1575
  5211  09D8  0876               	movf	___lwdiv@divisor,w
  5212  09D9  0278               	subwf	___lwdiv@dividend,w
  5213  09DA                     u1575:	
  5214  09DA  1C03               	skipc
  5215  09DB  29DD               	goto	u1571
  5216  09DC  29DE               	goto	u1570
  5217  09DD                     u1571:	
  5218  09DD  29E5               	goto	l2834
  5219  09DE                     u1570:	
  5220  09DE                     l2830:	
  5221  09DE  0876               	movf	___lwdiv@divisor,w
  5222  09DF  02F8               	subwf	___lwdiv@dividend,f
  5223  09E0  0877               	movf	___lwdiv@divisor+1,w
  5224  09E1  1C03               	skipc
  5225  09E2  03F9               	decf	___lwdiv@dividend+1,f
  5226  09E3  02F9               	subwf	___lwdiv@dividend+1,f
  5227  09E4                     l2832:	
  5228  09E4  147B               	bsf	___lwdiv@quotient,0
  5229  09E5                     l2834:	
  5230  09E5  3001               	movlw	1
  5231  09E6                     u1585:	
  5232  09E6  1003               	clrc
  5233  09E7  0CF7               	rrf	___lwdiv@divisor+1,f
  5234  09E8  0CF6               	rrf	___lwdiv@divisor,f
  5235  09E9  3EFF               	addlw	-1
  5236  09EA  1D03               	skipz
  5237  09EB  29E6               	goto	u1585
  5238  09EC                     l2836:	
  5239  09EC  3001               	movlw	1
  5240  09ED  02FD               	subwf	___lwdiv@counter,f
  5241  09EE  1D03               	btfss	3,2
  5242  09EF  29F1               	goto	u1591
  5243  09F0  29F2               	goto	u1590
  5244  09F1                     u1591:	
  5245  09F1  29CD               	goto	l2828
  5246  09F2                     u1590:	
  5247  09F2                     l2838:	
  5248  09F2  087C               	movf	___lwdiv@quotient+1,w
  5249  09F3  00F7               	movwf	?___lwdiv+1
  5250  09F4  087B               	movf	___lwdiv@quotient,w
  5251  09F5  00F6               	movwf	?___lwdiv
  5252  09F6                     l960:	
  5253  09F6  0008               	return
  5254  09F7                     __end_of___lwdiv:	
  5255                           
  5256                           	psect	text21
  5257  0A50                     __ptext21:	
  5258 ;; *************** function ___awdiv *****************
  5259 ;; Defined at:
  5260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  divisor         2    0[COMMON] int 
  5263 ;;  dividend        2    2[COMMON] int 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  quotient        2    7[COMMON] int 
  5266 ;;  sign            1    6[COMMON] unsigned char 
  5267 ;;  counter         1    5[COMMON] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  2    0[COMMON] int 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5277 ;;      Params:         4       0       0       0       0
  5278 ;;      Locals:         4       0       0       0       0
  5279 ;;      Temps:          1       0       0       0       0
  5280 ;;      Totals:         9       0       0       0       0
  5281 ;;Total ram usage:        9 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_get_temp
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function ___awdiv
  5292  0A50                     ___awdiv:	
  5293  0A50                     l2772:	
  5294                           ;incstack = 0
  5295                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5296                           
  5297  0A50  01F6               	clrf	___awdiv@sign
  5298  0A51                     l2774:	
  5299  0A51  1FF1               	btfss	___awdiv@divisor+1,7
  5300  0A52  2A54               	goto	u1431
  5301  0A53  2A55               	goto	u1430
  5302  0A54                     u1431:	
  5303  0A54  2A5C               	goto	l2780
  5304  0A55                     u1430:	
  5305  0A55                     l2776:	
  5306  0A55  09F0               	comf	___awdiv@divisor,f
  5307  0A56  09F1               	comf	___awdiv@divisor+1,f
  5308  0A57  0AF0               	incf	___awdiv@divisor,f
  5309  0A58  1903               	skipnz
  5310  0A59  0AF1               	incf	___awdiv@divisor+1,f
  5311  0A5A                     l2778:	
  5312  0A5A  01F6               	clrf	___awdiv@sign
  5313  0A5B  0AF6               	incf	___awdiv@sign,f
  5314  0A5C                     l2780:	
  5315  0A5C  1FF3               	btfss	___awdiv@dividend+1,7
  5316  0A5D  2A5F               	goto	u1441
  5317  0A5E  2A60               	goto	u1440
  5318  0A5F                     u1441:	
  5319  0A5F  2A69               	goto	l2786
  5320  0A60                     u1440:	
  5321  0A60                     l2782:	
  5322  0A60  09F2               	comf	___awdiv@dividend,f
  5323  0A61  09F3               	comf	___awdiv@dividend+1,f
  5324  0A62  0AF2               	incf	___awdiv@dividend,f
  5325  0A63  1903               	skipnz
  5326  0A64  0AF3               	incf	___awdiv@dividend+1,f
  5327  0A65                     l2784:	
  5328  0A65  3001               	movlw	1
  5329  0A66  00F4               	movwf	??___awdiv
  5330  0A67  0874               	movf	??___awdiv,w
  5331  0A68  06F6               	xorwf	___awdiv@sign,f
  5332  0A69                     l2786:	
  5333  0A69  01F7               	clrf	___awdiv@quotient
  5334  0A6A  01F8               	clrf	___awdiv@quotient+1
  5335  0A6B                     l2788:	
  5336  0A6B  0870               	movf	___awdiv@divisor,w
  5337  0A6C  0471               	iorwf	___awdiv@divisor+1,w
  5338  0A6D  1903               	btfsc	3,2
  5339  0A6E  2A70               	goto	u1451
  5340  0A6F  2A71               	goto	u1450
  5341  0A70                     u1451:	
  5342  0A70  2AA8               	goto	l2808
  5343  0A71                     u1450:	
  5344  0A71                     l2790:	
  5345  0A71  01F5               	clrf	___awdiv@counter
  5346  0A72  0AF5               	incf	___awdiv@counter,f
  5347  0A73  2A7F               	goto	l2796
  5348  0A74                     l2792:	
  5349  0A74  3001               	movlw	1
  5350  0A75                     u1465:	
  5351  0A75  1003               	clrc
  5352  0A76  0DF0               	rlf	___awdiv@divisor,f
  5353  0A77  0DF1               	rlf	___awdiv@divisor+1,f
  5354  0A78  3EFF               	addlw	-1
  5355  0A79  1D03               	skipz
  5356  0A7A  2A75               	goto	u1465
  5357  0A7B                     l2794:	
  5358  0A7B  3001               	movlw	1
  5359  0A7C  00F4               	movwf	??___awdiv
  5360  0A7D  0874               	movf	??___awdiv,w
  5361  0A7E  07F5               	addwf	___awdiv@counter,f
  5362  0A7F                     l2796:	
  5363  0A7F  1FF1               	btfss	___awdiv@divisor+1,7
  5364  0A80  2A82               	goto	u1471
  5365  0A81  2A83               	goto	u1470
  5366  0A82                     u1471:	
  5367  0A82  2A74               	goto	l2792
  5368  0A83                     u1470:	
  5369  0A83                     l2798:	
  5370  0A83  3001               	movlw	1
  5371  0A84                     u1485:	
  5372  0A84  1003               	clrc
  5373  0A85  0DF7               	rlf	___awdiv@quotient,f
  5374  0A86  0DF8               	rlf	___awdiv@quotient+1,f
  5375  0A87  3EFF               	addlw	-1
  5376  0A88  1D03               	skipz
  5377  0A89  2A84               	goto	u1485
  5378  0A8A  0871               	movf	___awdiv@divisor+1,w
  5379  0A8B  0273               	subwf	___awdiv@dividend+1,w
  5380  0A8C  1D03               	skipz
  5381  0A8D  2A90               	goto	u1495
  5382  0A8E  0870               	movf	___awdiv@divisor,w
  5383  0A8F  0272               	subwf	___awdiv@dividend,w
  5384  0A90                     u1495:	
  5385  0A90  1C03               	skipc
  5386  0A91  2A93               	goto	u1491
  5387  0A92  2A94               	goto	u1490
  5388  0A93                     u1491:	
  5389  0A93  2A9B               	goto	l2804
  5390  0A94                     u1490:	
  5391  0A94                     l2800:	
  5392  0A94  0870               	movf	___awdiv@divisor,w
  5393  0A95  02F2               	subwf	___awdiv@dividend,f
  5394  0A96  0871               	movf	___awdiv@divisor+1,w
  5395  0A97  1C03               	skipc
  5396  0A98  03F3               	decf	___awdiv@dividend+1,f
  5397  0A99  02F3               	subwf	___awdiv@dividend+1,f
  5398  0A9A                     l2802:	
  5399  0A9A  1477               	bsf	___awdiv@quotient,0
  5400  0A9B                     l2804:	
  5401  0A9B  3001               	movlw	1
  5402  0A9C                     u1505:	
  5403  0A9C  1003               	clrc
  5404  0A9D  0CF1               	rrf	___awdiv@divisor+1,f
  5405  0A9E  0CF0               	rrf	___awdiv@divisor,f
  5406  0A9F  3EFF               	addlw	-1
  5407  0AA0  1D03               	skipz
  5408  0AA1  2A9C               	goto	u1505
  5409  0AA2                     l2806:	
  5410  0AA2  3001               	movlw	1
  5411  0AA3  02F5               	subwf	___awdiv@counter,f
  5412  0AA4  1D03               	btfss	3,2
  5413  0AA5  2AA7               	goto	u1511
  5414  0AA6  2AA8               	goto	u1510
  5415  0AA7                     u1511:	
  5416  0AA7  2A83               	goto	l2798
  5417  0AA8                     u1510:	
  5418  0AA8                     l2808:	
  5419  0AA8  0876               	movf	___awdiv@sign,w
  5420  0AA9  1903               	btfsc	3,2
  5421  0AAA  2AAC               	goto	u1521
  5422  0AAB  2AAD               	goto	u1520
  5423  0AAC                     u1521:	
  5424  0AAC  2AB2               	goto	l2812
  5425  0AAD                     u1520:	
  5426  0AAD                     l2810:	
  5427  0AAD  09F7               	comf	___awdiv@quotient,f
  5428  0AAE  09F8               	comf	___awdiv@quotient+1,f
  5429  0AAF  0AF7               	incf	___awdiv@quotient,f
  5430  0AB0  1903               	skipnz
  5431  0AB1  0AF8               	incf	___awdiv@quotient+1,f
  5432  0AB2                     l2812:	
  5433  0AB2  0878               	movf	___awdiv@quotient+1,w
  5434  0AB3  00F1               	movwf	?___awdiv+1
  5435  0AB4  0877               	movf	___awdiv@quotient,w
  5436  0AB5  00F0               	movwf	?___awdiv
  5437  0AB6                     l841:	
  5438  0AB6  0008               	return
  5439  0AB7                     __end_of___awdiv:	
  5440                           
  5441                           	psect	text22
  5442  1667                     __ptext22:	
  5443 ;; *************** function _ds1302_init *****************
  5444 ;; Defined at:
  5445 ;;		line 6 in file "clock_src.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5459 ;;      Params:         0       0       0       0       0
  5460 ;;      Locals:         0       0       0       0       0
  5461 ;;      Temps:          0       0       0       0       0
  5462 ;;      Totals:         0       0       0       0       0
  5463 ;;Total ram usage:        0 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    1
  5466 ;; This function calls:
  5467 ;;		_time_write_1
  5468 ;; This function is called by:
  5469 ;;		_main
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _ds1302_init
  5475  1667                     _ds1302_init:	
  5476  1667                     l2866:	
  5477                           ;incstack = 0
  5478                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5479                           
  5480                           
  5481                           ;clock_src.c: 8:    RB0=0;
  5482  1667  1283               	bcf	3,5	;RP0=0, select bank0
  5483  1668  1303               	bcf	3,6	;RP1=0, select bank0
  5484  1669  1006               	bcf	6,0	;volatile
  5485                           
  5486                           ;clock_src.c: 9:    RB5 =0;
  5487  166A  1286               	bcf	6,5	;volatile
  5488                           
  5489                           ;clock_src.c: 10:    RB5=1;
  5490  166B  1686               	bsf	6,5	;volatile
  5491  166C                     l2868:	
  5492                           
  5493                           ;clock_src.c: 11:    time_write_1(0x8e);
  5494  166C  308E               	movlw	142
  5495  166D  160A  118A  2752  160A  118A  	fcall	_time_write_1
  5496                           
  5497                           ;clock_src.c: 12:    time_write_1(0);
  5498  1672  3000               	movlw	0
  5499  1673  160A  118A  2752  160A  118A  	fcall	_time_write_1
  5500  1678                     l2870:	
  5501                           
  5502                           ;clock_src.c: 13:    RB5=0;
  5503  1678  1283               	bcf	3,5	;RP0=0, select bank0
  5504  1679  1303               	bcf	3,6	;RP1=0, select bank0
  5505  167A  1286               	bcf	6,5	;volatile
  5506  167B                     l299:	
  5507  167B  0008               	return
  5508  167C                     __end_of_ds1302_init:	
  5509                           
  5510                           	psect	text23
  5511  177D                     __ptext23:	
  5512 ;; *************** function _display_temp *****************
  5513 ;; Defined at:
  5514 ;;		line 12 in file "Thermometer_src.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5528 ;;      Params:         0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    2
  5535 ;; This function calls:
  5536 ;;		_write_char
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function _display_temp
  5544  177D                     _display_temp:	
  5545  177D                     l2982:	
  5546                           ;incstack = 0
  5547                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5548                           
  5549                           
  5550                           ;Thermometer_src.c: 14:  write_char(shi + '0');
  5551  177D  1283               	bcf	3,5	;RP0=0, select bank0
  5552  177E  1303               	bcf	3,6	;RP1=0, select bank0
  5553  177F  0849               	movf	_shi,w
  5554  1780  3E30               	addlw	48
  5555  1781  160A  118A  26D5  160A  118A  	fcall	_write_char
  5556                           
  5557                           ;Thermometer_src.c: 16:  write_char(ge + '0');
  5558  1786  1283               	bcf	3,5	;RP0=0, select bank0
  5559  1787  1303               	bcf	3,6	;RP1=0, select bank0
  5560  1788  0848               	movf	_ge,w
  5561  1789  3E30               	addlw	48
  5562  178A  160A  118A  26D5  160A  118A  	fcall	_write_char
  5563                           
  5564                           ;Thermometer_src.c: 17:  write_char('.');
  5565  178F  302E               	movlw	46
  5566  1790  160A  118A  26D5  160A  118A  	fcall	_write_char
  5567                           
  5568                           ;Thermometer_src.c: 19:  write_char(shifen + '0');
  5569  1795  1283               	bcf	3,5	;RP0=0, select bank0
  5570  1796  1303               	bcf	3,6	;RP1=0, select bank0
  5571  1797  0847               	movf	_shifen,w
  5572  1798  3E30               	addlw	48
  5573  1799  160A  118A  26D5  160A  118A  	fcall	_write_char
  5574                           
  5575                           ;Thermometer_src.c: 21:  write_char(baifen + '0');
  5576  179E  1283               	bcf	3,5	;RP0=0, select bank0
  5577  179F  1303               	bcf	3,6	;RP1=0, select bank0
  5578  17A0  0846               	movf	_baifen,w
  5579  17A1  3E30               	addlw	48
  5580  17A2  160A  118A  26D5  160A  118A  	fcall	_write_char
  5581  17A7                     l234:	
  5582  17A7  0008               	return
  5583  17A8                     __end_of_display_temp:	
  5584                           
  5585                           	psect	text24
  5586  003F                     __ptext24:	
  5587 ;; *************** function _display_date *****************
  5588 ;; Defined at:
  5589 ;;		line 79 in file "clock_src.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  i               2    5[COMMON] int 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5603 ;;      Params:         0       0       0       0       0
  5604 ;;      Locals:         2       0       0       0       0
  5605 ;;      Temps:          2       0       0       0       0
  5606 ;;      Totals:         4       0       0       0       0
  5607 ;;Total ram usage:        4 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    2
  5610 ;; This function calls:
  5611 ;;		_write_char
  5612 ;; This function is called by:
  5613 ;;		_main
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           
  5618                           ;psect for function _display_date
  5619  003F                     _display_date:	
  5620  003F                     l2984:	
  5621                           ;incstack = 0
  5622                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5623                           
  5624                           
  5625                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  5626  003F  1283               	bcf	3,5	;RP0=0, select bank0
  5627  0040  1303               	bcf	3,6	;RP1=0, select bank0
  5628  0041  1886               	btfsc	6,1	;volatile
  5629  0042  2844               	goto	u1741
  5630  0043  2845               	goto	u1740
  5631  0044                     u1741:	
  5632  0044  284D               	goto	l2988
  5633  0045                     u1740:	
  5634  0045                     l2986:	
  5635                           
  5636                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  5637  0045  0823               	movf	_table1+3,w
  5638  0046  00F3               	movwf	??_display_date
  5639  0047  0873               	movf	??_display_date,w
  5640  0048  00A0               	movwf	_table1
  5641                           
  5642                           ;clock_src.c: 85:           table1[1]=table1[4];
  5643  0049  0824               	movf	_table1+4,w
  5644  004A  00F3               	movwf	??_display_date
  5645  004B  0873               	movf	??_display_date,w
  5646  004C  00A1               	movwf	_table1+1
  5647  004D                     l2988:	
  5648                           
  5649                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  5650  004D  0823               	movf	_table1+3,w
  5651  004E  39F0               	andlw	240
  5652  004F  00F3               	movwf	??_display_date
  5653  0050  01F4               	clrf	??_display_date+1
  5654  0051  0873               	movf	??_display_date,w
  5655  0052  00F5               	movwf	display_date@i
  5656  0053  0874               	movf	??_display_date+1,w
  5657  0054  00F6               	movwf	display_date@i+1
  5658  0055                     l2990:	
  5659                           
  5660                           ;clock_src.c: 88:      i=i>>4;
  5661  0055  0E75               	swapf	display_date@i,w
  5662  0056  390F               	andlw	15
  5663  0057  00F5               	movwf	display_date@i
  5664  0058  0E76               	swapf	display_date@i+1,w
  5665  0059  39F0               	andlw	240
  5666  005A  04F5               	iorwf	display_date@i,f
  5667  005B  0E76               	swapf	display_date@i+1,w
  5668  005C  390F               	andlw	15
  5669  005D  00F6               	movwf	display_date@i+1
  5670  005E  30F0               	movlw	240
  5671  005F  1DF6               	btfss	display_date@i+1,3
  5672  0060  3000               	movlw	0
  5673  0061  04F6               	iorwf	display_date@i+1,f
  5674  0062                     l2992:	
  5675                           
  5676                           ;clock_src.c: 89:      write_char(i + '0');
  5677  0062  0875               	movf	display_date@i,w
  5678  0063  3E30               	addlw	48
  5679  0064  160A  118A  26D5  120A  118A  	fcall	_write_char
  5680  0069                     l2994:	
  5681                           
  5682                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  5683  0069  1283               	bcf	3,5	;RP0=0, select bank0
  5684  006A  1303               	bcf	3,6	;RP1=0, select bank0
  5685  006B  0823               	movf	_table1+3,w
  5686  006C  390F               	andlw	15
  5687  006D  00F3               	movwf	??_display_date
  5688  006E  01F4               	clrf	??_display_date+1
  5689  006F  0873               	movf	??_display_date,w
  5690  0070  00F5               	movwf	display_date@i
  5691  0071  0874               	movf	??_display_date+1,w
  5692  0072  00F6               	movwf	display_date@i+1
  5693  0073                     l2996:	
  5694                           
  5695                           ;clock_src.c: 92:      write_char(i + '0');
  5696  0073  0875               	movf	display_date@i,w
  5697  0074  3E30               	addlw	48
  5698  0075  160A  118A  26D5  120A  118A  	fcall	_write_char
  5699  007A                     l2998:	
  5700                           
  5701                           ;clock_src.c: 93:      write_char('/');
  5702  007A  302F               	movlw	47
  5703  007B  160A  118A  26D5  120A  118A  	fcall	_write_char
  5704  0080                     l3000:	
  5705                           
  5706                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  5707  0080  1283               	bcf	3,5	;RP0=0, select bank0
  5708  0081  1303               	bcf	3,6	;RP1=0, select bank0
  5709  0082  0824               	movf	_table1+4,w
  5710  0083  39F0               	andlw	240
  5711  0084  00F3               	movwf	??_display_date
  5712  0085  01F4               	clrf	??_display_date+1
  5713  0086  0873               	movf	??_display_date,w
  5714  0087  00F5               	movwf	display_date@i
  5715  0088  0874               	movf	??_display_date+1,w
  5716  0089  00F6               	movwf	display_date@i+1
  5717  008A                     l3002:	
  5718                           
  5719                           ;clock_src.c: 98:      i=i>>4;
  5720  008A  0E75               	swapf	display_date@i,w
  5721  008B  390F               	andlw	15
  5722  008C  00F5               	movwf	display_date@i
  5723  008D  0E76               	swapf	display_date@i+1,w
  5724  008E  39F0               	andlw	240
  5725  008F  04F5               	iorwf	display_date@i,f
  5726  0090  0E76               	swapf	display_date@i+1,w
  5727  0091  390F               	andlw	15
  5728  0092  00F6               	movwf	display_date@i+1
  5729  0093  30F0               	movlw	240
  5730  0094  1DF6               	btfss	display_date@i+1,3
  5731  0095  3000               	movlw	0
  5732  0096  04F6               	iorwf	display_date@i+1,f
  5733  0097                     l3004:	
  5734                           
  5735                           ;clock_src.c: 99:      write_char(i + '0');
  5736  0097  0875               	movf	display_date@i,w
  5737  0098  3E30               	addlw	48
  5738  0099  160A  118A  26D5  120A  118A  	fcall	_write_char
  5739  009E                     l3006:	
  5740                           
  5741                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  5742  009E  1283               	bcf	3,5	;RP0=0, select bank0
  5743  009F  1303               	bcf	3,6	;RP1=0, select bank0
  5744  00A0  0824               	movf	_table1+4,w
  5745  00A1  390F               	andlw	15
  5746  00A2  00F3               	movwf	??_display_date
  5747  00A3  01F4               	clrf	??_display_date+1
  5748  00A4  0873               	movf	??_display_date,w
  5749  00A5  00F5               	movwf	display_date@i
  5750  00A6  0874               	movf	??_display_date+1,w
  5751  00A7  00F6               	movwf	display_date@i+1
  5752  00A8                     l3008:	
  5753                           
  5754                           ;clock_src.c: 102:      write_char(i + '0');
  5755  00A8  0875               	movf	display_date@i,w
  5756  00A9  3E30               	addlw	48
  5757  00AA  160A  118A  26D5  120A  118A  	fcall	_write_char
  5758  00AF                     l3010:	
  5759                           
  5760                           ;clock_src.c: 103:      write_char('/');
  5761  00AF  302F               	movlw	47
  5762  00B0  160A  118A  26D5  120A  118A  	fcall	_write_char
  5763  00B5                     l3012:	
  5764                           
  5765                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  5766  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  5767  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  5768  00B7  0826               	movf	_table1+6,w
  5769  00B8  39F0               	andlw	240
  5770  00B9  00F3               	movwf	??_display_date
  5771  00BA  01F4               	clrf	??_display_date+1
  5772  00BB  0873               	movf	??_display_date,w
  5773  00BC  00F5               	movwf	display_date@i
  5774  00BD  0874               	movf	??_display_date+1,w
  5775  00BE  00F6               	movwf	display_date@i+1
  5776  00BF                     l3014:	
  5777                           
  5778                           ;clock_src.c: 108:      i=i>>4;
  5779  00BF  0E75               	swapf	display_date@i,w
  5780  00C0  390F               	andlw	15
  5781  00C1  00F5               	movwf	display_date@i
  5782  00C2  0E76               	swapf	display_date@i+1,w
  5783  00C3  39F0               	andlw	240
  5784  00C4  04F5               	iorwf	display_date@i,f
  5785  00C5  0E76               	swapf	display_date@i+1,w
  5786  00C6  390F               	andlw	15
  5787  00C7  00F6               	movwf	display_date@i+1
  5788  00C8  30F0               	movlw	240
  5789  00C9  1DF6               	btfss	display_date@i+1,3
  5790  00CA  3000               	movlw	0
  5791  00CB  04F6               	iorwf	display_date@i+1,f
  5792  00CC                     l3016:	
  5793                           
  5794                           ;clock_src.c: 109:      write_char(i + '0');
  5795  00CC  0875               	movf	display_date@i,w
  5796  00CD  3E30               	addlw	48
  5797  00CE  160A  118A  26D5  120A  118A  	fcall	_write_char
  5798  00D3                     l3018:	
  5799                           
  5800                           ;clock_src.c: 111:      i=table1[6]&0x0f;
  5801  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  5802  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  5803  00D5  0826               	movf	_table1+6,w
  5804  00D6  390F               	andlw	15
  5805  00D7  00F3               	movwf	??_display_date
  5806  00D8  01F4               	clrf	??_display_date+1
  5807  00D9  0873               	movf	??_display_date,w
  5808  00DA  00F5               	movwf	display_date@i
  5809  00DB  0874               	movf	??_display_date+1,w
  5810  00DC  00F6               	movwf	display_date@i+1
  5811  00DD                     l3020:	
  5812                           
  5813                           ;clock_src.c: 112:      write_char(i + '0');
  5814  00DD  0875               	movf	display_date@i,w
  5815  00DE  3E30               	addlw	48
  5816  00DF  160A  118A  26D5  120A  118A  	fcall	_write_char
  5817  00E4                     l317:	
  5818  00E4  0008               	return
  5819  00E5                     __end_of_display_date:	
  5820                           
  5821                           	psect	text25
  5822  0AB7                     __ptext25:	
  5823 ;; *************** function _display_clock *****************
  5824 ;; Defined at:
  5825 ;;		line 37 in file "clock_src.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  i               2    5[COMMON] int 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5839 ;;      Params:         0       0       0       0       0
  5840 ;;      Locals:         2       0       0       0       0
  5841 ;;      Temps:          2       0       0       0       0
  5842 ;;      Totals:         4       0       0       0       0
  5843 ;;Total ram usage:        4 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    2
  5846 ;; This function calls:
  5847 ;;		_write_char
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           
  5854                           ;psect for function _display_clock
  5855  0AB7                     _display_clock:	
  5856  0AB7                     l3022:	
  5857                           ;incstack = 0
  5858                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5859                           
  5860                           
  5861                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  5862  0AB7  1283               	bcf	3,5	;RP0=0, select bank0
  5863  0AB8  1303               	bcf	3,6	;RP1=0, select bank0
  5864  0AB9  1886               	btfsc	6,1	;volatile
  5865  0ABA  2ABC               	goto	u1751
  5866  0ABB  2ABD               	goto	u1750
  5867  0ABC                     u1751:	
  5868  0ABC  2AC5               	goto	l3026
  5869  0ABD                     u1750:	
  5870  0ABD                     l3024:	
  5871                           
  5872                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  5873  0ABD  0823               	movf	_table1+3,w
  5874  0ABE  00F3               	movwf	??_display_clock
  5875  0ABF  0873               	movf	??_display_clock,w
  5876  0AC0  00A0               	movwf	_table1
  5877                           
  5878                           ;clock_src.c: 43:           table1[1]=table1[4];
  5879  0AC1  0824               	movf	_table1+4,w
  5880  0AC2  00F3               	movwf	??_display_clock
  5881  0AC3  0873               	movf	??_display_clock,w
  5882  0AC4  00A1               	movwf	_table1+1
  5883  0AC5                     l3026:	
  5884                           
  5885                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  5886  0AC5  0822               	movf	_table1+2,w
  5887  0AC6  39F0               	andlw	240
  5888  0AC7  00F3               	movwf	??_display_clock
  5889  0AC8  01F4               	clrf	??_display_clock+1
  5890  0AC9  0873               	movf	??_display_clock,w
  5891  0ACA  00F5               	movwf	display_clock@i
  5892  0ACB  0874               	movf	??_display_clock+1,w
  5893  0ACC  00F6               	movwf	display_clock@i+1
  5894  0ACD                     l3028:	
  5895                           
  5896                           ;clock_src.c: 47:      i=i>>4;
  5897  0ACD  0E75               	swapf	display_clock@i,w
  5898  0ACE  390F               	andlw	15
  5899  0ACF  00F5               	movwf	display_clock@i
  5900  0AD0  0E76               	swapf	display_clock@i+1,w
  5901  0AD1  39F0               	andlw	240
  5902  0AD2  04F5               	iorwf	display_clock@i,f
  5903  0AD3  0E76               	swapf	display_clock@i+1,w
  5904  0AD4  390F               	andlw	15
  5905  0AD5  00F6               	movwf	display_clock@i+1
  5906  0AD6  30F0               	movlw	240
  5907  0AD7  1DF6               	btfss	display_clock@i+1,3
  5908  0AD8  3000               	movlw	0
  5909  0AD9  04F6               	iorwf	display_clock@i+1,f
  5910  0ADA                     l3030:	
  5911                           
  5912                           ;clock_src.c: 48:      write_char(i + '0');
  5913  0ADA  0875               	movf	display_clock@i,w
  5914  0ADB  3E30               	addlw	48
  5915  0ADC  160A  118A  26D5  120A  158A  	fcall	_write_char
  5916  0AE1                     l3032:	
  5917                           
  5918                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  5919  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  5920  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  5921  0AE3  0822               	movf	_table1+2,w
  5922  0AE4  390F               	andlw	15
  5923  0AE5  00F3               	movwf	??_display_clock
  5924  0AE6  01F4               	clrf	??_display_clock+1
  5925  0AE7  0873               	movf	??_display_clock,w
  5926  0AE8  00F5               	movwf	display_clock@i
  5927  0AE9  0874               	movf	??_display_clock+1,w
  5928  0AEA  00F6               	movwf	display_clock@i+1
  5929  0AEB                     l3034:	
  5930                           
  5931                           ;clock_src.c: 53:      write_char(i + '0');
  5932  0AEB  0875               	movf	display_clock@i,w
  5933  0AEC  3E30               	addlw	48
  5934  0AED  160A  118A  26D5  120A  158A  	fcall	_write_char
  5935  0AF2                     l3036:	
  5936                           
  5937                           ;clock_src.c: 54:      write_char(':');
  5938  0AF2  303A               	movlw	58
  5939  0AF3  160A  118A  26D5  120A  158A  	fcall	_write_char
  5940  0AF8                     l3038:	
  5941                           
  5942                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  5943  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0AFA  0821               	movf	_table1+1,w
  5946  0AFB  39F0               	andlw	240
  5947  0AFC  00F3               	movwf	??_display_clock
  5948  0AFD  01F4               	clrf	??_display_clock+1
  5949  0AFE  0873               	movf	??_display_clock,w
  5950  0AFF  00F5               	movwf	display_clock@i
  5951  0B00  0874               	movf	??_display_clock+1,w
  5952  0B01  00F6               	movwf	display_clock@i+1
  5953  0B02                     l3040:	
  5954                           
  5955                           ;clock_src.c: 59:      i=i>>4;
  5956  0B02  0E75               	swapf	display_clock@i,w
  5957  0B03  390F               	andlw	15
  5958  0B04  00F5               	movwf	display_clock@i
  5959  0B05  0E76               	swapf	display_clock@i+1,w
  5960  0B06  39F0               	andlw	240
  5961  0B07  04F5               	iorwf	display_clock@i,f
  5962  0B08  0E76               	swapf	display_clock@i+1,w
  5963  0B09  390F               	andlw	15
  5964  0B0A  00F6               	movwf	display_clock@i+1
  5965  0B0B  30F0               	movlw	240
  5966  0B0C  1DF6               	btfss	display_clock@i+1,3
  5967  0B0D  3000               	movlw	0
  5968  0B0E  04F6               	iorwf	display_clock@i+1,f
  5969  0B0F                     l3042:	
  5970                           
  5971                           ;clock_src.c: 60:      write_char(i + '0');
  5972  0B0F  0875               	movf	display_clock@i,w
  5973  0B10  3E30               	addlw	48
  5974  0B11  160A  118A  26D5  120A  158A  	fcall	_write_char
  5975  0B16                     l3044:	
  5976                           
  5977                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  5978  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  5979  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  5980  0B18  0821               	movf	_table1+1,w
  5981  0B19  390F               	andlw	15
  5982  0B1A  00F3               	movwf	??_display_clock
  5983  0B1B  01F4               	clrf	??_display_clock+1
  5984  0B1C  0873               	movf	??_display_clock,w
  5985  0B1D  00F5               	movwf	display_clock@i
  5986  0B1E  0874               	movf	??_display_clock+1,w
  5987  0B1F  00F6               	movwf	display_clock@i+1
  5988  0B20                     l3046:	
  5989                           
  5990                           ;clock_src.c: 64:      write_char(i + '0');
  5991  0B20  0875               	movf	display_clock@i,w
  5992  0B21  3E30               	addlw	48
  5993  0B22  160A  118A  26D5  120A  158A  	fcall	_write_char
  5994  0B27                     l3048:	
  5995                           
  5996                           ;clock_src.c: 65:      write_char(':');
  5997  0B27  303A               	movlw	58
  5998  0B28  160A  118A  26D5  120A  158A  	fcall	_write_char
  5999  0B2D                     l3050:	
  6000                           
  6001                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  6002  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  6003  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  6004  0B2F  0820               	movf	_table1,w
  6005  0B30  39F0               	andlw	240
  6006  0B31  00F3               	movwf	??_display_clock
  6007  0B32  01F4               	clrf	??_display_clock+1
  6008  0B33  0873               	movf	??_display_clock,w
  6009  0B34  00F5               	movwf	display_clock@i
  6010  0B35  0874               	movf	??_display_clock+1,w
  6011  0B36  00F6               	movwf	display_clock@i+1
  6012  0B37                     l3052:	
  6013                           
  6014                           ;clock_src.c: 69:      i=i>>4;
  6015  0B37  0E75               	swapf	display_clock@i,w
  6016  0B38  390F               	andlw	15
  6017  0B39  00F5               	movwf	display_clock@i
  6018  0B3A  0E76               	swapf	display_clock@i+1,w
  6019  0B3B  39F0               	andlw	240
  6020  0B3C  04F5               	iorwf	display_clock@i,f
  6021  0B3D  0E76               	swapf	display_clock@i+1,w
  6022  0B3E  390F               	andlw	15
  6023  0B3F  00F6               	movwf	display_clock@i+1
  6024  0B40  30F0               	movlw	240
  6025  0B41  1DF6               	btfss	display_clock@i+1,3
  6026  0B42  3000               	movlw	0
  6027  0B43  04F6               	iorwf	display_clock@i+1,f
  6028  0B44                     l3054:	
  6029                           
  6030                           ;clock_src.c: 70:      write_char(i + '0');
  6031  0B44  0875               	movf	display_clock@i,w
  6032  0B45  3E30               	addlw	48
  6033  0B46  160A  118A  26D5  120A  158A  	fcall	_write_char
  6034  0B4B                     l3056:	
  6035                           
  6036                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  6037  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  6039  0B4D  0820               	movf	_table1,w
  6040  0B4E  390F               	andlw	15
  6041  0B4F  00F3               	movwf	??_display_clock
  6042  0B50  01F4               	clrf	??_display_clock+1
  6043  0B51  0873               	movf	??_display_clock,w
  6044  0B52  00F5               	movwf	display_clock@i
  6045  0B53  0874               	movf	??_display_clock+1,w
  6046  0B54  00F6               	movwf	display_clock@i+1
  6047  0B55                     l3058:	
  6048                           
  6049                           ;clock_src.c: 74:      write_char(i + '0');
  6050  0B55  0875               	movf	display_clock@i,w
  6051  0B56  3E30               	addlw	48
  6052  0B57  160A  118A  26D5  120A  158A  	fcall	_write_char
  6053  0B5C                     l313:	
  6054  0B5C  0008               	return
  6055  0B5D                     __end_of_display_clock:	
  6056                           
  6057                           	psect	text26
  6058  03D3                     __ptext26:	
  6059 ;; *************** function _date_settings *****************
  6060 ;; Defined at:
  6061 ;;		line 324 in file "Button_src.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6075 ;;      Params:         0       0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0
  6077 ;;      Temps:          0       3       0       0       0
  6078 ;;      Totals:         0       3       0       0       0
  6079 ;;Total ram usage:        3 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    3
  6082 ;; This function calls:
  6083 ;;		_button_delay
  6084 ;;		_incrementor
  6085 ;;		_modulus_func
  6086 ;;		_set_time
  6087 ;;		_time_date_delimiter
  6088 ;;		_time_date_hex_terminator
  6089 ;;		_write_char
  6090 ;;		_write_cmd
  6091 ;; This function is called by:
  6092 ;;		_main
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           
  6097                           ;psect for function _date_settings
  6098  03D3                     _date_settings:	
  6099  03D3                     l3196:	
  6100                           ;incstack = 0
  6101                           ; Regs used in _date_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6102                           
  6103                           
  6104                           ;Button_src.c: 325:  RC0 = 0;
  6105  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  6106  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  6107  03D5  1007               	bcf	7,0	;volatile
  6108                           
  6109                           ;Button_src.c: 326:  RC1 = 1;
  6110  03D6  1487               	bsf	7,1	;volatile
  6111                           
  6112                           ;Button_src.c: 327:  RC2 = 1;
  6113  03D7  1507               	bsf	7,2	;volatile
  6114                           
  6115                           ;Button_src.c: 328:  RC3 = 1;
  6116  03D8  1587               	bsf	7,3	;volatile
  6117                           
  6118                           ;Button_src.c: 329:   if (RC4 == 0){
  6119  03D9  1A07               	btfsc	7,4	;volatile
  6120  03DA  2BDC               	goto	u1841
  6121  03DB  2BDD               	goto	u1840
  6122  03DC                     u1841:	
  6123  03DC  2FE5               	goto	l535
  6124  03DD                     u1840:	
  6125  03DD                     l3198:	
  6126                           
  6127                           ;Button_src.c: 330:       write_cmd(0x1);
  6128  03DD  3001               	movlw	1
  6129  03DE  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  6130  03E3                     l526:	
  6131                           ;Button_src.c: 331:       for(;;){
  6132                           
  6133                           
  6134                           ;Button_src.c: 332:             write_cmd(0x80);
  6135  03E3  3080               	movlw	128
  6136  03E4  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  6137                           
  6138                           ;Button_src.c: 333:             write_char('D');
  6139  03E9  3044               	movlw	68
  6140  03EA  160A  118A  26D5  120A  118A  	fcall	_write_char
  6141                           
  6142                           ;Button_src.c: 334:             write_char('a');
  6143  03EF  3061               	movlw	97
  6144  03F0  160A  118A  26D5  120A  118A  	fcall	_write_char
  6145                           
  6146                           ;Button_src.c: 335:             write_char('t');
  6147  03F5  3074               	movlw	116
  6148  03F6  160A  118A  26D5  120A  118A  	fcall	_write_char
  6149                           
  6150                           ;Button_src.c: 336:             write_char('e');
  6151  03FB  3065               	movlw	101
  6152  03FC  160A  118A  26D5  120A  118A  	fcall	_write_char
  6153                           
  6154                           ;Button_src.c: 337:             write_char('_');
  6155  0401  305F               	movlw	95
  6156  0402  160A  118A  26D5  120A  118A  	fcall	_write_char
  6157                           
  6158                           ;Button_src.c: 338:             write_char('S');
  6159  0407  3053               	movlw	83
  6160  0408  160A  118A  26D5  120A  118A  	fcall	_write_char
  6161                           
  6162                           ;Button_src.c: 339:             write_char('e');
  6163  040D  3065               	movlw	101
  6164  040E  160A  118A  26D5  120A  118A  	fcall	_write_char
  6165                           
  6166                           ;Button_src.c: 340:             write_char('t');
  6167  0413  3074               	movlw	116
  6168  0414  160A  118A  26D5  120A  118A  	fcall	_write_char
  6169                           
  6170                           ;Button_src.c: 341:             write_char('t');
  6171  0419  3074               	movlw	116
  6172  041A  160A  118A  26D5  120A  118A  	fcall	_write_char
  6173                           
  6174                           ;Button_src.c: 342:             write_char('i');
  6175  041F  3069               	movlw	105
  6176  0420  160A  118A  26D5  120A  118A  	fcall	_write_char
  6177                           
  6178                           ;Button_src.c: 343:             write_char('n');
  6179  0425  306E               	movlw	110
  6180  0426  160A  118A  26D5  120A  118A  	fcall	_write_char
  6181                           
  6182                           ;Button_src.c: 344:             write_char('g');
  6183  042B  3067               	movlw	103
  6184  042C  160A  118A  26D5  120A  118A  	fcall	_write_char
  6185                           
  6186                           ;Button_src.c: 345:             write_char('s');
  6187  0431  3073               	movlw	115
  6188  0432  160A  118A  26D5  120A  118A  	fcall	_write_char
  6189  0437                     l3200:	
  6190                           
  6191                           ;Button_src.c: 346:             RC0 = 1;
  6192  0437  1283               	bcf	3,5	;RP0=0, select bank0
  6193  0438  1303               	bcf	3,6	;RP1=0, select bank0
  6194  0439  1407               	bsf	7,0	;volatile
  6195  043A                     l3202:	
  6196                           
  6197                           ;Button_src.c: 347:             RC1 = 0;
  6198  043A  1087               	bcf	7,1	;volatile
  6199  043B                     l3204:	
  6200                           
  6201                           ;Button_src.c: 348:             RC2 = 1;
  6202  043B  1507               	bsf	7,2	;volatile
  6203  043C                     l3206:	
  6204                           
  6205                           ;Button_src.c: 349:             RC3 = 1;
  6206  043C  1587               	bsf	7,3	;volatile
  6207  043D                     l3208:	
  6208                           
  6209                           ;Button_src.c: 350:             if(RC7 == 0 && b =='x'){
  6210  043D  1B87               	btfsc	7,7	;volatile
  6211  043E  2C40               	goto	u1851
  6212  043F  2C41               	goto	u1850
  6213  0440                     u1851:	
  6214  0440  2CA2               	goto	l3230
  6215  0441                     u1850:	
  6216  0441                     l3210:	
  6217  0441  3078               	movlw	120
  6218  0442  0642               	xorwf	_b,w
  6219  0443  1D03               	btfss	3,2
  6220  0444  2C46               	goto	u1861
  6221  0445  2C47               	goto	u1860
  6222  0446                     u1861:	
  6223  0446  2CA2               	goto	l3230
  6224  0447                     u1860:	
  6225  0447                     l3212:	
  6226                           
  6227                           ;Button_src.c: 351:                     a++;
  6228  0447  3001               	movlw	1
  6229  0448  00D3               	movwf	??_date_settings
  6230  0449  0853               	movf	??_date_settings,w
  6231  044A  07C3               	addwf	_a,f
  6232  044B                     l3214:	
  6233                           
  6234                           ;Button_src.c: 352:                     x++ ;
  6235  044B  3001               	movlw	1
  6236  044C  07B1               	addwf	_x,f
  6237  044D  1803               	skipnc
  6238  044E  0AB2               	incf	_x+1,f
  6239  044F  3000               	movlw	0
  6240  0450  07B2               	addwf	_x+1,f
  6241  0451                     l3216:	
  6242                           
  6243                           ;Button_src.c: 353:                     x = modulus_func(x,10);
  6244  0451  0832               	movf	_x+1,w
  6245  0452  00F8               	movwf	modulus_func@x+1
  6246  0453  0831               	movf	_x,w
  6247  0454  00F7               	movwf	modulus_func@x
  6248  0455  300A               	movlw	10
  6249  0456  00F9               	movwf	modulus_func@y
  6250  0457  3000               	movlw	0
  6251  0458  00FA               	movwf	modulus_func@y+1
  6252  0459  160A  118A  261E  120A  118A  	fcall	_modulus_func
  6253  045E  0878               	movf	?_modulus_func+1,w
  6254  045F  1283               	bcf	3,5	;RP0=0, select bank0
  6255  0460  1303               	bcf	3,6	;RP1=0, select bank0
  6256  0461  00B2               	movwf	_x+1
  6257  0462  0877               	movf	?_modulus_func,w
  6258  0463  00B1               	movwf	_x
  6259  0464                     l3218:	
  6260                           
  6261                           ;Button_src.c: 354:                     y = incrementor(y,x,'9');
  6262  0464  0830               	movf	_y+1,w
  6263  0465  00CF               	movwf	incrementor@upper_val+1
  6264  0466  082F               	movf	_y,w
  6265  0467  00CE               	movwf	incrementor@upper_val
  6266  0468  0832               	movf	_x+1,w
  6267  0469  00D1               	movwf	incrementor@lower_val+1
  6268  046A  0831               	movf	_x,w
  6269  046B  00D0               	movwf	incrementor@lower_val
  6270  046C  3039               	movlw	57
  6271  046D  00D3               	movwf	??_date_settings
  6272  046E  0853               	movf	??_date_settings,w
  6273  046F  00D2               	movwf	incrementor@z
  6274  0470  160A  118A  27A8  120A  118A  	fcall	_incrementor
  6275  0475  1283               	bcf	3,5	;RP0=0, select bank0
  6276  0476  1303               	bcf	3,6	;RP1=0, select bank0
  6277  0477  00D4               	movwf	??_date_settings+1
  6278  0478  01D5               	clrf	??_date_settings+2
  6279  0479  0854               	movf	??_date_settings+1,w
  6280  047A  00AF               	movwf	_y
  6281  047B  0855               	movf	??_date_settings+2,w
  6282  047C  00B0               	movwf	_y+1
  6283  047D                     l3220:	
  6284                           
  6285                           ;Button_src.c: 355:                     a = time_date_hex_terminator(a,'C');
  6286  047D  3043               	movlw	67
  6287  047E  00D3               	movwf	??_date_settings
  6288  047F  0853               	movf	??_date_settings,w
  6289  0480  00F0               	movwf	time_date_hex_terminator@limiter
  6290  0481  0843               	movf	_a,w
  6291  0482  160A  118A  2630  120A  118A  	fcall	_time_date_hex_terminator
  6292  0487  1283               	bcf	3,5	;RP0=0, select bank0
  6293  0488  1303               	bcf	3,6	;RP1=0, select bank0
  6294  0489  00D4               	movwf	??_date_settings+1
  6295  048A  0854               	movf	??_date_settings+1,w
  6296  048B  00C3               	movwf	_a
  6297  048C                     l3222:	
  6298                           
  6299                           ;Button_src.c: 356:                     if(y == 1 && x == 3){
  6300  048C  032F               	decf	_y,w
  6301  048D  0430               	iorwf	_y+1,w
  6302  048E  1D03               	btfss	3,2
  6303  048F  2C91               	goto	u1871
  6304  0490  2C92               	goto	u1870
  6305  0491                     u1871:	
  6306  0491  2C9D               	goto	l3228
  6307  0492                     u1870:	
  6308  0492                     l3224:	
  6309  0492  3003               	movlw	3
  6310  0493  0631               	xorwf	_x,w
  6311  0494  0432               	iorwf	_x+1,w
  6312  0495  1D03               	btfss	3,2
  6313  0496  2C98               	goto	u1881
  6314  0497  2C99               	goto	u1880
  6315  0498                     u1881:	
  6316  0498  2C9D               	goto	l3228
  6317  0499                     u1880:	
  6318  0499                     l3226:	
  6319                           
  6320                           ;Button_src.c: 357:                         x = 0;
  6321  0499  01B1               	clrf	_x
  6322  049A  01B2               	clrf	_x+1
  6323                           
  6324                           ;Button_src.c: 358:                         y = 0;
  6325  049B  01AF               	clrf	_y
  6326  049C  01B0               	clrf	_y+1
  6327  049D                     l3228:	
  6328                           
  6329                           ;Button_src.c: 360:                     button_delay();
  6330  049D  160A  118A  267C  120A  118A  	fcall	_button_delay
  6331  04A2                     l3230:	
  6332                           
  6333                           ;Button_src.c: 362:             if(RC7==0 && b == 'y'){
  6334  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  6335  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  6336  04A4  1B87               	btfsc	7,7	;volatile
  6337  04A5  2CA7               	goto	u1891
  6338  04A6  2CA8               	goto	u1890
  6339  04A7                     u1891:	
  6340  04A7  2D0A               	goto	l3252
  6341  04A8                     u1890:	
  6342  04A8                     l3232:	
  6343  04A8  3079               	movlw	121
  6344  04A9  0642               	xorwf	_b,w
  6345  04AA  1D03               	btfss	3,2
  6346  04AB  2CAD               	goto	u1901
  6347  04AC  2CAE               	goto	u1900
  6348  04AD                     u1901:	
  6349  04AD  2D0A               	goto	l3252
  6350  04AE                     u1900:	
  6351  04AE                     l3234:	
  6352                           
  6353                           ;Button_src.c: 363:                     day_hex++;
  6354  04AE  3001               	movlw	1
  6355  04AF  00D3               	movwf	??_date_settings
  6356  04B0  0853               	movf	??_date_settings,w
  6357  04B1  07C0               	addwf	_day_hex,f
  6358  04B2                     l3236:	
  6359                           
  6360                           ;Button_src.c: 364:                     day_low++;
  6361  04B2  3001               	movlw	1
  6362  04B3  07AB               	addwf	_day_low,f
  6363  04B4  1803               	skipnc
  6364  04B5  0AAC               	incf	_day_low+1,f
  6365  04B6  3000               	movlw	0
  6366  04B7  07AC               	addwf	_day_low+1,f
  6367  04B8                     l3238:	
  6368                           
  6369                           ;Button_src.c: 365:                     day_low = modulus_func(day_low,10);
  6370  04B8  082C               	movf	_day_low+1,w
  6371  04B9  00F8               	movwf	modulus_func@x+1
  6372  04BA  082B               	movf	_day_low,w
  6373  04BB  00F7               	movwf	modulus_func@x
  6374  04BC  300A               	movlw	10
  6375  04BD  00F9               	movwf	modulus_func@y
  6376  04BE  3000               	movlw	0
  6377  04BF  00FA               	movwf	modulus_func@y+1
  6378  04C0  160A  118A  261E  120A  118A  	fcall	_modulus_func
  6379  04C5  0878               	movf	?_modulus_func+1,w
  6380  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  6381  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  6382  04C8  00AC               	movwf	_day_low+1
  6383  04C9  0877               	movf	?_modulus_func,w
  6384  04CA  00AB               	movwf	_day_low
  6385  04CB                     l3240:	
  6386                           
  6387                           ;Button_src.c: 366:                     day_high = incrementor(day_high,day_low,'9');
  6388  04CB  082A               	movf	_day_high+1,w
  6389  04CC  00CF               	movwf	incrementor@upper_val+1
  6390  04CD  0829               	movf	_day_high,w
  6391  04CE  00CE               	movwf	incrementor@upper_val
  6392  04CF  082C               	movf	_day_low+1,w
  6393  04D0  00D1               	movwf	incrementor@lower_val+1
  6394  04D1  082B               	movf	_day_low,w
  6395  04D2  00D0               	movwf	incrementor@lower_val
  6396  04D3  3039               	movlw	57
  6397  04D4  00D3               	movwf	??_date_settings
  6398  04D5  0853               	movf	??_date_settings,w
  6399  04D6  00D2               	movwf	incrementor@z
  6400  04D7  160A  118A  27A8  120A  118A  	fcall	_incrementor
  6401  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  6402  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  6403  04DE  00D4               	movwf	??_date_settings+1
  6404  04DF  01D5               	clrf	??_date_settings+2
  6405  04E0  0854               	movf	??_date_settings+1,w
  6406  04E1  00A9               	movwf	_day_high
  6407  04E2  0855               	movf	??_date_settings+2,w
  6408  04E3  00AA               	movwf	_day_high+1
  6409  04E4                     l3242:	
  6410                           
  6411                           ;Button_src.c: 367:                     day_hex = time_date_hex_terminator(day_hex,'c');
  6412  04E4  3063               	movlw	99
  6413  04E5  00D3               	movwf	??_date_settings
  6414  04E6  0853               	movf	??_date_settings,w
  6415  04E7  00F0               	movwf	time_date_hex_terminator@limiter
  6416  04E8  0840               	movf	_day_hex,w
  6417  04E9  160A  118A  2630  120A  118A  	fcall	_time_date_hex_terminator
  6418  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  6419  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  6420  04F0  00D4               	movwf	??_date_settings+1
  6421  04F1  0854               	movf	??_date_settings+1,w
  6422  04F2  00C0               	movwf	_day_hex
  6423  04F3                     l3244:	
  6424                           
  6425                           ;Button_src.c: 368:                     if(day_high == 3 && day_low==2 ){
  6426  04F3  3003               	movlw	3
  6427  04F4  0629               	xorwf	_day_high,w
  6428  04F5  042A               	iorwf	_day_high+1,w
  6429  04F6  1D03               	btfss	3,2
  6430  04F7  2CF9               	goto	u1911
  6431  04F8  2CFA               	goto	u1910
  6432  04F9                     u1911:	
  6433  04F9  2D05               	goto	l3250
  6434  04FA                     u1910:	
  6435  04FA                     l3246:	
  6436  04FA  3002               	movlw	2
  6437  04FB  062B               	xorwf	_day_low,w
  6438  04FC  042C               	iorwf	_day_low+1,w
  6439  04FD  1D03               	btfss	3,2
  6440  04FE  2D00               	goto	u1921
  6441  04FF  2D01               	goto	u1920
  6442  0500                     u1921:	
  6443  0500  2D05               	goto	l3250
  6444  0501                     u1920:	
  6445  0501                     l3248:	
  6446                           
  6447                           ;Button_src.c: 369:                         day_high = 0;
  6448  0501  01A9               	clrf	_day_high
  6449  0502  01AA               	clrf	_day_high+1
  6450                           
  6451                           ;Button_src.c: 370:                         day_low = 0;
  6452  0503  01AB               	clrf	_day_low
  6453  0504  01AC               	clrf	_day_low+1
  6454  0505                     l3250:	
  6455                           
  6456                           ;Button_src.c: 372:                     button_delay();
  6457  0505  160A  118A  267C  120A  118A  	fcall	_button_delay
  6458  050A                     l3252:	
  6459                           
  6460                           ;Button_src.c: 374:             if(RC7==0 && b == 'z'){
  6461  050A  1283               	bcf	3,5	;RP0=0, select bank0
  6462  050B  1303               	bcf	3,6	;RP1=0, select bank0
  6463  050C  1B87               	btfsc	7,7	;volatile
  6464  050D  2D0F               	goto	u1931
  6465  050E  2D10               	goto	u1930
  6466  050F                     u1931:	
  6467  050F  2D63               	goto	l3274
  6468  0510                     u1930:	
  6469  0510                     l3254:	
  6470  0510  307A               	movlw	122
  6471  0511  0642               	xorwf	_b,w
  6472  0512  1D03               	btfss	3,2
  6473  0513  2D15               	goto	u1941
  6474  0514  2D16               	goto	u1940
  6475  0515                     u1941:	
  6476  0515  2D63               	goto	l3274
  6477  0516                     u1940:	
  6478  0516                     l3256:	
  6479                           
  6480                           ;Button_src.c: 375:                     c++;
  6481  0516  3001               	movlw	1
  6482  0517  00D3               	movwf	??_date_settings
  6483  0518  0853               	movf	??_date_settings,w
  6484  0519  07C1               	addwf	_c,f
  6485  051A                     l3258:	
  6486                           
  6487                           ;Button_src.c: 376:                     t++;
  6488  051A  3001               	movlw	1
  6489  051B  07B5               	addwf	_t,f
  6490  051C  1803               	skipnc
  6491  051D  0AB6               	incf	_t+1,f
  6492  051E  3000               	movlw	0
  6493  051F  07B6               	addwf	_t+1,f
  6494  0520                     l3260:	
  6495                           
  6496                           ;Button_src.c: 377:                     t = modulus_func(t,10);
  6497  0520  0836               	movf	_t+1,w
  6498  0521  00F8               	movwf	modulus_func@x+1
  6499  0522  0835               	movf	_t,w
  6500  0523  00F7               	movwf	modulus_func@x
  6501  0524  300A               	movlw	10
  6502  0525  00F9               	movwf	modulus_func@y
  6503  0526  3000               	movlw	0
  6504  0527  00FA               	movwf	modulus_func@y+1
  6505  0528  160A  118A  261E  120A  118A  	fcall	_modulus_func
  6506  052D  0878               	movf	?_modulus_func+1,w
  6507  052E  1283               	bcf	3,5	;RP0=0, select bank0
  6508  052F  1303               	bcf	3,6	;RP1=0, select bank0
  6509  0530  00B6               	movwf	_t+1
  6510  0531  0877               	movf	?_modulus_func,w
  6511  0532  00B5               	movwf	_t
  6512  0533                     l3262:	
  6513                           
  6514                           ;Button_src.c: 378:                     w = incrementor(w,t,'9');
  6515  0533  0834               	movf	_w+1,w
  6516  0534  00CF               	movwf	incrementor@upper_val+1
  6517  0535  0833               	movf	_w,w
  6518  0536  00CE               	movwf	incrementor@upper_val
  6519  0537  0836               	movf	_t+1,w
  6520  0538  00D1               	movwf	incrementor@lower_val+1
  6521  0539  0835               	movf	_t,w
  6522  053A  00D0               	movwf	incrementor@lower_val
  6523  053B  3039               	movlw	57
  6524  053C  00D3               	movwf	??_date_settings
  6525  053D  0853               	movf	??_date_settings,w
  6526  053E  00D2               	movwf	incrementor@z
  6527  053F  160A  118A  27A8  120A  118A  	fcall	_incrementor
  6528  0544  1283               	bcf	3,5	;RP0=0, select bank0
  6529  0545  1303               	bcf	3,6	;RP1=0, select bank0
  6530  0546  00D4               	movwf	??_date_settings+1
  6531  0547  01D5               	clrf	??_date_settings+2
  6532  0548  0854               	movf	??_date_settings+1,w
  6533  0549  00B3               	movwf	_w
  6534  054A  0855               	movf	??_date_settings+2,w
  6535  054B  00B4               	movwf	_w+1
  6536  054C                     l3264:	
  6537                           
  6538                           ;Button_src.c: 379:                      if(c == (0x59 + 1)){
  6539  054C  305A               	movlw	90
  6540  054D  0641               	xorwf	_c,w
  6541  054E  1D03               	btfss	3,2
  6542  054F  2D51               	goto	u1951
  6543  0550  2D52               	goto	u1950
  6544  0551                     u1951:	
  6545  0551  2D53               	goto	l3268
  6546  0552                     u1950:	
  6547  0552                     l3266:	
  6548                           
  6549                           ;Button_src.c: 380:                         c = 0x00;
  6550  0552  01C1               	clrf	_c
  6551  0553                     l3268:	
  6552                           
  6553                           ;Button_src.c: 382:                     if(w == 6){
  6554  0553  3006               	movlw	6
  6555  0554  0633               	xorwf	_w,w
  6556  0555  0434               	iorwf	_w+1,w
  6557  0556  1D03               	btfss	3,2
  6558  0557  2D59               	goto	u1961
  6559  0558  2D5A               	goto	u1960
  6560  0559                     u1961:	
  6561  0559  2D5E               	goto	l3272
  6562  055A                     u1960:	
  6563  055A                     l3270:	
  6564                           
  6565                           ;Button_src.c: 383:                         w = 0;
  6566  055A  01B3               	clrf	_w
  6567  055B  01B4               	clrf	_w+1
  6568                           
  6569                           ;Button_src.c: 384:                         t = 0;
  6570  055C  01B5               	clrf	_t
  6571  055D  01B6               	clrf	_t+1
  6572  055E                     l3272:	
  6573                           
  6574                           ;Button_src.c: 386:                     button_delay();
  6575  055E  160A  118A  267C  120A  118A  	fcall	_button_delay
  6576  0563                     l3274:	
  6577                           
  6578                           ;Button_src.c: 390:              table[4] = a;
  6579  0563  1283               	bcf	3,5	;RP0=0, select bank0
  6580  0564  1303               	bcf	3,6	;RP1=0, select bank0
  6581  0565  0843               	movf	_a,w
  6582  0566  00D3               	movwf	??_date_settings
  6583  0567  0853               	movf	??_date_settings,w
  6584  0568  00DC               	movwf	_table+4
  6585  0569                     l3276:	
  6586                           
  6587                           ;Button_src.c: 391:              table[6] = c;
  6588  0569  0841               	movf	_c,w
  6589  056A  00D3               	movwf	??_date_settings
  6590  056B  0853               	movf	??_date_settings,w
  6591  056C  00DE               	movwf	_table+6
  6592  056D                     l3278:	
  6593                           
  6594                           ;Button_src.c: 392:              table[3] = day_hex;
  6595  056D  0840               	movf	_day_hex,w
  6596  056E  00D3               	movwf	??_date_settings
  6597  056F  0853               	movf	??_date_settings,w
  6598  0570  00DB               	movwf	_table+3
  6599  0571                     l3280:	
  6600                           
  6601                           ;Button_src.c: 394:                     a = time_date_delimiter(a,0x11,'9');
  6602  0571  3011               	movlw	17
  6603  0572  00D3               	movwf	??_date_settings
  6604  0573  0853               	movf	??_date_settings,w
  6605  0574  00F0               	movwf	time_date_delimiter@hex
  6606  0575  3039               	movlw	57
  6607  0576  00D4               	movwf	??_date_settings+1
  6608  0577  0854               	movf	??_date_settings+1,w
  6609  0578  00F1               	movwf	time_date_delimiter@limiter
  6610  0579  0843               	movf	_a,w
  6611  057A  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6612  057F  1283               	bcf	3,5	;RP0=0, select bank0
  6613  0580  1303               	bcf	3,6	;RP1=0, select bank0
  6614  0581  00D5               	movwf	??_date_settings+2
  6615  0582  0855               	movf	??_date_settings+2,w
  6616  0583  00C3               	movwf	_a
  6617  0584                     l3282:	
  6618                           
  6619                           ;Button_src.c: 396:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  6620  0584  3011               	movlw	17
  6621  0585  00D3               	movwf	??_date_settings
  6622  0586  0853               	movf	??_date_settings,w
  6623  0587  00F0               	movwf	time_date_delimiter@hex
  6624  0588  3039               	movlw	57
  6625  0589  00D4               	movwf	??_date_settings+1
  6626  058A  0854               	movf	??_date_settings+1,w
  6627  058B  00F1               	movwf	time_date_delimiter@limiter
  6628  058C  0840               	movf	_day_hex,w
  6629  058D  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6630  0592  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0593  1303               	bcf	3,6	;RP1=0, select bank0
  6632  0594  00D5               	movwf	??_date_settings+2
  6633  0595  0855               	movf	??_date_settings+2,w
  6634  0596  00C0               	movwf	_day_hex
  6635  0597                     l3284:	
  6636                           
  6637                           ;Button_src.c: 397:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  6638  0597  3021               	movlw	33
  6639  0598  00D3               	movwf	??_date_settings
  6640  0599  0853               	movf	??_date_settings,w
  6641  059A  00F0               	movwf	time_date_delimiter@hex
  6642  059B  304A               	movlw	74
  6643  059C  00D4               	movwf	??_date_settings+1
  6644  059D  0854               	movf	??_date_settings+1,w
  6645  059E  00F1               	movwf	time_date_delimiter@limiter
  6646  059F  0840               	movf	_day_hex,w
  6647  05A0  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6648  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  6649  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  6650  05A7  00D5               	movwf	??_date_settings+2
  6651  05A8  0855               	movf	??_date_settings+2,w
  6652  05A9  00C0               	movwf	_day_hex
  6653  05AA                     l3286:	
  6654                           
  6655                           ;Button_src.c: 398:                     day_hex = time_date_delimiter(day_hex,0x11,'9');
  6656  05AA  3011               	movlw	17
  6657  05AB  00D3               	movwf	??_date_settings
  6658  05AC  0853               	movf	??_date_settings,w
  6659  05AD  00F0               	movwf	time_date_delimiter@hex
  6660  05AE  3039               	movlw	57
  6661  05AF  00D4               	movwf	??_date_settings+1
  6662  05B0  0854               	movf	??_date_settings+1,w
  6663  05B1  00F1               	movwf	time_date_delimiter@limiter
  6664  05B2  0840               	movf	_day_hex,w
  6665  05B3  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6666  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  6667  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  6668  05BA  00D5               	movwf	??_date_settings+2
  6669  05BB  0855               	movf	??_date_settings+2,w
  6670  05BC  00C0               	movwf	_day_hex
  6671  05BD                     l3288:	
  6672                           
  6673                           ;Button_src.c: 399:                     day_hex = time_date_delimiter(day_hex,0x21,'J');
  6674  05BD  3021               	movlw	33
  6675  05BE  00D3               	movwf	??_date_settings
  6676  05BF  0853               	movf	??_date_settings,w
  6677  05C0  00F0               	movwf	time_date_delimiter@hex
  6678  05C1  304A               	movlw	74
  6679  05C2  00D4               	movwf	??_date_settings+1
  6680  05C3  0854               	movf	??_date_settings+1,w
  6681  05C4  00F1               	movwf	time_date_delimiter@limiter
  6682  05C5  0840               	movf	_day_hex,w
  6683  05C6  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6684  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  6685  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  6686  05CD  00D5               	movwf	??_date_settings+2
  6687  05CE  0855               	movf	??_date_settings+2,w
  6688  05CF  00C0               	movwf	_day_hex
  6689  05D0                     l3290:	
  6690                           
  6691                           ;Button_src.c: 400:                     day_hex = time_date_delimiter(day_hex,0x31,'Y');
  6692  05D0  3031               	movlw	49
  6693  05D1  00D3               	movwf	??_date_settings
  6694  05D2  0853               	movf	??_date_settings,w
  6695  05D3  00F0               	movwf	time_date_delimiter@hex
  6696  05D4  3059               	movlw	89
  6697  05D5  00D4               	movwf	??_date_settings+1
  6698  05D6  0854               	movf	??_date_settings+1,w
  6699  05D7  00F1               	movwf	time_date_delimiter@limiter
  6700  05D8  0840               	movf	_day_hex,w
  6701  05D9  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6702  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  6703  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  6704  05E0  00D5               	movwf	??_date_settings+2
  6705  05E1  0855               	movf	??_date_settings+2,w
  6706  05E2  00C0               	movwf	_day_hex
  6707  05E3                     l3292:	
  6708                           
  6709                           ;Button_src.c: 402:                     c = time_date_delimiter(c,0x11,'9');
  6710  05E3  3011               	movlw	17
  6711  05E4  00D3               	movwf	??_date_settings
  6712  05E5  0853               	movf	??_date_settings,w
  6713  05E6  00F0               	movwf	time_date_delimiter@hex
  6714  05E7  3039               	movlw	57
  6715  05E8  00D4               	movwf	??_date_settings+1
  6716  05E9  0854               	movf	??_date_settings+1,w
  6717  05EA  00F1               	movwf	time_date_delimiter@limiter
  6718  05EB  0841               	movf	_c,w
  6719  05EC  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6720  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  6721  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  6722  05F3  00D5               	movwf	??_date_settings+2
  6723  05F4  0855               	movf	??_date_settings+2,w
  6724  05F5  00C1               	movwf	_c
  6725  05F6                     l3294:	
  6726                           
  6727                           ;Button_src.c: 403:                     c = time_date_delimiter(c,0x21,'J');
  6728  05F6  3021               	movlw	33
  6729  05F7  00D3               	movwf	??_date_settings
  6730  05F8  0853               	movf	??_date_settings,w
  6731  05F9  00F0               	movwf	time_date_delimiter@hex
  6732  05FA  304A               	movlw	74
  6733  05FB  00D4               	movwf	??_date_settings+1
  6734  05FC  0854               	movf	??_date_settings+1,w
  6735  05FD  00F1               	movwf	time_date_delimiter@limiter
  6736  05FE  0841               	movf	_c,w
  6737  05FF  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6738  0604  1283               	bcf	3,5	;RP0=0, select bank0
  6739  0605  1303               	bcf	3,6	;RP1=0, select bank0
  6740  0606  00D5               	movwf	??_date_settings+2
  6741  0607  0855               	movf	??_date_settings+2,w
  6742  0608  00C1               	movwf	_c
  6743  0609                     l3296:	
  6744                           
  6745                           ;Button_src.c: 404:                     c = time_date_delimiter(c,0x11,'9');
  6746  0609  3011               	movlw	17
  6747  060A  00D3               	movwf	??_date_settings
  6748  060B  0853               	movf	??_date_settings,w
  6749  060C  00F0               	movwf	time_date_delimiter@hex
  6750  060D  3039               	movlw	57
  6751  060E  00D4               	movwf	??_date_settings+1
  6752  060F  0854               	movf	??_date_settings+1,w
  6753  0610  00F1               	movwf	time_date_delimiter@limiter
  6754  0611  0841               	movf	_c,w
  6755  0612  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6756  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0618  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0619  00D5               	movwf	??_date_settings+2
  6759  061A  0855               	movf	??_date_settings+2,w
  6760  061B  00C1               	movwf	_c
  6761  061C                     l3298:	
  6762                           
  6763                           ;Button_src.c: 405:                     c = time_date_delimiter(c,0x21,'J');
  6764  061C  3021               	movlw	33
  6765  061D  00D3               	movwf	??_date_settings
  6766  061E  0853               	movf	??_date_settings,w
  6767  061F  00F0               	movwf	time_date_delimiter@hex
  6768  0620  304A               	movlw	74
  6769  0621  00D4               	movwf	??_date_settings+1
  6770  0622  0854               	movf	??_date_settings+1,w
  6771  0623  00F1               	movwf	time_date_delimiter@limiter
  6772  0624  0841               	movf	_c,w
  6773  0625  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6774  062A  1283               	bcf	3,5	;RP0=0, select bank0
  6775  062B  1303               	bcf	3,6	;RP1=0, select bank0
  6776  062C  00D5               	movwf	??_date_settings+2
  6777  062D  0855               	movf	??_date_settings+2,w
  6778  062E  00C1               	movwf	_c
  6779  062F                     l3300:	
  6780                           
  6781                           ;Button_src.c: 406:                     c = time_date_delimiter(c,0x31,'Y');
  6782  062F  3031               	movlw	49
  6783  0630  00D3               	movwf	??_date_settings
  6784  0631  0853               	movf	??_date_settings,w
  6785  0632  00F0               	movwf	time_date_delimiter@hex
  6786  0633  3059               	movlw	89
  6787  0634  00D4               	movwf	??_date_settings+1
  6788  0635  0854               	movf	??_date_settings+1,w
  6789  0636  00F1               	movwf	time_date_delimiter@limiter
  6790  0637  0841               	movf	_c,w
  6791  0638  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6792  063D  1283               	bcf	3,5	;RP0=0, select bank0
  6793  063E  1303               	bcf	3,6	;RP1=0, select bank0
  6794  063F  00D5               	movwf	??_date_settings+2
  6795  0640  0855               	movf	??_date_settings+2,w
  6796  0641  00C1               	movwf	_c
  6797  0642                     l3302:	
  6798                           
  6799                           ;Button_src.c: 407:                     c = time_date_delimiter(c,0x41,'j');
  6800  0642  3041               	movlw	65
  6801  0643  00D3               	movwf	??_date_settings
  6802  0644  0853               	movf	??_date_settings,w
  6803  0645  00F0               	movwf	time_date_delimiter@hex
  6804  0646  306A               	movlw	106
  6805  0647  00D4               	movwf	??_date_settings+1
  6806  0648  0854               	movf	??_date_settings+1,w
  6807  0649  00F1               	movwf	time_date_delimiter@limiter
  6808  064A  0841               	movf	_c,w
  6809  064B  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6810  0650  1283               	bcf	3,5	;RP0=0, select bank0
  6811  0651  1303               	bcf	3,6	;RP1=0, select bank0
  6812  0652  00D5               	movwf	??_date_settings+2
  6813  0653  0855               	movf	??_date_settings+2,w
  6814  0654  00C1               	movwf	_c
  6815  0655                     l3304:	
  6816                           
  6817                           ;Button_src.c: 408:                     c = time_date_delimiter(c,0x51,'z');
  6818  0655  3051               	movlw	81
  6819  0656  00D3               	movwf	??_date_settings
  6820  0657  0853               	movf	??_date_settings,w
  6821  0658  00F0               	movwf	time_date_delimiter@hex
  6822  0659  307A               	movlw	122
  6823  065A  00D4               	movwf	??_date_settings+1
  6824  065B  0854               	movf	??_date_settings+1,w
  6825  065C  00F1               	movwf	time_date_delimiter@limiter
  6826  065D  0841               	movf	_c,w
  6827  065E  160A  118A  26BE  120A  118A  	fcall	_time_date_delimiter
  6828  0663  1283               	bcf	3,5	;RP0=0, select bank0
  6829  0664  1303               	bcf	3,6	;RP1=0, select bank0
  6830  0665  00D5               	movwf	??_date_settings+2
  6831  0666  0855               	movf	??_date_settings+2,w
  6832  0667  00C1               	movwf	_c
  6833  0668                     l3306:	
  6834                           
  6835                           ;Button_src.c: 410:              write_cmd(0x88);
  6836  0668  3088               	movlw	136
  6837  0669  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  6838  066E                     l3308:	
  6839                           
  6840                           ;Button_src.c: 412:                   RC0 = 0;
  6841  066E  1283               	bcf	3,5	;RP0=0, select bank0
  6842  066F  1303               	bcf	3,6	;RP1=0, select bank0
  6843  0670  1007               	bcf	7,0	;volatile
  6844  0671                     l3310:	
  6845                           
  6846                           ;Button_src.c: 413:                   RC1 = 1;
  6847  0671  1487               	bsf	7,1	;volatile
  6848  0672                     l3312:	
  6849                           
  6850                           ;Button_src.c: 414:                   RC2 = 1;
  6851  0672  1507               	bsf	7,2	;volatile
  6852  0673                     l3314:	
  6853                           
  6854                           ;Button_src.c: 415:                   RC3 = 1;
  6855  0673  1587               	bsf	7,3	;volatile
  6856  0674                     l3316:	
  6857                           
  6858                           ;Button_src.c: 417:                     if (RC6 == 0 ){
  6859  0674  1B07               	btfsc	7,6	;volatile
  6860  0675  2E77               	goto	u1971
  6861  0676  2E78               	goto	u1970
  6862  0677                     u1971:	
  6863  0677  2E8F               	goto	l534
  6864  0678                     u1970:	
  6865  0678                     l3318:	
  6866                           
  6867                           ;Button_src.c: 418:                           a = 0x00;
  6868  0678  01C3               	clrf	_a
  6869                           
  6870                           ;Button_src.c: 419:                           c = 0x00;
  6871  0679  01C1               	clrf	_c
  6872                           
  6873                           ;Button_src.c: 420:                           day_hex = 0x00;
  6874  067A  01C0               	clrf	_day_hex
  6875                           
  6876                           ;Button_src.c: 421:                           x = 0;
  6877  067B  01B1               	clrf	_x
  6878  067C  01B2               	clrf	_x+1
  6879                           
  6880                           ;Button_src.c: 422:                           y = 0;
  6881  067D  01AF               	clrf	_y
  6882  067E  01B0               	clrf	_y+1
  6883                           
  6884                           ;Button_src.c: 423:                           w = 0;
  6885  067F  01B3               	clrf	_w
  6886  0680  01B4               	clrf	_w+1
  6887                           
  6888                           ;Button_src.c: 424:                           t = 0;
  6889  0681  01B5               	clrf	_t
  6890  0682  01B6               	clrf	_t+1
  6891  0683                     l3320:	
  6892                           
  6893                           ;Button_src.c: 425:                           write_cmd(0x1);
  6894  0683  3001               	movlw	1
  6895  0684  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  6896  0689                     l3322:	
  6897                           
  6898                           ;Button_src.c: 426:                           set_time();
  6899  0689  160A  118A  27D4  120A  118A  	fcall	_set_time
  6900  068E  2FE5               	goto	l535
  6901  068F                     l534:	
  6902                           ;Button_src.c: 428:                             }
  6903                           
  6904                           
  6905                           ;Button_src.c: 429:                   RC0 = 0;
  6906  068F  1007               	bcf	7,0	;volatile
  6907                           
  6908                           ;Button_src.c: 430:                   RC1 = 1;
  6909  0690  1487               	bsf	7,1	;volatile
  6910                           
  6911                           ;Button_src.c: 431:                   RC2 = 1;
  6912  0691  1507               	bsf	7,2	;volatile
  6913                           
  6914                           ;Button_src.c: 432:                   RC3 = 1;
  6915  0692  1587               	bsf	7,3	;volatile
  6916  0693                     l3326:	
  6917                           
  6918                           ;Button_src.c: 433:                   z = modulus_func(z,3);
  6919  0693  082E               	movf	_z+1,w
  6920  0694  00F8               	movwf	modulus_func@x+1
  6921  0695  082D               	movf	_z,w
  6922  0696  00F7               	movwf	modulus_func@x
  6923  0697  3003               	movlw	3
  6924  0698  00F9               	movwf	modulus_func@y
  6925  0699  3000               	movlw	0
  6926  069A  00FA               	movwf	modulus_func@y+1
  6927  069B  160A  118A  261E  120A  118A  	fcall	_modulus_func
  6928  06A0  0878               	movf	?_modulus_func+1,w
  6929  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  6930  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  6931  06A3  00AE               	movwf	_z+1
  6932  06A4  0877               	movf	?_modulus_func,w
  6933  06A5  00AD               	movwf	_z
  6934  06A6                     l3328:	
  6935                           
  6936                           ;Button_src.c: 434:                   if(RC4 == 0 && z ==0){
  6937  06A6  1A07               	btfsc	7,4	;volatile
  6938  06A7  2EA9               	goto	u1981
  6939  06A8  2EAA               	goto	u1980
  6940  06A9                     u1981:	
  6941  06A9  2EED               	goto	l3338
  6942  06AA                     u1980:	
  6943  06AA                     l3330:	
  6944  06AA  082D               	movf	_z,w
  6945  06AB  042E               	iorwf	_z+1,w
  6946  06AC  1D03               	btfss	3,2
  6947  06AD  2EAF               	goto	u1991
  6948  06AE  2EB0               	goto	u1990
  6949  06AF                     u1991:	
  6950  06AF  2EED               	goto	l3338
  6951  06B0                     u1990:	
  6952  06B0                     l3332:	
  6953                           
  6954                           ;Button_src.c: 435:                       write_cmd(0x90);
  6955  06B0  3090               	movlw	144
  6956  06B1  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  6957                           
  6958                           ;Button_src.c: 436:                       write_char('D');
  6959  06B6  3044               	movlw	68
  6960  06B7  160A  118A  26D5  120A  118A  	fcall	_write_char
  6961                           
  6962                           ;Button_src.c: 437:                       write_char('a');
  6963  06BC  3061               	movlw	97
  6964  06BD  160A  118A  26D5  120A  118A  	fcall	_write_char
  6965                           
  6966                           ;Button_src.c: 438:                       write_char('y');
  6967  06C2  3079               	movlw	121
  6968  06C3  160A  118A  26D5  120A  118A  	fcall	_write_char
  6969                           
  6970                           ;Button_src.c: 439:                       write_char(':');
  6971  06C8  303A               	movlw	58
  6972  06C9  160A  118A  26D5  120A  118A  	fcall	_write_char
  6973                           
  6974                           ;Button_src.c: 440:                       write_char(' ');
  6975  06CE  3020               	movlw	32
  6976  06CF  160A  118A  26D5  120A  118A  	fcall	_write_char
  6977                           
  6978                           ;Button_src.c: 441:                       write_char(' ');
  6979  06D4  3020               	movlw	32
  6980  06D5  160A  118A  26D5  120A  118A  	fcall	_write_char
  6981  06DA                     l3334:	
  6982                           
  6983                           ;Button_src.c: 442:                       b = 'y';
  6984  06DA  3079               	movlw	121
  6985  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  6986  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  6987  06DD  00D3               	movwf	??_date_settings
  6988  06DE  0853               	movf	??_date_settings,w
  6989  06DF  00C2               	movwf	_b
  6990  06E0                     l3336:	
  6991                           
  6992                           ;Button_src.c: 444:                       button_delay();
  6993  06E0  160A  118A  267C  120A  118A  	fcall	_button_delay
  6994                           
  6995                           ;Button_src.c: 445:                       z++;
  6996  06E5  3001               	movlw	1
  6997  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  6998  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  6999  06E8  07AD               	addwf	_z,f
  7000  06E9  1803               	skipnc
  7001  06EA  0AAE               	incf	_z+1,f
  7002  06EB  3000               	movlw	0
  7003  06EC  07AE               	addwf	_z+1,f
  7004  06ED                     l3338:	
  7005                           
  7006                           ;Button_src.c: 447:                   RC0 = 0;
  7007  06ED  1007               	bcf	7,0	;volatile
  7008  06EE                     l3340:	
  7009                           
  7010                           ;Button_src.c: 448:                   RC1 = 1;
  7011  06EE  1487               	bsf	7,1	;volatile
  7012  06EF                     l3342:	
  7013                           
  7014                           ;Button_src.c: 449:                   RC2 = 1;
  7015  06EF  1507               	bsf	7,2	;volatile
  7016  06F0                     l3344:	
  7017                           
  7018                           ;Button_src.c: 450:                   RC3 = 1;
  7019  06F0  1587               	bsf	7,3	;volatile
  7020  06F1                     l3346:	
  7021                           
  7022                           ;Button_src.c: 451:                   if(RC4 == 0&& z ==1){
  7023  06F1  1A07               	btfsc	7,4	;volatile
  7024  06F2  2EF4               	goto	u2001
  7025  06F3  2EF5               	goto	u2000
  7026  06F4                     u2001:	
  7027  06F4  2F36               	goto	l3368
  7028  06F5                     u2000:	
  7029  06F5                     l3348:	
  7030  06F5  032D               	decf	_z,w
  7031  06F6  042E               	iorwf	_z+1,w
  7032  06F7  1D03               	btfss	3,2
  7033  06F8  2EFA               	goto	u2011
  7034  06F9  2EFB               	goto	u2010
  7035  06FA                     u2011:	
  7036  06FA  2F36               	goto	l3368
  7037  06FB                     u2010:	
  7038  06FB                     l3350:	
  7039                           
  7040                           ;Button_src.c: 452:                       z++;
  7041  06FB  3001               	movlw	1
  7042  06FC  07AD               	addwf	_z,f
  7043  06FD  1803               	skipnc
  7044  06FE  0AAE               	incf	_z+1,f
  7045  06FF  3000               	movlw	0
  7046  0700  07AE               	addwf	_z+1,f
  7047  0701                     l3352:	
  7048                           
  7049                           ;Button_src.c: 453:                       button_delay();
  7050  0701  160A  118A  267C  120A  118A  	fcall	_button_delay
  7051  0706                     l3354:	
  7052                           
  7053                           ;Button_src.c: 455:                       write_cmd(0x90);
  7054  0706  3090               	movlw	144
  7055  0707  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  7056  070C                     l3356:	
  7057                           
  7058                           ;Button_src.c: 456:                       write_char('M');
  7059  070C  304D               	movlw	77
  7060  070D  160A  118A  26D5  120A  118A  	fcall	_write_char
  7061  0712                     l3358:	
  7062                           
  7063                           ;Button_src.c: 457:                       write_char('o');
  7064  0712  306F               	movlw	111
  7065  0713  160A  118A  26D5  120A  118A  	fcall	_write_char
  7066  0718                     l3360:	
  7067                           
  7068                           ;Button_src.c: 458:                       write_char('n');
  7069  0718  306E               	movlw	110
  7070  0719  160A  118A  26D5  120A  118A  	fcall	_write_char
  7071  071E                     l3362:	
  7072                           
  7073                           ;Button_src.c: 459:                       write_char('t');
  7074  071E  3074               	movlw	116
  7075  071F  160A  118A  26D5  120A  118A  	fcall	_write_char
  7076  0724                     l3364:	
  7077                           
  7078                           ;Button_src.c: 460:                       write_char('h');
  7079  0724  3068               	movlw	104
  7080  0725  160A  118A  26D5  120A  118A  	fcall	_write_char
  7081  072A                     l3366:	
  7082                           
  7083                           ;Button_src.c: 461:                       write_char(':');
  7084  072A  303A               	movlw	58
  7085  072B  160A  118A  26D5  120A  118A  	fcall	_write_char
  7086                           
  7087                           ;Button_src.c: 462:                       b = 'x';
  7088  0730  3078               	movlw	120
  7089  0731  1283               	bcf	3,5	;RP0=0, select bank0
  7090  0732  1303               	bcf	3,6	;RP1=0, select bank0
  7091  0733  00D3               	movwf	??_date_settings
  7092  0734  0853               	movf	??_date_settings,w
  7093  0735  00C2               	movwf	_b
  7094  0736                     l3368:	
  7095                           
  7096                           ;Button_src.c: 465:                   RC0 = 0;
  7097  0736  1007               	bcf	7,0	;volatile
  7098  0737                     l3370:	
  7099                           
  7100                           ;Button_src.c: 466:                   RC1 = 1;
  7101  0737  1487               	bsf	7,1	;volatile
  7102  0738                     l3372:	
  7103                           
  7104                           ;Button_src.c: 467:                   RC2 = 1;
  7105  0738  1507               	bsf	7,2	;volatile
  7106  0739                     l3374:	
  7107                           
  7108                           ;Button_src.c: 468:                   RC3 = 1;
  7109  0739  1587               	bsf	7,3	;volatile
  7110  073A                     l3376:	
  7111                           
  7112                           ;Button_src.c: 469:                   if(RC4 == 0&& z ==2){
  7113  073A  1A07               	btfsc	7,4	;volatile
  7114  073B  2F3D               	goto	u2021
  7115  073C  2F3E               	goto	u2020
  7116  073D                     u2021:	
  7117  073D  2F82               	goto	l3398
  7118  073E                     u2020:	
  7119  073E                     l3378:	
  7120  073E  3002               	movlw	2
  7121  073F  062D               	xorwf	_z,w
  7122  0740  042E               	iorwf	_z+1,w
  7123  0741  1D03               	btfss	3,2
  7124  0742  2F44               	goto	u2031
  7125  0743  2F45               	goto	u2030
  7126  0744                     u2031:	
  7127  0744  2F82               	goto	l3398
  7128  0745                     u2030:	
  7129  0745                     l3380:	
  7130                           
  7131                           ;Button_src.c: 470:                       button_delay();
  7132  0745  160A  118A  267C  120A  118A  	fcall	_button_delay
  7133  074A                     l3382:	
  7134                           
  7135                           ;Button_src.c: 471:                       z++;
  7136  074A  3001               	movlw	1
  7137  074B  1283               	bcf	3,5	;RP0=0, select bank0
  7138  074C  1303               	bcf	3,6	;RP1=0, select bank0
  7139  074D  07AD               	addwf	_z,f
  7140  074E  1803               	skipnc
  7141  074F  0AAE               	incf	_z+1,f
  7142  0750  3000               	movlw	0
  7143  0751  07AE               	addwf	_z+1,f
  7144  0752                     l3384:	
  7145                           
  7146                           ;Button_src.c: 473:                       write_cmd(0x90);
  7147  0752  3090               	movlw	144
  7148  0753  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  7149  0758                     l3386:	
  7150                           
  7151                           ;Button_src.c: 474:                       write_char('Y');
  7152  0758  3059               	movlw	89
  7153  0759  160A  118A  26D5  120A  118A  	fcall	_write_char
  7154  075E                     l3388:	
  7155                           
  7156                           ;Button_src.c: 475:                       write_char('e');
  7157  075E  3065               	movlw	101
  7158  075F  160A  118A  26D5  120A  118A  	fcall	_write_char
  7159  0764                     l3390:	
  7160                           
  7161                           ;Button_src.c: 476:                       write_char('a');
  7162  0764  3061               	movlw	97
  7163  0765  160A  118A  26D5  120A  118A  	fcall	_write_char
  7164  076A                     l3392:	
  7165                           
  7166                           ;Button_src.c: 477:                       write_char('r');
  7167  076A  3072               	movlw	114
  7168  076B  160A  118A  26D5  120A  118A  	fcall	_write_char
  7169  0770                     l3394:	
  7170                           
  7171                           ;Button_src.c: 478:                       write_char(':');
  7172  0770  303A               	movlw	58
  7173  0771  160A  118A  26D5  120A  118A  	fcall	_write_char
  7174  0776                     l3396:	
  7175                           
  7176                           ;Button_src.c: 479:                       write_char(' ');
  7177  0776  3020               	movlw	32
  7178  0777  160A  118A  26D5  120A  118A  	fcall	_write_char
  7179                           
  7180                           ;Button_src.c: 480:                       b = 'z';
  7181  077C  307A               	movlw	122
  7182  077D  1283               	bcf	3,5	;RP0=0, select bank0
  7183  077E  1303               	bcf	3,6	;RP1=0, select bank0
  7184  077F  00D3               	movwf	??_date_settings
  7185  0780  0853               	movf	??_date_settings,w
  7186  0781  00C2               	movwf	_b
  7187  0782                     l3398:	
  7188                           
  7189                           ;Button_src.c: 483:               write_cmd(0x88);
  7190  0782  3088               	movlw	136
  7191  0783  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  7192  0788                     l3400:	
  7193                           
  7194                           ;Button_src.c: 484:               write_char(day_high + '0');
  7195  0788  1283               	bcf	3,5	;RP0=0, select bank0
  7196  0789  1303               	bcf	3,6	;RP1=0, select bank0
  7197  078A  0829               	movf	_day_high,w
  7198  078B  3E30               	addlw	48
  7199  078C  160A  118A  26D5  120A  118A  	fcall	_write_char
  7200  0791                     l3402:	
  7201                           
  7202                           ;Button_src.c: 485:               write_char(day_low + '0');
  7203  0791  1283               	bcf	3,5	;RP0=0, select bank0
  7204  0792  1303               	bcf	3,6	;RP1=0, select bank0
  7205  0793  082B               	movf	_day_low,w
  7206  0794  3E30               	addlw	48
  7207  0795  160A  118A  26D5  120A  118A  	fcall	_write_char
  7208  079A                     l3404:	
  7209                           
  7210                           ;Button_src.c: 486:               write_char('/');
  7211  079A  302F               	movlw	47
  7212  079B  160A  118A  26D5  120A  118A  	fcall	_write_char
  7213  07A0                     l3406:	
  7214                           
  7215                           ;Button_src.c: 487:               write_char(y + '0');
  7216  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  7217  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  7218  07A2  082F               	movf	_y,w
  7219  07A3  3E30               	addlw	48
  7220  07A4  160A  118A  26D5  120A  118A  	fcall	_write_char
  7221  07A9                     l3408:	
  7222                           
  7223                           ;Button_src.c: 488:               write_char(x + '0');
  7224  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  7225  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  7226  07AB  0831               	movf	_x,w
  7227  07AC  3E30               	addlw	48
  7228  07AD  160A  118A  26D5  120A  118A  	fcall	_write_char
  7229  07B2                     l3410:	
  7230                           
  7231                           ;Button_src.c: 489:               write_char('/');
  7232  07B2  302F               	movlw	47
  7233  07B3  160A  118A  26D5  120A  118A  	fcall	_write_char
  7234  07B8                     l3412:	
  7235                           
  7236                           ;Button_src.c: 490:               write_char(w+ '0');
  7237  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  7238  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  7239  07BA  0833               	movf	_w,w
  7240  07BB  3E30               	addlw	48
  7241  07BC  160A  118A  26D5  120A  118A  	fcall	_write_char
  7242  07C1                     l3414:	
  7243                           
  7244                           ;Button_src.c: 491:               write_char(t+ '0');
  7245  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  7246  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  7247  07C3  0835               	movf	_t,w
  7248  07C4  3E30               	addlw	48
  7249  07C5  160A  118A  26D5  120A  118A  	fcall	_write_char
  7250  07CA                     l3416:	
  7251                           
  7252                           ;Button_src.c: 494:             RC0 = 0;
  7253  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  7254  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  7255  07CC  1007               	bcf	7,0	;volatile
  7256  07CD                     l3418:	
  7257                           
  7258                           ;Button_src.c: 495:             RC1 = 1;
  7259  07CD  1487               	bsf	7,1	;volatile
  7260  07CE                     l3420:	
  7261                           
  7262                           ;Button_src.c: 496:             RC2 = 1;
  7263  07CE  1507               	bsf	7,2	;volatile
  7264  07CF                     l3422:	
  7265                           
  7266                           ;Button_src.c: 497:             RC3 = 1;
  7267  07CF  1587               	bsf	7,3	;volatile
  7268  07D0                     l3424:	
  7269                           
  7270                           ;Button_src.c: 498:             if (RC7 == 0 ){
  7271  07D0  1B87               	btfsc	7,7	;volatile
  7272  07D1  2FD3               	goto	u2041
  7273  07D2  2FD4               	goto	u2040
  7274  07D3                     u2041:	
  7275  07D3  2BE3               	goto	l526
  7276  07D4                     u2040:	
  7277  07D4                     l3426:	
  7278                           
  7279                           ;Button_src.c: 499:             a = 0x00;
  7280  07D4  01C3               	clrf	_a
  7281                           
  7282                           ;Button_src.c: 500:             c = 0x00;
  7283  07D5  01C1               	clrf	_c
  7284                           
  7285                           ;Button_src.c: 501:             day_hex = 0x00;
  7286  07D6  01C0               	clrf	_day_hex
  7287                           
  7288                           ;Button_src.c: 502:             x = 0;
  7289  07D7  01B1               	clrf	_x
  7290  07D8  01B2               	clrf	_x+1
  7291                           
  7292                           ;Button_src.c: 503:             y = 0;
  7293  07D9  01AF               	clrf	_y
  7294  07DA  01B0               	clrf	_y+1
  7295                           
  7296                           ;Button_src.c: 504:             w = 0;
  7297  07DB  01B3               	clrf	_w
  7298  07DC  01B4               	clrf	_w+1
  7299                           
  7300                           ;Button_src.c: 505:             t = 0;
  7301  07DD  01B5               	clrf	_t
  7302  07DE  01B6               	clrf	_t+1
  7303  07DF                     l3428:	
  7304                           
  7305                           ;Button_src.c: 506:             write_cmd(0x1);
  7306  07DF  3001               	movlw	1
  7307  07E0  160A  118A  26EE  120A  118A  	fcall	_write_cmd
  7308  07E5                     l535:	
  7309                           ;Button_src.c: 507:             break;
  7310                           
  7311  07E5  0008               	return
  7312  07E6                     __end_of_date_settings:	
  7313                           
  7314                           	psect	text27
  7315  16EE                     __ptext27:	
  7316 ;; *************** function _write_cmd *****************
  7317 ;; Defined at:
  7318 ;;		line 41 in file "LCD_src.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  x               1    wreg     unsigned char 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  x               1    2[COMMON] unsigned char 
  7323 ;;  i               2    0        int 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7333 ;;      Params:         0       0       0       0       0
  7334 ;;      Locals:         1       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0
  7336 ;;      Totals:         1       0       0       0       0
  7337 ;;Total ram usage:        1 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    1
  7340 ;; This function calls:
  7341 ;;		_delay_screen
  7342 ;; This function is called by:
  7343 ;;		_main
  7344 ;;		_lcd_init
  7345 ;;		_thermometer_threshhold_settings
  7346 ;;		_time_settings
  7347 ;;		_date_settings
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           
  7352                           ;psect for function _write_cmd
  7353  16EE                     _write_cmd:	
  7354                           
  7355                           ;incstack = 0
  7356                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7357                           ;write_cmd@x stored from wreg
  7358  16EE  00F2               	movwf	write_cmd@x
  7359  16EF                     l2556:	
  7360                           
  7361                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  7362  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  7363  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  7364  16F1  1285               	bcf	5,5	;volatile
  7365                           
  7366                           ;LCD_src.c: 45:  RA4=0;
  7367  16F2  1205               	bcf	5,4	;volatile
  7368                           
  7369                           ;LCD_src.c: 46:  RA3=0;
  7370  16F3  1185               	bcf	5,3	;volatile
  7371  16F4                     l2558:	
  7372                           
  7373                           ;LCD_src.c: 47:  delay_screen();
  7374  16F4  160A  118A  2692  160A  118A  	fcall	_delay_screen
  7375  16F9                     l2560:	
  7376                           
  7377                           ;LCD_src.c: 48:  RA3=1;
  7378  16F9  1283               	bcf	3,5	;RP0=0, select bank0
  7379  16FA  1303               	bcf	3,6	;RP1=0, select bank0
  7380  16FB  1585               	bsf	5,3	;volatile
  7381  16FC                     l2562:	
  7382                           
  7383                           ;LCD_src.c: 49:  PORTD=x;
  7384  16FC  0872               	movf	write_cmd@x,w
  7385  16FD  0088               	movwf	8	;volatile
  7386  16FE                     l2564:	
  7387                           
  7388                           ;LCD_src.c: 50:  delay_screen();
  7389  16FE  160A  118A  2692  160A  118A  	fcall	_delay_screen
  7390  1703                     l2566:	
  7391                           
  7392                           ;LCD_src.c: 51:  RA3=0;
  7393  1703  1283               	bcf	3,5	;RP0=0, select bank0
  7394  1704  1303               	bcf	3,6	;RP1=0, select bank0
  7395  1705  1185               	bcf	5,3	;volatile
  7396  1706                     l150:	
  7397  1706  0008               	return
  7398  1707                     __end_of_write_cmd:	
  7399                           
  7400                           	psect	text28
  7401  16D5                     __ptext28:	
  7402 ;; *************** function _write_char *****************
  7403 ;; Defined at:
  7404 ;;		line 28 in file "LCD_src.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  x               1    wreg     unsigned char 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  x               1    2[COMMON] unsigned char 
  7409 ;;  i               2    0        int 
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7419 ;;      Params:         0       0       0       0       0
  7420 ;;      Locals:         1       0       0       0       0
  7421 ;;      Temps:          0       0       0       0       0
  7422 ;;      Totals:         1       0       0       0       0
  7423 ;;Total ram usage:        1 bytes
  7424 ;; Hardware stack levels used:    1
  7425 ;; Hardware stack levels required when called:    1
  7426 ;; This function calls:
  7427 ;;		_delay_screen
  7428 ;; This function is called by:
  7429 ;;		_main
  7430 ;;		_display_temp
  7431 ;;		_display_clock
  7432 ;;		_display_date
  7433 ;;		_thermometer_threshhold_settings
  7434 ;;		_time_settings
  7435 ;;		_date_settings
  7436 ;;		_set_upper_threshold
  7437 ;;		_set_lower_threshold
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function _write_char
  7443  16D5                     _write_char:	
  7444                           
  7445                           ;incstack = 0
  7446                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7447                           ;write_char@x stored from wreg
  7448  16D5  00F2               	movwf	write_char@x
  7449  16D6                     l2568:	
  7450                           
  7451                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  7452  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  7453  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  7454  16D8  1685               	bsf	5,5	;volatile
  7455                           
  7456                           ;LCD_src.c: 32:  RA4=0;
  7457  16D9  1205               	bcf	5,4	;volatile
  7458                           
  7459                           ;LCD_src.c: 33:  RA3=0;
  7460  16DA  1185               	bcf	5,3	;volatile
  7461  16DB                     l2570:	
  7462                           
  7463                           ;LCD_src.c: 34:  delay_screen();
  7464  16DB  160A  118A  2692  160A  118A  	fcall	_delay_screen
  7465  16E0                     l2572:	
  7466                           
  7467                           ;LCD_src.c: 35:  RA3=1;
  7468  16E0  1283               	bcf	3,5	;RP0=0, select bank0
  7469  16E1  1303               	bcf	3,6	;RP1=0, select bank0
  7470  16E2  1585               	bsf	5,3	;volatile
  7471  16E3                     l2574:	
  7472                           
  7473                           ;LCD_src.c: 36:  PORTD= x;
  7474  16E3  0872               	movf	write_char@x,w
  7475  16E4  0088               	movwf	8	;volatile
  7476  16E5                     l2576:	
  7477                           
  7478                           ;LCD_src.c: 37:  delay_screen();
  7479  16E5  160A  118A  2692  160A  118A  	fcall	_delay_screen
  7480  16EA                     l2578:	
  7481                           
  7482                           ;LCD_src.c: 38:  RA3=0;
  7483  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  7484  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  7485  16EC  1185               	bcf	5,3	;volatile
  7486  16ED                     l147:	
  7487  16ED  0008               	return
  7488  16EE                     __end_of_write_char:	
  7489                           
  7490                           	psect	text29
  7491  1692                     __ptext29:	
  7492 ;; *************** function _delay_screen *****************
  7493 ;; Defined at:
  7494 ;;		line 70 in file "LCD_src.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;		None
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  i               2    0[COMMON] int 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, btemp+1
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7508 ;;      Params:         0       0       0       0       0
  7509 ;;      Locals:         2       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0
  7511 ;;      Totals:         2       0       0       0       0
  7512 ;;Total ram usage:        2 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; This function calls:
  7515 ;;		Nothing
  7516 ;; This function is called by:
  7517 ;;		_lcd_init
  7518 ;;		_write_char
  7519 ;;		_write_cmd
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           
  7524                           ;psect for function _delay_screen
  7525  1692                     _delay_screen:	
  7526  1692                     l2502:	
  7527                           ;incstack = 0
  7528                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  7529                           
  7530                           
  7531                           ;LCD_src.c: 71:     int i;;LCD_src.c: 72:  for(i=0;i<5;i++);
  7532  1692  01F0               	clrf	delay_screen@i
  7533  1693  01F1               	clrf	delay_screen@i+1
  7534  1694                     l2508:	
  7535  1694  3001               	movlw	1
  7536  1695  07F0               	addwf	delay_screen@i,f
  7537  1696  1803               	skipnc
  7538  1697  0AF1               	incf	delay_screen@i+1,f
  7539  1698  3000               	movlw	0
  7540  1699  07F1               	addwf	delay_screen@i+1,f
  7541  169A                     l2510:	
  7542  169A  0871               	movf	delay_screen@i+1,w
  7543  169B  3A80               	xorlw	128
  7544  169C  00FF               	movwf	btemp+1
  7545  169D  3080               	movlw	128
  7546  169E  027F               	subwf	btemp+1,w
  7547  169F  1D03               	skipz
  7548  16A0  2EA3               	goto	u1235
  7549  16A1  3005               	movlw	5
  7550  16A2  0270               	subwf	delay_screen@i,w
  7551  16A3                     u1235:	
  7552  16A3  1C03               	skipc
  7553  16A4  2EA6               	goto	u1231
  7554  16A5  2EA7               	goto	u1230
  7555  16A6                     u1231:	
  7556  16A6  2E94               	goto	l2508
  7557  16A7                     u1230:	
  7558  16A7                     l160:	
  7559  16A7  0008               	return
  7560  16A8                     __end_of_delay_screen:	
  7561                           
  7562                           	psect	text30
  7563  1630                     __ptext30:	
  7564 ;; *************** function _time_date_hex_terminator *****************
  7565 ;; Defined at:
  7566 ;;		line 35 in file "math_src.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  val             1    wreg     unsigned char 
  7569 ;;  limiter         1    0[COMMON] unsigned char 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;  val             1    3[COMMON] unsigned char 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      unsigned char 
  7574 ;; Registers used:
  7575 ;;		wreg, status,2
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7581 ;;      Params:         1       0       0       0       0
  7582 ;;      Locals:         1       0       0       0       0
  7583 ;;      Temps:          2       0       0       0       0
  7584 ;;      Totals:         4       0       0       0       0
  7585 ;;Total ram usage:        4 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		_time_settings
  7591 ;;		_date_settings
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           
  7596                           ;psect for function _time_date_hex_terminator
  7597  1630                     _time_date_hex_terminator:	
  7598                           
  7599                           ;incstack = 0
  7600                           ; Regs used in _time_date_hex_terminator: [wreg+status,2]
  7601                           ;time_date_hex_terminator@val stored from wreg
  7602  1630  00F3               	movwf	time_date_hex_terminator@val
  7603  1631                     l2754:	
  7604                           
  7605                           ;math_src.c: 36:     if((val + '0') == limiter){
  7606  1631  0873               	movf	time_date_hex_terminator@val,w
  7607  1632  3E30               	addlw	48
  7608  1633  00F1               	movwf	??_time_date_hex_terminator
  7609  1634  3000               	movlw	0
  7610  1635  1803               	skipnc
  7611  1636  3001               	movlw	1
  7612  1637  00F2               	movwf	??_time_date_hex_terminator+1
  7613  1638  0870               	movf	time_date_hex_terminator@limiter,w
  7614  1639  0671               	xorwf	??_time_date_hex_terminator,w
  7615  163A  0472               	iorwf	??_time_date_hex_terminator+1,w
  7616  163B  1D03               	skipz
  7617  163C  2E3E               	goto	u1411
  7618  163D  2E3F               	goto	u1410
  7619  163E                     u1411:	
  7620  163E  2E40               	goto	l2758
  7621  163F                     u1410:	
  7622  163F                     l2756:	
  7623                           
  7624                           ;math_src.c: 37:     val = 0x00;
  7625  163F  01F3               	clrf	time_date_hex_terminator@val
  7626  1640                     l2758:	
  7627                           
  7628                           ;math_src.c: 39:     return val;
  7629  1640  0873               	movf	time_date_hex_terminator@val,w
  7630  1641                     l564:	
  7631  1641  0008               	return
  7632  1642                     __end_of_time_date_hex_terminator:	
  7633                           
  7634                           	psect	text31
  7635  16BE                     __ptext31:	
  7636 ;; *************** function _time_date_delimiter *****************
  7637 ;; Defined at:
  7638 ;;		line 27 in file "math_src.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  val             1    wreg     unsigned char 
  7641 ;;  hex             1    0[COMMON] unsigned char 
  7642 ;;  limiter         1    1[COMMON] unsigned char 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  val             1    4[COMMON] unsigned char 
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      unsigned char 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7654 ;;      Params:         2       0       0       0       0
  7655 ;;      Locals:         1       0       0       0       0
  7656 ;;      Temps:          2       0       0       0       0
  7657 ;;      Totals:         5       0       0       0       0
  7658 ;;Total ram usage:        5 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_time_settings
  7664 ;;		_date_settings
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           
  7669                           ;psect for function _time_date_delimiter
  7670  16BE                     _time_date_delimiter:	
  7671                           
  7672                           ;incstack = 0
  7673                           ; Regs used in _time_date_delimiter: [wreg+status,2+status,0]
  7674                           ;time_date_delimiter@val stored from wreg
  7675  16BE  00F4               	movwf	time_date_delimiter@val
  7676  16BF                     l2762:	
  7677                           
  7678                           ;math_src.c: 28:     if((val + '0') == limiter){
  7679  16BF  0874               	movf	time_date_delimiter@val,w
  7680  16C0  3E30               	addlw	48
  7681  16C1  00F2               	movwf	??_time_date_delimiter
  7682  16C2  3000               	movlw	0
  7683  16C3  1803               	skipnc
  7684  16C4  3001               	movlw	1
  7685  16C5  00F3               	movwf	??_time_date_delimiter+1
  7686  16C6  0871               	movf	time_date_delimiter@limiter,w
  7687  16C7  0672               	xorwf	??_time_date_delimiter,w
  7688  16C8  0473               	iorwf	??_time_date_delimiter+1,w
  7689  16C9  1D03               	skipz
  7690  16CA  2ECC               	goto	u1421
  7691  16CB  2ECD               	goto	u1420
  7692  16CC                     u1421:	
  7693  16CC  2ED3               	goto	l2768
  7694  16CD                     u1420:	
  7695  16CD                     l2764:	
  7696                           
  7697                           ;math_src.c: 29:     val = hex;
  7698  16CD  0870               	movf	time_date_delimiter@hex,w
  7699  16CE  00F2               	movwf	??_time_date_delimiter
  7700  16CF  0872               	movf	??_time_date_delimiter,w
  7701  16D0  00F4               	movwf	time_date_delimiter@val
  7702  16D1                     l2766:	
  7703                           
  7704                           ;math_src.c: 30:     val--;
  7705  16D1  3001               	movlw	1
  7706  16D2  02F4               	subwf	time_date_delimiter@val,f
  7707  16D3                     l2768:	
  7708                           
  7709                           ;math_src.c: 32:     return val;
  7710  16D3  0874               	movf	time_date_delimiter@val,w
  7711  16D4                     l560:	
  7712  16D4  0008               	return
  7713  16D5                     __end_of_time_date_delimiter:	
  7714                           
  7715                           	psect	text32
  7716  17D4                     __ptext32:	
  7717 ;; *************** function _set_time *****************
  7718 ;; Defined at:
  7719 ;;		line 15 in file "clock_src.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;  i               2    5[COMMON] int 
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  1    wreg      void 
  7726 ;; Registers used:
  7727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7733 ;;      Params:         0       0       0       0       0
  7734 ;;      Locals:         2       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0
  7736 ;;      Totals:         2       0       0       0       0
  7737 ;;Total ram usage:        2 bytes
  7738 ;; Hardware stack levels used:    1
  7739 ;; Hardware stack levels required when called:    1
  7740 ;; This function calls:
  7741 ;;		_time_write_1
  7742 ;; This function is called by:
  7743 ;;		_main
  7744 ;;		_time_settings
  7745 ;;		_date_settings
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           
  7750                           ;psect for function _set_time
  7751  17D4                     _set_time:	
  7752  17D4                     l2540:	
  7753                           ;incstack = 0
  7754                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7755                           
  7756                           
  7757                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  7758  17D4  1283               	bcf	3,5	;RP0=0, select bank0
  7759  17D5  1303               	bcf	3,6	;RP1=0, select bank0
  7760  17D6  1686               	bsf	6,5	;volatile
  7761  17D7                     l2542:	
  7762                           
  7763                           ;clock_src.c: 19:    time_write_1(0xbe);
  7764  17D7  30BE               	movlw	190
  7765  17D8  160A  118A  2752  160A  118A  	fcall	_time_write_1
  7766  17DD                     l2544:	
  7767                           
  7768                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  7769  17DD  01F5               	clrf	set_time@i
  7770  17DE  01F6               	clrf	set_time@i+1
  7771  17DF                     l2550:	
  7772                           
  7773                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  7774  17DF  0875               	movf	set_time@i,w
  7775  17E0  3E58               	addlw	(low (_table| 0))& (0+255)
  7776  17E1  0084               	movwf	4
  7777  17E2  1383               	bcf	3,7	;select IRP bank0
  7778  17E3  0800               	movf	0,w
  7779  17E4  160A  118A  2752  160A  118A  	fcall	_time_write_1
  7780  17E9                     l2552:	
  7781                           
  7782                           ;clock_src.c: 23:      }
  7783  17E9  3001               	movlw	1
  7784  17EA  07F5               	addwf	set_time@i,f
  7785  17EB  1803               	skipnc
  7786  17EC  0AF6               	incf	set_time@i+1,f
  7787  17ED  3000               	movlw	0
  7788  17EE  07F6               	addwf	set_time@i+1,f
  7789  17EF                     l2554:	
  7790  17EF  0876               	movf	set_time@i+1,w
  7791  17F0  3A80               	xorlw	128
  7792  17F1  00FF               	movwf	btemp+1
  7793  17F2  3080               	movlw	128
  7794  17F3  027F               	subwf	btemp+1,w
  7795  17F4  1D03               	skipz
  7796  17F5  2FF8               	goto	u1285
  7797  17F6  3008               	movlw	8
  7798  17F7  0275               	subwf	set_time@i,w
  7799  17F8                     u1285:	
  7800  17F8  1C03               	skipc
  7801  17F9  2FFB               	goto	u1281
  7802  17FA  2FFC               	goto	u1280
  7803  17FB                     u1281:	
  7804  17FB  2FDF               	goto	l2550
  7805  17FC                     u1280:	
  7806  17FC                     l303:	
  7807                           
  7808                           ;clock_src.c: 24:    RB5=0;
  7809  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  7810  17FD  1303               	bcf	3,6	;RP1=0, select bank0
  7811  17FE  1286               	bcf	6,5	;volatile
  7812  17FF                     l304:	
  7813  17FF  0008               	return
  7814  1800                     __end_of_set_time:	
  7815                           
  7816                           	psect	text33
  7817  1752                     __ptext33:	
  7818 ;; *************** function _time_write_1 *****************
  7819 ;; Defined at:
  7820 ;;		line 116 in file "clock_src.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;  time_tx         1    wreg     unsigned char 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  time_tx         1    4[COMMON] unsigned char 
  7825 ;;  j               2    2[COMMON] int 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      void 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0, btemp+1
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7835 ;;      Params:         0       0       0       0       0
  7836 ;;      Locals:         3       0       0       0       0
  7837 ;;      Temps:          2       0       0       0       0
  7838 ;;      Totals:         5       0       0       0       0
  7839 ;;Total ram usage:        5 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; This function calls:
  7842 ;;		Nothing
  7843 ;; This function is called by:
  7844 ;;		_ds1302_init
  7845 ;;		_set_time
  7846 ;;		_get_time
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           
  7851                           ;psect for function _time_write_1
  7852  1752                     _time_write_1:	
  7853                           
  7854                           ;incstack = 0
  7855                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  7856                           ;time_write_1@time_tx stored from wreg
  7857  1752  00F4               	movwf	time_write_1@time_tx
  7858  1753                     l2518:	
  7859                           
  7860                           ;clock_src.c: 116: void time_write_1(unsigned char time_tx);clock_src.c: 117: {;clock_sr
      +                          c.c: 118:     int j;;clock_src.c: 119:     for(j=0;j<8;j++)
  7861  1753  01F2               	clrf	time_write_1@j
  7862  1754  01F3               	clrf	time_write_1@j+1
  7863  1755                     l320:	
  7864                           
  7865                           ;clock_src.c: 120:    {;clock_src.c: 121:         RB4=0;
  7866  1755  1283               	bcf	3,5	;RP0=0, select bank0
  7867  1756  1303               	bcf	3,6	;RP1=0, select bank0
  7868  1757  1206               	bcf	6,4	;volatile
  7869                           
  7870                           ;clock_src.c: 122:         RB0=0;
  7871  1758  1006               	bcf	6,0	;volatile
  7872                           
  7873                           ;clock_src.c: 123:         if(time_tx&0x01)
  7874  1759  1C74               	btfss	time_write_1@time_tx,0
  7875  175A  2F5C               	goto	u1261
  7876  175B  2F5D               	goto	u1260
  7877  175C                     u1261:	
  7878  175C  2F5E               	goto	l2526
  7879  175D                     u1260:	
  7880  175D                     l2524:	
  7881                           
  7882                           ;clock_src.c: 124:           {;clock_src.c: 125:             RB4=1;
  7883  175D  1606               	bsf	6,4	;volatile
  7884  175E                     l2526:	
  7885                           
  7886                           ;clock_src.c: 127:         time_tx=time_tx>>1;
  7887  175E  0874               	movf	time_write_1@time_tx,w
  7888  175F  00F0               	movwf	??_time_write_1
  7889  1760  1003               	clrc
  7890  1761  0C70               	rrf	??_time_write_1,w
  7891  1762  00F1               	movwf	??_time_write_1+1
  7892  1763  0871               	movf	??_time_write_1+1,w
  7893  1764  00F4               	movwf	time_write_1@time_tx
  7894  1765                     l2528:	
  7895                           
  7896                           ;clock_src.c: 128:         RB0=1;
  7897  1765  1406               	bsf	6,0	;volatile
  7898  1766                     l2530:	
  7899                           
  7900                           ;clock_src.c: 129:     }
  7901  1766  3001               	movlw	1
  7902  1767  07F2               	addwf	time_write_1@j,f
  7903  1768  1803               	skipnc
  7904  1769  0AF3               	incf	time_write_1@j+1,f
  7905  176A  3000               	movlw	0
  7906  176B  07F3               	addwf	time_write_1@j+1,f
  7907  176C                     l2532:	
  7908  176C  0873               	movf	time_write_1@j+1,w
  7909  176D  3A80               	xorlw	128
  7910  176E  00FF               	movwf	btemp+1
  7911  176F  3080               	movlw	128
  7912  1770  027F               	subwf	btemp+1,w
  7913  1771  1D03               	skipz
  7914  1772  2F75               	goto	u1275
  7915  1773  3008               	movlw	8
  7916  1774  0272               	subwf	time_write_1@j,w
  7917  1775                     u1275:	
  7918  1775  1C03               	skipc
  7919  1776  2F78               	goto	u1271
  7920  1777  2F79               	goto	u1270
  7921  1778                     u1271:	
  7922  1778  2F55               	goto	l320
  7923  1779                     u1270:	
  7924  1779                     l321:	
  7925                           
  7926                           ;clock_src.c: 130:       RB0=0;
  7927  1779  1283               	bcf	3,5	;RP0=0, select bank0
  7928  177A  1303               	bcf	3,6	;RP1=0, select bank0
  7929  177B  1006               	bcf	6,0	;volatile
  7930  177C                     l323:	
  7931  177C  0008               	return
  7932  177D                     __end_of_time_write_1:	
  7933                           
  7934                           	psect	text34
  7935  17A8                     __ptext34:	
  7936 ;; *************** function _incrementor *****************
  7937 ;; Defined at:
  7938 ;;		line 10 in file "math_src.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  upper_val       2    0[BANK0 ] int 
  7941 ;;  lower_val       2    2[BANK0 ] int 
  7942 ;;  z               1    4[BANK0 ] unsigned char 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      unsigned char 
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0, pclath, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7954 ;;      Params:         0       5       0       0       0
  7955 ;;      Locals:         0       0       0       0       0
  7956 ;;      Temps:          2       0       0       0       0
  7957 ;;      Totals:         2       5       0       0       0
  7958 ;;Total ram usage:        7 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    2
  7961 ;; This function calls:
  7962 ;;		_modulus_func
  7963 ;; This function is called by:
  7964 ;;		_thermometer_threshhold_settings
  7965 ;;		_time_settings
  7966 ;;		_date_settings
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           
  7971                           ;psect for function _incrementor
  7972  17A8                     _incrementor:	
  7973  17A8                     l2734:	
  7974                           ;incstack = 0
  7975                           ; Regs used in _incrementor: [wreg+status,2+status,0+pclath+cstack]
  7976                           
  7977                           
  7978                           ;math_src.c: 11:      if(z == (lower_val + '0')){
  7979  17A8  1283               	bcf	3,5	;RP0=0, select bank0
  7980  17A9  1303               	bcf	3,6	;RP1=0, select bank0
  7981  17AA  0850               	movf	incrementor@lower_val,w
  7982  17AB  3E30               	addlw	48
  7983  17AC  00FB               	movwf	??_incrementor
  7984  17AD  0851               	movf	incrementor@lower_val+1,w
  7985  17AE  1803               	skipnc
  7986  17AF  3E01               	addlw	1
  7987  17B0  3E00               	addlw	0
  7988  17B1  00FC               	movwf	??_incrementor+1
  7989  17B2  0852               	movf	incrementor@z,w
  7990  17B3  067B               	xorwf	??_incrementor,w
  7991  17B4  047C               	iorwf	??_incrementor+1,w
  7992  17B5  1D03               	skipz
  7993  17B6  2FB8               	goto	u1391
  7994  17B7  2FB9               	goto	u1390
  7995  17B8                     u1391:	
  7996  17B8  2FD2               	goto	l2740
  7997  17B9                     u1390:	
  7998  17B9                     l2736:	
  7999                           
  8000                           ;math_src.c: 12:      upper_val++;
  8001  17B9  3001               	movlw	1
  8002  17BA  07CE               	addwf	incrementor@upper_val,f
  8003  17BB  1803               	skipnc
  8004  17BC  0ACF               	incf	incrementor@upper_val+1,f
  8005  17BD  3000               	movlw	0
  8006  17BE  07CF               	addwf	incrementor@upper_val+1,f
  8007  17BF                     l2738:	
  8008                           
  8009                           ;math_src.c: 13:      upper_val =(modulus_func(upper_val,10));
  8010  17BF  084F               	movf	incrementor@upper_val+1,w
  8011  17C0  00F8               	movwf	modulus_func@x+1
  8012  17C1  084E               	movf	incrementor@upper_val,w
  8013  17C2  00F7               	movwf	modulus_func@x
  8014  17C3  300A               	movlw	10
  8015  17C4  00F9               	movwf	modulus_func@y
  8016  17C5  3000               	movlw	0
  8017  17C6  00FA               	movwf	modulus_func@y+1
  8018  17C7  160A  118A  261E  160A  118A  	fcall	_modulus_func
  8019  17CC  0878               	movf	?_modulus_func+1,w
  8020  17CD  1283               	bcf	3,5	;RP0=0, select bank0
  8021  17CE  1303               	bcf	3,6	;RP1=0, select bank0
  8022  17CF  00CF               	movwf	incrementor@upper_val+1
  8023  17D0  0877               	movf	?_modulus_func,w
  8024  17D1  00CE               	movwf	incrementor@upper_val
  8025  17D2                     l2740:	
  8026                           
  8027                           ;math_src.c: 15:      return upper_val;
  8028  17D2  084E               	movf	incrementor@upper_val,w
  8029  17D3                     l552:	
  8030  17D3  0008               	return
  8031  17D4                     __end_of_incrementor:	
  8032                           
  8033                           	psect	text35
  8034  161E                     __ptext35:	
  8035 ;; *************** function _modulus_func *****************
  8036 ;; Defined at:
  8037 ;;		line 5 in file "math_src.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  x               2    7[COMMON] int 
  8040 ;;  y               2    9[COMMON] int 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  2    7[COMMON] int 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8052 ;;      Params:         4       0       0       0       0
  8053 ;;      Locals:         0       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0
  8055 ;;      Totals:         4       0       0       0       0
  8056 ;;Total ram usage:        4 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    1
  8059 ;; This function calls:
  8060 ;;		___awmod
  8061 ;; This function is called by:
  8062 ;;		_thermometer_threshhold_settings
  8063 ;;		_time_settings
  8064 ;;		_date_settings
  8065 ;;		_incrementor
  8066 ;;		_decrementor
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _modulus_func
  8072  161E                     _modulus_func:	
  8073  161E                     l2534:	
  8074                           ;incstack = 0
  8075                           ; Regs used in _modulus_func: [wreg+status,2+status,0+pclath+cstack]
  8076                           
  8077                           
  8078                           ;math_src.c: 6:     x = x % y;
  8079  161E  087A               	movf	modulus_func@y+1,w
  8080  161F  00F1               	movwf	___awmod@divisor+1
  8081  1620  0879               	movf	modulus_func@y,w
  8082  1621  00F0               	movwf	___awmod@divisor
  8083  1622  0878               	movf	modulus_func@x+1,w
  8084  1623  00F3               	movwf	___awmod@dividend+1
  8085  1624  0877               	movf	modulus_func@x,w
  8086  1625  00F2               	movwf	___awmod@dividend
  8087  1626  120A  158A  21F7  160A  118A  	fcall	___awmod
  8088  162B  0871               	movf	?___awmod+1,w
  8089  162C  00F8               	movwf	modulus_func@x+1
  8090  162D  0870               	movf	?___awmod,w
  8091  162E  00F7               	movwf	modulus_func@x
  8092  162F                     l2536:	
  8093  162F                     l548:	
  8094                           ;math_src.c: 7:     return x;
  8095                           
  8096  162F  0008               	return
  8097  1630                     __end_of_modulus_func:	
  8098                           
  8099                           	psect	text36
  8100  09F7                     __ptext36:	
  8101 ;; *************** function ___awmod *****************
  8102 ;; Defined at:
  8103 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;  divisor         2    0[COMMON] int 
  8106 ;;  dividend        2    2[COMMON] int 
  8107 ;; Auto vars:     Size  Location     Type
  8108 ;;  sign            1    6[COMMON] unsigned char 
  8109 ;;  counter         1    5[COMMON] unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  2    0[COMMON] int 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8119 ;;      Params:         4       0       0       0       0
  8120 ;;      Locals:         2       0       0       0       0
  8121 ;;      Temps:          1       0       0       0       0
  8122 ;;      Totals:         7       0       0       0       0
  8123 ;;Total ram usage:        7 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_get_temp
  8129 ;;		_modulus_func
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           
  8134                           ;psect for function ___awmod
  8135  09F7                     ___awmod:	
  8136  09F7                     l2464:	
  8137                           ;incstack = 0
  8138                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8139                           
  8140  09F7  01F6               	clrf	___awmod@sign
  8141  09F8                     l2466:	
  8142  09F8  1FF3               	btfss	___awmod@dividend+1,7
  8143  09F9  29FB               	goto	u1141
  8144  09FA  29FC               	goto	u1140
  8145  09FB                     u1141:	
  8146  09FB  2A03               	goto	l2472
  8147  09FC                     u1140:	
  8148  09FC                     l2468:	
  8149  09FC  09F2               	comf	___awmod@dividend,f
  8150  09FD  09F3               	comf	___awmod@dividend+1,f
  8151  09FE  0AF2               	incf	___awmod@dividend,f
  8152  09FF  1903               	skipnz
  8153  0A00  0AF3               	incf	___awmod@dividend+1,f
  8154  0A01                     l2470:	
  8155  0A01  01F6               	clrf	___awmod@sign
  8156  0A02  0AF6               	incf	___awmod@sign,f
  8157  0A03                     l2472:	
  8158  0A03  1FF1               	btfss	___awmod@divisor+1,7
  8159  0A04  2A06               	goto	u1151
  8160  0A05  2A07               	goto	u1150
  8161  0A06                     u1151:	
  8162  0A06  2A0C               	goto	l2476
  8163  0A07                     u1150:	
  8164  0A07                     l2474:	
  8165  0A07  09F0               	comf	___awmod@divisor,f
  8166  0A08  09F1               	comf	___awmod@divisor+1,f
  8167  0A09  0AF0               	incf	___awmod@divisor,f
  8168  0A0A  1903               	skipnz
  8169  0A0B  0AF1               	incf	___awmod@divisor+1,f
  8170  0A0C                     l2476:	
  8171  0A0C  0870               	movf	___awmod@divisor,w
  8172  0A0D  0471               	iorwf	___awmod@divisor+1,w
  8173  0A0E  1903               	btfsc	3,2
  8174  0A0F  2A11               	goto	u1161
  8175  0A10  2A12               	goto	u1160
  8176  0A11                     u1161:	
  8177  0A11  2A41               	goto	l2494
  8178  0A12                     u1160:	
  8179  0A12                     l2478:	
  8180  0A12  01F5               	clrf	___awmod@counter
  8181  0A13  0AF5               	incf	___awmod@counter,f
  8182  0A14  2A20               	goto	l2484
  8183  0A15                     l2480:	
  8184  0A15  3001               	movlw	1
  8185  0A16                     u1175:	
  8186  0A16  1003               	clrc
  8187  0A17  0DF0               	rlf	___awmod@divisor,f
  8188  0A18  0DF1               	rlf	___awmod@divisor+1,f
  8189  0A19  3EFF               	addlw	-1
  8190  0A1A  1D03               	skipz
  8191  0A1B  2A16               	goto	u1175
  8192  0A1C                     l2482:	
  8193  0A1C  3001               	movlw	1
  8194  0A1D  00F4               	movwf	??___awmod
  8195  0A1E  0874               	movf	??___awmod,w
  8196  0A1F  07F5               	addwf	___awmod@counter,f
  8197  0A20                     l2484:	
  8198  0A20  1FF1               	btfss	___awmod@divisor+1,7
  8199  0A21  2A23               	goto	u1181
  8200  0A22  2A24               	goto	u1180
  8201  0A23                     u1181:	
  8202  0A23  2A15               	goto	l2480
  8203  0A24                     u1180:	
  8204  0A24                     l2486:	
  8205  0A24  0871               	movf	___awmod@divisor+1,w
  8206  0A25  0273               	subwf	___awmod@dividend+1,w
  8207  0A26  1D03               	skipz
  8208  0A27  2A2A               	goto	u1195
  8209  0A28  0870               	movf	___awmod@divisor,w
  8210  0A29  0272               	subwf	___awmod@dividend,w
  8211  0A2A                     u1195:	
  8212  0A2A  1C03               	skipc
  8213  0A2B  2A2D               	goto	u1191
  8214  0A2C  2A2E               	goto	u1190
  8215  0A2D                     u1191:	
  8216  0A2D  2A34               	goto	l2490
  8217  0A2E                     u1190:	
  8218  0A2E                     l2488:	
  8219  0A2E  0870               	movf	___awmod@divisor,w
  8220  0A2F  02F2               	subwf	___awmod@dividend,f
  8221  0A30  0871               	movf	___awmod@divisor+1,w
  8222  0A31  1C03               	skipc
  8223  0A32  03F3               	decf	___awmod@dividend+1,f
  8224  0A33  02F3               	subwf	___awmod@dividend+1,f
  8225  0A34                     l2490:	
  8226  0A34  3001               	movlw	1
  8227  0A35                     u1205:	
  8228  0A35  1003               	clrc
  8229  0A36  0CF1               	rrf	___awmod@divisor+1,f
  8230  0A37  0CF0               	rrf	___awmod@divisor,f
  8231  0A38  3EFF               	addlw	-1
  8232  0A39  1D03               	skipz
  8233  0A3A  2A35               	goto	u1205
  8234  0A3B                     l2492:	
  8235  0A3B  3001               	movlw	1
  8236  0A3C  02F5               	subwf	___awmod@counter,f
  8237  0A3D  1D03               	btfss	3,2
  8238  0A3E  2A40               	goto	u1211
  8239  0A3F  2A41               	goto	u1210
  8240  0A40                     u1211:	
  8241  0A40  2A24               	goto	l2486
  8242  0A41                     u1210:	
  8243  0A41                     l2494:	
  8244  0A41  0876               	movf	___awmod@sign,w
  8245  0A42  1903               	btfsc	3,2
  8246  0A43  2A45               	goto	u1221
  8247  0A44  2A46               	goto	u1220
  8248  0A45                     u1221:	
  8249  0A45  2A4B               	goto	l2498
  8250  0A46                     u1220:	
  8251  0A46                     l2496:	
  8252  0A46  09F2               	comf	___awmod@dividend,f
  8253  0A47  09F3               	comf	___awmod@dividend+1,f
  8254  0A48  0AF2               	incf	___awmod@dividend,f
  8255  0A49  1903               	skipnz
  8256  0A4A  0AF3               	incf	___awmod@dividend+1,f
  8257  0A4B                     l2498:	
  8258  0A4B  0873               	movf	___awmod@dividend+1,w
  8259  0A4C  00F1               	movwf	?___awmod+1
  8260  0A4D  0872               	movf	___awmod@dividend,w
  8261  0A4E  00F0               	movwf	?___awmod
  8262  0A4F                     l854:	
  8263  0A4F  0008               	return
  8264  0A50                     __end_of___awmod:	
  8265                           
  8266                           	psect	text37
  8267  167C                     __ptext37:	
  8268 ;; *************** function _button_delay *****************
  8269 ;; Defined at:
  8270 ;;		line 513 in file "Button_src.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  i               2    0[COMMON] int 
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, btemp+1
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8284 ;;      Params:         0       0       0       0       0
  8285 ;;      Locals:         2       0       0       0       0
  8286 ;;      Temps:          0       0       0       0       0
  8287 ;;      Totals:         2       0       0       0       0
  8288 ;;Total ram usage:        2 bytes
  8289 ;; Hardware stack levels used:    1
  8290 ;; This function calls:
  8291 ;;		Nothing
  8292 ;; This function is called by:
  8293 ;;		_set_beep_threshhold
  8294 ;;		_thermometer_threshhold_settings
  8295 ;;		_time_settings
  8296 ;;		_date_settings
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _button_delay
  8302  167C                     _button_delay:	
  8303  167C                     l2724:	
  8304                           ;incstack = 0
  8305                           ; Regs used in _button_delay: [wreg+status,2+btemp+1]
  8306                           
  8307                           
  8308                           ;Button_src.c: 514:     for(int i=0;i<10000;i++);
  8309  167C  01F0               	clrf	button_delay@i
  8310  167D  01F1               	clrf	button_delay@i+1
  8311  167E                     l2730:	
  8312  167E  3001               	movlw	1
  8313  167F  07F0               	addwf	button_delay@i,f
  8314  1680  1803               	skipnc
  8315  1681  0AF1               	incf	button_delay@i+1,f
  8316  1682  3000               	movlw	0
  8317  1683  07F1               	addwf	button_delay@i+1,f
  8318  1684                     l2732:	
  8319  1684  0871               	movf	button_delay@i+1,w
  8320  1685  3A80               	xorlw	128
  8321  1686  00FF               	movwf	btemp+1
  8322  1687  30A7               	movlw	167
  8323  1688  027F               	subwf	btemp+1,w
  8324  1689  1D03               	skipz
  8325  168A  2E8D               	goto	u1385
  8326  168B  3010               	movlw	16
  8327  168C  0270               	subwf	button_delay@i,w
  8328  168D                     u1385:	
  8329  168D  1C03               	skipc
  8330  168E  2E90               	goto	u1381
  8331  168F  2E91               	goto	u1380
  8332  1690                     u1381:	
  8333  1690  2E7E               	goto	l2730
  8334  1691                     u1380:	
  8335  1691                     l545:	
  8336  1691  0008               	return
  8337  1692                     __end_of_button_delay:	
  8338  007E                     btemp	set	126	;btemp
  8339  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _decrementor->_modulus_func
    _set_upper_threshold->_write_char
    _set_lower_threshold->_write_char
    _set_beep_threshhold->_button_delay
    _lcd_init->_write_cmd
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_write_char
    _display_date->_write_char
    _display_clock->_write_char
    _date_settings->_incrementor
    _write_cmd->_delay_screen
    _write_char->_delay_screen
    _set_time->_time_write_1
    _incrementor->_modulus_func
    _modulus_func->___awmod

Critical Paths under _main in BANK0

    _main->_thermometer_threshhold_settings
    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _date_settings->_incrementor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   34695
                      _date_settings
                      _display_clock
                       _display_date
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                 _initialise_buttons
                           _lcd_init
                _set_beep_threshhold
                _set_lower_threshold
                           _set_time
                _set_upper_threshold
    _thermometer_threshhold_settings
                      _time_settings
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _time_settings                                        3     3      0    9902
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _thermometer_threshhold_settings                      5     5      0    9021
                                              5 BANK0      5     5      0
                       _button_delay
                        _decrementor
                        _incrementor
                       _modulus_func
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _decrementor                                          7     2      5    2657
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (1) _set_upper_threshold                                  6     2      4     264
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_lower_threshold                                  6     2      4     264
                                              3 COMMON     6     2      4
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _set_beep_threshhold                                  1     1      0      68
                                              2 COMMON     1     1      0
                       _button_delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _initialise_buttons                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    3882
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0      68
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _date_settings                                        3     3      0    9902
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _time_date_hex_terminator                             4     3      1     295
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _time_date_delimiter                                  5     3      2    3130
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (3) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _incrementor                                          7     2      5    3797
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (2) _modulus_func                                         4     0      4    2339
                                              7 COMMON     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _button_delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _date_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _display_clock
     _write_char
       _delay_screen
   _display_date
     _write_char
       _delay_screen
   _display_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _initialise_buttons
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _set_beep_threshhold
     _button_delay
   _set_lower_threshold
     _write_char
       _delay_screen
   _set_time
     _time_write_1
   _set_upper_threshold
     _write_char
       _delay_screen
   _thermometer_threshhold_settings
     _button_delay
     _decrementor
       _modulus_func
         ___awmod
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _time_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4E      12        0.0%
ABS                  0      0      4E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 02 22:36:48 2019

                                       _a 0043                                         _b 0042  
                                       _c 0041                                         _t 0035  
                                       _w 0033                                         _x 0031  
                                       _y 002F                                         _z 002D  
                                       pc 0002              set_lower_threshold@lower_val 0075  
                                      _TX 004A                                        _TZ 004B  
                            ___awdiv@sign 0076                                        _ge 0048  
                                      _wd 0037                                        fsr 0004  
       __size_of_time_date_hex_terminator 0012                 ?_time_date_hex_terminator 0070  
                     _set_beep_threshhold 1707                             ?_display_date 0070  
                                     l141 160F                                       l150 1706  
                                     l303 17FC                                       l231 15F6  
                                     l320 1755                                       l304 17FF  
                                     l160 16A7                                       l144 1751  
                                     l321 1779                                       l313 0B5C  
                                     l234 17A7                                       l242 0977  
                                     l323 177C                                       l147 16ED  
                                     l308 0858                                       l317 00E4  
                                     l309 085B                                       l501 0FFF  
                                     l238 0941                                       l326 0862  
                                     l271 1653                                       l327 0889  
                                     l503 0FA8                                       l511 00F5  
                                     l256 093D                                       l248 09B2  
                                     l264 0D77                                       l504 0FF1  
                                     l520 035E                                       l329 0890  
                                     l602 08C9                                       l267 1643  
                                     l276 16BD                                       l517 02C3  
                                     l534 068F                                       l526 03E3  
                                     l518 03D2                                       l535 07E5  
                                     l552 17D3                                       l560 16D4  
                                     l545 1691                                       l299 167B  
                                     l491 161D                                       l395 1729  
                                     l548 162F                                       l564 1641  
                                     l556 082D                                       l495 0D88  
                                     l841 0AB6                                       l498 0F37  
                                     l854 0A4F                                       l598 003E  
                                     l960 09F6                                       l970 0903  
                                     _RA0 0028                                       _RA2 002A  
                                     _RB0 0030                                       _RA3 002B  
                                     _RB1 0031                                       _RA4 002C  
                                     _RC0 0038                                       _RA5 002D  
                                     _RC1 0039                                       _RB4 0034  
                                     _RC2 003A                                       _RB5 0035  
                                     _RC3 003B                                       _RE0 0048  
                                     _RC4 003C                                       _RE2 004A  
                                     _RC6 003E                                       _RC7 003F  
                                     _THV 004C                             ?_display_temp 0070  
                                     _TLV 004D                                       _shi 0049  
                                     fsr0 0004                                       indf 0000  
                            ___awmod@sign 0076                              __CFG_FOSC$HS 0000  
                         ??_time_settings 0053                              __CFG_LVP$OFF 0000  
            set_lower_threshold@upper_val 0073                                      l3000 0080  
                                    l3010 00AF                                      l3002 008A  
                                    l3020 00DD                                      l3012 00B5  
                                    l3004 0097                                      l3100 0EAF  
                                    l3030 0ADA                                      l3022 0AB7  
                                    l3014 00BF                                      l3006 009E  
                                    l3102 0EB6                                      l3110 0EE7  
                                    l3200 0437                                      l3040 0B02  
                                    l3032 0AE1                                      l3024 0ABD  
                                    l3016 00CC                                      l3008 00A8  
                                    l3120 0EF1                                      l3112 0EEA  
                                    l3104 0EBF                                      l3210 0441  
                                    l3202 043A                                      l3050 0B2D  
                                    l3042 0B0F                                      l3034 0AEB  
                                    l3026 0AC5                                      l3018 00D3  
                                    l3130 0F11                                      l3122 0EF9  
                                    l3114 0EEB                                      l3106 0EDA  
                                    l3300 062F                                      l3220 047D  
                                    l3212 0447                                      l3204 043B  
                                    l3052 0B37                                      l3044 0B16  
                                    l3036 0AF2                                      l3028 0ACD  
                                    l3140 0F21                                      l3132 0F17  
                                    l3124 0EFF                                      l3116 0EEC  
                                    l3108 0EDE                                      l3060 0D78  
                                    l2510 169A                                      l2502 1692  
                                    l3310 0671                                      l3302 0642  
                                    l3222 048C                                      l3214 044B  
                                    l3230 04A2                                      l3206 043C  
                                    l3054 0B44                                      l3046 0B20  
                                    l3038 0AF8                                      l3150 0F54  
                                    l3142 0F29                                      l3134 0F1D  
                                    l3126 0F05                                      l3118 0EED  
                                    l3070 0E71                                      l3062 0D82  
                                    l3400 0788                                      l3320 0683  
                                    l3312 0672                                      l3304 0655  
                                    l3240 04CB                                      l3232 04A8  
                                    l3224 0492                                      l3216 0451  
                                    l3208 043D                                      l3056 0B4B  
                                    l3048 0B27                                      l2512 1643  
                                    l3160 0FA4                                      l3152 0F6A  
                                    l3144 0F3F                                      l3128 0F0B  
                                    l3080 0E7A                                      l3072 0E72  
                                    l3064 0E6C                                      l2530 1766  
                                    l3410 07B2                                      l3402 0791  
                                    l3330 06AA                                      l3322 0689  
                                    l3314 0673                                      l3306 0668  
                                    l3250 0505                                      l3242 04E4  
                                    l3234 04AE                                      l3226 0499  
                                    l3218 0464                                      l3058 0B55  
                                    l2514 1647                                      l2610 0989  
                                    l2602 097D                                      l3170 0FBA  
                                    l3162 0FB0                                      l3154 0F71  
                                    l3146 0F45                                      l3090 0E80  
                                    l3082 0E7C                                      l3074 0E74  
                                    l3066 0E6F                                      l2532 176C  
                                    l2524 175D                                      l2540 17D4  
                                    l2508 1694                                      l3420 07CE  
                                    l3412 07B8                                      l3404 079A  
                                    l3340 06EE                                      l3332 06B0  
                                    l3316 0674                                      l3308 066E  
                                    l3260 0520                                      l3244 04F3  
                                    l3236 04B2                                      l3252 050A  
                                    l3228 049D                                      l2516 164D  
                                    l2620 0992                                      l2612 098A  
                                    l2604 0982                                      l2700 085C  
                                    l3180 0FD3                                      l3172 0FBB  
                                    l3156 0F7A                                      l3148 0F4D  
                                    l3164 0FB5                                      l3092 0E84  
                                    l3084 0E7D                                      l3076 0E76  
                                    l3068 0E70                                      l3500 026A  
                                    l2470 0A01                                      l2534 161E  
                                    l2526 175E                                      l2518 1753  
                                    l2550 17DF                                      l2542 17D7  
                                    l3422 07CF                                      l3414 07C1  
                                    l3406 07A0                                      l3350 06FB  
                                    l3342 06EF                                      l3334 06DA  
                                    l3326 0693                                      l3318 0678  
                                    l3270 055A                                      l3262 0533  
                                    l3254 0510                                      l3246 04FA  
                                    l3238 04B8                                      l2630 09A4  
                                    l2622 0995                                      l2614 098B  
                                    l2606 0985                                      l2710 086C  
                                    l2702 085D                                      l3182 0FD9  
                                    l3174 0FBF                                      l3166 0FB8  
                                    l3158 0F95                                      l3094 0E8A  
                                    l3086 0E7E                                      l3078 0E78  
                                    l3510 02A5                                      l3502 027D  
                                    l3430 00E5                                      l2480 0A15  
                                    l2472 0A03                                      l2464 09F7  
                                    l2536 162F                                      l2528 1765  
                                    l2552 17E9                                      l2544 17DD  
                                    l2560 16F9                                      l3424 07D0  
                                    l3416 07CA                                      l3408 07A9  
                                    l3360 0718                                      l3352 0701  
                                    l3344 06F0                                      l3336 06E0  
                                    l3328 06A6                                      l3280 0571  
                                    l3272 055E                                      l3264 054C  
                                    l3256 0516                                      l3248 0501  
                                    l2800 0A94                                      l2632 09AB  
                                    l2624 099F                                      l2616 098C  
                                    l2608 0988                                      l2720 088F  
                                    l2712 0870                                      l3600 08A0  
                                    l3192 0FF9                                      l3184 0FDF  
                                    l3176 0FC7                                      l3168 0FB9  
                                    l3096 0E92                                      l3088 0E7F  
                                    l3520 02B4                                      l3512 02A6  
                                    l3504 0290                                      l3440 014E  
                                    l3432 00EF                                      l2730 167E  
                                    l2490 0A34                                      l2482 0A1C  
                                    l2474 0A07                                      l2466 09F8  
                                    l2554 17EF                                      l2570 16DB  
                                    l2562 16FC                                      l3426 07D4  
                                    l3418 07CD                                      l3370 0737  
                                    l3362 071E                                      l3354 0706  
                                    l3346 06F1                                      l3338 06ED  
                                    l3290 05D0                                      l3282 0584  
                                    l3266 0552                                      l3258 051A  
                                    l3274 0563                                      l2810 0AAD  
                                    l2802 0A9A                                      l2650 0911  
                                    l2634 09AD                                      l2626 09A2  
                                    l2618 098D                                      l2714 0875  
                                    l3610 08C3                                      l3602 08AB  
                                    l3186 0FE5                                      l3178 0FCD  
                                    l3098 0E99                                      l3530 02BD  
                                    l3522 02B5                                      l3514 02A7  
                                    l3506 02A3                                      l3450 0163  
                                    l3442 014F                                      l3434 0149  
                                    l2732 1684                                      l2724 167C  
                                    l2492 0A3B                                      l2484 0A20  
                                    l2476 0A0C                                      l2468 09FC  
                                    l2740 17D2                                      l2572 16E0  
                                    l2564 16FE                                      l2556 16EF  
                                    l3428 07DF                                      l3380 0745  
                                    l3372 0738                                      l3364 0724  
                                    l3356 070C                                      l3348 06F5  
                                    l3292 05E3                                      l3284 0597  
                                    l3276 0569                                      l3268 0553  
                                    l3196 03D3                                      l2812 0AB2  
                                    l2804 0A9B                                      l2820 09BB  
                                    l2660 0916                                      l2652 0912  
                                    l2644 0909                                      l2636 0904  
                                    l2580 093E                                      l2628 09A3  
                                    l2716 0876                                      l2708 0865  
                                    l2900 1610                                      l3604 08B1  
                                    l3620 002C                                      l3612 0004  
                                    l3188 0FEB                                      l3540 02E4  
                                    l3524 02B7                                      l3516 02AB  
                                    l3508 02A4                                      l3460 01AC  
                                    l3452 0176                                      l3444 0153  
                                    l3436 014C                                      l3700 0BFE  
                                    l2486 0A24                                      l2478 0A12  
                                    l2494 0A41                                      l2734 17A8  
                                    l2574 16E3                                      l2566 1703  
                                    l2558 16F4                                      l3390 0764  
                                    l3382 074A                                      l3374 0739  
                                    l3366 072A                                      l3358 0712  
                                    l3294 05F6                                      l3286 05AA  
                                    l3278 056D                                      l3198 03DD  
                                    l2806 0AA2                                      l2830 09DE  
                                    l2822 09BE                                      l2670 091D  
                                    l2662 0917                                      l2654 0913  
                                    l2646 090B                                      l2638 0905  
                                    l2590 0967                                      l2582 0947  
                                    l2910 0C4A                                      l2718 087C  
                                    l2902 1616                                      l3630 1711  
                                    l3606 08B7                                      l3622 0032  
                                    l3614 0013                                      l2750 082C  
                                    l3550 031D                                      l3542 0308  
                                    l3534 02C7                                      l3526 02B9  
                                    l3518 02B1                                      l3470 01C5  
                                    l3462 01B0                                      l3454 018F  
                                    l3446 0159                                      l3438 014D  
                                    l3710 0C19                                      l3702 0C04  
                                    l2496 0A46                                      l2488 0A2E  
                                    l2736 17B9                                      l2576 16E5  
                                    l2568 16D6                                      l3392 076A  
                                    l3384 0752                                      l3376 073A  
                                    l3368 0736                                      l3296 0609  
                                    l3288 05BD                                      l2808 0AA8  
                                    l2832 09E4                                      l2824 09C5  
                                    l2816 09B3                                      l2680 092B  
                                    l2672 091E                                      l2664 091A  
                                    l2656 0914                                      l2648 090E  
                                    l2592 0968                                      l2584 0951  
                                    l2920 0C68                                      l2912 0C4D  
                                    l2904 1619                                      l3632 1716  
                                    l3608 08BD                                      l3624 0038  
                                    l3616 0020                                      l2744 0802  
                                    l3560 032F                                      l3552 031E  
                                    l3544 030E                                      l3536 02DA  
                                    l3528 02BB                                      l3480 01FE  
                                    l3472 01CB                                      l3456 019E  
                                    l3448 015D                                      l3464 01B5  
                                    l3712 0C1E                                      l3704 0C0A  
                                    l2498 0A4B                                      l2738 17BF  
                                    l2762 16BF                                      l2754 1631  
                                    l2578 16EA                                      l3394 0770  
                                    l3386 0758                                      l3378 073E  
                                    l3298 061C                                      l2834 09E5  
                                    l2826 09C9                                      l2818 09B5  
                                    l2850 08DE                                      l2842 08CA  
                                    l2690 16A8                                      l2682 0935  
                                    l2674 091F                                      l2666 091B  
                                    l2658 0915                                      l2586 095E  
                                    l2594 0972                                      l2930 0C8B  
                                    l2922 0C6E                                      l2914 0C58  
                                    l2906 161A                                      l3634 171E  
                                    l3626 1708                                      l3618 0026  
                                    l2746 0813                                      l3570 034C  
                                    l3562 0334                                      l3554 031F  
                                    l3538 02DE                                      l3546 031B  
                                    l3490 021A                                      l3482 0205  
                                    l3474 01DE                                      l3466 01BB  
                                    l3458 01A5                                      l3714 0C24  
                                    l3706 0C0F                                      l3650 0B70  
                                    l3642 0B5D                                      l2764 16CD  
                                    l2756 163F                                      l3396 0776  
                                    l3388 075E                                      l2780 0A5C  
                                    l2772 0A50                                      l2836 09EC  
                                    l2828 09CD                                      l2852 08E2  
                                    l2844 08D0                                      l2860 08FF  
                                    l2684 0937                                      l2676 0925  
                                    l2668 091C                                      l2588 0964  
                                    l2596 0979                                      l2940 0CE0  
                                    l2932 0CA5                                      l2924 0C74  
                                    l2916 0C5D                                      l2908 161B  
                                    l3628 170E                                      l3636 1726  
                                    l2748 0819                                      l3580 0368  
                                    l3572 0352                                      l3564 033A  
                                    l3556 0323                                      l3548 031C  
                                    l3492 021E                                      l3484 0209  
                                    l3476 01F7                                      l3468 01C1  
                                    l3716 0C31                                      l3708 0C14  
                                    l3660 0B89                                      l3652 0B75  
                                    l3644 0B61                                      l2766 16D1  
                                    l2758 1640                                      l3398 0782  
                                    l2870 1678                                      l2790 0A71  
                                    l2782 0A60                                      l2774 0A51  
                                    l2838 09F2                                      l2854 08EC  
                                    l2846 08D3                                      l2686 093C  
                                    l2678 092A                                      l2950 0CFC  
                                    l2942 0CE4                                      l2926 0C7E  
                                    l2918 0C63                                      l3590 03BD  
                                    l3582 0369                                      l3574 0358  
                                    l3566 0340                                      l3558 0329  
                                    l3494 0231                                      l3478 01FD  
                                    l3486 020E                                      l3718 0C3E  
                                    l3670 0BA6                                      l3662 0B8E  
                                    l3654 0B7A                                      l3646 0B66  
                                    l2768 16D3                                      l2792 0A74  
                                    l2784 0A65                                      l2776 0A55  
                                    l2856 08F2                                      l2848 08DA  
                                    l2696 16AA                                      l2960 0D43  
                                    l2952 0D04                                      l2944 0CEC  
                                    l2936 0CB2                                      l2928 0C88  
                                    l2880 160E                                      l2872 1607  
                                    l2864 15F0                                      l3592 03BE  
                                    l3584 03B8                                      l3576 0364  
                                    l3568 0346                                      l3496 0244  
                                    l3488 0214                                      l3680 0BC3  
                                    l3672 0BAC                                      l3664 0B94  
                                    l3656 0B7F                                      l3648 0B6B  
                                    l2866 1667                                      l2794 0A7B  
                                    l2786 0A69                                      l2778 0A5A  
                                    l2858 08F9                                      l2698 16B0  
                                    l2962 0D63                                      l2954 0D08  
                                    l2946 0CF0                                      l2938 0CDE  
                                    l2970 0837                                      l2874 160B  
                                    l2890 1738                                      l2882 172A  
                                    l3594 03C2                                      l3586 03BB  
                                    l3578 0367                                      l3498 0257  
                                    l3690 0BE1                                      l3682 0BC9  
                                    l3674 0BB2                                      l3666 0B9A  
                                    l3658 0B84                                      l2868 166C  
                                    l2796 0A7F                                      l2788 0A6B  
                                    l2964 0D76                                      l2956 0D10  
                                    l2948 0CF8                                      l2980 084B  
                                    l2876 160C                                      l2892 1739  
                                    l2884 172D                                      l3596 03CC  
                                    l3588 03BC                                      l3692 0BE6  
                                    l3684 0BCF                                      l3676 0BB7  
                                    l3668 0BA0                                      l2990 0055  
                                    l2982 177D                                      l2798 0A83  
                                    l2958 0D23                                      l2966 082E  
                                    l2878 160D                                      l2894 173F  
                                    l2886 1730                                      l3598 0891  
                                    l3694 0BEC                                      l3686 0BD5  
                                    l3678 0BBD                                      l2992 0062  
                                    l2984 003F                                      l2976 0839  
                                    l2968 0831                                      l2896 1745  
                                    l2888 1735                                      l3696 0BF2  
                                    l3688 0BDB                                      l2994 0069  
                                    l2986 0045                                      l2978 0845  
                                    l2898 174B                                      l3698 0BF8  
                                    l2996 0073                                      l2988 004D  
                                    l2998 007A                            ?_display_clock 0070  
                                    u2000 06F5                                      u2001 06F4  
                                    u1210 0A41                                      u2010 06FB  
                                    u1211 0A40                                      u2011 06FA  
                                    u1220 0A46                                      u1140 09FC  
                                    u2020 073E                                      u1300 0977  
                                    u2100 01BB                                      u1221 0A45  
                                    u1205 0A35                                      u1141 09FB  
                                    u2021 073D                                      u1301 0976  
                                    u2101 01BA                                      u1150 0A07  
                                    u1230 16A7                                      u2030 0745  
                                    u1310 0992                                      u2110 01C1  
                                    u1151 0A06                                      u1231 16A6  
                                    u2031 0744                                      u1311 0991  
                                    u2111 01C0                                      u1160 0A12  
                                    u2040 07D4                                      u1240 164D  
                                    u1320 09B2                                      u2200 08A0  
                                    u1400 0813                                      u2120 01FD  
                                    u1161 0A11                                      u2041 07D3  
                                    u1241 164C                                      u1321 09B1  
                                    u2201 089F                                      u1401 0812  
                                    u2121 01FC                                      u1410 163F  
                                    u1250 1653                                      u1330 092A  
                                    u2210 08AB                                      u2130 0205  
                                    u2050 00EF                                      u1411 163E  
                                    u1235 16A3                                      u1251 1652  
                                    u1331 0929                                      u2211 08AA  
                                    u2131 0204                                      u2051 00EE  
                                    u1180 0A24                                      u1260 175D  
                                    u1420 16CD                                      u1340 093C  
                                    u2220 0013                                      u2140 02AB  
                                    u2060 0153                                      u1181 0A23  
                                    u1261 175C                                      u1421 16CC  
                                    u1341 093B                                      u2205 089C  
                                    u2221 0012                                      u2141 02AA  
                                    u2061 0152                                      u1190 0A2E  
                                    u1270 1779                                      u1510 0AA8  
                                    u1430 0A55                                      u1350 16BD  
                                    u2230 0020                                      u2150 02DE  
                                    u2070 0159                                      u1191 0A2D  
                                    u1175 0A16                                      u1271 1778  
                                    u1511 0AA7                                      u1431 0A54  
                                    u1351 16BC                                      u2215 08A7  
                                    u2231 001F                                      u2151 02DD  
                                    u2071 0158                                      u1280 17FC  
                                    u1520 0AAD                                      u1440 0A60  
                                    u1600 08D0                                      u1360 0870  
                                    u2240 170E                                      u2160 02E4  
                                    u2080 01A5                                      u1281 17FB  
                                    u1521 0AAC                                      u1505 0A9C  
                                    u1441 0A5F                                      u1601 08CF  
                                    u1361 086F                                      u2241 170D  
                                    u2225 000F                                      u2161 02E3  
                                    u2081 01A4                                      u1450 0A71  
                                    u1530 09BB                                      u1290 0964  
                                    u1370 0889                                      u2170 0323  
                                    u2090 01AC                                      u1195 0A2A  
                                    u1275 1775                                      u1451 0A70  
                                    u1531 09BA                                      u1355 16B9  
                                    u1291 0963                                      u1371 0888  
                                    u2235 001C                                      u2171 0322  
                                    u2091 01AB                                      u1380 1691  
                                    u1620 08E2                                      u1700 0CF0  
                                    u2180 0329                                      u1381 1690  
                                    u1285 17F8                                      u1621 08E1  
                                    u1701 0CEF                                      u2181 0328  
                                    u1390 17B9                                      u1470 0A83  
                                    u1550 09CD                                      u1630 08EC  
                                    u1710 0CFC                                      u2190 03C2  
                                    u1391 17B8                                      u1471 0A82  
                                    u1551 09CC                                      u1631 08EB  
                                    u1615 08D4                                      u1711 0CFB  
                                    u1375 0885                                      u2191 03C1  
                                    u1720 0D08                                      u1800 0F3F  
                                    u1385 168D                                      u1465 0A75  
                                    u1545 09BF                                      u1721 0D07  
                                    u1801 0F3E                                      u1490 0A94  
                                    u1570 09DE                                      u1650 08FF  
                                    u1730 0858                                      u1810 0FA4  
                                    u1491 0A93                                      u1571 09DD  
                                    u1651 08FE                                      u1635 08E8  
                                    u1731 0857                                      u1811 0FA3  
                                    u1900 04AE                                      u1740 0045  
                                    u1820 0FBF                                      u1901 04AD  
                                    u1741 0044                                      u1485 0A84  
                                    u1565 09CE                                      u1645 08F3  
                                    u1821 0FBE                                      u1910 04FA  
                                    u1750 0ABD                                      u1590 09F2  
                                    u1830 0FF9                                      u1911 04F9  
                                    u1751 0ABC                                      u1495 0A90  
                                    u1591 09F1                                      u1575 09DA  
                                    u1735 0854                                      u1831 0FF8  
                                    u1920 0501                                      u1840 03DD  
                                    u1760 0D82                                      u1921 0500  
                                    u1841 03DC                                      u1585 09E6  
                                    u1665 0C90                                      u1761 0D81  
                                    u1930 0510                                      u1850 0441  
                                    u1690 0CE4                                      u1770 0E84  
                                    u1931 050F                                      u1851 0440  
                                    u1691 0CE3                                      u1675 0C9B  
                                    u1771 0E83                                      u1940 0516  
                                    u1860 0447                                      u1780 0EF1  
                                    u1941 0515                                      u1861 0446  
                                    u1685 0CA8                                      u1781 0EF0  
                                    u1950 0552                                      u1870 0492  
                                    u1790 0F36                                      u1951 0551  
                                    u1871 0491                                      u1791 0F35  
                                    u1960 055A                                      u1880 0499  
                                    u1961 0559                                      u1881 0498  
                                    u1970 0678                                      u1890 04A8  
                                    u1971 0677                                      u1891 04A7  
                                    u1795 0F32                                      u1980 06AA  
                                    u1981 06A9                                      u1990 06B0  
                                    u1991 06AF               time_date_hex_terminator@val 0073  
                    ?_set_beep_threshhold 0070                                      _main 0B5D  
                                    _init 1607                                      _var1 003B  
                                    _var2 003A                                      btemp 007E  
         time_date_hex_terminator@limiter 0070                             write_byte@val 0077  
                                    start 0000                    time_date_delimiter@hex 0070  
                  time_date_delimiter@val 0074                              ?_incrementor 004E  
             __size_of_initialise_buttons 000E                            ??_display_date 0073  
                                   ?_main 0070                            ??_display_temp 0073  
                                   ?_init 0070                           __end_of___awdiv 0AB7  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0A50  
                         ___awdiv@divisor 0070                      __end_of_delay_screen 16A8  
                         __end_of___lwdiv 09F7                           __end_of___lwmod 0904  
                         ___awdiv@counter 0075                                     _PORTD 0008  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                                   _TRISD 0088                                     _TRISE 0089  
                           __CFG_PWRTE$ON 0000                                     _table 0058  
                          write_byte@temp 0076                       _set_lower_threshold 0891  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                   ??_set_beep_threshhold 0072                                     status 0003  
                    __size_of_decrementor 002C                                     wtemp0 007E  
                           ??_ds1302_init 0075                           __initialization 07E6  
                            __end_of_main 0C4A                              __end_of_init 1610  
                   __end_of_date_settings 07E6                      ?_set_lower_threshold 0073  
                                  ??_main 007E                                    ??_init 0070  
                    incrementor@lower_val 0050                           ??_display_clock 0073  
                                  _ADCON1 009F                          ___awdiv@dividend 0072  
                                  _TRISA0 0428                                    _TRISB4 0434  
                                  _TRISE0 0448                             ?_button_delay 0070  
                    incrementor@upper_val 004E                          __end_of_lcd_init 1752  
                        __end_of_get_temp 0D78                          __end_of_get_time 085C  
                                  _baifen 0046                                 ??___awdiv 0074  
                               ??___awmod 0074                                    _delay2 16A8  
                   ??_set_lower_threshold 0077                                 ??___lwdiv 007A  
                               ??___lwmod 0074                       __end_of_ds1302_init 167C  
                     _set_upper_threshold 0004                                    _table1 0020  
                        ___awdiv@quotient 0077                           ___awmod@divisor 0070  
                                  _shifen 0047                                    _wanfen 0044  
                         ___awmod@counter 0075                              ?_time_read_1 0070  
                     time_write_1@time_tx 0074                             display_date@i 0075  
                        __end_of_set_time 1800                        reset_temp@presence 0075  
                    ?_set_upper_threshold 0073                   __end_of__initialization 07FC  
                          ??_button_delay 0070              __size_of_time_date_delimiter 0017  
                    __end_of_display_date 00E5                      __end_of_display_temp 17A8  
                          __pcstackCOMMON 0070                              __pidataBANK0 15FF  
                   __size_of_delay_screen 0016                      __size_of_incrementor 002C  
                   ??_set_upper_threshold 0077                                __pbssBANK0 0020  
                            _delay_screen 1692                        __size_of_init_temp 0007  
                      __size_of_read_byte 003A                               _ds1302_init 1667  
                              _delay_temp 1642                                __pmaintext 0B5D  
                                 ?_delay2 0070                             ?_modulus_func 0077  
                      time_read_1@time_rx 0074                              incrementor@z 0052  
                               ?_lcd_init 0070                                 ?_get_temp 0070  
                   __end_of_time_settings 03D3                                 ?_get_time 0070  
                      __size_of_write_cmd 0019                                 ?_set_time 0070  
                          ??_modulus_func 007B              set_upper_threshold@lower_val 0075  
              __end_of_initialise_buttons 161E                  _time_date_hex_terminator 1630  
                                 ___awdiv 0A50                                   ___awmod 09F7  
                         __size_of_delay2 0016                                   ___lwdiv 09B3  
                                 ___lwmod 08CA                                   _day_hex 0040  
                                 _day_low 002B                                   __ptext1 00E5  
                                 __ptext2 0D78                                   __ptext3 0802  
                                 __ptext4 0004                                   __ptext5 0891  
                                 __ptext6 1707                                   __ptext7 172A  
                                 __ptext8 1610                                   __ptext9 15F0  
                    __end_of_button_delay 1692                                   delay2@i 0070  
                       __end_of_init_temp 15F7                          ___awmod@dividend 0072  
                       __end_of_read_byte 093E                                   _qianfen 0045  
                    __size_of_time_read_1 0035                                   _lower_t 003D  
             __end_of_set_beep_threshhold 172A              set_upper_threshold@upper_val 0073  
                   __size_of_display_date 00A6                                   clrloop0 15F8  
                              ??_lcd_init 0073                                   _upper_t 003E  
                           ??_decrementor 007B                                ??_get_temp 004E  
                              ??_get_time 0075                     __size_of_display_temp 002B  
                    end_of_initialization 07FC                            display_clock@i 0075  
                           ?_time_write_1 0070                               ?_delay_temp 0070  
                              _reset_temp 093E                                ??_set_time 0075  
                     _time_date_delimiter 16BE                      decrementor@lower_val 004E  
                            _display_date 003F                              _display_temp 177D  
                       __end_of_write_cmd 1707                             modulus_func@x 0077  
                           modulus_func@y 0079                     __end_of_display_clock 0B5D  
                  __size_of_date_settings 0413                      ?_time_date_delimiter 0070  
                    decrementor@upper_val 0050                            ??_time_write_1 0070  
             __end_of_set_lower_threshold 08CA                       __end_of_decrementor 082E  
                          __end_of_delay2 16BE                                _write_char 16D5  
                              _write_byte 0978                       start_initialization 07E6  
                           delay_screen@i 0070                       __size_of_delay_temp 0012  
                    __end_of_modulus_func 1630                     ??_time_date_delimiter 0072  
                            ?_ds1302_init 0070                               ?_reset_temp 0070  
                           ??_incrementor 007B                                init_fetch0 1654  
                                ??_delay2 0070                     __size_of_button_delay 0016  
                           _date_settings 03D3                               __pdataBANK0 0058  
                              read_byte@i 0076                                read_byte@j 0039  
             __end_of_set_upper_threshold 003F                                 ___latbits 0002  
                           __pcstackBANK0 004E                               _decrementor 0802  
                    set_beep_threshhold@x 0072                         __size_of_lcd_init 0028  
                       __size_of_get_temp 012E                         __size_of_get_time 002E  
              ??_time_date_hex_terminator 0071                              _button_delay 167C  
                        ___lwdiv@dividend 0078                                  ?___awdiv 0070  
                          ?_date_settings 0070                                  ?___awmod 0070  
                                ?___lwdiv 0076                                  ?___lwmod 0070  
                       __size_of_set_time 002C                               ?_write_char 0070  
                             ?_write_byte 0070                       __end_of_incrementor 17D4  
                    __end_of_time_write_1 177D                        _initialise_buttons 1610  
                         _day_of_week_var 0027                       __size_of_reset_temp 003A  
                        ___lwdiv@quotient 007B                                 _init_temp 15F0  
                               _read_byte 0904                              decrementor@z 0052  
                     ?_initialise_buttons 0070                                 clear_ram0 15F7  
                            ??_delay_temp 0071   __end_of_thermometer_threshhold_settings 1000  
__size_of_thermometer_threshhold_settings 0288         ??_thermometer_threshhold_settings 0053  
        ?_thermometer_threshhold_settings 0070           _thermometer_threshhold_settings 0D78  
                    ??_initialise_buttons 0070                    __size_of_time_settings 02EE  
        thermometer_threshhold_settings@i 0056                             ??_time_read_1 0070  
                             write_char@x 0072                     __size_of_modulus_func 0012  
                               get_time@i 0076                               write_byte@i 0078  
                      __end_of_delay_temp 1654                                 _write_cmd 16EE  
                              ?_init_temp 0070                                ?_read_byte 0070  
                     __size_of_write_char 0019              __size_of_set_beep_threshhold 0023  
                     __size_of_write_byte 003B                           ??_date_settings 0053  
                    __size_of_ds1302_init 0015                               _incrementor 17A8  
                            _modulus_func 161E                          __size_of___awdiv 0067  
                        __size_of___awmod 0059                          __size_of___lwdiv 0044  
                        __size_of___lwmod 003A                                  _day_high 0029  
                         ___lwdiv@divisor 0076                           ___lwdiv@counter 007D  
                                __ptext10 1607                                  __ptext11 082E  
                                __ptext20 09B3                                  __ptext12 085C  
                                __ptext21 0A50                                  __ptext13 0C4A  
                                __ptext30 1630                                  __ptext22 1667  
                                __ptext14 0978                                  __ptext31 16BE  
                                __ptext23 177D                                  __ptext15 093E  
                                __ptext32 17D4                                  __ptext24 003F  
                                __ptext16 0904                                  __ptext33 1752  
                                __ptext25 0AB7                                  __ptext17 1642  
                                __ptext34 17A8                                  __ptext26 03D3  
                                __ptext18 16A8                                  __ptext35 161E  
                                __ptext27 16EE                                  __ptext19 08CA  
                                __ptext36 09F7                                  __ptext28 16D5  
                                __ptext37 167C                                  __ptext29 1692  
                     __end_of_time_read_1 0891                                ?_write_cmd 0070  
                                _lcd_init 172A                                  _get_temp 0C4A  
                                _get_time 082E                             _time_settings 00E5  
        __end_of_time_date_hex_terminator 1642                             __size_of_main 00ED  
                           __size_of_init 0009                             ?_delay_screen 0070  
                             _hrs_limiter 003F                                 set_time@i 0075  
                            ??_reset_temp 0074                                  _set_time 17D4  
              time_date_delimiter@limiter 0071              __size_of_set_lower_threshold 0039  
                              write_cmd@x 0072                     __size_of_time_write_1 002B  
                  __size_of_display_clock 00A6                            _buzzer_watcher 003C  
                             delay_temp@x 0072                               delay_temp@y 0070  
                             delay_temp@z 0073                            read_byte@value 0075  
             __end_of_time_date_delimiter 16D5                                  init_ram0 1658  
                           button_delay@i 0070                               ??_init_temp 0070  
                      __end_of_reset_temp 0978                               ??_read_byte 0074  
                          ?_time_settings 0070                              ?_decrementor 004E  
                        ___lwmod@dividend 0072                            ??_delay_screen 0070  
                            _time_write_1 1752                              ??_write_char 0072  
                            ??_write_byte 0074                                _OPTION_REG 0081  
                             _time_read_1 085C                              time_read_1@j 0072  
                         ___lwmod@divisor 0070                           ___lwmod@counter 0075  
                             ??_write_cmd 0072              __size_of_set_upper_threshold 003B  
                           _display_clock 0AB7                             time_write_1@j 0072  
                      __end_of_write_char 16EE                        __end_of_write_byte 09B3  
