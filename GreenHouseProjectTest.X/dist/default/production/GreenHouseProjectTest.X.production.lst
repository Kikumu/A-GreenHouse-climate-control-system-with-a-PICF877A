

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 02 09:59:26 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.10
    51                           ; Generated 31/07/2019 GMT
    52                           ; 
    53                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  018C                     	;# 
   263  018D                     	;# 
   264  0000                     	;# 
   265  0001                     	;# 
   266  0002                     	;# 
   267  0003                     	;# 
   268  0004                     	;# 
   269  0005                     	;# 
   270  0006                     	;# 
   271  0007                     	;# 
   272  0008                     	;# 
   273  0009                     	;# 
   274  000A                     	;# 
   275  000B                     	;# 
   276  000C                     	;# 
   277  000D                     	;# 
   278  000E                     	;# 
   279  000E                     	;# 
   280  000F                     	;# 
   281  0010                     	;# 
   282  0011                     	;# 
   283  0012                     	;# 
   284  0013                     	;# 
   285  0014                     	;# 
   286  0015                     	;# 
   287  0015                     	;# 
   288  0016                     	;# 
   289  0017                     	;# 
   290  0018                     	;# 
   291  0019                     	;# 
   292  001A                     	;# 
   293  001B                     	;# 
   294  001B                     	;# 
   295  001C                     	;# 
   296  001D                     	;# 
   297  001E                     	;# 
   298  001F                     	;# 
   299  0081                     	;# 
   300  0085                     	;# 
   301  0086                     	;# 
   302  0087                     	;# 
   303  0088                     	;# 
   304  0089                     	;# 
   305  008C                     	;# 
   306  008D                     	;# 
   307  008E                     	;# 
   308  0091                     	;# 
   309  0092                     	;# 
   310  0093                     	;# 
   311  0094                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009C                     	;# 
   315  009D                     	;# 
   316  009E                     	;# 
   317  009F                     	;# 
   318  010C                     	;# 
   319  010D                     	;# 
   320  010E                     	;# 
   321  010F                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  0091                     	;# 
   369  0092                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  010C                     	;# 
   379  010D                     	;# 
   380  010E                     	;# 
   381  010F                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0094                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0088                     	;# 
   484  0089                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0094                     	;# 
   492  0098                     	;# 
   493  0099                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010D                     	;# 
   500  010E                     	;# 
   501  010F                     	;# 
   502  018C                     	;# 
   503  018D                     	;# 
   504                           
   505                           	psect	idataBANK0
   506  08E0                     __pidataBANK0:	
   507                           
   508                           ;initializer for _table
   509  08E0  3400               	retlw	0
   510  08E1  3400               	retlw	0
   511  08E2  3440               	retlw	64
   512  08E3  3424               	retlw	36
   513  08E4  3411               	retlw	17
   514  08E5  3406               	retlw	6
   515  08E6  3409               	retlw	9
   516  08E7  3400               	retlw	0
   517  0009                     _PORTE	set	9
   518  0008                     _PORTD	set	8
   519  003E                     _RC6	set	62
   520  003F                     _RC7	set	63
   521  003C                     _RC4	set	60
   522  003B                     _RC3	set	59
   523  003A                     _RC2	set	58
   524  0039                     _RC1	set	57
   525  0038                     _RC0	set	56
   526  0049                     _RE1	set	73
   527  0034                     _RB4	set	52
   528  0031                     _RB1	set	49
   529  0035                     _RB5	set	53
   530  0030                     _RB0	set	48
   531  0048                     _RE0	set	72
   532  002B                     _RA3	set	43
   533  002C                     _RA4	set	44
   534  002D                     _RA5	set	45
   535  002A                     _RA2	set	42
   536  0028                     _RA0	set	40
   537  0087                     _TRISC	set	135
   538  0085                     _TRISA	set	133
   539  0089                     _TRISE	set	137
   540  0081                     _OPTION_REG	set	129
   541  0088                     _TRISD	set	136
   542  009F                     _ADCON1	set	159
   543  0086                     _TRISB	set	134
   544  0434                     _TRISB4	set	1076
   545  0448                     _TRISE0	set	1096
   546  0428                     _TRISA0	set	1064
   547                           
   548                           ; #config settings
   549  0000                     
   550                           	psect	cinit
   551  07E6                     start_initialization:	
   552  07E6                     __initialization:	
   553                           
   554                           ; Initialize objects allocated to BANK0
   555  07E6  1383               	bcf	3,7	;select IRP bank0
   556  07E7  3056               	movlw	low (__pdataBANK0+8)
   557  07E8  00FD               	movwf	btemp+-1
   558  07E9  3008               	movlw	high __pidataBANK0
   559  07EA  00FE               	movwf	btemp
   560  07EB  30E0               	movlw	low __pidataBANK0
   561  07EC  00FF               	movwf	btemp+1
   562  07ED  304E               	movlw	low __pdataBANK0
   563  07EE  0084               	movwf	4
   564  07EF  120A  158A  2139  120A  118A  	fcall	init_ram0
   565                           
   566                           ; Clear objects allocated to BANK0
   567  07F4  3020               	movlw	low __pbssBANK0
   568  07F5  0084               	movwf	4
   569  07F6  3044               	movlw	low (__pbssBANK0+36)
   570  07F7  120A  158A  20D8  120A  118A  	fcall	clear_ram0
   571  07FC                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574  07FC                     __end_of__initialization:	
   575  07FC  0183               	clrf	3
   576  07FD  120A  158A  2E0D   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssBANK0
   579  0020                     __pbssBANK0:	
   580  0020                     _table1:	
   581  0020                     	ds	7
   582  0027                     _z:	
   583  0027                     	ds	2
   584  0029                     _y:	
   585  0029                     	ds	2
   586  002B                     _x:	
   587  002B                     	ds	2
   588  002D                     _w:	
   589  002D                     	ds	2
   590  002F                     _t:	
   591  002F                     	ds	2
   592  0031                     _wd:	
   593  0031                     	ds	2
   594  0033                     read_byte@j:	
   595  0033                     	ds	1
   596  0034                     _var2:	
   597  0034                     	ds	1
   598  0035                     _var1:	
   599  0035                     	ds	1
   600  0036                     _hrs_limiter:	
   601  0036                     	ds	1
   602  0037                     _c:	
   603  0037                     	ds	1
   604  0038                     _b:	
   605  0038                     	ds	1
   606  0039                     _a:	
   607  0039                     	ds	1
   608  003A                     _wanfen:	
   609  003A                     	ds	1
   610  003B                     _qianfen:	
   611  003B                     	ds	1
   612  003C                     _baifen:	
   613  003C                     	ds	1
   614  003D                     _shifen:	
   615  003D                     	ds	1
   616  003E                     _ge:	
   617  003E                     	ds	1
   618  003F                     _shi:	
   619  003F                     	ds	1
   620  0040                     _TX:	
   621  0040                     	ds	1
   622  0041                     _TZ:	
   623  0041                     	ds	1
   624  0042                     _THV:	
   625  0042                     	ds	1
   626  0043                     _TLV:	
   627  0043                     	ds	1
   628                           
   629                           	psect	dataBANK0
   630  004E                     __pdataBANK0:	
   631  004E                     _table:	
   632  004E                     	ds	8
   633                           
   634                           	psect	inittext
   635  0935                     init_fetch0:	
   636                           ;	Called with low address in FSR and high address in W
   637                           
   638  0935  087E               	movf	btemp,w
   639  0936  008A               	movwf	10
   640  0937  087F               	movf	btemp+1,w
   641  0938  0082               	movwf	2
   642  0939                     init_ram0:	
   643                           ;Called with:
   644                           ;	high address of idata address in btemp 
   645                           ;	low address of idata address in btemp+1 
   646                           ;	low address of data in FSR
   647                           ;	high address + 1 of data in btemp-1
   648                           
   649  0939  120A  158A  2135  120A  158A  	fcall	init_fetch0
   650  093E  0080               	movwf	0
   651  093F  0A84               	incf	4,f
   652  0940  0804               	movf	4,w
   653  0941  067D               	xorwf	btemp+-1,w
   654  0942  1903               	btfsc	3,2
   655  0943  3400               	retlw	0
   656  0944  0AFF               	incf	btemp+1,f
   657  0945  1903               	btfsc	3,2
   658  0946  0AFE               	incf	btemp,f
   659  0947  2939               	goto	init_ram0
   660                           
   661                           	psect	clrtext
   662  08D8                     clear_ram0:	
   663                           ;	Called with FSR containing the base address, and
   664                           ;	W with the last address+1
   665                           
   666  08D8  0064               	clrwdt	;clear the watchdog before getting into this loop
   667  08D9                     clrloop0:	
   668  08D9  0180               	clrf	0	;clear RAM location pointed to by FSR
   669  08DA  0A84               	incf	4,f	;increment pointer
   670  08DB  0604               	xorwf	4,w	;XOR with final address
   671  08DC  1903               	btfsc	3,2	;have we reached the end yet?
   672  08DD  3400               	retlw	0	;all done for this memory range, return
   673  08DE  0604               	xorwf	4,w	;XOR again to restore value
   674  08DF  28D9               	goto	clrloop0	;do the next byte
   675                           
   676                           	psect	cstackCOMMON
   677  0070                     __pcstackCOMMON:	
   678  0070                     ?_init_temp:	
   679  0070                     ??_init_temp:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_set_time:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_ds1302_init:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_init:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_lcd_init:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_initialise_buttons:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ??_initialise_buttons:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_get_temp:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_get_time:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_write_cmd:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_write_char:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_display_temp:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?_display_date:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_display_clock:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_thermometer_threshhold_settings:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?_date_settings:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_time_settings:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_delay_screen:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_delay_screen:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_delay_temp:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_delay2:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ??_delay2:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_time_write_1:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ??_time_write_1:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ?_time_read_1:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ??_time_read_1:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_button_delay:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ??_button_delay:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_time_date_hex_terminator:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_time_date_delimiter:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ?_main:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_reset_temp:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?_write_byte:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0070                     ?_read_byte:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0070                     ?_set_beep_threshhold:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0070                     ?___awdiv:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?___awmod:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     ?___lwmod:	
   794                           ; 2 bytes @ 0x0
   795                           
   796  0070                     delay_temp@y:	
   797                           ; 2 bytes @ 0x0
   798                           
   799  0070                     set_beep_threshhold@y:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     time_date_delimiter@hex:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     time_date_hex_terminator@limiter:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     delay_screen@i:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     delay2@i:	
   812                           ; 2 bytes @ 0x0
   813                           
   814  0070                     button_delay@i:	
   815                           ; 2 bytes @ 0x0
   816                           
   817  0070                     ___awdiv@divisor:	
   818                           ; 2 bytes @ 0x0
   819                           
   820  0070                     ___awmod@divisor:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0070                     ___lwmod@divisor:	
   824                           ; 2 bytes @ 0x0
   825                           
   826                           
   827                           ; 2 bytes @ 0x0
   828  0070                     	ds	1
   829  0071                     ??_delay_temp:	
   830  0071                     ??_time_date_hex_terminator:	
   831                           ; 1 bytes @ 0x1
   832                           
   833  0071                     ??_set_beep_threshhold:	
   834                           ; 1 bytes @ 0x1
   835                           
   836  0071                     time_date_delimiter@limiter:	
   837                           ; 1 bytes @ 0x1
   838                           
   839                           
   840                           ; 1 bytes @ 0x1
   841  0071                     	ds	1
   842  0072                     ??_write_cmd:	
   843  0072                     ??_write_char:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0072                     ??_time_date_delimiter:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     write_char@x:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     write_cmd@x:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0072                     delay_temp@x:	
   856                           ; 1 bytes @ 0x2
   857                           
   858  0072                     time_write_1@j:	
   859                           ; 1 bytes @ 0x2
   860                           
   861  0072                     time_read_1@j:	
   862                           ; 2 bytes @ 0x2
   863                           
   864  0072                     ___awdiv@dividend:	
   865                           ; 2 bytes @ 0x2
   866                           
   867  0072                     ___awmod@dividend:	
   868                           ; 2 bytes @ 0x2
   869                           
   870  0072                     ___lwmod@dividend:	
   871                           ; 2 bytes @ 0x2
   872                           
   873                           
   874                           ; 2 bytes @ 0x2
   875  0072                     	ds	1
   876  0073                     ??_lcd_init:	
   877  0073                     ??_display_temp:	
   878                           ; 1 bytes @ 0x3
   879                           
   880  0073                     ??_display_date:	
   881                           ; 1 bytes @ 0x3
   882                           
   883  0073                     ??_display_clock:	
   884                           ; 1 bytes @ 0x3
   885                           
   886  0073                     delay_temp@z:	
   887                           ; 1 bytes @ 0x3
   888                           
   889  0073                     set_beep_threshhold@x:	
   890                           ; 1 bytes @ 0x3
   891                           
   892  0073                     time_date_hex_terminator@val:	
   893                           ; 1 bytes @ 0x3
   894                           
   895                           
   896                           ; 1 bytes @ 0x3
   897  0073                     	ds	1
   898  0074                     ??_reset_temp:	
   899  0074                     ??_write_byte:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0074                     ??_read_byte:	
   903                           ; 1 bytes @ 0x4
   904                           
   905  0074                     ??___awdiv:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0074                     ??___awmod:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     ??___lwmod:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     time_write_1@time_tx:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     time_read_1@time_rx:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     time_date_delimiter@val:	
   921                           ; 1 bytes @ 0x4
   922                           
   923                           
   924                           ; 1 bytes @ 0x4
   925  0074                     	ds	1
   926  0075                     ??_set_time:	
   927  0075                     ??_ds1302_init:	
   928                           ; 1 bytes @ 0x5
   929                           
   930  0075                     ??_get_time:	
   931                           ; 1 bytes @ 0x5
   932                           
   933  0075                     reset_temp@presence:	
   934                           ; 1 bytes @ 0x5
   935                           
   936  0075                     read_byte@value:	
   937                           ; 1 bytes @ 0x5
   938                           
   939  0075                     ___awdiv@counter:	
   940                           ; 1 bytes @ 0x5
   941                           
   942  0075                     ___awmod@counter:	
   943                           ; 1 bytes @ 0x5
   944                           
   945  0075                     ___lwmod@counter:	
   946                           ; 1 bytes @ 0x5
   947                           
   948  0075                     set_time@i:	
   949                           ; 1 bytes @ 0x5
   950                           
   951  0075                     display_clock@i:	
   952                           ; 2 bytes @ 0x5
   953                           
   954  0075                     display_date@i:	
   955                           ; 2 bytes @ 0x5
   956                           
   957                           
   958                           ; 2 bytes @ 0x5
   959  0075                     	ds	1
   960  0076                     ?___lwdiv:	
   961  0076                     write_byte@temp:	
   962                           ; 2 bytes @ 0x6
   963                           
   964  0076                     read_byte@i:	
   965                           ; 1 bytes @ 0x6
   966                           
   967  0076                     ___awdiv@sign:	
   968                           ; 1 bytes @ 0x6
   969                           
   970  0076                     ___awmod@sign:	
   971                           ; 1 bytes @ 0x6
   972                           
   973  0076                     get_time@i:	
   974                           ; 1 bytes @ 0x6
   975                           
   976  0076                     ___lwdiv@divisor:	
   977                           ; 2 bytes @ 0x6
   978                           
   979                           
   980                           ; 2 bytes @ 0x6
   981  0076                     	ds	1
   982  0077                     ?_modulus_func:	
   983  0077                     write_byte@val:	
   984                           ; 2 bytes @ 0x7
   985                           
   986  0077                     modulus_func@x:	
   987                           ; 1 bytes @ 0x7
   988                           
   989  0077                     ___awdiv@quotient:	
   990                           ; 2 bytes @ 0x7
   991                           
   992                           
   993                           ; 2 bytes @ 0x7
   994  0077                     	ds	1
   995  0078                     write_byte@i:	
   996  0078                     ___lwdiv@dividend:	
   997                           ; 1 bytes @ 0x8
   998                           
   999                           
  1000                           ; 2 bytes @ 0x8
  1001  0078                     	ds	1
  1002  0079                     modulus_func@y:	
  1003                           
  1004                           ; 2 bytes @ 0x9
  1005  0079                     	ds	1
  1006  007A                     ??___lwdiv:	
  1007                           
  1008                           ; 1 bytes @ 0xA
  1009  007A                     	ds	1
  1010  007B                     ??_date_settings:	
  1011  007B                     ??_modulus_func:	
  1012                           ; 1 bytes @ 0xB
  1013                           
  1014  007B                     ??_incrementor:	
  1015                           ; 1 bytes @ 0xB
  1016                           
  1017  007B                     ??_decrementor:	
  1018                           ; 1 bytes @ 0xB
  1019                           
  1020  007B                     ___lwdiv@quotient:	
  1021                           ; 1 bytes @ 0xB
  1022                           
  1023                           
  1024                           ; 2 bytes @ 0xB
  1025  007B                     	ds	2
  1026  007D                     ___lwdiv@counter:	
  1027                           
  1028                           ; 1 bytes @ 0xD
  1029  007D                     	ds	1
  1030  007E                     ??_main:	
  1031                           
  1032                           	psect	cstackBANK0
  1033  0044                     __pcstackBANK0:	
  1034                           ; 1 bytes @ 0xE
  1035                           
  1036  0044                     ??_get_temp:	
  1037  0044                     ?_incrementor:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0044                     ?_decrementor:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0044                     incrementor@upper_val:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0044                     decrementor@lower_val:	
  1047                           ; 2 bytes @ 0x0
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0x0
  1051  0044                     	ds	2
  1052  0046                     incrementor@lower_val:	
  1053  0046                     decrementor@upper_val:	
  1054                           ; 2 bytes @ 0x2
  1055                           
  1056                           
  1057                           ; 2 bytes @ 0x2
  1058  0046                     	ds	2
  1059  0048                     incrementor@z:	
  1060  0048                     decrementor@z:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063                           
  1064                           ; 1 bytes @ 0x4
  1065  0048                     	ds	1
  1066  0049                     ??_thermometer_threshhold_settings:	
  1067  0049                     ??_time_settings:	
  1068                           ; 1 bytes @ 0x5
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x5
  1072  0049                     	ds	3
  1073  004C                     thermometer_threshhold_settings@i:	
  1074                           
  1075                           ; 2 bytes @ 0x8
  1076  004C                     	ds	2
  1077                           
  1078                           	psect	maintext
  1079  0E0D                     __pmaintext:	
  1080 ;;
  1081 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1082 ;;
  1083 ;; *************** function _main *****************
  1084 ;; Defined at:
  1085 ;;		line 10 in file "mainLogic.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : B00/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels required when called:    4
  1105 ;; This function calls:
  1106 ;;		_date_settings
  1107 ;;		_display_clock
  1108 ;;		_display_date
  1109 ;;		_display_temp
  1110 ;;		_ds1302_init
  1111 ;;		_get_temp
  1112 ;;		_get_time
  1113 ;;		_init
  1114 ;;		_init_temp
  1115 ;;		_initialise_buttons
  1116 ;;		_lcd_init
  1117 ;;		_set_time
  1118 ;;		_thermometer_threshhold_settings
  1119 ;;		_time_settings
  1120 ;;		_write_char
  1121 ;;		_write_cmd
  1122 ;; This function is called by:
  1123 ;;		Startup code after reset
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _main
  1129  0E0D                     _main:	
  1130  0E0D                     l3256:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1133                           
  1134                           
  1135                           ;mainLogic.c: 11:     TRISB=0X02;
  1136  0E0D  3002               	movlw	2
  1137  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  1138  0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  1139  0E10  0086               	movwf	6	;volatile
  1140  0E11                     l3258:	
  1141                           
  1142                           ;mainLogic.c: 12:     init_temp();
  1143  0E11  120A  158A  20D1  120A  158A  	fcall	_init_temp
  1144  0E16                     l3260:	
  1145                           
  1146                           ;mainLogic.c: 13:     set_time();
  1147  0E16  120A  158A  2261  120A  158A  	fcall	_set_time
  1148  0E1B                     l3262:	
  1149                           
  1150                           ;mainLogic.c: 14:     ds1302_init();
  1151  0E1B  120A  158A  2148  120A  158A  	fcall	_ds1302_init
  1152  0E20                     l3264:	
  1153                           
  1154                           ;mainLogic.c: 16:     init();
  1155  0E20  120A  158A  20E8  120A  158A  	fcall	_init
  1156  0E25                     l3266:	
  1157                           
  1158                           ;mainLogic.c: 17:     lcd_init();
  1159  0E25  120A  118A  2003  120A  158A  	fcall	_lcd_init
  1160  0E2A                     l3268:	
  1161                           
  1162                           ;mainLogic.c: 18:     init_temp();
  1163  0E2A  120A  158A  20D1  120A  158A  	fcall	_init_temp
  1164  0E2F                     l3270:	
  1165                           
  1166                           ;mainLogic.c: 19:     initialise_buttons();
  1167  0E2F  120A  158A  20F1  120A  158A  	fcall	_initialise_buttons
  1168  0E34                     l3272:	
  1169                           
  1170                           ;mainLogic.c: 22:     get_temp();
  1171  0E34  120A  158A  26D2  120A  158A  	fcall	_get_temp
  1172  0E39                     l3274:	
  1173                           
  1174                           ;mainLogic.c: 23:     get_time();
  1175  0E39  120A  158A  22E5  120A  158A  	fcall	_get_time
  1176  0E3E                     l3276:	
  1177                           
  1178                           ;mainLogic.c: 24:     write_cmd(0x80);
  1179  0E3E  3080               	movlw	128
  1180  0E3F  120A  158A  21CF  120A  158A  	fcall	_write_cmd
  1181  0E44                     l3278:	
  1182                           
  1183                           ;mainLogic.c: 25:     write_char('T');
  1184  0E44  3054               	movlw	84
  1185  0E45  120A  158A  21B6  120A  158A  	fcall	_write_char
  1186  0E4A                     l3280:	
  1187                           
  1188                           ;mainLogic.c: 26:     write_char('e');
  1189  0E4A  3065               	movlw	101
  1190  0E4B  120A  158A  21B6  120A  158A  	fcall	_write_char
  1191  0E50                     l3282:	
  1192                           
  1193                           ;mainLogic.c: 27:     write_char('m');
  1194  0E50  306D               	movlw	109
  1195  0E51  120A  158A  21B6  120A  158A  	fcall	_write_char
  1196  0E56                     l3284:	
  1197                           
  1198                           ;mainLogic.c: 28:     write_char('p');
  1199  0E56  3070               	movlw	112
  1200  0E57  120A  158A  21B6  120A  158A  	fcall	_write_char
  1201  0E5C                     l3286:	
  1202                           
  1203                           ;mainLogic.c: 29:     write_char(':');
  1204  0E5C  303A               	movlw	58
  1205  0E5D  120A  158A  21B6  120A  158A  	fcall	_write_char
  1206  0E62                     l3288:	
  1207                           
  1208                           ;mainLogic.c: 30:     display_temp();
  1209  0E62  120A  158A  2236  120A  158A  	fcall	_display_temp
  1210  0E67                     l3290:	
  1211                           
  1212                           ;mainLogic.c: 32:     write_cmd(0x90);
  1213  0E67  3090               	movlw	144
  1214  0E68  120A  158A  21CF  120A  158A  	fcall	_write_cmd
  1215  0E6D                     l3292:	
  1216                           
  1217                           ;mainLogic.c: 33:     write_char('D');
  1218  0E6D  3044               	movlw	68
  1219  0E6E  120A  158A  21B6  120A  158A  	fcall	_write_char
  1220  0E73                     l3294:	
  1221                           
  1222                           ;mainLogic.c: 34:     write_char('a');
  1223  0E73  3061               	movlw	97
  1224  0E74  120A  158A  21B6  120A  158A  	fcall	_write_char
  1225  0E79                     l3296:	
  1226                           
  1227                           ;mainLogic.c: 35:     write_char('t');
  1228  0E79  3074               	movlw	116
  1229  0E7A  120A  158A  21B6  120A  158A  	fcall	_write_char
  1230  0E7F                     l3298:	
  1231                           
  1232                           ;mainLogic.c: 36:     write_char('e');
  1233  0E7F  3065               	movlw	101
  1234  0E80  120A  158A  21B6  120A  158A  	fcall	_write_char
  1235  0E85                     l3300:	
  1236                           
  1237                           ;mainLogic.c: 37:     write_char(':');
  1238  0E85  303A               	movlw	58
  1239  0E86  120A  158A  21B6  120A  158A  	fcall	_write_char
  1240  0E8B                     l3302:	
  1241                           
  1242                           ;mainLogic.c: 38:     write_char(' ');
  1243  0E8B  3020               	movlw	32
  1244  0E8C  120A  158A  21B6  120A  158A  	fcall	_write_char
  1245  0E91                     l3304:	
  1246                           
  1247                           ;mainLogic.c: 40:     display_date();
  1248  0E91  120A  158A  24CE  120A  158A  	fcall	_display_date
  1249  0E96                     l3306:	
  1250                           
  1251                           ;mainLogic.c: 42:     write_cmd(0x88);
  1252  0E96  3088               	movlw	136
  1253  0E97  120A  158A  21CF  120A  158A  	fcall	_write_cmd
  1254  0E9C                     l3308:	
  1255                           
  1256                           ;mainLogic.c: 43:     write_char('T');
  1257  0E9C  3054               	movlw	84
  1258  0E9D  120A  158A  21B6  120A  158A  	fcall	_write_char
  1259  0EA2                     l3310:	
  1260                           
  1261                           ;mainLogic.c: 44:     write_char('i');
  1262  0EA2  3069               	movlw	105
  1263  0EA3  120A  158A  21B6  120A  158A  	fcall	_write_char
  1264  0EA8                     l3312:	
  1265                           
  1266                           ;mainLogic.c: 45:     write_char('m');
  1267  0EA8  306D               	movlw	109
  1268  0EA9  120A  158A  21B6  120A  158A  	fcall	_write_char
  1269  0EAE                     l3314:	
  1270                           
  1271                           ;mainLogic.c: 46:     write_char('e');
  1272  0EAE  3065               	movlw	101
  1273  0EAF  120A  158A  21B6  120A  158A  	fcall	_write_char
  1274  0EB4                     l3316:	
  1275                           
  1276                           ;mainLogic.c: 47:     write_char(':');
  1277  0EB4  303A               	movlw	58
  1278  0EB5  120A  158A  21B6  120A  158A  	fcall	_write_char
  1279  0EBA                     l3318:	
  1280                           
  1281                           ;mainLogic.c: 48:     display_clock();
  1282  0EBA  120A  158A  2567  120A  158A  	fcall	_display_clock
  1283  0EBF                     l3320:	
  1284                           
  1285                           ;mainLogic.c: 49:     thermometer_threshhold_settings();
  1286  0EBF  120A  118A  225C  120A  158A  	fcall	_thermometer_threshhold_settings
  1287  0EC4                     l3322:	
  1288                           
  1289                           ;mainLogic.c: 50:     date_settings();
  1290  0EC4  120A  118A  2092  120A  158A  	fcall	_date_settings
  1291  0EC9                     l3324:	
  1292                           
  1293                           ;mainLogic.c: 51:     time_settings();
  1294  0EC9  120A  118A  24F8  120A  158A  	fcall	_time_settings
  1295  0ECE  2E34               	goto	l3272
  1296  0ECF  120A  118A  2800   	ljmp	start
  1297  0ED2                     __end_of_main:	
  1298                           
  1299                           	psect	text1
  1300  04F8                     __ptext1:	
  1301 ;; *************** function _time_settings *****************
  1302 ;; Defined at:
  1303 ;;		line 163 in file "Button_src.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0
  1319 ;;      Temps:          0       3       0       0       0
  1320 ;;      Totals:         0       3       0       0       0
  1321 ;;Total ram usage:        3 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    3
  1324 ;; This function calls:
  1325 ;;		_button_delay
  1326 ;;		_incrementor
  1327 ;;		_modulus_func
  1328 ;;		_set_time
  1329 ;;		_time_date_delimiter
  1330 ;;		_time_date_hex_terminator
  1331 ;;		_write_char
  1332 ;;		_write_cmd
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _time_settings
  1340  04F8                     _time_settings:	
  1341  04F8                     l3088:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _time_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1344                           
  1345                           
  1346                           ;Button_src.c: 164:  RC0 = 1;
  1347  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1348  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1349  04FA  1407               	bsf	7,0	;volatile
  1350                           
  1351                           ;Button_src.c: 165:  RC1 = 1;
  1352  04FB  1487               	bsf	7,1	;volatile
  1353                           
  1354                           ;Button_src.c: 166:  RC2 = 0;
  1355  04FC  1107               	bcf	7,2	;volatile
  1356                           
  1357                           ;Button_src.c: 167:  RC3 = 1;
  1358  04FD  1587               	bsf	7,3	;volatile
  1359                           
  1360                           ;Button_src.c: 168:   if (RC4 == 0){
  1361  04FE  1A07               	btfsc	7,4	;volatile
  1362  04FF  2D01               	goto	u1921
  1363  0500  2D02               	goto	u1920
  1364  0501                     u1921:	
  1365  0501  2FE5               	goto	l452
  1366  0502                     u1920:	
  1367  0502                     l3090:	
  1368                           
  1369                           ;Button_src.c: 169:       write_cmd(0x1);
  1370  0502  3001               	movlw	1
  1371  0503  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  1372  0508                     l445:	
  1373                           ;Button_src.c: 170:       for(;;){
  1374                           
  1375                           
  1376                           ;Button_src.c: 171:             write_cmd(0x80);
  1377  0508  3080               	movlw	128
  1378  0509  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  1379                           
  1380                           ;Button_src.c: 172:             write_char('T');
  1381  050E  3054               	movlw	84
  1382  050F  120A  158A  21B6  120A  118A  	fcall	_write_char
  1383                           
  1384                           ;Button_src.c: 173:             write_char('i');
  1385  0514  3069               	movlw	105
  1386  0515  120A  158A  21B6  120A  118A  	fcall	_write_char
  1387                           
  1388                           ;Button_src.c: 174:             write_char('m');
  1389  051A  306D               	movlw	109
  1390  051B  120A  158A  21B6  120A  118A  	fcall	_write_char
  1391                           
  1392                           ;Button_src.c: 175:             write_char('e');
  1393  0520  3065               	movlw	101
  1394  0521  120A  158A  21B6  120A  118A  	fcall	_write_char
  1395                           
  1396                           ;Button_src.c: 176:             write_char('_');
  1397  0526  305F               	movlw	95
  1398  0527  120A  158A  21B6  120A  118A  	fcall	_write_char
  1399                           
  1400                           ;Button_src.c: 177:             write_char('S');
  1401  052C  3053               	movlw	83
  1402  052D  120A  158A  21B6  120A  118A  	fcall	_write_char
  1403                           
  1404                           ;Button_src.c: 178:             write_char('e');
  1405  0532  3065               	movlw	101
  1406  0533  120A  158A  21B6  120A  118A  	fcall	_write_char
  1407                           
  1408                           ;Button_src.c: 179:             write_char('t');
  1409  0538  3074               	movlw	116
  1410  0539  120A  158A  21B6  120A  118A  	fcall	_write_char
  1411                           
  1412                           ;Button_src.c: 180:             write_char('t');
  1413  053E  3074               	movlw	116
  1414  053F  120A  158A  21B6  120A  118A  	fcall	_write_char
  1415                           
  1416                           ;Button_src.c: 181:             write_char('i');
  1417  0544  3069               	movlw	105
  1418  0545  120A  158A  21B6  120A  118A  	fcall	_write_char
  1419                           
  1420                           ;Button_src.c: 182:             write_char('n');
  1421  054A  306E               	movlw	110
  1422  054B  120A  158A  21B6  120A  118A  	fcall	_write_char
  1423                           
  1424                           ;Button_src.c: 183:             write_char('g');
  1425  0550  3067               	movlw	103
  1426  0551  120A  158A  21B6  120A  118A  	fcall	_write_char
  1427                           
  1428                           ;Button_src.c: 184:             write_char('s');
  1429  0556  3073               	movlw	115
  1430  0557  120A  158A  21B6  120A  118A  	fcall	_write_char
  1431  055C                     l3092:	
  1432                           
  1433                           ;Button_src.c: 186:             RC0 = 1;
  1434  055C  1283               	bcf	3,5	;RP0=0, select bank0
  1435  055D  1303               	bcf	3,6	;RP1=0, select bank0
  1436  055E  1407               	bsf	7,0	;volatile
  1437  055F                     l3094:	
  1438                           
  1439                           ;Button_src.c: 187:             RC1 = 0;
  1440  055F  1087               	bcf	7,1	;volatile
  1441  0560                     l3096:	
  1442                           
  1443                           ;Button_src.c: 188:             RC2 = 1;
  1444  0560  1507               	bsf	7,2	;volatile
  1445  0561                     l3098:	
  1446                           
  1447                           ;Button_src.c: 189:             RC3 = 1;
  1448  0561  1587               	bsf	7,3	;volatile
  1449  0562                     l3100:	
  1450                           
  1451                           ;Button_src.c: 191:             if(RC7 == 0 && b =='x'){
  1452  0562  1B87               	btfsc	7,7	;volatile
  1453  0563  2D65               	goto	u1931
  1454  0564  2D66               	goto	u1930
  1455  0565                     u1931:	
  1456  0565  2DC8               	goto	l3122
  1457  0566                     u1930:	
  1458  0566                     l3102:	
  1459  0566  3078               	movlw	120
  1460  0567  0638               	xorwf	_b,w
  1461  0568  1D03               	btfss	3,2
  1462  0569  2D6B               	goto	u1941
  1463  056A  2D6C               	goto	u1940
  1464  056B                     u1941:	
  1465  056B  2DC8               	goto	l3122
  1466  056C                     u1940:	
  1467  056C                     l3104:	
  1468                           
  1469                           ;Button_src.c: 192:                     a++;
  1470  056C  3001               	movlw	1
  1471  056D  00C9               	movwf	??_time_settings
  1472  056E  0849               	movf	??_time_settings,w
  1473  056F  07B9               	addwf	_a,f
  1474  0570                     l3106:	
  1475                           
  1476                           ;Button_src.c: 193:                     x++ ;
  1477  0570  3001               	movlw	1
  1478  0571  07AB               	addwf	_x,f
  1479  0572  1803               	skipnc
  1480  0573  0AAC               	incf	_x+1,f
  1481  0574  3000               	movlw	0
  1482  0575  07AC               	addwf	_x+1,f
  1483  0576                     l3108:	
  1484                           
  1485                           ;Button_src.c: 194:                     x = modulus_func(x,10);
  1486  0576  082C               	movf	_x+1,w
  1487  0577  00F8               	movwf	modulus_func@x+1
  1488  0578  082B               	movf	_x,w
  1489  0579  00F7               	movwf	modulus_func@x
  1490  057A  300A               	movlw	10
  1491  057B  00F9               	movwf	modulus_func@y
  1492  057C  3000               	movlw	0
  1493  057D  00FA               	movwf	modulus_func@y+1
  1494  057E  120A  158A  20FF  120A  118A  	fcall	_modulus_func
  1495  0583  0878               	movf	?_modulus_func+1,w
  1496  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1497  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0586  00AC               	movwf	_x+1
  1499  0587  0877               	movf	?_modulus_func,w
  1500  0588  00AB               	movwf	_x
  1501  0589                     l3110:	
  1502                           
  1503                           ;Button_src.c: 195:                     y = incrementor(y,x,'9');
  1504  0589  082A               	movf	_y+1,w
  1505  058A  00C5               	movwf	incrementor@upper_val+1
  1506  058B  0829               	movf	_y,w
  1507  058C  00C4               	movwf	incrementor@upper_val
  1508  058D  082C               	movf	_x+1,w
  1509  058E  00C7               	movwf	incrementor@lower_val+1
  1510  058F  082B               	movf	_x,w
  1511  0590  00C6               	movwf	incrementor@lower_val
  1512  0591  3039               	movlw	57
  1513  0592  00C9               	movwf	??_time_settings
  1514  0593  0849               	movf	??_time_settings,w
  1515  0594  00C8               	movwf	incrementor@z
  1516  0595  120A  158A  22B9  120A  118A  	fcall	_incrementor
  1517  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1518  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1519  059C  00CA               	movwf	??_time_settings+1
  1520  059D  01CB               	clrf	??_time_settings+2
  1521  059E  084A               	movf	??_time_settings+1,w
  1522  059F  00A9               	movwf	_y
  1523  05A0  084B               	movf	??_time_settings+2,w
  1524  05A1  00AA               	movwf	_y+1
  1525  05A2                     l3112:	
  1526                           
  1527                           ;Button_src.c: 197:                     a = time_date_hex_terminator(a,'T');
  1528  05A2  3054               	movlw	84
  1529  05A3  00C9               	movwf	??_time_settings
  1530  05A4  0849               	movf	??_time_settings,w
  1531  05A5  00F0               	movwf	time_date_hex_terminator@limiter
  1532  05A6  0839               	movf	_a,w
  1533  05A7  120A  158A  2123  120A  118A  	fcall	_time_date_hex_terminator
  1534  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1535  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1536  05AE  00CA               	movwf	??_time_settings+1
  1537  05AF  084A               	movf	??_time_settings+1,w
  1538  05B0  00B9               	movwf	_a
  1539  05B1                     l3114:	
  1540                           
  1541                           ;Button_src.c: 198:                     if(y == 2 && x == 4){
  1542  05B1  3002               	movlw	2
  1543  05B2  0629               	xorwf	_y,w
  1544  05B3  042A               	iorwf	_y+1,w
  1545  05B4  1D03               	btfss	3,2
  1546  05B5  2DB7               	goto	u1951
  1547  05B6  2DB8               	goto	u1950
  1548  05B7                     u1951:	
  1549  05B7  2DC3               	goto	l3120
  1550  05B8                     u1950:	
  1551  05B8                     l3116:	
  1552  05B8  3004               	movlw	4
  1553  05B9  062B               	xorwf	_x,w
  1554  05BA  042C               	iorwf	_x+1,w
  1555  05BB  1D03               	btfss	3,2
  1556  05BC  2DBE               	goto	u1961
  1557  05BD  2DBF               	goto	u1960
  1558  05BE                     u1961:	
  1559  05BE  2DC3               	goto	l3120
  1560  05BF                     u1960:	
  1561  05BF                     l3118:	
  1562                           
  1563                           ;Button_src.c: 199:                         x = 0;
  1564  05BF  01AB               	clrf	_x
  1565  05C0  01AC               	clrf	_x+1
  1566                           
  1567                           ;Button_src.c: 200:                         y = 0;
  1568  05C1  01A9               	clrf	_y
  1569  05C2  01AA               	clrf	_y+1
  1570  05C3                     l3120:	
  1571                           
  1572                           ;Button_src.c: 202:                     button_delay();
  1573  05C3  120A  158A  215D  120A  118A  	fcall	_button_delay
  1574  05C8                     l3122:	
  1575                           
  1576                           ;Button_src.c: 204:             if(RC7==0 && b == 'y'){
  1577  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1578  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1579  05CA  1B87               	btfsc	7,7	;volatile
  1580  05CB  2DCD               	goto	u1971
  1581  05CC  2DCE               	goto	u1970
  1582  05CD                     u1971:	
  1583  05CD  2E21               	goto	l3144
  1584  05CE                     u1970:	
  1585  05CE                     l3124:	
  1586  05CE  3079               	movlw	121
  1587  05CF  0638               	xorwf	_b,w
  1588  05D0  1D03               	btfss	3,2
  1589  05D1  2DD3               	goto	u1981
  1590  05D2  2DD4               	goto	u1980
  1591  05D3                     u1981:	
  1592  05D3  2E21               	goto	l3144
  1593  05D4                     u1980:	
  1594  05D4                     l3126:	
  1595                           
  1596                           ;Button_src.c: 205:                     c++;
  1597  05D4  3001               	movlw	1
  1598  05D5  00C9               	movwf	??_time_settings
  1599  05D6  0849               	movf	??_time_settings,w
  1600  05D7  07B7               	addwf	_c,f
  1601  05D8                     l3128:	
  1602                           
  1603                           ;Button_src.c: 206:                     t++;
  1604  05D8  3001               	movlw	1
  1605  05D9  07AF               	addwf	_t,f
  1606  05DA  1803               	skipnc
  1607  05DB  0AB0               	incf	_t+1,f
  1608  05DC  3000               	movlw	0
  1609  05DD  07B0               	addwf	_t+1,f
  1610  05DE                     l3130:	
  1611                           
  1612                           ;Button_src.c: 207:                     t = modulus_func(t,10);
  1613  05DE  0830               	movf	_t+1,w
  1614  05DF  00F8               	movwf	modulus_func@x+1
  1615  05E0  082F               	movf	_t,w
  1616  05E1  00F7               	movwf	modulus_func@x
  1617  05E2  300A               	movlw	10
  1618  05E3  00F9               	movwf	modulus_func@y
  1619  05E4  3000               	movlw	0
  1620  05E5  00FA               	movwf	modulus_func@y+1
  1621  05E6  120A  158A  20FF  120A  118A  	fcall	_modulus_func
  1622  05EB  0878               	movf	?_modulus_func+1,w
  1623  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1624  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1625  05EE  00B0               	movwf	_t+1
  1626  05EF  0877               	movf	?_modulus_func,w
  1627  05F0  00AF               	movwf	_t
  1628  05F1                     l3132:	
  1629                           
  1630                           ;Button_src.c: 208:                     w = incrementor(w,t,'9');
  1631  05F1  082E               	movf	_w+1,w
  1632  05F2  00C5               	movwf	incrementor@upper_val+1
  1633  05F3  082D               	movf	_w,w
  1634  05F4  00C4               	movwf	incrementor@upper_val
  1635  05F5  0830               	movf	_t+1,w
  1636  05F6  00C7               	movwf	incrementor@lower_val+1
  1637  05F7  082F               	movf	_t,w
  1638  05F8  00C6               	movwf	incrementor@lower_val
  1639  05F9  3039               	movlw	57
  1640  05FA  00C9               	movwf	??_time_settings
  1641  05FB  0849               	movf	??_time_settings,w
  1642  05FC  00C8               	movwf	incrementor@z
  1643  05FD  120A  158A  22B9  120A  118A  	fcall	_incrementor
  1644  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0604  00CA               	movwf	??_time_settings+1
  1647  0605  01CB               	clrf	??_time_settings+2
  1648  0606  084A               	movf	??_time_settings+1,w
  1649  0607  00AD               	movwf	_w
  1650  0608  084B               	movf	??_time_settings+2,w
  1651  0609  00AE               	movwf	_w+1
  1652  060A                     l3134:	
  1653                           
  1654                           ;Button_src.c: 209:                     if(c == (0x59 + 1)){
  1655  060A  305A               	movlw	90
  1656  060B  0637               	xorwf	_c,w
  1657  060C  1D03               	btfss	3,2
  1658  060D  2E0F               	goto	u1991
  1659  060E  2E10               	goto	u1990
  1660  060F                     u1991:	
  1661  060F  2E11               	goto	l3138
  1662  0610                     u1990:	
  1663  0610                     l3136:	
  1664                           
  1665                           ;Button_src.c: 210:                         c = 0x00;
  1666  0610  01B7               	clrf	_c
  1667  0611                     l3138:	
  1668                           
  1669                           ;Button_src.c: 212:                     if(w == 6){
  1670  0611  3006               	movlw	6
  1671  0612  062D               	xorwf	_w,w
  1672  0613  042E               	iorwf	_w+1,w
  1673  0614  1D03               	btfss	3,2
  1674  0615  2E17               	goto	u2001
  1675  0616  2E18               	goto	u2000
  1676  0617                     u2001:	
  1677  0617  2E1C               	goto	l3142
  1678  0618                     u2000:	
  1679  0618                     l3140:	
  1680                           
  1681                           ;Button_src.c: 213:                         w = 0;
  1682  0618  01AD               	clrf	_w
  1683  0619  01AE               	clrf	_w+1
  1684                           
  1685                           ;Button_src.c: 214:                         t = 0;
  1686  061A  01AF               	clrf	_t
  1687  061B  01B0               	clrf	_t+1
  1688  061C                     l3142:	
  1689                           
  1690                           ;Button_src.c: 216:                     button_delay();
  1691  061C  120A  158A  215D  120A  118A  	fcall	_button_delay
  1692  0621                     l3144:	
  1693                           
  1694                           ;Button_src.c: 219:              write_cmd(0x88);
  1695  0621  3088               	movlw	136
  1696  0622  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  1697  0627                     l3146:	
  1698                           
  1699                           ;Button_src.c: 220:                     table[2] = a;
  1700  0627  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0628  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0629  0839               	movf	_a,w
  1703  062A  00C9               	movwf	??_time_settings
  1704  062B  0849               	movf	??_time_settings,w
  1705  062C  00D0               	movwf	_table+2
  1706  062D                     l3148:	
  1707                           
  1708                           ;Button_src.c: 221:                     table[1] = c;
  1709  062D  0837               	movf	_c,w
  1710  062E  00C9               	movwf	??_time_settings
  1711  062F  0849               	movf	??_time_settings,w
  1712  0630  00CF               	movwf	_table+1
  1713  0631                     l3150:	
  1714                           
  1715                           ;Button_src.c: 226:                     a = time_date_delimiter(a,0x11,'9');
  1716  0631  3011               	movlw	17
  1717  0632  00C9               	movwf	??_time_settings
  1718  0633  0849               	movf	??_time_settings,w
  1719  0634  00F0               	movwf	time_date_delimiter@hex
  1720  0635  3039               	movlw	57
  1721  0636  00CA               	movwf	??_time_settings+1
  1722  0637  084A               	movf	??_time_settings+1,w
  1723  0638  00F1               	movwf	time_date_delimiter@limiter
  1724  0639  0839               	movf	_a,w
  1725  063A  120A  158A  219F  120A  118A  	fcall	_time_date_delimiter
  1726  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0641  00CB               	movwf	??_time_settings+2
  1729  0642  084B               	movf	??_time_settings+2,w
  1730  0643  00B9               	movwf	_a
  1731  0644                     l3152:	
  1732                           
  1733                           ;Button_src.c: 227:                     a = time_date_delimiter(a,0x21,'J');
  1734  0644  3021               	movlw	33
  1735  0645  00C9               	movwf	??_time_settings
  1736  0646  0849               	movf	??_time_settings,w
  1737  0647  00F0               	movwf	time_date_delimiter@hex
  1738  0648  304A               	movlw	74
  1739  0649  00CA               	movwf	??_time_settings+1
  1740  064A  084A               	movf	??_time_settings+1,w
  1741  064B  00F1               	movwf	time_date_delimiter@limiter
  1742  064C  0839               	movf	_a,w
  1743  064D  120A  158A  219F  120A  118A  	fcall	_time_date_delimiter
  1744  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0654  00CB               	movwf	??_time_settings+2
  1747  0655  084B               	movf	??_time_settings+2,w
  1748  0656  00B9               	movwf	_a
  1749  0657                     l3154:	
  1750                           
  1751                           ;Button_src.c: 230:                     c = time_date_delimiter(c,0x11,'9');
  1752  0657  3011               	movlw	17
  1753  0658  00C9               	movwf	??_time_settings
  1754  0659  0849               	movf	??_time_settings,w
  1755  065A  00F0               	movwf	time_date_delimiter@hex
  1756  065B  3039               	movlw	57
  1757  065C  00CA               	movwf	??_time_settings+1
  1758  065D  084A               	movf	??_time_settings+1,w
  1759  065E  00F1               	movwf	time_date_delimiter@limiter
  1760  065F  0837               	movf	_c,w
  1761  0660  120A  158A  219F  120A  118A  	fcall	_time_date_delimiter
  1762  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0667  00CB               	movwf	??_time_settings+2
  1765  0668  084B               	movf	??_time_settings+2,w
  1766  0669  00B7               	movwf	_c
  1767  066A                     l3156:	
  1768                           
  1769                           ;Button_src.c: 231:                     c = time_date_delimiter(c,0x21,'J');
  1770  066A  3021               	movlw	33
  1771  066B  00C9               	movwf	??_time_settings
  1772  066C  0849               	movf	??_time_settings,w
  1773  066D  00F0               	movwf	time_date_delimiter@hex
  1774  066E  304A               	movlw	74
  1775  066F  00CA               	movwf	??_time_settings+1
  1776  0670  084A               	movf	??_time_settings+1,w
  1777  0671  00F1               	movwf	time_date_delimiter@limiter
  1778  0672  0837               	movf	_c,w
  1779  0673  120A  158A  219F  120A  118A  	fcall	_time_date_delimiter
  1780  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1782  067A  00CB               	movwf	??_time_settings+2
  1783  067B  084B               	movf	??_time_settings+2,w
  1784  067C  00B7               	movwf	_c
  1785  067D                     l3158:	
  1786                           
  1787                           ;Button_src.c: 232:                     c = time_date_delimiter(c,0x31,'Y');
  1788  067D  3031               	movlw	49
  1789  067E  00C9               	movwf	??_time_settings
  1790  067F  0849               	movf	??_time_settings,w
  1791  0680  00F0               	movwf	time_date_delimiter@hex
  1792  0681  3059               	movlw	89
  1793  0682  00CA               	movwf	??_time_settings+1
  1794  0683  084A               	movf	??_time_settings+1,w
  1795  0684  00F1               	movwf	time_date_delimiter@limiter
  1796  0685  0837               	movf	_c,w
  1797  0686  120A  158A  219F  120A  118A  	fcall	_time_date_delimiter
  1798  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1799  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1800  068D  00CB               	movwf	??_time_settings+2
  1801  068E  084B               	movf	??_time_settings+2,w
  1802  068F  00B7               	movwf	_c
  1803  0690                     l3160:	
  1804                           
  1805                           ;Button_src.c: 233:                     c = time_date_delimiter(c,0x41,'j');
  1806  0690  3041               	movlw	65
  1807  0691  00C9               	movwf	??_time_settings
  1808  0692  0849               	movf	??_time_settings,w
  1809  0693  00F0               	movwf	time_date_delimiter@hex
  1810  0694  306A               	movlw	106
  1811  0695  00CA               	movwf	??_time_settings+1
  1812  0696  084A               	movf	??_time_settings+1,w
  1813  0697  00F1               	movwf	time_date_delimiter@limiter
  1814  0698  0837               	movf	_c,w
  1815  0699  120A  158A  219F  120A  118A  	fcall	_time_date_delimiter
  1816  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1817  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1818  06A0  00CB               	movwf	??_time_settings+2
  1819  06A1  084B               	movf	??_time_settings+2,w
  1820  06A2  00B7               	movwf	_c
  1821  06A3                     l3162:	
  1822                           
  1823                           ;Button_src.c: 234:                     c = time_date_delimiter(c,0x51,'z');
  1824  06A3  3051               	movlw	81
  1825  06A4  00C9               	movwf	??_time_settings
  1826  06A5  0849               	movf	??_time_settings,w
  1827  06A6  00F0               	movwf	time_date_delimiter@hex
  1828  06A7  307A               	movlw	122
  1829  06A8  00CA               	movwf	??_time_settings+1
  1830  06A9  084A               	movf	??_time_settings+1,w
  1831  06AA  00F1               	movwf	time_date_delimiter@limiter
  1832  06AB  0837               	movf	_c,w
  1833  06AC  120A  158A  219F  120A  118A  	fcall	_time_date_delimiter
  1834  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1835  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1836  06B3  00CB               	movwf	??_time_settings+2
  1837  06B4  084B               	movf	??_time_settings+2,w
  1838  06B5  00B7               	movwf	_c
  1839  06B6                     l3164:	
  1840                           
  1841                           ;Button_src.c: 237:                   RC0 = 0;
  1842  06B6  1007               	bcf	7,0	;volatile
  1843  06B7                     l3166:	
  1844                           
  1845                           ;Button_src.c: 238:                   RC1 = 1;
  1846  06B7  1487               	bsf	7,1	;volatile
  1847  06B8                     l3168:	
  1848                           
  1849                           ;Button_src.c: 239:                   RC2 = 1;
  1850  06B8  1507               	bsf	7,2	;volatile
  1851  06B9                     l3170:	
  1852                           
  1853                           ;Button_src.c: 240:                   RC3 = 1;
  1854  06B9  1587               	bsf	7,3	;volatile
  1855  06BA                     l3172:	
  1856                           
  1857                           ;Button_src.c: 241:                     if (RC6 == 0 ){
  1858  06BA  1B07               	btfsc	7,6	;volatile
  1859  06BB  2EBD               	goto	u2011
  1860  06BC  2EBE               	goto	u2010
  1861  06BD                     u2011:	
  1862  06BD  2ED6               	goto	l451
  1863  06BE                     u2010:	
  1864  06BE                     l3174:	
  1865                           
  1866                           ;Button_src.c: 242:                           write_cmd(0x1);
  1867  06BE  3001               	movlw	1
  1868  06BF  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  1869  06C4                     l3176:	
  1870                           
  1871                           ;Button_src.c: 243:                           a = 0x00;
  1872  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  1873  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  1874  06C6  01B9               	clrf	_a
  1875  06C7                     l3178:	
  1876                           
  1877                           ;Button_src.c: 244:                           c = 0x00;
  1878  06C7  01B7               	clrf	_c
  1879  06C8                     l3180:	
  1880                           
  1881                           ;Button_src.c: 245:                           x = 0;
  1882  06C8  01AB               	clrf	_x
  1883  06C9  01AC               	clrf	_x+1
  1884  06CA                     l3182:	
  1885                           
  1886                           ;Button_src.c: 246:                           y = 0;
  1887  06CA  01A9               	clrf	_y
  1888  06CB  01AA               	clrf	_y+1
  1889  06CC                     l3184:	
  1890                           
  1891                           ;Button_src.c: 247:                           w = 0;
  1892  06CC  01AD               	clrf	_w
  1893  06CD  01AE               	clrf	_w+1
  1894  06CE                     l3186:	
  1895                           
  1896                           ;Button_src.c: 248:                           t = 0;
  1897  06CE  01AF               	clrf	_t
  1898  06CF  01B0               	clrf	_t+1
  1899  06D0                     l3188:	
  1900                           
  1901                           ;Button_src.c: 249:                           set_time();
  1902  06D0  120A  158A  2261  120A  118A  	fcall	_set_time
  1903  06D5  2FE5               	goto	l452
  1904  06D6                     l451:	
  1905                           ;Button_src.c: 251:                             }
  1906                           
  1907                           
  1908                           ;Button_src.c: 252:                   RC0 = 1;
  1909  06D6  1407               	bsf	7,0	;volatile
  1910                           
  1911                           ;Button_src.c: 253:                   RC1 = 1;
  1912  06D7  1487               	bsf	7,1	;volatile
  1913                           
  1914                           ;Button_src.c: 254:                   RC2 = 0;
  1915  06D8  1107               	bcf	7,2	;volatile
  1916                           
  1917                           ;Button_src.c: 255:                   RC3 = 1;
  1918  06D9  1587               	bsf	7,3	;volatile
  1919  06DA                     l3192:	
  1920                           
  1921                           ;Button_src.c: 256:                   z = modulus_func(z,2);
  1922  06DA  0828               	movf	_z+1,w
  1923  06DB  00F8               	movwf	modulus_func@x+1
  1924  06DC  0827               	movf	_z,w
  1925  06DD  00F7               	movwf	modulus_func@x
  1926  06DE  3002               	movlw	2
  1927  06DF  00F9               	movwf	modulus_func@y
  1928  06E0  3000               	movlw	0
  1929  06E1  00FA               	movwf	modulus_func@y+1
  1930  06E2  120A  158A  20FF  120A  118A  	fcall	_modulus_func
  1931  06E7  0878               	movf	?_modulus_func+1,w
  1932  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1933  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1934  06EA  00A8               	movwf	_z+1
  1935  06EB  0877               	movf	?_modulus_func,w
  1936  06EC  00A7               	movwf	_z
  1937  06ED                     l3194:	
  1938                           
  1939                           ;Button_src.c: 257:                   if(RC4 == 0 && z ==0){
  1940  06ED  1A07               	btfsc	7,4	;volatile
  1941  06EE  2EF0               	goto	u2021
  1942  06EF  2EF1               	goto	u2020
  1943  06F0                     u2021:	
  1944  06F0  2F2E               	goto	l3204
  1945  06F1                     u2020:	
  1946  06F1                     l3196:	
  1947  06F1  0827               	movf	_z,w
  1948  06F2  0428               	iorwf	_z+1,w
  1949  06F3  1D03               	btfss	3,2
  1950  06F4  2EF6               	goto	u2031
  1951  06F5  2EF7               	goto	u2030
  1952  06F6                     u2031:	
  1953  06F6  2F2E               	goto	l3204
  1954  06F7                     u2030:	
  1955  06F7                     l3198:	
  1956                           
  1957                           ;Button_src.c: 258:                       write_cmd(0x90);
  1958  06F7  3090               	movlw	144
  1959  06F8  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  1960                           
  1961                           ;Button_src.c: 259:                       write_char('H');
  1962  06FD  3048               	movlw	72
  1963  06FE  120A  158A  21B6  120A  118A  	fcall	_write_char
  1964                           
  1965                           ;Button_src.c: 260:                       write_char('o');
  1966  0703  306F               	movlw	111
  1967  0704  120A  158A  21B6  120A  118A  	fcall	_write_char
  1968                           
  1969                           ;Button_src.c: 261:                       write_char('u');
  1970  0709  3075               	movlw	117
  1971  070A  120A  158A  21B6  120A  118A  	fcall	_write_char
  1972                           
  1973                           ;Button_src.c: 262:                       write_char('r');
  1974  070F  3072               	movlw	114
  1975  0710  120A  158A  21B6  120A  118A  	fcall	_write_char
  1976                           
  1977                           ;Button_src.c: 263:                       write_char(':');
  1978  0715  303A               	movlw	58
  1979  0716  120A  158A  21B6  120A  118A  	fcall	_write_char
  1980  071B                     l3200:	
  1981                           
  1982                           ;Button_src.c: 264:                       b = 'x';
  1983  071B  3078               	movlw	120
  1984  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1985  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1986  071E  00C9               	movwf	??_time_settings
  1987  071F  0849               	movf	??_time_settings,w
  1988  0720  00B8               	movwf	_b
  1989  0721                     l3202:	
  1990                           
  1991                           ;Button_src.c: 265:                       button_delay();
  1992  0721  120A  158A  215D  120A  118A  	fcall	_button_delay
  1993                           
  1994                           ;Button_src.c: 266:                       z++;
  1995  0726  3001               	movlw	1
  1996  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1998  0729  07A7               	addwf	_z,f
  1999  072A  1803               	skipnc
  2000  072B  0AA8               	incf	_z+1,f
  2001  072C  3000               	movlw	0
  2002  072D  07A8               	addwf	_z+1,f
  2003  072E                     l3204:	
  2004                           
  2005                           ;Button_src.c: 268:                   RC0 = 1;
  2006  072E  1407               	bsf	7,0	;volatile
  2007  072F                     l3206:	
  2008                           
  2009                           ;Button_src.c: 269:                   RC1 = 1;
  2010  072F  1487               	bsf	7,1	;volatile
  2011  0730                     l3208:	
  2012                           
  2013                           ;Button_src.c: 270:                   RC2 = 0;
  2014  0730  1107               	bcf	7,2	;volatile
  2015  0731                     l3210:	
  2016                           
  2017                           ;Button_src.c: 271:                   RC3 = 1;
  2018  0731  1587               	bsf	7,3	;volatile
  2019  0732                     l3212:	
  2020                           
  2021                           ;Button_src.c: 273:                   if(RC4 == 0&& z ==1){
  2022  0732  1A07               	btfsc	7,4	;volatile
  2023  0733  2F35               	goto	u2041
  2024  0734  2F36               	goto	u2040
  2025  0735                     u2041:	
  2026  0735  2F71               	goto	l454
  2027  0736                     u2040:	
  2028  0736                     l3214:	
  2029  0736  0327               	decf	_z,w
  2030  0737  0428               	iorwf	_z+1,w
  2031  0738  1D03               	btfss	3,2
  2032  0739  2F3B               	goto	u2051
  2033  073A  2F3C               	goto	u2050
  2034  073B                     u2051:	
  2035  073B  2F71               	goto	l454
  2036  073C                     u2050:	
  2037  073C                     l3216:	
  2038                           
  2039                           ;Button_src.c: 274:                     z++;
  2040  073C  3001               	movlw	1
  2041  073D  07A7               	addwf	_z,f
  2042  073E  1803               	skipnc
  2043  073F  0AA8               	incf	_z+1,f
  2044  0740  3000               	movlw	0
  2045  0741  07A8               	addwf	_z+1,f
  2046  0742                     l3218:	
  2047                           
  2048                           ;Button_src.c: 275:                     button_delay();
  2049  0742  120A  158A  215D  120A  118A  	fcall	_button_delay
  2050  0747                     l3220:	
  2051                           
  2052                           ;Button_src.c: 276:                     write_cmd(0x90);
  2053  0747  3090               	movlw	144
  2054  0748  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2055  074D                     l3222:	
  2056                           
  2057                           ;Button_src.c: 277:                     write_char('M');
  2058  074D  304D               	movlw	77
  2059  074E  120A  158A  21B6  120A  118A  	fcall	_write_char
  2060  0753                     l3224:	
  2061                           
  2062                           ;Button_src.c: 278:                     write_char('i');
  2063  0753  3069               	movlw	105
  2064  0754  120A  158A  21B6  120A  118A  	fcall	_write_char
  2065  0759                     l3226:	
  2066                           
  2067                           ;Button_src.c: 279:                     write_char('n');
  2068  0759  306E               	movlw	110
  2069  075A  120A  158A  21B6  120A  118A  	fcall	_write_char
  2070  075F                     l3228:	
  2071                           
  2072                           ;Button_src.c: 280:                     write_char('s');
  2073  075F  3073               	movlw	115
  2074  0760  120A  158A  21B6  120A  118A  	fcall	_write_char
  2075  0765                     l3230:	
  2076                           
  2077                           ;Button_src.c: 281:                     write_char(':');
  2078  0765  303A               	movlw	58
  2079  0766  120A  158A  21B6  120A  118A  	fcall	_write_char
  2080  076B                     l3232:	
  2081                           
  2082                           ;Button_src.c: 282:                     b = 'y';
  2083  076B  3079               	movlw	121
  2084  076C  1283               	bcf	3,5	;RP0=0, select bank0
  2085  076D  1303               	bcf	3,6	;RP1=0, select bank0
  2086  076E  00C9               	movwf	??_time_settings
  2087  076F  0849               	movf	??_time_settings,w
  2088  0770  00B8               	movwf	_b
  2089  0771                     l454:	
  2090                           ;Button_src.c: 284:                   }
  2091                           
  2092                           
  2093                           ;Button_src.c: 285:                    write_cmd(0x88);
  2094  0771  3088               	movlw	136
  2095  0772  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2096  0777                     l3234:	
  2097                           
  2098                           ;Button_src.c: 292:                   RC0 = 1;
  2099  0777  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0778  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0779  1407               	bsf	7,0	;volatile
  2102  077A                     l3236:	
  2103                           
  2104                           ;Button_src.c: 293:                   RC1 = 1;
  2105  077A  1487               	bsf	7,1	;volatile
  2106  077B                     l3238:	
  2107                           
  2108                           ;Button_src.c: 294:                   RC2 = 0;
  2109  077B  1107               	bcf	7,2	;volatile
  2110  077C                     l3240:	
  2111                           
  2112                           ;Button_src.c: 295:                   RC3 = 1;
  2113  077C  1587               	bsf	7,3	;volatile
  2114                           
  2115                           ;Button_src.c: 297:              write_cmd(0x88);
  2116  077D  3088               	movlw	136
  2117  077E  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2118                           
  2119                           ;Button_src.c: 298:              write_char('T');
  2120  0783  3054               	movlw	84
  2121  0784  120A  158A  21B6  120A  118A  	fcall	_write_char
  2122                           
  2123                           ;Button_src.c: 299:              write_char('i');
  2124  0789  3069               	movlw	105
  2125  078A  120A  158A  21B6  120A  118A  	fcall	_write_char
  2126                           
  2127                           ;Button_src.c: 300:              write_char('m');
  2128  078F  306D               	movlw	109
  2129  0790  120A  158A  21B6  120A  118A  	fcall	_write_char
  2130                           
  2131                           ;Button_src.c: 301:              write_char('e');
  2132  0795  3065               	movlw	101
  2133  0796  120A  158A  21B6  120A  118A  	fcall	_write_char
  2134                           
  2135                           ;Button_src.c: 302:              write_char(':');
  2136  079B  303A               	movlw	58
  2137  079C  120A  158A  21B6  120A  118A  	fcall	_write_char
  2138                           
  2139                           ;Button_src.c: 303:              write_char(y + '0');
  2140  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  2141  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  2142  07A3  0829               	movf	_y,w
  2143  07A4  3E30               	addlw	48
  2144  07A5  120A  158A  21B6  120A  118A  	fcall	_write_char
  2145                           
  2146                           ;Button_src.c: 304:              write_char(x + '0');
  2147  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2148  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  2149  07AC  082B               	movf	_x,w
  2150  07AD  3E30               	addlw	48
  2151  07AE  120A  158A  21B6  120A  118A  	fcall	_write_char
  2152                           
  2153                           ;Button_src.c: 305:              write_char(':');
  2154  07B3  303A               	movlw	58
  2155  07B4  120A  158A  21B6  120A  118A  	fcall	_write_char
  2156                           
  2157                           ;Button_src.c: 306:              write_char(w + '0');
  2158  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  2159  07BA  1303               	bcf	3,6	;RP1=0, select bank0
  2160  07BB  082D               	movf	_w,w
  2161  07BC  3E30               	addlw	48
  2162  07BD  120A  158A  21B6  120A  118A  	fcall	_write_char
  2163                           
  2164                           ;Button_src.c: 307:              write_char(t + '0');
  2165  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2166  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  2167  07C4  082F               	movf	_t,w
  2168  07C5  3E30               	addlw	48
  2169  07C6  120A  158A  21B6  120A  118A  	fcall	_write_char
  2170  07CB                     l3242:	
  2171                           
  2172                           ;Button_src.c: 308:             RC0 = 0;
  2173  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  2174  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  2175  07CD  1007               	bcf	7,0	;volatile
  2176  07CE                     l3244:	
  2177                           
  2178                           ;Button_src.c: 309:             RC1 = 1;
  2179  07CE  1487               	bsf	7,1	;volatile
  2180  07CF                     l3246:	
  2181                           
  2182                           ;Button_src.c: 310:             RC2 = 1;
  2183  07CF  1507               	bsf	7,2	;volatile
  2184  07D0                     l3248:	
  2185                           
  2186                           ;Button_src.c: 311:             RC3 = 1;
  2187  07D0  1587               	bsf	7,3	;volatile
  2188  07D1                     l3250:	
  2189                           
  2190                           ;Button_src.c: 312:             if (RC7 == 0 ){
  2191  07D1  1B87               	btfsc	7,7	;volatile
  2192  07D2  2FD4               	goto	u2061
  2193  07D3  2FD5               	goto	u2060
  2194  07D4                     u2061:	
  2195  07D4  2D08               	goto	l445
  2196  07D5                     u2060:	
  2197  07D5                     l3252:	
  2198                           
  2199                           ;Button_src.c: 313:             a = 0x00;
  2200  07D5  01B9               	clrf	_a
  2201                           
  2202                           ;Button_src.c: 314:             c = 0x00;
  2203  07D6  01B7               	clrf	_c
  2204                           
  2205                           ;Button_src.c: 315:             x = 0;
  2206  07D7  01AB               	clrf	_x
  2207  07D8  01AC               	clrf	_x+1
  2208                           
  2209                           ;Button_src.c: 316:             y = 0;
  2210  07D9  01A9               	clrf	_y
  2211  07DA  01AA               	clrf	_y+1
  2212                           
  2213                           ;Button_src.c: 317:             w = 0;
  2214  07DB  01AD               	clrf	_w
  2215  07DC  01AE               	clrf	_w+1
  2216                           
  2217                           ;Button_src.c: 318:             t = 0;
  2218  07DD  01AF               	clrf	_t
  2219  07DE  01B0               	clrf	_t+1
  2220  07DF                     l3254:	
  2221                           
  2222                           ;Button_src.c: 319:             write_cmd(0x1);
  2223  07DF  3001               	movlw	1
  2224  07E0  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2225  07E5                     l452:	
  2226                           ;Button_src.c: 320:             break;
  2227                           
  2228  07E5  0008               	return
  2229  07E6                     __end_of_time_settings:	
  2230                           
  2231                           	psect	text2
  2232  0923                     __ptext2:	
  2233 ;; *************** function _time_date_hex_terminator *****************
  2234 ;; Defined at:
  2235 ;;		line 35 in file "math_src.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  val             1    wreg     unsigned char 
  2238 ;;  limiter         1    0[COMMON] unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  val             1    3[COMMON] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         1       0       0       0       0
  2251 ;;      Locals:         1       0       0       0       0
  2252 ;;      Temps:          2       0       0       0       0
  2253 ;;      Totals:         4       0       0       0       0
  2254 ;;Total ram usage:        4 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_time_settings
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _time_date_hex_terminator
  2265  0923                     _time_date_hex_terminator:	
  2266                           
  2267                           ;incstack = 0
  2268                           ; Regs used in _time_date_hex_terminator: [wreg+status,2]
  2269                           ;time_date_hex_terminator@val stored from wreg
  2270  0923  00F3               	movwf	time_date_hex_terminator@val
  2271  0924                     l2518:	
  2272                           
  2273                           ;math_src.c: 36:     if((val + '0') == limiter){
  2274  0924  0873               	movf	time_date_hex_terminator@val,w
  2275  0925  3E30               	addlw	48
  2276  0926  00F1               	movwf	??_time_date_hex_terminator
  2277  0927  3000               	movlw	0
  2278  0928  1803               	skipnc
  2279  0929  3001               	movlw	1
  2280  092A  00F2               	movwf	??_time_date_hex_terminator+1
  2281  092B  0870               	movf	time_date_hex_terminator@limiter,w
  2282  092C  0671               	xorwf	??_time_date_hex_terminator,w
  2283  092D  0472               	iorwf	??_time_date_hex_terminator+1,w
  2284  092E  1D03               	skipz
  2285  092F  2931               	goto	u1341
  2286  0930  2932               	goto	u1340
  2287  0931                     u1341:	
  2288  0931  2933               	goto	l2522
  2289  0932                     u1340:	
  2290  0932                     l2520:	
  2291                           
  2292                           ;math_src.c: 37:     val = 0x00;
  2293  0932  01F3               	clrf	time_date_hex_terminator@val
  2294  0933                     l2522:	
  2295                           
  2296                           ;math_src.c: 39:     return val;
  2297  0933  0873               	movf	time_date_hex_terminator@val,w
  2298  0934                     l496:	
  2299  0934  0008               	return
  2300  0935                     __end_of_time_date_hex_terminator:	
  2301                           
  2302                           	psect	text3
  2303  099F                     __ptext3:	
  2304 ;; *************** function _time_date_delimiter *****************
  2305 ;; Defined at:
  2306 ;;		line 27 in file "math_src.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  val             1    wreg     unsigned char 
  2309 ;;  hex             1    0[COMMON] unsigned char 
  2310 ;;  limiter         1    1[COMMON] unsigned char 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  val             1    4[COMMON] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      unsigned char 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2322 ;;      Params:         2       0       0       0       0
  2323 ;;      Locals:         1       0       0       0       0
  2324 ;;      Temps:          2       0       0       0       0
  2325 ;;      Totals:         5       0       0       0       0
  2326 ;;Total ram usage:        5 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_time_settings
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           
  2336                           ;psect for function _time_date_delimiter
  2337  099F                     _time_date_delimiter:	
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _time_date_delimiter: [wreg+status,2+status,0]
  2341                           ;time_date_delimiter@val stored from wreg
  2342  099F  00F4               	movwf	time_date_delimiter@val
  2343  09A0                     l2526:	
  2344                           
  2345                           ;math_src.c: 28:     if((val + '0') == limiter){
  2346  09A0  0874               	movf	time_date_delimiter@val,w
  2347  09A1  3E30               	addlw	48
  2348  09A2  00F2               	movwf	??_time_date_delimiter
  2349  09A3  3000               	movlw	0
  2350  09A4  1803               	skipnc
  2351  09A5  3001               	movlw	1
  2352  09A6  00F3               	movwf	??_time_date_delimiter+1
  2353  09A7  0871               	movf	time_date_delimiter@limiter,w
  2354  09A8  0672               	xorwf	??_time_date_delimiter,w
  2355  09A9  0473               	iorwf	??_time_date_delimiter+1,w
  2356  09AA  1D03               	skipz
  2357  09AB  29AD               	goto	u1351
  2358  09AC  29AE               	goto	u1350
  2359  09AD                     u1351:	
  2360  09AD  29B4               	goto	l2532
  2361  09AE                     u1350:	
  2362  09AE                     l2528:	
  2363                           
  2364                           ;math_src.c: 29:     val = hex;
  2365  09AE  0870               	movf	time_date_delimiter@hex,w
  2366  09AF  00F2               	movwf	??_time_date_delimiter
  2367  09B0  0872               	movf	??_time_date_delimiter,w
  2368  09B1  00F4               	movwf	time_date_delimiter@val
  2369  09B2                     l2530:	
  2370                           
  2371                           ;math_src.c: 30:     val--;
  2372  09B2  3001               	movlw	1
  2373  09B3  02F4               	subwf	time_date_delimiter@val,f
  2374  09B4                     l2532:	
  2375                           
  2376                           ;math_src.c: 32:     return val;
  2377  09B4  0874               	movf	time_date_delimiter@val,w
  2378  09B5                     l492:	
  2379  09B5  0008               	return
  2380  09B6                     __end_of_time_date_delimiter:	
  2381                           
  2382                           	psect	text4
  2383  025C                     __ptext4:	
  2384 ;; *************** function _thermometer_threshhold_settings *****************
  2385 ;; Defined at:
  2386 ;;		line 19 in file "Button_src.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  i               2    8[BANK0 ] int 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         0       2       0       0       0
  2402 ;;      Temps:          0       3       0       0       0
  2403 ;;      Totals:         0       5       0       0       0
  2404 ;;Total ram usage:        5 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    3
  2407 ;; This function calls:
  2408 ;;		_button_delay
  2409 ;;		_decrementor
  2410 ;;		_incrementor
  2411 ;;		_modulus_func
  2412 ;;		_set_beep_threshhold
  2413 ;;		_write_char
  2414 ;;		_write_cmd
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function _thermometer_threshhold_settings
  2422  025C                     _thermometer_threshhold_settings:	
  2423  025C                     l2810:	
  2424                           ;incstack = 0
  2425                           ; Regs used in _thermometer_threshhold_settings: [wreg+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  2426                           
  2427                           
  2428                           ;Button_src.c: 20:  RC0 = 1;
  2429  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2430  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2431  025E  1407               	bsf	7,0	;volatile
  2432                           
  2433                           ;Button_src.c: 21:  RC1 = 0;
  2434  025F  1087               	bcf	7,1	;volatile
  2435                           
  2436                           ;Button_src.c: 22:  RC2 = 1;
  2437  0260  1507               	bsf	7,2	;volatile
  2438                           
  2439                           ;Button_src.c: 23:  RC3 = 1;
  2440  0261  1587               	bsf	7,3	;volatile
  2441                           
  2442                           ;Button_src.c: 24:   if (RC4 == 0){
  2443  0262  1A07               	btfsc	7,4	;volatile
  2444  0263  2A65               	goto	u1691
  2445  0264  2A66               	goto	u1690
  2446  0265                     u1691:	
  2447  0265  2CF7               	goto	l435
  2448  0266                     u1690:	
  2449  0266                     l2812:	
  2450                           
  2451                           ;Button_src.c: 25:       write_cmd(0x1);
  2452  0266  3001               	movlw	1
  2453  0267  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2454  026C                     l429:	
  2455                           ;Button_src.c: 26:       for(;;){
  2456                           
  2457                           
  2458                           ;Button_src.c: 27:             write_cmd(0x80);
  2459  026C  3080               	movlw	128
  2460  026D  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2461                           
  2462                           ;Button_src.c: 28:             write_char('t');
  2463  0272  3074               	movlw	116
  2464  0273  120A  158A  21B6  120A  118A  	fcall	_write_char
  2465                           
  2466                           ;Button_src.c: 29:             write_char('h');
  2467  0278  3068               	movlw	104
  2468  0279  120A  158A  21B6  120A  118A  	fcall	_write_char
  2469                           
  2470                           ;Button_src.c: 30:             write_char('r');
  2471  027E  3072               	movlw	114
  2472  027F  120A  158A  21B6  120A  118A  	fcall	_write_char
  2473                           
  2474                           ;Button_src.c: 31:             write_char('e');
  2475  0284  3065               	movlw	101
  2476  0285  120A  158A  21B6  120A  118A  	fcall	_write_char
  2477                           
  2478                           ;Button_src.c: 32:             write_char('s');
  2479  028A  3073               	movlw	115
  2480  028B  120A  158A  21B6  120A  118A  	fcall	_write_char
  2481                           
  2482                           ;Button_src.c: 33:             write_char('h');
  2483  0290  3068               	movlw	104
  2484  0291  120A  158A  21B6  120A  118A  	fcall	_write_char
  2485                           
  2486                           ;Button_src.c: 34:             write_char('o');
  2487  0296  306F               	movlw	111
  2488  0297  120A  158A  21B6  120A  118A  	fcall	_write_char
  2489                           
  2490                           ;Button_src.c: 35:             write_char('l');
  2491  029C  306C               	movlw	108
  2492  029D  120A  158A  21B6  120A  118A  	fcall	_write_char
  2493                           
  2494                           ;Button_src.c: 36:             write_char('d');
  2495  02A2  3064               	movlw	100
  2496  02A3  120A  158A  21B6  120A  118A  	fcall	_write_char
  2497                           
  2498                           ;Button_src.c: 38:             write_cmd(0x90);
  2499  02A8  3090               	movlw	144
  2500  02A9  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2501                           
  2502                           ;Button_src.c: 39:             write_char('C');
  2503  02AE  3043               	movlw	67
  2504  02AF  120A  158A  21B6  120A  118A  	fcall	_write_char
  2505                           
  2506                           ;Button_src.c: 40:             write_char('u');
  2507  02B4  3075               	movlw	117
  2508  02B5  120A  158A  21B6  120A  118A  	fcall	_write_char
  2509                           
  2510                           ;Button_src.c: 41:             write_char('r');
  2511  02BA  3072               	movlw	114
  2512  02BB  120A  158A  21B6  120A  118A  	fcall	_write_char
  2513                           
  2514                           ;Button_src.c: 42:             write_char('r');
  2515  02C0  3072               	movlw	114
  2516  02C1  120A  158A  21B6  120A  118A  	fcall	_write_char
  2517                           
  2518                           ;Button_src.c: 43:             write_char('e');
  2519  02C6  3065               	movlw	101
  2520  02C7  120A  158A  21B6  120A  118A  	fcall	_write_char
  2521                           
  2522                           ;Button_src.c: 44:             write_char('n');
  2523  02CC  306E               	movlw	110
  2524  02CD  120A  158A  21B6  120A  118A  	fcall	_write_char
  2525                           
  2526                           ;Button_src.c: 45:             write_char('t');
  2527  02D2  3074               	movlw	116
  2528  02D3  120A  158A  21B6  120A  118A  	fcall	_write_char
  2529                           
  2530                           ;Button_src.c: 46:             write_char(':');
  2531  02D8  303A               	movlw	58
  2532  02D9  120A  158A  21B6  120A  118A  	fcall	_write_char
  2533                           
  2534                           ;Button_src.c: 48:             write_char(var1 + '0');
  2535  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2536  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2537  02E0  0835               	movf	_var1,w
  2538  02E1  3E30               	addlw	48
  2539  02E2  120A  158A  21B6  120A  118A  	fcall	_write_char
  2540                           
  2541                           ;Button_src.c: 49:             write_char(var2 + '0');
  2542  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2543  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2544  02E9  0834               	movf	_var2,w
  2545  02EA  3E30               	addlw	48
  2546  02EB  120A  158A  21B6  120A  118A  	fcall	_write_char
  2547                           
  2548                           ;Button_src.c: 51:             write_cmd(0x88);
  2549  02F0  3088               	movlw	136
  2550  02F1  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2551                           
  2552                           ;Button_src.c: 52:             write_char('S');
  2553  02F6  3053               	movlw	83
  2554  02F7  120A  158A  21B6  120A  118A  	fcall	_write_char
  2555                           
  2556                           ;Button_src.c: 53:             write_char('e');
  2557  02FC  3065               	movlw	101
  2558  02FD  120A  158A  21B6  120A  118A  	fcall	_write_char
  2559                           
  2560                           ;Button_src.c: 54:             write_char('t');
  2561  0302  3074               	movlw	116
  2562  0303  120A  158A  21B6  120A  118A  	fcall	_write_char
  2563                           
  2564                           ;Button_src.c: 55:             write_char('_');
  2565  0308  305F               	movlw	95
  2566  0309  120A  158A  21B6  120A  118A  	fcall	_write_char
  2567                           
  2568                           ;Button_src.c: 56:             write_char('t');
  2569  030E  3074               	movlw	116
  2570  030F  120A  158A  21B6  120A  118A  	fcall	_write_char
  2571                           
  2572                           ;Button_src.c: 57:             write_char('h');
  2573  0314  3068               	movlw	104
  2574  0315  120A  158A  21B6  120A  118A  	fcall	_write_char
  2575                           
  2576                           ;Button_src.c: 58:             write_char('r');
  2577  031A  3072               	movlw	114
  2578  031B  120A  158A  21B6  120A  118A  	fcall	_write_char
  2579                           
  2580                           ;Button_src.c: 59:             write_char('e');
  2581  0320  3065               	movlw	101
  2582  0321  120A  158A  21B6  120A  118A  	fcall	_write_char
  2583                           
  2584                           ;Button_src.c: 60:             write_char('s');
  2585  0326  3073               	movlw	115
  2586  0327  120A  158A  21B6  120A  118A  	fcall	_write_char
  2587                           
  2588                           ;Button_src.c: 61:             write_char('h');
  2589  032C  3068               	movlw	104
  2590  032D  120A  158A  21B6  120A  118A  	fcall	_write_char
  2591                           
  2592                           ;Button_src.c: 62:             write_char('o');
  2593  0332  306F               	movlw	111
  2594  0333  120A  158A  21B6  120A  118A  	fcall	_write_char
  2595                           
  2596                           ;Button_src.c: 63:             write_char('l');
  2597  0338  306C               	movlw	108
  2598  0339  120A  158A  21B6  120A  118A  	fcall	_write_char
  2599                           
  2600                           ;Button_src.c: 64:             write_char('d');
  2601  033E  3064               	movlw	100
  2602  033F  120A  158A  21B6  120A  118A  	fcall	_write_char
  2603                           
  2604                           ;Button_src.c: 65:             write_char(':');
  2605  0344  303A               	movlw	58
  2606  0345  120A  158A  21B6  120A  118A  	fcall	_write_char
  2607                           
  2608                           ;Button_src.c: 67:             write_cmd(0x98);
  2609  034A  3098               	movlw	152
  2610  034B  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2611  0350                     l2814:	
  2612                           
  2613                           ;Button_src.c: 68:             RC0 = 1;
  2614  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0352  1407               	bsf	7,0	;volatile
  2617  0353                     l2816:	
  2618                           
  2619                           ;Button_src.c: 69:             RC1 = 0;
  2620  0353  1087               	bcf	7,1	;volatile
  2621  0354                     l2818:	
  2622                           
  2623                           ;Button_src.c: 70:             RC2 = 1;
  2624  0354  1507               	bsf	7,2	;volatile
  2625  0355                     l2820:	
  2626                           
  2627                           ;Button_src.c: 71:             RC3 = 1;
  2628  0355  1587               	bsf	7,3	;volatile
  2629  0356                     l2822:	
  2630                           
  2631                           ;Button_src.c: 72:             t = 0;
  2632  0356  01AF               	clrf	_t
  2633  0357  01B0               	clrf	_t+1
  2634  0358                     l2824:	
  2635                           
  2636                           ;Button_src.c: 73:             w = 0;
  2637  0358  01AD               	clrf	_w
  2638  0359  01AE               	clrf	_w+1
  2639  035A                     l2826:	
  2640                           
  2641                           ;Button_src.c: 74:             x = 0;
  2642  035A  01AB               	clrf	_x
  2643  035B  01AC               	clrf	_x+1
  2644  035C                     l2828:	
  2645                           
  2646                           ;Button_src.c: 75:             y = 0;
  2647  035C  01A9               	clrf	_y
  2648  035D  01AA               	clrf	_y+1
  2649  035E                     l2830:	
  2650                           
  2651                           ;Button_src.c: 76:             x = 0x00;
  2652  035E  01AB               	clrf	_x
  2653  035F  01AC               	clrf	_x+1
  2654  0360                     l2832:	
  2655                           
  2656                           ;Button_src.c: 78:                  RC0 = 1;
  2657  0360  1407               	bsf	7,0	;volatile
  2658  0361                     l2834:	
  2659                           
  2660                           ;Button_src.c: 79:                  RC1 = 0;
  2661  0361  1087               	bcf	7,1	;volatile
  2662  0362                     l2836:	
  2663                           
  2664                           ;Button_src.c: 80:                  RC2 = 1;
  2665  0362  1507               	bsf	7,2	;volatile
  2666  0363                     l2838:	
  2667                           
  2668                           ;Button_src.c: 81:                  RC3 = 1;
  2669  0363  1587               	bsf	7,3	;volatile
  2670  0364                     l2840:	
  2671                           
  2672                           ;Button_src.c: 83:                 if(RC7==0){
  2673  0364  1B87               	btfsc	7,7	;volatile
  2674  0365  2B67               	goto	u1701
  2675  0366  2B68               	goto	u1700
  2676  0367                     u1701:	
  2677  0367  2BCB               	goto	l2860
  2678  0368                     u1700:	
  2679  0368                     l2842:	
  2680                           
  2681                           ;Button_src.c: 84:                     write_cmd(0x98);
  2682  0368  3098               	movlw	152
  2683  0369  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2684  036E                     l2844:	
  2685                           
  2686                           ;Button_src.c: 85:                     x++;
  2687  036E  3001               	movlw	1
  2688  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2689  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0371  07AB               	addwf	_x,f
  2691  0372  1803               	skipnc
  2692  0373  0AAC               	incf	_x+1,f
  2693  0374  3000               	movlw	0
  2694  0375  07AC               	addwf	_x+1,f
  2695  0376                     l2846:	
  2696                           
  2697                           ;Button_src.c: 86:                     y = (unsigned char )y;
  2698  0376  0829               	movf	_y,w
  2699  0377  00C9               	movwf	??_thermometer_threshhold_settings
  2700  0378  01CA               	clrf	??_thermometer_threshhold_settings+1
  2701  0379  0849               	movf	??_thermometer_threshhold_settings,w
  2702  037A  00A9               	movwf	_y
  2703  037B  084A               	movf	??_thermometer_threshhold_settings+1,w
  2704  037C  00AA               	movwf	_y+1
  2705  037D                     l2848:	
  2706                           
  2707                           ;Button_src.c: 87:                     x = (unsigned char )(modulus_func(x,10));
  2708  037D  082C               	movf	_x+1,w
  2709  037E  00F8               	movwf	modulus_func@x+1
  2710  037F  082B               	movf	_x,w
  2711  0380  00F7               	movwf	modulus_func@x
  2712  0381  300A               	movlw	10
  2713  0382  00F9               	movwf	modulus_func@y
  2714  0383  3000               	movlw	0
  2715  0384  00FA               	movwf	modulus_func@y+1
  2716  0385  120A  158A  20FF  120A  118A  	fcall	_modulus_func
  2717  038A  0877               	movf	?_modulus_func,w
  2718  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2719  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2720  038D  00C9               	movwf	??_thermometer_threshhold_settings
  2721  038E  01CA               	clrf	??_thermometer_threshhold_settings+1
  2722  038F  0849               	movf	??_thermometer_threshhold_settings,w
  2723  0390  00AB               	movwf	_x
  2724  0391  084A               	movf	??_thermometer_threshhold_settings+1,w
  2725  0392  00AC               	movwf	_x+1
  2726  0393                     l2850:	
  2727                           
  2728                           ;Button_src.c: 88:                     write_char(y + '0');
  2729  0393  0829               	movf	_y,w
  2730  0394  3E30               	addlw	48
  2731  0395  120A  158A  21B6  120A  118A  	fcall	_write_char
  2732  039A                     l2852:	
  2733                           
  2734                           ;Button_src.c: 89:                     write_char(x + '0');
  2735  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2736  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2737  039C  082B               	movf	_x,w
  2738  039D  3E30               	addlw	48
  2739  039E  120A  158A  21B6  120A  118A  	fcall	_write_char
  2740  03A3                     l2854:	
  2741                           
  2742                           ;Button_src.c: 90:                     y = incrementor(y,x,'9');
  2743  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2744  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2745  03A5  082A               	movf	_y+1,w
  2746  03A6  00C5               	movwf	incrementor@upper_val+1
  2747  03A7  0829               	movf	_y,w
  2748  03A8  00C4               	movwf	incrementor@upper_val
  2749  03A9  082C               	movf	_x+1,w
  2750  03AA  00C7               	movwf	incrementor@lower_val+1
  2751  03AB  082B               	movf	_x,w
  2752  03AC  00C6               	movwf	incrementor@lower_val
  2753  03AD  3039               	movlw	57
  2754  03AE  00C9               	movwf	??_thermometer_threshhold_settings
  2755  03AF  0849               	movf	??_thermometer_threshhold_settings,w
  2756  03B0  00C8               	movwf	incrementor@z
  2757  03B1  120A  158A  22B9  120A  118A  	fcall	_incrementor
  2758  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2759  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2760  03B8  00CA               	movwf	??_thermometer_threshhold_settings+1
  2761  03B9  01CB               	clrf	??_thermometer_threshhold_settings+2
  2762  03BA  084A               	movf	??_thermometer_threshhold_settings+1,w
  2763  03BB  00A9               	movwf	_y
  2764  03BC  084B               	movf	??_thermometer_threshhold_settings+2,w
  2765  03BD  00AA               	movwf	_y+1
  2766  03BE                     l2856:	
  2767                           
  2768                           ;Button_src.c: 91:                     t = x;
  2769  03BE  082C               	movf	_x+1,w
  2770  03BF  00B0               	movwf	_t+1
  2771  03C0  082B               	movf	_x,w
  2772  03C1  00AF               	movwf	_t
  2773  03C2                     l2858:	
  2774                           
  2775                           ;Button_src.c: 92:                     w = y;
  2776  03C2  082A               	movf	_y+1,w
  2777  03C3  00AE               	movwf	_w+1
  2778  03C4  0829               	movf	_y,w
  2779  03C5  00AD               	movwf	_w
  2780                           
  2781                           ;Button_src.c: 93:                     button_delay();
  2782  03C6  120A  158A  215D  120A  118A  	fcall	_button_delay
  2783  03CB                     l2860:	
  2784                           
  2785                           ;Button_src.c: 95:                   RC0 = 0;
  2786  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2787  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2788  03CD  1007               	bcf	7,0	;volatile
  2789  03CE                     l2862:	
  2790                           
  2791                           ;Button_src.c: 96:                     RC1 = 1;
  2792  03CE  1487               	bsf	7,1	;volatile
  2793  03CF                     l2864:	
  2794                           
  2795                           ;Button_src.c: 97:                     RC2 = 1;
  2796  03CF  1507               	bsf	7,2	;volatile
  2797  03D0                     l2866:	
  2798                           
  2799                           ;Button_src.c: 98:                     RC3 = 1;
  2800  03D0  1587               	bsf	7,3	;volatile
  2801  03D1                     l2868:	
  2802                           
  2803                           ;Button_src.c: 99:                     if(RC6 == 0){
  2804  03D1  1B07               	btfsc	7,6	;volatile
  2805  03D2  2BD4               	goto	u1711
  2806  03D3  2BD5               	goto	u1710
  2807  03D4                     u1711:	
  2808  03D4  2C25               	goto	l432
  2809  03D5                     u1710:	
  2810  03D5                     l2870:	
  2811                           
  2812                           ;Button_src.c: 100:                         var1 = y;
  2813  03D5  0829               	movf	_y,w
  2814  03D6  00C9               	movwf	??_thermometer_threshhold_settings
  2815  03D7  0849               	movf	??_thermometer_threshhold_settings,w
  2816  03D8  00B5               	movwf	_var1
  2817                           
  2818                           ;Button_src.c: 101:                         var2 = x;
  2819  03D9  082B               	movf	_x,w
  2820  03DA  00C9               	movwf	??_thermometer_threshhold_settings
  2821  03DB  0849               	movf	??_thermometer_threshhold_settings,w
  2822  03DC  00B4               	movwf	_var2
  2823  03DD                     l2872:	
  2824                           
  2825                           ;Button_src.c: 102:                         set_beep_threshhold(var1,var2);
  2826  03DD  0834               	movf	_var2,w
  2827  03DE  00C9               	movwf	??_thermometer_threshhold_settings
  2828  03DF  0849               	movf	??_thermometer_threshhold_settings,w
  2829  03E0  00F0               	movwf	set_beep_threshhold@y
  2830  03E1  0835               	movf	_var1,w
  2831  03E2  120A  158A  21E8  120A  118A  	fcall	_set_beep_threshhold
  2832  03E7                     l2874:	
  2833                           
  2834                           ;Button_src.c: 103:                         write_cmd(0x1);
  2835  03E7  3001               	movlw	1
  2836  03E8  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2837  03ED                     l2876:	
  2838                           
  2839                           ;Button_src.c: 104:                         write_char('S');
  2840  03ED  3053               	movlw	83
  2841  03EE  120A  158A  21B6  120A  118A  	fcall	_write_char
  2842  03F3                     l2878:	
  2843                           
  2844                           ;Button_src.c: 105:                         write_char('A');
  2845  03F3  3041               	movlw	65
  2846  03F4  120A  158A  21B6  120A  118A  	fcall	_write_char
  2847  03F9                     l2880:	
  2848                           
  2849                           ;Button_src.c: 106:                         write_char('V');
  2850  03F9  3056               	movlw	86
  2851  03FA  120A  158A  21B6  120A  118A  	fcall	_write_char
  2852  03FF                     l2882:	
  2853                           
  2854                           ;Button_src.c: 107:                         write_char('E');
  2855  03FF  3045               	movlw	69
  2856  0400  120A  158A  21B6  120A  118A  	fcall	_write_char
  2857  0405                     l2884:	
  2858                           
  2859                           ;Button_src.c: 108:                         write_char('D');
  2860  0405  3044               	movlw	68
  2861  0406  120A  158A  21B6  120A  118A  	fcall	_write_char
  2862  040B                     l2886:	
  2863                           
  2864                           ;Button_src.c: 109:                         for(int i=0;i<30000;i++);
  2865  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2866  040C  1303               	bcf	3,6	;RP1=0, select bank0
  2867  040D  01CC               	clrf	thermometer_threshhold_settings@i
  2868  040E  01CD               	clrf	thermometer_threshhold_settings@i+1
  2869  040F                     l2892:	
  2870  040F  3001               	movlw	1
  2871  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0412  07CC               	addwf	thermometer_threshhold_settings@i,f
  2874  0413  1803               	skipnc
  2875  0414  0ACD               	incf	thermometer_threshhold_settings@i+1,f
  2876  0415  3000               	movlw	0
  2877  0416  07CD               	addwf	thermometer_threshhold_settings@i+1,f
  2878  0417                     l2894:	
  2879  0417  084D               	movf	thermometer_threshhold_settings@i+1,w
  2880  0418  3A80               	xorlw	128
  2881  0419  00FF               	movwf	btemp+1
  2882  041A  30F5               	movlw	245
  2883  041B  027F               	subwf	btemp+1,w
  2884  041C  1D03               	skipz
  2885  041D  2C20               	goto	u1725
  2886  041E  3030               	movlw	48
  2887  041F  024C               	subwf	thermometer_threshhold_settings@i,w
  2888  0420                     u1725:	
  2889  0420  1C03               	skipc
  2890  0421  2C23               	goto	u1721
  2891  0422  2C24               	goto	u1720
  2892  0423                     u1721:	
  2893  0423  2C0F               	goto	l2892
  2894  0424                     u1720:	
  2895  0424  2CF7               	goto	l435
  2896  0425                     l432:	
  2897                           ;Button_src.c: 111:                     }
  2898                           
  2899                           
  2900                           ;Button_src.c: 112:                  RC0 = 1;
  2901  0425  1407               	bsf	7,0	;volatile
  2902                           
  2903                           ;Button_src.c: 113:                  RC1 = 1;
  2904  0426  1487               	bsf	7,1	;volatile
  2905                           
  2906                           ;Button_src.c: 114:                  RC2 = 0;
  2907  0427  1107               	bcf	7,2	;volatile
  2908                           
  2909                           ;Button_src.c: 115:                  RC3 = 1;
  2910  0428  1587               	bsf	7,3	;volatile
  2911                           
  2912                           ;Button_src.c: 117:                  if(RC7 == 0){
  2913  0429  1B87               	btfsc	7,7	;volatile
  2914  042A  2C2C               	goto	u1731
  2915  042B  2C2D               	goto	u1730
  2916  042C                     u1731:	
  2917  042C  2CA3               	goto	l2916
  2918  042D                     u1730:	
  2919  042D                     l2896:	
  2920                           
  2921                           ;Button_src.c: 118:                     write_cmd(0x98);
  2922  042D  3098               	movlw	152
  2923  042E  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  2924  0433                     l2898:	
  2925                           
  2926                           ;Button_src.c: 119:                       t--;
  2927  0433  3001               	movlw	1
  2928  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0436  02AF               	subwf	_t,f
  2931  0437  3000               	movlw	0
  2932  0438  1C03               	skipc
  2933  0439  03B0               	decf	_t+1,f
  2934  043A  02B0               	subwf	_t+1,f
  2935  043B                     l2900:	
  2936                           
  2937                           ;Button_src.c: 120:                     w = (unsigned char )w;
  2938  043B  082D               	movf	_w,w
  2939  043C  00C9               	movwf	??_thermometer_threshhold_settings
  2940  043D  01CA               	clrf	??_thermometer_threshhold_settings+1
  2941  043E  0849               	movf	??_thermometer_threshhold_settings,w
  2942  043F  00AD               	movwf	_w
  2943  0440  084A               	movf	??_thermometer_threshhold_settings+1,w
  2944  0441  00AE               	movwf	_w+1
  2945  0442                     l2902:	
  2946                           
  2947                           ;Button_src.c: 121:                     t = (unsigned char )(modulus_func(t,10));
  2948  0442  0830               	movf	_t+1,w
  2949  0443  00F8               	movwf	modulus_func@x+1
  2950  0444  082F               	movf	_t,w
  2951  0445  00F7               	movwf	modulus_func@x
  2952  0446  300A               	movlw	10
  2953  0447  00F9               	movwf	modulus_func@y
  2954  0448  3000               	movlw	0
  2955  0449  00FA               	movwf	modulus_func@y+1
  2956  044A  120A  158A  20FF  120A  118A  	fcall	_modulus_func
  2957  044F  0877               	movf	?_modulus_func,w
  2958  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2959  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2960  0452  00C9               	movwf	??_thermometer_threshhold_settings
  2961  0453  01CA               	clrf	??_thermometer_threshhold_settings+1
  2962  0454  0849               	movf	??_thermometer_threshhold_settings,w
  2963  0455  00AF               	movwf	_t
  2964  0456  084A               	movf	??_thermometer_threshhold_settings+1,w
  2965  0457  00B0               	movwf	_t+1
  2966  0458                     l2904:	
  2967                           
  2968                           ;Button_src.c: 122:                     write_char(w + '0');
  2969  0458  082D               	movf	_w,w
  2970  0459  3E30               	addlw	48
  2971  045A  120A  158A  21B6  120A  118A  	fcall	_write_char
  2972  045F                     l2906:	
  2973                           
  2974                           ;Button_src.c: 123:                     write_char(t + '0');
  2975  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0461  082F               	movf	_t,w
  2978  0462  3E30               	addlw	48
  2979  0463  120A  158A  21B6  120A  118A  	fcall	_write_char
  2980  0468                     l2908:	
  2981                           
  2982                           ;Button_src.c: 124:                     w = decrementor(w,t,'0');
  2983  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2985  046A  082E               	movf	_w+1,w
  2986  046B  00C5               	movwf	decrementor@lower_val+1
  2987  046C  082D               	movf	_w,w
  2988  046D  00C4               	movwf	decrementor@lower_val
  2989  046E  0830               	movf	_t+1,w
  2990  046F  00C7               	movwf	decrementor@upper_val+1
  2991  0470  082F               	movf	_t,w
  2992  0471  00C6               	movwf	decrementor@upper_val
  2993  0472  3030               	movlw	48
  2994  0473  00C9               	movwf	??_thermometer_threshhold_settings
  2995  0474  0849               	movf	??_thermometer_threshhold_settings,w
  2996  0475  00C8               	movwf	decrementor@z
  2997  0476  120A  158A  228D  120A  118A  	fcall	_decrementor
  2998  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2999  047C  1303               	bcf	3,6	;RP1=0, select bank0
  3000  047D  00CA               	movwf	??_thermometer_threshhold_settings+1
  3001  047E  01CB               	clrf	??_thermometer_threshhold_settings+2
  3002  047F  084A               	movf	??_thermometer_threshhold_settings+1,w
  3003  0480  00AD               	movwf	_w
  3004  0481  084B               	movf	??_thermometer_threshhold_settings+2,w
  3005  0482  00AE               	movwf	_w+1
  3006  0483                     l2910:	
  3007                           
  3008                           ;Button_src.c: 125:                     if((t + '0')=='0'){
  3009  0483  082F               	movf	_t,w
  3010  0484  3E30               	addlw	48
  3011  0485  00C9               	movwf	??_thermometer_threshhold_settings
  3012  0486  0830               	movf	_t+1,w
  3013  0487  1803               	skipnc
  3014  0488  3E01               	addlw	1
  3015  0489  3E00               	addlw	0
  3016  048A  00CA               	movwf	??_thermometer_threshhold_settings+1
  3017  048B  3030               	movlw	48
  3018  048C  0649               	xorwf	??_thermometer_threshhold_settings,w
  3019  048D  044A               	iorwf	??_thermometer_threshhold_settings+1,w
  3020  048E  1D03               	btfss	3,2
  3021  048F  2C91               	goto	u1741
  3022  0490  2C92               	goto	u1740
  3023  0491                     u1741:	
  3024  0491  2C96               	goto	l437
  3025  0492                     u1740:	
  3026  0492                     l2912:	
  3027                           
  3028                           ;Button_src.c: 126:                         t = 10;
  3029  0492  300A               	movlw	10
  3030  0493  00AF               	movwf	_t
  3031  0494  3000               	movlw	0
  3032  0495  00B0               	movwf	_t+1
  3033  0496                     l437:	
  3034                           ;Button_src.c: 127:                     }
  3035                           
  3036                           
  3037                           ;Button_src.c: 129:                     x = t;
  3038  0496  0830               	movf	_t+1,w
  3039  0497  00AC               	movwf	_x+1
  3040  0498  082F               	movf	_t,w
  3041  0499  00AB               	movwf	_x
  3042                           
  3043                           ;Button_src.c: 130:                     y = w;
  3044  049A  082E               	movf	_w+1,w
  3045  049B  00AA               	movwf	_y+1
  3046  049C  082D               	movf	_w,w
  3047  049D  00A9               	movwf	_y
  3048  049E                     l2914:	
  3049                           
  3050                           ;Button_src.c: 131:                     button_delay();
  3051  049E  120A  158A  215D  120A  118A  	fcall	_button_delay
  3052  04A3                     l2916:	
  3053                           
  3054                           ;Button_src.c: 133:                 RC0 = 0;
  3055  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3056  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3057  04A5  1007               	bcf	7,0	;volatile
  3058  04A6                     l2918:	
  3059                           
  3060                           ;Button_src.c: 134:                 RC1 = 1;
  3061  04A6  1487               	bsf	7,1	;volatile
  3062  04A7                     l2920:	
  3063                           
  3064                           ;Button_src.c: 135:                 RC2 = 1;
  3065  04A7  1507               	bsf	7,2	;volatile
  3066  04A8                     l2922:	
  3067                           
  3068                           ;Button_src.c: 136:                 RC3 = 1;
  3069  04A8  1587               	bsf	7,3	;volatile
  3070  04A9                     l2924:	
  3071                           
  3072                           ;Button_src.c: 137:                     if(RC6 == 0){
  3073  04A9  1B07               	btfsc	7,6	;volatile
  3074  04AA  2CAC               	goto	u1751
  3075  04AB  2CAD               	goto	u1750
  3076  04AC                     u1751:	
  3077  04AC  2CE9               	goto	l438
  3078  04AD                     u1750:	
  3079  04AD                     l2926:	
  3080                           
  3081                           ;Button_src.c: 138:                         var1 = w;
  3082  04AD  082D               	movf	_w,w
  3083  04AE  00C9               	movwf	??_thermometer_threshhold_settings
  3084  04AF  0849               	movf	??_thermometer_threshhold_settings,w
  3085  04B0  00B5               	movwf	_var1
  3086                           
  3087                           ;Button_src.c: 139:                         var2 = t;
  3088  04B1  082F               	movf	_t,w
  3089  04B2  00C9               	movwf	??_thermometer_threshhold_settings
  3090  04B3  0849               	movf	??_thermometer_threshhold_settings,w
  3091  04B4  00B4               	movwf	_var2
  3092  04B5                     l2928:	
  3093                           
  3094                           ;Button_src.c: 140:                         set_beep_threshhold(var1,var2);
  3095  04B5  0834               	movf	_var2,w
  3096  04B6  00C9               	movwf	??_thermometer_threshhold_settings
  3097  04B7  0849               	movf	??_thermometer_threshhold_settings,w
  3098  04B8  00F0               	movwf	set_beep_threshhold@y
  3099  04B9  0835               	movf	_var1,w
  3100  04BA  120A  158A  21E8  120A  118A  	fcall	_set_beep_threshhold
  3101  04BF                     l2930:	
  3102                           
  3103                           ;Button_src.c: 141:                         write_cmd(0x1);
  3104  04BF  3001               	movlw	1
  3105  04C0  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  3106  04C5                     l2932:	
  3107                           
  3108                           ;Button_src.c: 142:                         write_char('S');
  3109  04C5  3053               	movlw	83
  3110  04C6  120A  158A  21B6  120A  118A  	fcall	_write_char
  3111  04CB                     l2934:	
  3112                           
  3113                           ;Button_src.c: 143:                         write_char('A');
  3114  04CB  3041               	movlw	65
  3115  04CC  120A  158A  21B6  120A  118A  	fcall	_write_char
  3116  04D1                     l2936:	
  3117                           
  3118                           ;Button_src.c: 144:                         write_char('V');
  3119  04D1  3056               	movlw	86
  3120  04D2  120A  158A  21B6  120A  118A  	fcall	_write_char
  3121  04D7                     l2938:	
  3122                           
  3123                           ;Button_src.c: 145:                         write_char('E');
  3124  04D7  3045               	movlw	69
  3125  04D8  120A  158A  21B6  120A  118A  	fcall	_write_char
  3126  04DD                     l2940:	
  3127                           
  3128                           ;Button_src.c: 146:                         write_char('D');
  3129  04DD  3044               	movlw	68
  3130  04DE  120A  158A  21B6  120A  118A  	fcall	_write_char
  3131  04E3                     l2942:	
  3132                           
  3133                           ;Button_src.c: 147:                         button_delay();
  3134  04E3  120A  158A  215D  120A  118A  	fcall	_button_delay
  3135  04E8  2CF7               	goto	l435
  3136  04E9                     l438:	
  3137                           ;Button_src.c: 149:                     }
  3138                           
  3139                           
  3140                           ;Button_src.c: 150:             RC0 = 0;
  3141  04E9  1007               	bcf	7,0	;volatile
  3142                           
  3143                           ;Button_src.c: 151:             RC1 = 1;
  3144  04EA  1487               	bsf	7,1	;volatile
  3145                           
  3146                           ;Button_src.c: 152:             RC2 = 1;
  3147  04EB  1507               	bsf	7,2	;volatile
  3148                           
  3149                           ;Button_src.c: 153:             RC3 = 1;
  3150  04EC  1587               	bsf	7,3	;volatile
  3151                           
  3152                           ;Button_src.c: 154:             if (RC7 == 0 ){
  3153  04ED  1B87               	btfsc	7,7	;volatile
  3154  04EE  2CF0               	goto	u1761
  3155  04EF  2CF1               	goto	u1760
  3156  04F0                     u1761:	
  3157  04F0  2B60               	goto	l2832
  3158  04F1                     u1760:	
  3159  04F1                     l2946:	
  3160                           
  3161                           ;Button_src.c: 155:             write_cmd(0x1);
  3162  04F1  3001               	movlw	1
  3163  04F2  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  3164  04F7                     l435:	
  3165  04F7  0008               	return
  3166  04F8                     __end_of_thermometer_threshhold_settings:	
  3167                           
  3168                           	psect	text5
  3169  09E8                     __ptext5:	
  3170 ;; *************** function _set_beep_threshhold *****************
  3171 ;; Defined at:
  3172 ;;		line 5 in file "buzzer_src.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  x               1    wreg     unsigned char 
  3175 ;;  y               1    0[COMMON] unsigned char 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  x               1    3[COMMON] unsigned char 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         1       0       0       0       0
  3188 ;;      Locals:         1       0       0       0       0
  3189 ;;      Temps:          2       0       0       0       0
  3190 ;;      Totals:         4       0       0       0       0
  3191 ;;Total ram usage:        4 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_thermometer_threshhold_settings
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _set_beep_threshhold
  3202  09E8                     _set_beep_threshhold:	
  3203                           
  3204                           ;incstack = 0
  3205                           ; Regs used in _set_beep_threshhold: [wreg]
  3206                           ;set_beep_threshhold@x stored from wreg
  3207  09E8  00F3               	movwf	set_beep_threshhold@x
  3208  09E9                     l2480:	
  3209                           
  3210                           ;buzzer_src.c: 6:     if (shi + '0' == x && ge + '0' == y){
  3211  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  3212  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  3213  09EB  083F               	movf	_shi,w
  3214  09EC  3E30               	addlw	48
  3215  09ED  00F1               	movwf	??_set_beep_threshhold
  3216  09EE  3000               	movlw	0
  3217  09EF  1803               	skipnc
  3218  09F0  3001               	movlw	1
  3219  09F1  00F2               	movwf	??_set_beep_threshhold+1
  3220  09F2  0873               	movf	set_beep_threshhold@x,w
  3221  09F3  0671               	xorwf	??_set_beep_threshhold,w
  3222  09F4  0472               	iorwf	??_set_beep_threshhold+1,w
  3223  09F5  1D03               	skipz
  3224  09F6  29F8               	goto	u1291
  3225  09F7  29F9               	goto	u1290
  3226  09F8                     u1291:	
  3227  09F8  2A09               	goto	l334
  3228  09F9                     u1290:	
  3229  09F9                     l2482:	
  3230  09F9  083E               	movf	_ge,w
  3231  09FA  3E30               	addlw	48
  3232  09FB  00F1               	movwf	??_set_beep_threshhold
  3233  09FC  3000               	movlw	0
  3234  09FD  1803               	skipnc
  3235  09FE  3001               	movlw	1
  3236  09FF  00F2               	movwf	??_set_beep_threshhold+1
  3237  0A00  0870               	movf	set_beep_threshhold@y,w
  3238  0A01  0671               	xorwf	??_set_beep_threshhold,w
  3239  0A02  0472               	iorwf	??_set_beep_threshhold+1,w
  3240  0A03  1D03               	skipz
  3241  0A04  2A06               	goto	u1301
  3242  0A05  2A07               	goto	u1300
  3243  0A06                     u1301:	
  3244  0A06  2A09               	goto	l334
  3245  0A07                     u1300:	
  3246  0A07                     l2484:	
  3247                           
  3248                           ;buzzer_src.c: 7:         RE1 = 1;
  3249  0A07  1489               	bsf	9,1	;volatile
  3250                           
  3251                           ;buzzer_src.c: 8:         return;
  3252  0A08  2A0A               	goto	l335
  3253  0A09                     l334:	
  3254                           ;buzzer_src.c: 10:     else{
  3255                           
  3256                           
  3257                           ;buzzer_src.c: 11:         RE1 = 0;
  3258  0A09  1089               	bcf	9,1	;volatile
  3259  0A0A                     l335:	
  3260  0A0A  0008               	return
  3261  0A0B                     __end_of_set_beep_threshhold:	
  3262                           
  3263                           	psect	text6
  3264  0AB9                     __ptext6:	
  3265 ;; *************** function _incrementor *****************
  3266 ;; Defined at:
  3267 ;;		line 10 in file "math_src.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  upper_val       2    0[BANK0 ] int 
  3270 ;;  lower_val       2    2[BANK0 ] int 
  3271 ;;  z               1    4[BANK0 ] unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      unsigned char 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       5       0       0       0
  3284 ;;      Locals:         0       0       0       0       0
  3285 ;;      Temps:          2       0       0       0       0
  3286 ;;      Totals:         2       5       0       0       0
  3287 ;;Total ram usage:        7 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    2
  3290 ;; This function calls:
  3291 ;;		_modulus_func
  3292 ;; This function is called by:
  3293 ;;		_thermometer_threshhold_settings
  3294 ;;		_time_settings
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _incrementor
  3300  0AB9                     _incrementor:	
  3301  0AB9                     l2488:	
  3302                           ;incstack = 0
  3303                           ; Regs used in _incrementor: [wreg+status,2+status,0+pclath+cstack]
  3304                           
  3305                           
  3306                           ;math_src.c: 11:      if(z == (lower_val + '0')){
  3307  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0ABB  0846               	movf	incrementor@lower_val,w
  3310  0ABC  3E30               	addlw	48
  3311  0ABD  00FB               	movwf	??_incrementor
  3312  0ABE  0847               	movf	incrementor@lower_val+1,w
  3313  0ABF  1803               	skipnc
  3314  0AC0  3E01               	addlw	1
  3315  0AC1  3E00               	addlw	0
  3316  0AC2  00FC               	movwf	??_incrementor+1
  3317  0AC3  0848               	movf	incrementor@z,w
  3318  0AC4  067B               	xorwf	??_incrementor,w
  3319  0AC5  047C               	iorwf	??_incrementor+1,w
  3320  0AC6  1D03               	skipz
  3321  0AC7  2AC9               	goto	u1311
  3322  0AC8  2ACA               	goto	u1310
  3323  0AC9                     u1311:	
  3324  0AC9  2AE3               	goto	l2494
  3325  0ACA                     u1310:	
  3326  0ACA                     l2490:	
  3327                           
  3328                           ;math_src.c: 12:      upper_val++;
  3329  0ACA  3001               	movlw	1
  3330  0ACB  07C4               	addwf	incrementor@upper_val,f
  3331  0ACC  1803               	skipnc
  3332  0ACD  0AC5               	incf	incrementor@upper_val+1,f
  3333  0ACE  3000               	movlw	0
  3334  0ACF  07C5               	addwf	incrementor@upper_val+1,f
  3335  0AD0                     l2492:	
  3336                           
  3337                           ;math_src.c: 13:      upper_val =(modulus_func(upper_val,10));
  3338  0AD0  0845               	movf	incrementor@upper_val+1,w
  3339  0AD1  00F8               	movwf	modulus_func@x+1
  3340  0AD2  0844               	movf	incrementor@upper_val,w
  3341  0AD3  00F7               	movwf	modulus_func@x
  3342  0AD4  300A               	movlw	10
  3343  0AD5  00F9               	movwf	modulus_func@y
  3344  0AD6  3000               	movlw	0
  3345  0AD7  00FA               	movwf	modulus_func@y+1
  3346  0AD8  120A  158A  20FF  120A  158A  	fcall	_modulus_func
  3347  0ADD  0878               	movf	?_modulus_func+1,w
  3348  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0AE0  00C5               	movwf	incrementor@upper_val+1
  3351  0AE1  0877               	movf	?_modulus_func,w
  3352  0AE2  00C4               	movwf	incrementor@upper_val
  3353  0AE3                     l2494:	
  3354                           
  3355                           ;math_src.c: 15:      return upper_val;
  3356  0AE3  0844               	movf	incrementor@upper_val,w
  3357  0AE4                     l484:	
  3358  0AE4  0008               	return
  3359  0AE5                     __end_of_incrementor:	
  3360                           
  3361                           	psect	text7
  3362  0A8D                     __ptext7:	
  3363 ;; *************** function _decrementor *****************
  3364 ;; Defined at:
  3365 ;;		line 19 in file "math_src.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  lower_val       2    0[BANK0 ] int 
  3368 ;;  upper_val       2    2[BANK0 ] int 
  3369 ;;  z               1    4[BANK0 ] unsigned char 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      unsigned char 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0, pclath, cstack
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         0       5       0       0       0
  3382 ;;      Locals:         0       0       0       0       0
  3383 ;;      Temps:          2       0       0       0       0
  3384 ;;      Totals:         2       5       0       0       0
  3385 ;;Total ram usage:        7 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; Hardware stack levels required when called:    2
  3388 ;; This function calls:
  3389 ;;		_modulus_func
  3390 ;; This function is called by:
  3391 ;;		_thermometer_threshhold_settings
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _decrementor
  3397  0A8D                     _decrementor:	
  3398  0A8D                     l2508:	
  3399                           ;incstack = 0
  3400                           ; Regs used in _decrementor: [wreg+status,2+status,0+pclath+cstack]
  3401                           
  3402                           
  3403                           ;math_src.c: 20:      if(z == (upper_val + '0')){
  3404  0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0A8E  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0A8F  0846               	movf	decrementor@upper_val,w
  3407  0A90  3E30               	addlw	48
  3408  0A91  00FB               	movwf	??_decrementor
  3409  0A92  0847               	movf	decrementor@upper_val+1,w
  3410  0A93  1803               	skipnc
  3411  0A94  3E01               	addlw	1
  3412  0A95  3E00               	addlw	0
  3413  0A96  00FC               	movwf	??_decrementor+1
  3414  0A97  0848               	movf	decrementor@z,w
  3415  0A98  067B               	xorwf	??_decrementor,w
  3416  0A99  047C               	iorwf	??_decrementor+1,w
  3417  0A9A  1D03               	skipz
  3418  0A9B  2A9D               	goto	u1331
  3419  0A9C  2A9E               	goto	u1330
  3420  0A9D                     u1331:	
  3421  0A9D  2AB7               	goto	l2514
  3422  0A9E                     u1330:	
  3423  0A9E                     l2510:	
  3424                           
  3425                           ;math_src.c: 21:         lower_val--;
  3426  0A9E  30FF               	movlw	255
  3427  0A9F  07C4               	addwf	decrementor@lower_val,f
  3428  0AA0  1803               	skipnc
  3429  0AA1  0AC5               	incf	decrementor@lower_val+1,f
  3430  0AA2  30FF               	movlw	255
  3431  0AA3  07C5               	addwf	decrementor@lower_val+1,f
  3432  0AA4                     l2512:	
  3433                           
  3434                           ;math_src.c: 22:         lower_val = (modulus_func(lower_val,10));
  3435  0AA4  0845               	movf	decrementor@lower_val+1,w
  3436  0AA5  00F8               	movwf	modulus_func@x+1
  3437  0AA6  0844               	movf	decrementor@lower_val,w
  3438  0AA7  00F7               	movwf	modulus_func@x
  3439  0AA8  300A               	movlw	10
  3440  0AA9  00F9               	movwf	modulus_func@y
  3441  0AAA  3000               	movlw	0
  3442  0AAB  00FA               	movwf	modulus_func@y+1
  3443  0AAC  120A  158A  20FF  120A  158A  	fcall	_modulus_func
  3444  0AB1  0878               	movf	?_modulus_func+1,w
  3445  0AB2  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0AB3  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0AB4  00C5               	movwf	decrementor@lower_val+1
  3448  0AB5  0877               	movf	?_modulus_func,w
  3449  0AB6  00C4               	movwf	decrementor@lower_val
  3450  0AB7                     l2514:	
  3451                           
  3452                           ;math_src.c: 24:      return lower_val;
  3453  0AB7  0844               	movf	decrementor@lower_val,w
  3454  0AB8                     l488:	
  3455  0AB8  0008               	return
  3456  0AB9                     __end_of_decrementor:	
  3457                           
  3458                           	psect	text8
  3459  0003                     __ptext8:	
  3460 ;; *************** function _lcd_init *****************
  3461 ;; Defined at:
  3462 ;;		line 14 in file "LCD_src.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  i               2    0        int 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0
  3479 ;;      Totals:         0       0       0       0       0
  3480 ;;Total ram usage:        0 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    2
  3483 ;; This function calls:
  3484 ;;		_delay_screen
  3485 ;;		_write_cmd
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function _lcd_init
  3493  0003                     _lcd_init:	
  3494  0003                     l2634:	
  3495                           ;incstack = 0
  3496                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3497                           
  3498                           
  3499                           ;LCD_src.c: 16:  int i;;LCD_src.c: 17:  TRISA = 0x00;
  3500  0003  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0004  1303               	bcf	3,6	;RP1=0, select bank1
  3502  0005  0185               	clrf	5	;volatile
  3503  0006                     l2636:	
  3504                           
  3505                           ;LCD_src.c: 18:  RA0=0;
  3506  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3508  0008  1005               	bcf	5,0	;volatile
  3509  0009                     l2638:	
  3510                           
  3511                           ;LCD_src.c: 19:  delay_screen();
  3512  0009  120A  158A  2173  120A  118A  	fcall	_delay_screen
  3513  000E                     l2640:	
  3514                           
  3515                           ;LCD_src.c: 20:  RA0=1;
  3516  000E  1283               	bcf	3,5	;RP0=0, select bank0
  3517  000F  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0010  1405               	bsf	5,0	;volatile
  3519  0011                     l2642:	
  3520                           
  3521                           ;LCD_src.c: 21:  RA2=1;
  3522  0011  1505               	bsf	5,2	;volatile
  3523  0012                     l2644:	
  3524                           
  3525                           ;LCD_src.c: 22:  write_cmd(0x30);
  3526  0012  3030               	movlw	48
  3527  0013  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  3528  0018                     l2646:	
  3529                           
  3530                           ;LCD_src.c: 23:  write_cmd(0x01);
  3531  0018  3001               	movlw	1
  3532  0019  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  3533  001E                     l2648:	
  3534                           
  3535                           ;LCD_src.c: 24:  write_cmd(0x06);
  3536  001E  3006               	movlw	6
  3537  001F  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  3538  0024                     l2650:	
  3539                           
  3540                           ;LCD_src.c: 25:  write_cmd(0x0c);
  3541  0024  300C               	movlw	12
  3542  0025  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  3543  002A                     l120:	
  3544  002A  0008               	return
  3545  002B                     __end_of_lcd_init:	
  3546                           
  3547                           	psect	text9
  3548  08F1                     __ptext9:	
  3549 ;; *************** function _initialise_buttons *****************
  3550 ;; Defined at:
  3551 ;;		line 10 in file "Button_src.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3565 ;;      Params:         0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0
  3568 ;;      Totals:         0       0       0       0       0
  3569 ;;Total ram usage:        0 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_main
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           
  3579                           ;psect for function _initialise_buttons
  3580  08F1                     _initialise_buttons:	
  3581  08F1                     l2652:	
  3582                           ;incstack = 0
  3583                           ; Regs used in _initialise_buttons: [wreg+status,2]
  3584                           
  3585                           
  3586                           ;Button_src.c: 11:     ADCON1 = 0x06;
  3587  08F1  3006               	movlw	6
  3588  08F2  1683               	bsf	3,5	;RP0=1, select bank1
  3589  08F3  1303               	bcf	3,6	;RP1=0, select bank1
  3590  08F4  009F               	movwf	31	;volatile
  3591                           
  3592                           ;Button_src.c: 12:     TRISC = 0xf0;
  3593  08F5  30F0               	movlw	240
  3594  08F6  0087               	movwf	7	;volatile
  3595  08F7                     l2654:	
  3596                           
  3597                           ;Button_src.c: 13:     a = 0x00;
  3598  08F7  1283               	bcf	3,5	;RP0=0, select bank0
  3599  08F8  1303               	bcf	3,6	;RP1=0, select bank0
  3600  08F9  01B9               	clrf	_a
  3601  08FA                     l2656:	
  3602                           
  3603                           ;Button_src.c: 14:     b = 0x00;
  3604  08FA  01B8               	clrf	_b
  3605  08FB                     l2658:	
  3606                           
  3607                           ;Button_src.c: 15:     c = 0x00;
  3608  08FB  01B7               	clrf	_c
  3609  08FC                     l2660:	
  3610                           
  3611                           ;Button_src.c: 16:     z = 0;
  3612  08FC  01A7               	clrf	_z
  3613  08FD  01A8               	clrf	_z+1
  3614  08FE                     l425:	
  3615  08FE  0008               	return
  3616  08FF                     __end_of_initialise_buttons:	
  3617                           
  3618                           	psect	text10
  3619  08D1                     __ptext10:	
  3620 ;; *************** function _init_temp *****************
  3621 ;; Defined at:
  3622 ;;		line 6 in file "Thermometer_src.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           
  3650                           ;psect for function _init_temp
  3651  08D1                     _init_temp:	
  3652  08D1                     l1496:	
  3653                           ;incstack = 0
  3654                           ; Regs used in _init_temp: [status,2]
  3655                           
  3656                           
  3657                           ;Thermometer_src.c: 8:     TRISE=0X00;
  3658  08D1  1683               	bsf	3,5	;RP0=1, select bank1
  3659  08D2  1303               	bcf	3,6	;RP1=0, select bank1
  3660  08D3  0189               	clrf	9	;volatile
  3661                           
  3662                           ;Thermometer_src.c: 9:     PORTE = 0X00;
  3663  08D4  1283               	bcf	3,5	;RP0=0, select bank0
  3664  08D5  1303               	bcf	3,6	;RP1=0, select bank0
  3665  08D6  0189               	clrf	9	;volatile
  3666  08D7                     l199:	
  3667  08D7  0008               	return
  3668  08D8                     __end_of_init_temp:	
  3669                           
  3670                           	psect	text11
  3671  08E8                     __ptext11:	
  3672 ;; *************** function _init *****************
  3673 ;; Defined at:
  3674 ;;		line 5 in file "LCD_src.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3688 ;;      Params:         0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _init
  3703  08E8                     _init:	
  3704  08E8                     l1504:	
  3705                           ;incstack = 0
  3706                           ; Regs used in _init: [wreg+status,2]
  3707                           
  3708                           
  3709                           ;LCD_src.c: 7:  ADCON1 = 0X07;
  3710  08E8  3007               	movlw	7
  3711  08E9  1683               	bsf	3,5	;RP0=1, select bank1
  3712  08EA  1303               	bcf	3,6	;RP1=0, select bank1
  3713  08EB  009F               	movwf	31	;volatile
  3714  08EC                     l1506:	
  3715                           
  3716                           ;LCD_src.c: 8:  TRISA0=1;
  3717  08EC  1405               	bsf	5,0	;volatile
  3718  08ED                     l1508:	
  3719                           
  3720                           ;LCD_src.c: 9:  TRISD=0X00;
  3721  08ED  0188               	clrf	8	;volatile
  3722  08EE                     l1510:	
  3723                           
  3724                           ;LCD_src.c: 10:  OPTION_REG=0X00;
  3725  08EE  0181               	clrf	1	;volatile
  3726  08EF                     l1512:	
  3727                           
  3728                           ;LCD_src.c: 11:  TRISE = 0X00;
  3729  08EF  0189               	clrf	9	;volatile
  3730  08F0                     l117:	
  3731  08F0  0008               	return
  3732  08F1                     __end_of_init:	
  3733                           
  3734                           	psect	text12
  3735  0AE5                     __ptext12:	
  3736 ;; *************** function _get_time *****************
  3737 ;; Defined at:
  3738 ;;		line 26 in file "clock_src.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  i               2    6[COMMON] int 
  3743 ;; Return value:  Size  Location     Type
  3744 ;;                  1    wreg      void 
  3745 ;; Registers used:
  3746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3747 ;; Tracked objects:
  3748 ;;		On entry : 0/0
  3749 ;;		On exit  : 0/0
  3750 ;;		Unchanged: 0/0
  3751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3752 ;;      Params:         0       0       0       0       0
  3753 ;;      Locals:         2       0       0       0       0
  3754 ;;      Temps:          1       0       0       0       0
  3755 ;;      Totals:         3       0       0       0       0
  3756 ;;Total ram usage:        3 bytes
  3757 ;; Hardware stack levels used:    1
  3758 ;; Hardware stack levels required when called:    1
  3759 ;; This function calls:
  3760 ;;		_time_read_1
  3761 ;;		_time_write_1
  3762 ;; This function is called by:
  3763 ;;		_main
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _get_time
  3769  0AE5                     _get_time:	
  3770  0AE5                     l2718:	
  3771                           ;incstack = 0
  3772                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3773                           
  3774                           
  3775                           ;clock_src.c: 28:    int i;;clock_src.c: 29:    RB5=1;
  3776  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0AE7  1686               	bsf	6,5	;volatile
  3779  0AE8                     l2720:	
  3780                           
  3781                           ;clock_src.c: 30:    time_write_1(0xbf);
  3782  0AE8  30BF               	movlw	191
  3783  0AE9  120A  158A  220B  120A  158A  	fcall	_time_write_1
  3784  0AEE                     l2722:	
  3785                           
  3786                           ;clock_src.c: 31:    for(i=0;i<7;i++)
  3787  0AEE  01F6               	clrf	get_time@i
  3788  0AEF  01F7               	clrf	get_time@i+1
  3789  0AF0                     l2728:	
  3790                           
  3791                           ;clock_src.c: 32:      {;clock_src.c: 33:         table1[i]=time_read_1();
  3792  0AF0  120A  158A  2313  120A  158A  	fcall	_time_read_1
  3793  0AF5  00F5               	movwf	??_get_time
  3794  0AF6  0876               	movf	get_time@i,w
  3795  0AF7  3E20               	addlw	(low (_table1| 0))& (0+255)
  3796  0AF8  0084               	movwf	4
  3797  0AF9  0875               	movf	??_get_time,w
  3798  0AFA  1383               	bcf	3,7	;select IRP bank0
  3799  0AFB  0080               	movwf	0
  3800  0AFC                     l2730:	
  3801                           
  3802                           ;clock_src.c: 34:      }
  3803  0AFC  3001               	movlw	1
  3804  0AFD  07F6               	addwf	get_time@i,f
  3805  0AFE  1803               	skipnc
  3806  0AFF  0AF7               	incf	get_time@i+1,f
  3807  0B00  3000               	movlw	0
  3808  0B01  07F7               	addwf	get_time@i+1,f
  3809  0B02                     l2732:	
  3810  0B02  0877               	movf	get_time@i+1,w
  3811  0B03  3A80               	xorlw	128
  3812  0B04  00FF               	movwf	btemp+1
  3813  0B05  3080               	movlw	128
  3814  0B06  027F               	subwf	btemp+1,w
  3815  0B07  1D03               	skipz
  3816  0B08  2B0B               	goto	u1665
  3817  0B09  3007               	movlw	7
  3818  0B0A  0276               	subwf	get_time@i,w
  3819  0B0B                     u1665:	
  3820  0B0B  1C03               	skipc
  3821  0B0C  2B0E               	goto	u1661
  3822  0B0D  2B0F               	goto	u1660
  3823  0B0E                     u1661:	
  3824  0B0E  2AF0               	goto	l2728
  3825  0B0F                     u1660:	
  3826  0B0F                     l276:	
  3827                           
  3828                           ;clock_src.c: 35:    RB5=0;
  3829  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0B11  1286               	bcf	6,5	;volatile
  3832  0B12                     l277:	
  3833  0B12  0008               	return
  3834  0B13                     __end_of_get_time:	
  3835                           
  3836                           	psect	text13
  3837  0B13                     __ptext13:	
  3838 ;; *************** function _time_read_1 *****************
  3839 ;; Defined at:
  3840 ;;		line 131 in file "clock_src.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  j               2    2[COMMON] int 
  3845 ;;  time_rx         1    4[COMMON] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      unsigned char 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, btemp+1
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       0       0       0       0
  3856 ;;      Locals:         3       0       0       0       0
  3857 ;;      Temps:          2       0       0       0       0
  3858 ;;      Totals:         5       0       0       0       0
  3859 ;;Total ram usage:        5 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_get_time
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _time_read_1
  3870  0B13                     _time_read_1:	
  3871  0B13                     l2456:	
  3872                           ;incstack = 0
  3873                           ; Regs used in _time_read_1: [wreg+status,2+status,0+btemp+1]
  3874                           
  3875                           
  3876                           ;clock_src.c: 133:    unsigned char time_rx=0;
  3877  0B13  01F4               	clrf	time_read_1@time_rx
  3878  0B14                     l2458:	
  3879                           
  3880                           ;clock_src.c: 134:    int j;;clock_src.c: 135:    TRISB4=1;
  3881  0B14  1683               	bsf	3,5	;RP0=1, select bank1
  3882  0B15  1303               	bcf	3,6	;RP1=0, select bank1
  3883  0B16  1606               	bsf	6,4	;volatile
  3884                           
  3885                           ;clock_src.c: 136:    for(j=0;j<8;j++)
  3886  0B17  01F2               	clrf	time_read_1@j
  3887  0B18  01F3               	clrf	time_read_1@j+1
  3888  0B19                     l294:	
  3889                           
  3890                           ;clock_src.c: 137:       {;clock_src.c: 138:         RB0=0;
  3891  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  3892  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0B1B  1006               	bcf	6,0	;volatile
  3894  0B1C                     l2464:	
  3895                           
  3896                           ;clock_src.c: 139:         time_rx=time_rx>>1;
  3897  0B1C  0874               	movf	time_read_1@time_rx,w
  3898  0B1D  00F0               	movwf	??_time_read_1
  3899  0B1E  1003               	clrc
  3900  0B1F  0C70               	rrf	??_time_read_1,w
  3901  0B20  00F1               	movwf	??_time_read_1+1
  3902  0B21  0871               	movf	??_time_read_1+1,w
  3903  0B22  00F4               	movwf	time_read_1@time_rx
  3904  0B23                     l2466:	
  3905                           
  3906                           ;clock_src.c: 140:         if(RB4)time_rx=time_rx|0x80;
  3907  0B23  1E06               	btfss	6,4	;volatile
  3908  0B24  2B26               	goto	u1271
  3909  0B25  2B27               	goto	u1270
  3910  0B26                     u1271:	
  3911  0B26  2B2C               	goto	l2470
  3912  0B27                     u1270:	
  3913  0B27                     l2468:	
  3914  0B27  0874               	movf	time_read_1@time_rx,w
  3915  0B28  3880               	iorlw	128
  3916  0B29  00F0               	movwf	??_time_read_1
  3917  0B2A  0870               	movf	??_time_read_1,w
  3918  0B2B  00F4               	movwf	time_read_1@time_rx
  3919  0B2C                     l2470:	
  3920                           
  3921                           ;clock_src.c: 142:        RB0=1;
  3922  0B2C  1406               	bsf	6,0	;volatile
  3923  0B2D                     l2472:	
  3924                           
  3925                           ;clock_src.c: 143:       }
  3926  0B2D  3001               	movlw	1
  3927  0B2E  07F2               	addwf	time_read_1@j,f
  3928  0B2F  1803               	skipnc
  3929  0B30  0AF3               	incf	time_read_1@j+1,f
  3930  0B31  3000               	movlw	0
  3931  0B32  07F3               	addwf	time_read_1@j+1,f
  3932  0B33                     l2474:	
  3933  0B33  0873               	movf	time_read_1@j+1,w
  3934  0B34  3A80               	xorlw	128
  3935  0B35  00FF               	movwf	btemp+1
  3936  0B36  3080               	movlw	128
  3937  0B37  027F               	subwf	btemp+1,w
  3938  0B38  1D03               	skipz
  3939  0B39  2B3C               	goto	u1285
  3940  0B3A  3008               	movlw	8
  3941  0B3B  0272               	subwf	time_read_1@j,w
  3942  0B3C                     u1285:	
  3943  0B3C  1C03               	skipc
  3944  0B3D  2B3F               	goto	u1281
  3945  0B3E  2B40               	goto	u1280
  3946  0B3F                     u1281:	
  3947  0B3F  2B19               	goto	l294
  3948  0B40                     u1280:	
  3949  0B40                     l295:	
  3950                           
  3951                           ;clock_src.c: 144:     TRISB4=0;
  3952  0B40  1683               	bsf	3,5	;RP0=1, select bank1
  3953  0B41  1303               	bcf	3,6	;RP1=0, select bank1
  3954  0B42  1206               	bcf	6,4	;volatile
  3955                           
  3956                           ;clock_src.c: 145:     RB0=0;
  3957  0B43  1283               	bcf	3,5	;RP0=0, select bank0
  3958  0B44  1303               	bcf	3,6	;RP1=0, select bank0
  3959  0B45  1006               	bcf	6,0	;volatile
  3960  0B46                     l2476:	
  3961                           
  3962                           ;clock_src.c: 146:     return(time_rx);
  3963  0B46  0874               	movf	time_read_1@time_rx,w
  3964  0B47                     l297:	
  3965  0B47  0008               	return
  3966  0B48                     __end_of_time_read_1:	
  3967                           
  3968                           	psect	text14
  3969  0ED2                     __ptext14:	
  3970 ;; *************** function _get_temp *****************
  3971 ;; Defined at:
  3972 ;;		line 89 in file "Thermometer_src.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  i               2    0        int 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0
  3988 ;;      Temps:          0       4       0       0       0
  3989 ;;      Totals:         0       4       0       0       0
  3990 ;;Total ram usage:        4 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    2
  3993 ;; This function calls:
  3994 ;;		___awdiv
  3995 ;;		___awmod
  3996 ;;		___lwdiv
  3997 ;;		___lwmod
  3998 ;;		_delay2
  3999 ;;		_read_byte
  4000 ;;		_reset_temp
  4001 ;;		_write_byte
  4002 ;; This function is called by:
  4003 ;;		_main
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           
  4008                           ;psect for function _get_temp
  4009  0ED2                     _get_temp:	
  4010  0ED2                     l2662:	
  4011                           ;incstack = 0
  4012                           ; Regs used in _get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4013                           
  4014                           
  4015                           ;Thermometer_src.c: 91: int i;;Thermometer_src.c: 92: TRISE0 =1;
  4016  0ED2  1683               	bsf	3,5	;RP0=1, select bank1
  4017  0ED3  1303               	bcf	3,6	;RP1=0, select bank1
  4018  0ED4  1409               	bsf	9,0	;volatile
  4019  0ED5                     l2664:	
  4020                           
  4021                           ;Thermometer_src.c: 93: reset_temp();
  4022  0ED5  120A  158A  23BC  120A  158A  	fcall	_reset_temp
  4023                           
  4024                           ;Thermometer_src.c: 94: write_byte(0XCC);
  4025  0EDA  30CC               	movlw	204
  4026  0EDB  120A  158A  23F6  120A  158A  	fcall	_write_byte
  4027  0EE0                     l2666:	
  4028                           
  4029                           ;Thermometer_src.c: 95: delay2();
  4030  0EE0  120A  158A  2189  120A  158A  	fcall	_delay2
  4031  0EE5                     l2668:	
  4032                           
  4033                           ;Thermometer_src.c: 96: write_byte(0X44);
  4034  0EE5  3044               	movlw	68
  4035  0EE6  120A  158A  23F6  120A  158A  	fcall	_write_byte
  4036  0EEB                     l2670:	
  4037                           
  4038                           ;Thermometer_src.c: 98: reset_temp();
  4039  0EEB  120A  158A  23BC  120A  158A  	fcall	_reset_temp
  4040  0EF0                     l2672:	
  4041                           
  4042                           ;Thermometer_src.c: 99: write_byte(0XCC);
  4043  0EF0  30CC               	movlw	204
  4044  0EF1  120A  158A  23F6  120A  158A  	fcall	_write_byte
  4045  0EF6                     l2674:	
  4046                           
  4047                           ;Thermometer_src.c: 100: write_byte(0XBE);
  4048  0EF6  30BE               	movlw	190
  4049  0EF7  120A  158A  23F6  120A  158A  	fcall	_write_byte
  4050  0EFC                     l2676:	
  4051                           
  4052                           ;Thermometer_src.c: 101: TLV=read_byte();
  4053  0EFC  120A  158A  2382  120A  158A  	fcall	_read_byte
  4054  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  4056  0F03  00C4               	movwf	??_get_temp
  4057  0F04  0844               	movf	??_get_temp,w
  4058  0F05  00C3               	movwf	_TLV
  4059  0F06                     l2678:	
  4060                           
  4061                           ;Thermometer_src.c: 102: THV=read_byte();
  4062  0F06  120A  158A  2382  120A  158A  	fcall	_read_byte
  4063  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  4065  0F0D  00C4               	movwf	??_get_temp
  4066  0F0E  0844               	movf	??_get_temp,w
  4067  0F0F  00C2               	movwf	_THV
  4068  0F10                     l2680:	
  4069                           
  4070                           ;Thermometer_src.c: 103: TRISE0 =1;
  4071  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  4072  0F11  1303               	bcf	3,6	;RP1=0, select bank1
  4073  0F12  1409               	bsf	9,0	;volatile
  4074  0F13                     l2682:	
  4075                           
  4076                           ;Thermometer_src.c: 104: TZ=(TLV>>4)|(THV<<4)&0X3f;
  4077  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0F15  0842               	movf	_THV,w
  4080  0F16  00C4               	movwf	??_get_temp
  4081  0F17  3004               	movlw	4
  4082  0F18                     u1595:	
  4083  0F18  1003               	clrc
  4084  0F19  0DC4               	rlf	??_get_temp,f
  4085  0F1A  3EFF               	addlw	-1
  4086  0F1B  1D03               	skipz
  4087  0F1C  2F18               	goto	u1595
  4088  0F1D  303F               	movlw	63
  4089  0F1E  0544               	andwf	??_get_temp,w
  4090  0F1F  00C5               	movwf	??_get_temp+1
  4091  0F20  0843               	movf	_TLV,w
  4092  0F21  00C6               	movwf	??_get_temp+2
  4093  0F22  3004               	movlw	4
  4094  0F23                     u1605:	
  4095  0F23  1003               	clrc
  4096  0F24  0CC6               	rrf	??_get_temp+2,f
  4097  0F25  3EFF               	addlw	-1
  4098  0F26  1D03               	skipz
  4099  0F27  2F23               	goto	u1605
  4100  0F28  0846               	movf	??_get_temp+2,w
  4101  0F29  0445               	iorwf	??_get_temp+1,w
  4102  0F2A  00C7               	movwf	??_get_temp+3
  4103  0F2B  0847               	movf	??_get_temp+3,w
  4104  0F2C  00C1               	movwf	_TZ
  4105  0F2D                     l2684:	
  4106                           
  4107                           ;Thermometer_src.c: 105: TX=TLV<<4;
  4108  0F2D  0843               	movf	_TLV,w
  4109  0F2E  00C4               	movwf	??_get_temp
  4110  0F2F  3003               	movlw	3
  4111  0F30                     u1615:	
  4112  0F30  1003               	clrc
  4113  0F31  0DC4               	rlf	??_get_temp,f
  4114  0F32  3EFF               	addlw	-1
  4115  0F33  1D03               	skipz
  4116  0F34  2F30               	goto	u1615
  4117  0F35  1003               	clrc
  4118  0F36  0D44               	rlf	??_get_temp,w
  4119  0F37  00C5               	movwf	??_get_temp+1
  4120  0F38  0845               	movf	??_get_temp+1,w
  4121  0F39  00C0               	movwf	_TX
  4122  0F3A                     l2688:	
  4123                           
  4124                           ;Thermometer_src.c: 107: ge=TZ%10;
  4125  0F3A  300A               	movlw	10
  4126  0F3B  00F0               	movwf	___awmod@divisor
  4127  0F3C  3000               	movlw	0
  4128  0F3D  00F1               	movwf	___awmod@divisor+1
  4129  0F3E  0841               	movf	_TZ,w
  4130  0F3F  00C4               	movwf	??_get_temp
  4131  0F40  01C5               	clrf	??_get_temp+1
  4132  0F41  0844               	movf	??_get_temp,w
  4133  0F42  00F2               	movwf	___awmod@dividend
  4134  0F43  0845               	movf	??_get_temp+1,w
  4135  0F44  00F3               	movwf	___awmod@dividend+1
  4136  0F45  120A  158A  2475  120A  158A  	fcall	___awmod
  4137  0F4A  0870               	movf	?___awmod,w
  4138  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  4139  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  4140  0F4D  00C6               	movwf	??_get_temp+2
  4141  0F4E  0846               	movf	??_get_temp+2,w
  4142  0F4F  00BE               	movwf	_ge
  4143                           
  4144                           ;Thermometer_src.c: 108: shi=TZ/10;
  4145  0F50  300A               	movlw	10
  4146  0F51  00F0               	movwf	___awdiv@divisor
  4147  0F52  3000               	movlw	0
  4148  0F53  00F1               	movwf	___awdiv@divisor+1
  4149  0F54  0841               	movf	_TZ,w
  4150  0F55  00C4               	movwf	??_get_temp
  4151  0F56  01C5               	clrf	??_get_temp+1
  4152  0F57  0844               	movf	??_get_temp,w
  4153  0F58  00F2               	movwf	___awdiv@dividend
  4154  0F59  0845               	movf	??_get_temp+1,w
  4155  0F5A  00F3               	movwf	___awdiv@dividend+1
  4156  0F5B  120A  118A  202B  120A  158A  	fcall	___awdiv
  4157  0F60  0870               	movf	?___awdiv,w
  4158  0F61  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0F62  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0F63  00C6               	movwf	??_get_temp+2
  4161  0F64  0846               	movf	??_get_temp+2,w
  4162  0F65  00BF               	movwf	_shi
  4163  0F66                     l2690:	
  4164                           
  4165                           ;Thermometer_src.c: 109: wd=0;
  4166  0F66  01B1               	clrf	_wd
  4167  0F67  01B2               	clrf	_wd+1
  4168  0F68                     l2692:	
  4169                           
  4170                           ;Thermometer_src.c: 110: if (TX & 0x80) wd=wd+5000;
  4171  0F68  1FC0               	btfss	_TX,7
  4172  0F69  2F6B               	goto	u1621
  4173  0F6A  2F6C               	goto	u1620
  4174  0F6B                     u1621:	
  4175  0F6B  2F74               	goto	l2696
  4176  0F6C                     u1620:	
  4177  0F6C                     l2694:	
  4178  0F6C  0831               	movf	_wd,w
  4179  0F6D  3E88               	addlw	136
  4180  0F6E  00B1               	movwf	_wd
  4181  0F6F  0832               	movf	_wd+1,w
  4182  0F70  1803               	skipnc
  4183  0F71  3E01               	addlw	1
  4184  0F72  3E13               	addlw	19
  4185  0F73  00B2               	movwf	_wd+1
  4186  0F74                     l2696:	
  4187                           
  4188                           ;Thermometer_src.c: 111: if (TX & 0x40) wd=wd+2500;
  4189  0F74  1F40               	btfss	_TX,6
  4190  0F75  2F77               	goto	u1631
  4191  0F76  2F78               	goto	u1630
  4192  0F77                     u1631:	
  4193  0F77  2F80               	goto	l2700
  4194  0F78                     u1630:	
  4195  0F78                     l2698:	
  4196  0F78  0831               	movf	_wd,w
  4197  0F79  3EC4               	addlw	196
  4198  0F7A  00B1               	movwf	_wd
  4199  0F7B  0832               	movf	_wd+1,w
  4200  0F7C  1803               	skipnc
  4201  0F7D  3E01               	addlw	1
  4202  0F7E  3E09               	addlw	9
  4203  0F7F  00B2               	movwf	_wd+1
  4204  0F80                     l2700:	
  4205                           
  4206                           ;Thermometer_src.c: 112: if (TX & 0x20) wd=wd+1250;
  4207  0F80  1EC0               	btfss	_TX,5
  4208  0F81  2F83               	goto	u1641
  4209  0F82  2F84               	goto	u1640
  4210  0F83                     u1641:	
  4211  0F83  2F8C               	goto	l2704
  4212  0F84                     u1640:	
  4213  0F84                     l2702:	
  4214  0F84  0831               	movf	_wd,w
  4215  0F85  3EE2               	addlw	226
  4216  0F86  00B1               	movwf	_wd
  4217  0F87  0832               	movf	_wd+1,w
  4218  0F88  1803               	skipnc
  4219  0F89  3E01               	addlw	1
  4220  0F8A  3E04               	addlw	4
  4221  0F8B  00B2               	movwf	_wd+1
  4222  0F8C                     l2704:	
  4223                           
  4224                           ;Thermometer_src.c: 113: if (TX & 0x10) wd=wd+625;
  4225  0F8C  1E40               	btfss	_TX,4
  4226  0F8D  2F8F               	goto	u1651
  4227  0F8E  2F90               	goto	u1650
  4228  0F8F                     u1651:	
  4229  0F8F  2F98               	goto	l2708
  4230  0F90                     u1650:	
  4231  0F90                     l2706:	
  4232  0F90  0831               	movf	_wd,w
  4233  0F91  3E71               	addlw	113
  4234  0F92  00B1               	movwf	_wd
  4235  0F93  0832               	movf	_wd+1,w
  4236  0F94  1803               	skipnc
  4237  0F95  3E01               	addlw	1
  4238  0F96  3E02               	addlw	2
  4239  0F97  00B2               	movwf	_wd+1
  4240  0F98                     l2708:	
  4241                           
  4242                           ;Thermometer_src.c: 114: shifen=wd/1000;
  4243  0F98  30E8               	movlw	232
  4244  0F99  00F6               	movwf	___lwdiv@divisor
  4245  0F9A  3003               	movlw	3
  4246  0F9B  00F7               	movwf	___lwdiv@divisor+1
  4247  0F9C  0832               	movf	_wd+1,w
  4248  0F9D  00F9               	movwf	___lwdiv@dividend+1
  4249  0F9E  0831               	movf	_wd,w
  4250  0F9F  00F8               	movwf	___lwdiv@dividend
  4251  0FA0  120A  158A  2431  120A  158A  	fcall	___lwdiv
  4252  0FA5  0876               	movf	?___lwdiv,w
  4253  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0FA8  00C4               	movwf	??_get_temp
  4256  0FA9  0844               	movf	??_get_temp,w
  4257  0FAA  00BD               	movwf	_shifen
  4258  0FAB                     l2710:	
  4259                           
  4260                           ;Thermometer_src.c: 115: baifen=(wd%1000)/100;
  4261  0FAB  3064               	movlw	100
  4262  0FAC  00F6               	movwf	___lwdiv@divisor
  4263  0FAD  3000               	movlw	0
  4264  0FAE  00F7               	movwf	___lwdiv@divisor+1
  4265  0FAF  0832               	movf	_wd+1,w
  4266  0FB0  00F3               	movwf	___lwmod@dividend+1
  4267  0FB1  0831               	movf	_wd,w
  4268  0FB2  00F2               	movwf	___lwmod@dividend
  4269  0FB3  30E8               	movlw	232
  4270  0FB4  00F0               	movwf	___lwmod@divisor
  4271  0FB5  3003               	movlw	3
  4272  0FB6  00F1               	movwf	___lwmod@divisor+1
  4273  0FB7  120A  158A  2348  120A  158A  	fcall	___lwmod
  4274  0FBC  0871               	movf	?___lwmod+1,w
  4275  0FBD  00F9               	movwf	___lwdiv@dividend+1
  4276  0FBE  0870               	movf	?___lwmod,w
  4277  0FBF  00F8               	movwf	___lwdiv@dividend
  4278  0FC0  120A  158A  2431  120A  158A  	fcall	___lwdiv
  4279  0FC5  0876               	movf	?___lwdiv,w
  4280  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0FC8  00C4               	movwf	??_get_temp
  4283  0FC9  0844               	movf	??_get_temp,w
  4284  0FCA  00BC               	movwf	_baifen
  4285  0FCB                     l2712:	
  4286                           
  4287                           ;Thermometer_src.c: 116: qianfen=(wd%100)/10;
  4288  0FCB  300A               	movlw	10
  4289  0FCC  00F6               	movwf	___lwdiv@divisor
  4290  0FCD  3000               	movlw	0
  4291  0FCE  00F7               	movwf	___lwdiv@divisor+1
  4292  0FCF  0832               	movf	_wd+1,w
  4293  0FD0  00F3               	movwf	___lwmod@dividend+1
  4294  0FD1  0831               	movf	_wd,w
  4295  0FD2  00F2               	movwf	___lwmod@dividend
  4296  0FD3  3064               	movlw	100
  4297  0FD4  00F0               	movwf	___lwmod@divisor
  4298  0FD5  3000               	movlw	0
  4299  0FD6  00F1               	movwf	___lwmod@divisor+1
  4300  0FD7  120A  158A  2348  120A  158A  	fcall	___lwmod
  4301  0FDC  0871               	movf	?___lwmod+1,w
  4302  0FDD  00F9               	movwf	___lwdiv@dividend+1
  4303  0FDE  0870               	movf	?___lwmod,w
  4304  0FDF  00F8               	movwf	___lwdiv@dividend
  4305  0FE0  120A  158A  2431  120A  158A  	fcall	___lwdiv
  4306  0FE5  0876               	movf	?___lwdiv,w
  4307  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0FE8  00C4               	movwf	??_get_temp
  4310  0FE9  0844               	movf	??_get_temp,w
  4311  0FEA  00BB               	movwf	_qianfen
  4312  0FEB                     l2714:	
  4313                           
  4314                           ;Thermometer_src.c: 117: wanfen=wd%10;
  4315  0FEB  300A               	movlw	10
  4316  0FEC  00F0               	movwf	___lwmod@divisor
  4317  0FED  3000               	movlw	0
  4318  0FEE  00F1               	movwf	___lwmod@divisor+1
  4319  0FEF  0832               	movf	_wd+1,w
  4320  0FF0  00F3               	movwf	___lwmod@dividend+1
  4321  0FF1  0831               	movf	_wd,w
  4322  0FF2  00F2               	movwf	___lwmod@dividend
  4323  0FF3  120A  158A  2348  120A  158A  	fcall	___lwmod
  4324  0FF8  0870               	movf	?___lwmod,w
  4325  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0FFB  00C4               	movwf	??_get_temp
  4328  0FFC  0844               	movf	??_get_temp,w
  4329  0FFD  00BA               	movwf	_wanfen
  4330  0FFE                     l2716:	
  4331                           
  4332                           ;Thermometer_src.c: 118: __nop();
  4333  0FFE  0000               	nop
  4334  0FFF                     l232:	
  4335  0FFF  0008               	return
  4336  1000                     __end_of_get_temp:	
  4337                           
  4338                           	psect	text15
  4339  0BF6                     __ptext15:	
  4340 ;; *************** function _write_byte *****************
  4341 ;; Defined at:
  4342 ;;		line 40 in file "Thermometer_src.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  val             1    wreg     unsigned char 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  val             1    7[COMMON] unsigned char 
  4347 ;;  i               1    8[COMMON] unsigned char 
  4348 ;;  temp            1    6[COMMON] unsigned char 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         0       0       0       0       0
  4359 ;;      Locals:         3       0       0       0       0
  4360 ;;      Temps:          2       0       0       0       0
  4361 ;;      Totals:         5       0       0       0       0
  4362 ;;Total ram usage:        5 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		_delay_temp
  4367 ;; This function is called by:
  4368 ;;		_get_temp
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function _write_byte
  4374  0BF6                     _write_byte:	
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _write_byte: [wreg+status,2+status,0+pclath+cstack]
  4378                           ;write_byte@val stored from wreg
  4379  0BF6  00F7               	movwf	write_byte@val
  4380  0BF7                     l2352:	
  4381                           
  4382                           ;Thermometer_src.c: 40: void write_byte(unsigned char val);Thermometer_src.c: 41: {;Ther
      +                          mometer_src.c: 42:  unsigned char i;;Thermometer_src.c: 43:  unsigned char temp;;Thermom
      +                          eter_src.c: 44:  for(i=8;i>0;i--)
  4383  0BF7  3008               	movlw	8
  4384  0BF8  00F4               	movwf	??_write_byte
  4385  0BF9  0874               	movf	??_write_byte,w
  4386  0BFA  00F8               	movwf	write_byte@i
  4387  0BFB                     l2358:	
  4388                           
  4389                           ;Thermometer_src.c: 45:  {;Thermometer_src.c: 46:    temp=val&0x01;
  4390  0BFB  0877               	movf	write_byte@val,w
  4391  0BFC  3901               	andlw	1
  4392  0BFD  00F4               	movwf	??_write_byte
  4393  0BFE  0874               	movf	??_write_byte,w
  4394  0BFF  00F6               	movwf	write_byte@temp
  4395  0C00                     l2360:	
  4396                           
  4397                           ;Thermometer_src.c: 47:    RE0 = 0; TRISE0 = 0;
  4398  0C00  1283               	bcf	3,5	;RP0=0, select bank0
  4399  0C01  1303               	bcf	3,6	;RP1=0, select bank0
  4400  0C02  1009               	bcf	9,0	;volatile
  4401  0C03                     l2362:	
  4402  0C03  1683               	bsf	3,5	;RP0=1, select bank1
  4403  0C04  1303               	bcf	3,6	;RP1=0, select bank1
  4404  0C05  1009               	bcf	9,0	;volatile
  4405  0C06                     l2364:	
  4406                           
  4407                           ;Thermometer_src.c: 48:    __nop();
  4408  0C06  0000               	nop
  4409  0C07                     l2366:	
  4410                           
  4411                           ;Thermometer_src.c: 49:    __nop();
  4412  0C07  0000               	nop
  4413  0C08                     l2368:	
  4414                           
  4415                           ;Thermometer_src.c: 50:    __nop();
  4416  0C08  0000               	nop
  4417  0C09                     l2370:	
  4418                           
  4419                           ;Thermometer_src.c: 51:    __nop();
  4420  0C09  0000               	nop
  4421  0C0A                     l2372:	
  4422                           
  4423                           ;Thermometer_src.c: 52:    __nop();
  4424  0C0A  0000               	nop
  4425  0C0B                     l2374:	
  4426                           
  4427                           ;Thermometer_src.c: 53:    if(temp==1) TRISE0 =1;
  4428  0C0B  0376               	decf	write_byte@temp,w
  4429  0C0C  1D03               	btfss	3,2
  4430  0C0D  2C0F               	goto	u1221
  4431  0C0E  2C10               	goto	u1220
  4432  0C0F                     u1221:	
  4433  0C0F  2C13               	goto	l2378
  4434  0C10                     u1220:	
  4435  0C10                     l2376:	
  4436  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  4437  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  4438  0C12  1409               	bsf	9,0	;volatile
  4439  0C13                     l2378:	
  4440                           
  4441                           ;Thermometer_src.c: 54:    delay_temp(2,7);
  4442  0C13  3007               	movlw	7
  4443  0C14  00F4               	movwf	??_write_byte
  4444  0C15  0874               	movf	??_write_byte,w
  4445  0C16  00F0               	movwf	delay_temp@y
  4446  0C17  3002               	movlw	2
  4447  0C18  120A  158A  2111  120A  158A  	fcall	_delay_temp
  4448  0C1D                     l2380:	
  4449                           
  4450                           ;Thermometer_src.c: 55:    TRISE0 =1;
  4451  0C1D  1683               	bsf	3,5	;RP0=1, select bank1
  4452  0C1E  1303               	bcf	3,6	;RP1=0, select bank1
  4453  0C1F  1409               	bsf	9,0	;volatile
  4454  0C20                     l2382:	
  4455                           
  4456                           ;Thermometer_src.c: 56:    __nop();
  4457  0C20  0000               	nop
  4458  0C21                     l2384:	
  4459                           
  4460                           ;Thermometer_src.c: 57:    __nop();
  4461  0C21  0000               	nop
  4462  0C22                     l2386:	
  4463                           
  4464                           ;Thermometer_src.c: 58:    val=val>>1;
  4465  0C22  0877               	movf	write_byte@val,w
  4466  0C23  00F4               	movwf	??_write_byte
  4467  0C24  1003               	clrc
  4468  0C25  0C74               	rrf	??_write_byte,w
  4469  0C26  00F5               	movwf	??_write_byte+1
  4470  0C27  0875               	movf	??_write_byte+1,w
  4471  0C28  00F7               	movwf	write_byte@val
  4472  0C29                     l2388:	
  4473                           
  4474                           ;Thermometer_src.c: 59:   }
  4475  0C29  3001               	movlw	1
  4476  0C2A  02F8               	subwf	write_byte@i,f
  4477  0C2B                     l2390:	
  4478  0C2B  0878               	movf	write_byte@i,w
  4479  0C2C  1D03               	btfss	3,2
  4480  0C2D  2C2F               	goto	u1231
  4481  0C2E  2C30               	goto	u1230
  4482  0C2F                     u1231:	
  4483  0C2F  2BFB               	goto	l2358
  4484  0C30                     u1230:	
  4485  0C30                     l216:	
  4486  0C30  0008               	return
  4487  0C31                     __end_of_write_byte:	
  4488                           
  4489                           	psect	text16
  4490  0BBC                     __ptext16:	
  4491 ;; *************** function _reset_temp *****************
  4492 ;; Defined at:
  4493 ;;		line 25 in file "Thermometer_src.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  presence        1    5[COMMON] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, pclath, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4507 ;;      Params:         0       0       0       0       0
  4508 ;;      Locals:         1       0       0       0       0
  4509 ;;      Temps:          1       0       0       0       0
  4510 ;;      Totals:         2       0       0       0       0
  4511 ;;Total ram usage:        2 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    1
  4514 ;; This function calls:
  4515 ;;		_delay_temp
  4516 ;; This function is called by:
  4517 ;;		_get_temp
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _reset_temp
  4523  0BBC                     _reset_temp:	
  4524  0BBC                     l2336:	
  4525                           ;incstack = 0
  4526                           ; Regs used in _reset_temp: [wreg+status,2+status,0+pclath+cstack]
  4527                           
  4528                           
  4529                           ;Thermometer_src.c: 27:   char presence=1;
  4530  0BBC  01F5               	clrf	reset_temp@presence
  4531  0BBD  0AF5               	incf	reset_temp@presence,f
  4532                           
  4533                           ;Thermometer_src.c: 28:   while(presence)
  4534  0BBE  2BF0               	goto	l2350
  4535  0BBF                     l206:	
  4536                           
  4537                           ;Thermometer_src.c: 29:   {;Thermometer_src.c: 30:     RE0 = 0; TRISE0 = 0 ;
  4538  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0BC1  1009               	bcf	9,0	;volatile
  4541  0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  4542  0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  4543  0BC4  1009               	bcf	9,0	;volatile
  4544  0BC5                     l2338:	
  4545                           
  4546                           ;Thermometer_src.c: 31:     delay_temp(2,70);
  4547  0BC5  3046               	movlw	70
  4548  0BC6  00F4               	movwf	??_reset_temp
  4549  0BC7  0874               	movf	??_reset_temp,w
  4550  0BC8  00F0               	movwf	delay_temp@y
  4551  0BC9  3002               	movlw	2
  4552  0BCA  120A  158A  2111  120A  158A  	fcall	_delay_temp
  4553  0BCF                     l2340:	
  4554                           
  4555                           ;Thermometer_src.c: 32:     TRISE0 =1;
  4556  0BCF  1683               	bsf	3,5	;RP0=1, select bank1
  4557  0BD0  1303               	bcf	3,6	;RP1=0, select bank1
  4558  0BD1  1409               	bsf	9,0	;volatile
  4559                           
  4560                           ;Thermometer_src.c: 33:     delay_temp(2,8);
  4561  0BD2  3008               	movlw	8
  4562  0BD3  00F4               	movwf	??_reset_temp
  4563  0BD4  0874               	movf	??_reset_temp,w
  4564  0BD5  00F0               	movwf	delay_temp@y
  4565  0BD6  3002               	movlw	2
  4566  0BD7  120A  158A  2111  120A  158A  	fcall	_delay_temp
  4567  0BDC                     l2342:	
  4568                           
  4569                           ;Thermometer_src.c: 34:     if(RE0==1) presence=1;
  4570  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0BDE  1C09               	btfss	9,0	;volatile
  4573  0BDF  2BE1               	goto	u1201
  4574  0BE0  2BE2               	goto	u1200
  4575  0BE1                     u1201:	
  4576  0BE1  2BE5               	goto	l2346
  4577  0BE2                     u1200:	
  4578  0BE2                     l2344:	
  4579  0BE2  01F5               	clrf	reset_temp@presence
  4580  0BE3  0AF5               	incf	reset_temp@presence,f
  4581  0BE4  2BE6               	goto	l2348
  4582  0BE5                     l2346:	
  4583  0BE5  01F5               	clrf	reset_temp@presence
  4584  0BE6                     l2348:	
  4585                           
  4586                           ;Thermometer_src.c: 36:     delay_temp(2,60);
  4587  0BE6  303C               	movlw	60
  4588  0BE7  00F4               	movwf	??_reset_temp
  4589  0BE8  0874               	movf	??_reset_temp,w
  4590  0BE9  00F0               	movwf	delay_temp@y
  4591  0BEA  3002               	movlw	2
  4592  0BEB  120A  158A  2111  120A  158A  	fcall	_delay_temp
  4593  0BF0                     l2350:	
  4594                           
  4595                           ;Thermometer_src.c: 28:   while(presence)
  4596  0BF0  0875               	movf	reset_temp@presence,w
  4597  0BF1  1D03               	btfss	3,2
  4598  0BF2  2BF4               	goto	u1211
  4599  0BF3  2BF5               	goto	u1210
  4600  0BF4                     u1211:	
  4601  0BF4  2BBF               	goto	l206
  4602  0BF5                     u1210:	
  4603  0BF5                     l210:	
  4604  0BF5  0008               	return
  4605  0BF6                     __end_of_reset_temp:	
  4606                           
  4607                           	psect	text17
  4608  0B82                     __ptext17:	
  4609 ;; *************** function _read_byte *****************
  4610 ;; Defined at:
  4611 ;;		line 62 in file "Thermometer_src.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  i               1    6[COMMON] unsigned char 
  4616 ;;  value           1    5[COMMON] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      unsigned char 
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4626 ;;      Params:         0       0       0       0       0
  4627 ;;      Locals:         2       0       0       0       0
  4628 ;;      Temps:          1       0       0       0       0
  4629 ;;      Totals:         3       0       0       0       0
  4630 ;;Total ram usage:        3 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    1
  4633 ;; This function calls:
  4634 ;;		_delay_temp
  4635 ;; This function is called by:
  4636 ;;		_get_temp
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _read_byte
  4642  0B82                     _read_byte:	
  4643  0B82                     l2392:	
  4644                           ;incstack = 0
  4645                           ; Regs used in _read_byte: [wreg+status,2+status,0+pclath+cstack]
  4646                           
  4647                           
  4648                           ;Thermometer_src.c: 64:  unsigned char i;;Thermometer_src.c: 65:  unsigned char value=0;
  4649  0B82  01F5               	clrf	read_byte@value
  4650  0B83                     l2394:	
  4651                           
  4652                           ;Thermometer_src.c: 66:  static _Bool j;;Thermometer_src.c: 67:  for(i=8;i>0;i--)
  4653  0B83  3008               	movlw	8
  4654  0B84  00F4               	movwf	??_read_byte
  4655  0B85  0874               	movf	??_read_byte,w
  4656  0B86  00F6               	movwf	read_byte@i
  4657  0B87                     l2400:	
  4658                           
  4659                           ;Thermometer_src.c: 68:  {;Thermometer_src.c: 69:    value>>=1;
  4660  0B87  1003               	clrc
  4661  0B88  0CF5               	rrf	read_byte@value,f
  4662  0B89                     l2402:	
  4663                           
  4664                           ;Thermometer_src.c: 70:    RE0 = 0; TRISE0 = 0;
  4665  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  4666  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  4667  0B8B  1009               	bcf	9,0	;volatile
  4668  0B8C                     l2404:	
  4669  0B8C  1683               	bsf	3,5	;RP0=1, select bank1
  4670  0B8D  1303               	bcf	3,6	;RP1=0, select bank1
  4671  0B8E  1009               	bcf	9,0	;volatile
  4672  0B8F                     l2406:	
  4673                           
  4674                           ;Thermometer_src.c: 71:    __nop();
  4675  0B8F  0000               	nop
  4676  0B90                     l2408:	
  4677                           
  4678                           ;Thermometer_src.c: 72:    __nop();
  4679  0B90  0000               	nop
  4680  0B91                     l2410:	
  4681                           
  4682                           ;Thermometer_src.c: 73:    __nop();
  4683  0B91  0000               	nop
  4684  0B92                     l2412:	
  4685                           
  4686                           ;Thermometer_src.c: 74:    __nop();
  4687  0B92  0000               	nop
  4688  0B93                     l2414:	
  4689                           
  4690                           ;Thermometer_src.c: 75:    __nop();
  4691  0B93  0000               	nop
  4692  0B94                     l2416:	
  4693                           
  4694                           ;Thermometer_src.c: 76:    __nop();
  4695  0B94  0000               	nop
  4696  0B95                     l2418:	
  4697                           
  4698                           ;Thermometer_src.c: 77:    TRISE0 =1;
  4699  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  4700  0B96  1303               	bcf	3,6	;RP1=0, select bank1
  4701  0B97  1409               	bsf	9,0	;volatile
  4702  0B98                     l2420:	
  4703                           
  4704                           ;Thermometer_src.c: 78:    __nop();
  4705  0B98  0000               	nop
  4706  0B99                     l2422:	
  4707                           
  4708                           ;Thermometer_src.c: 79:    __nop();
  4709  0B99  0000               	nop
  4710  0B9A                     l2424:	
  4711                           
  4712                           ;Thermometer_src.c: 80:    __nop();
  4713  0B9A  0000               	nop
  4714  0B9B                     l2426:	
  4715                           
  4716                           ;Thermometer_src.c: 81:    __nop();
  4717  0B9B  0000               	nop
  4718  0B9C                     l2428:	
  4719                           
  4720                           ;Thermometer_src.c: 82:    __nop();
  4721  0B9C  0000               	nop
  4722  0B9D                     l2430:	
  4723                           
  4724                           ;Thermometer_src.c: 83:    j=RE0;
  4725  0B9D  3000               	movlw	0
  4726  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4728  0BA0  1809               	btfsc	9,0	;volatile
  4729  0BA1  3001               	movlw	1
  4730  0BA2  00B3               	movwf	read_byte@j
  4731  0BA3                     l2432:	
  4732                           
  4733                           ;Thermometer_src.c: 84:    if(j) value|=0x80;
  4734  0BA3  0833               	movf	read_byte@j,w
  4735  0BA4  1903               	btfsc	3,2
  4736  0BA5  2BA7               	goto	u1241
  4737  0BA6  2BA8               	goto	u1240
  4738  0BA7                     u1241:	
  4739  0BA7  2BA9               	goto	l2436
  4740  0BA8                     u1240:	
  4741  0BA8                     l2434:	
  4742  0BA8  17F5               	bsf	read_byte@value,7
  4743  0BA9                     l2436:	
  4744                           
  4745                           ;Thermometer_src.c: 85:    delay_temp(2,7);
  4746  0BA9  3007               	movlw	7
  4747  0BAA  00F4               	movwf	??_read_byte
  4748  0BAB  0874               	movf	??_read_byte,w
  4749  0BAC  00F0               	movwf	delay_temp@y
  4750  0BAD  3002               	movlw	2
  4751  0BAE  120A  158A  2111  120A  158A  	fcall	_delay_temp
  4752  0BB3                     l2438:	
  4753                           
  4754                           ;Thermometer_src.c: 86:   }
  4755  0BB3  3001               	movlw	1
  4756  0BB4  02F6               	subwf	read_byte@i,f
  4757  0BB5                     l2440:	
  4758  0BB5  0876               	movf	read_byte@i,w
  4759  0BB6  1D03               	btfss	3,2
  4760  0BB7  2BB9               	goto	u1251
  4761  0BB8  2BBA               	goto	u1250
  4762  0BB9                     u1251:	
  4763  0BB9  2B87               	goto	l2400
  4764  0BBA                     u1250:	
  4765  0BBA                     l2442:	
  4766                           
  4767                           ;Thermometer_src.c: 87:   return(value);
  4768  0BBA  0875               	movf	read_byte@value,w
  4769  0BBB                     l224:	
  4770  0BBB  0008               	return
  4771  0BBC                     __end_of_read_byte:	
  4772                           
  4773                           	psect	text18
  4774  0911                     __ptext18:	
  4775 ;; *************** function _delay_temp *****************
  4776 ;; Defined at:
  4777 ;;		line 121 in file "Thermometer_src.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  x               1    wreg     unsigned char 
  4780 ;;  y               1    0[COMMON] unsigned char 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  x               1    2[COMMON] unsigned char 
  4783 ;;  z               1    3[COMMON] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4793 ;;      Params:         1       0       0       0       0
  4794 ;;      Locals:         2       0       0       0       0
  4795 ;;      Temps:          1       0       0       0       0
  4796 ;;      Totals:         4       0       0       0       0
  4797 ;;Total ram usage:        4 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_reset_temp
  4803 ;;		_write_byte
  4804 ;;		_read_byte
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function _delay_temp
  4810  0911                     _delay_temp:	
  4811                           
  4812                           ;incstack = 0
  4813                           ; Regs used in _delay_temp: [wreg+status,2+status,0]
  4814                           ;delay_temp@x stored from wreg
  4815  0911  00F2               	movwf	delay_temp@x
  4816  0912                     l235:	
  4817                           ;Thermometer_src.c: 121: void delay_temp(char x, char y);Thermometer_src.c: 122: {;Therm
      +                          ometer_src.c: 123:  char z;;Thermometer_src.c: 124:  do{
  4818                           
  4819  0912                     l2268:	
  4820                           
  4821                           ;Thermometer_src.c: 125:  z=y;
  4822  0912  0870               	movf	delay_temp@y,w
  4823  0913  00F1               	movwf	??_delay_temp
  4824  0914  0871               	movf	??_delay_temp,w
  4825  0915  00F3               	movwf	delay_temp@z
  4826  0916                     l2270:	
  4827  0916  3001               	movlw	1
  4828  0917  02F3               	subwf	delay_temp@z,f
  4829  0918  1D03               	btfss	3,2
  4830  0919  291B               	goto	u1151
  4831  091A  291C               	goto	u1150
  4832  091B                     u1151:	
  4833  091B  2916               	goto	l2270
  4834  091C                     u1150:	
  4835  091C                     l2272:	
  4836                           
  4837                           ;Thermometer_src.c: 127:  }while(--x);
  4838  091C  3001               	movlw	1
  4839  091D  02F2               	subwf	delay_temp@x,f
  4840  091E  1D03               	btfss	3,2
  4841  091F  2921               	goto	u1161
  4842  0920  2922               	goto	u1160
  4843  0921                     u1161:	
  4844  0921  2912               	goto	l235
  4845  0922                     u1160:	
  4846  0922                     l239:	
  4847  0922  0008               	return
  4848  0923                     __end_of_delay_temp:	
  4849                           
  4850                           	psect	text19
  4851  0989                     __ptext19:	
  4852 ;; *************** function _delay2 *****************
  4853 ;; Defined at:
  4854 ;;		line 130 in file "Thermometer_src.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  i               2    0[COMMON] int 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, btemp+1
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4868 ;;      Params:         0       0       0       0       0
  4869 ;;      Locals:         2       0       0       0       0
  4870 ;;      Temps:          0       0       0       0       0
  4871 ;;      Totals:         2       0       0       0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_get_temp
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _delay2
  4883  0989                     _delay2:	
  4884  0989                     l2446:	
  4885                           ;incstack = 0
  4886                           ; Regs used in _delay2: [wreg+status,2+btemp+1]
  4887                           
  4888                           
  4889                           ;Thermometer_src.c: 131:  for (int i = 0; i<50;i++){
  4890  0989  01F0               	clrf	delay2@i
  4891  098A  01F1               	clrf	delay2@i+1
  4892  098B                     l2452:	
  4893                           
  4894                           ;Thermometer_src.c: 132:  }
  4895  098B  3001               	movlw	1
  4896  098C  07F0               	addwf	delay2@i,f
  4897  098D  1803               	skipnc
  4898  098E  0AF1               	incf	delay2@i+1,f
  4899  098F  3000               	movlw	0
  4900  0990  07F1               	addwf	delay2@i+1,f
  4901  0991                     l2454:	
  4902  0991  0871               	movf	delay2@i+1,w
  4903  0992  3A80               	xorlw	128
  4904  0993  00FF               	movwf	btemp+1
  4905  0994  3080               	movlw	128
  4906  0995  027F               	subwf	btemp+1,w
  4907  0996  1D03               	skipz
  4908  0997  299A               	goto	u1265
  4909  0998  3032               	movlw	50
  4910  0999  0270               	subwf	delay2@i,w
  4911  099A                     u1265:	
  4912  099A  1C03               	skipc
  4913  099B  299D               	goto	u1261
  4914  099C  299E               	goto	u1260
  4915  099D                     u1261:	
  4916  099D  298B               	goto	l2452
  4917  099E                     u1260:	
  4918  099E                     l244:	
  4919  099E  0008               	return
  4920  099F                     __end_of_delay2:	
  4921                           
  4922                           	psect	text20
  4923  0B48                     __ptext20:	
  4924 ;; *************** function ___lwmod *****************
  4925 ;; Defined at:
  4926 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  divisor         2    0[COMMON] unsigned int 
  4929 ;;  dividend        2    2[COMMON] unsigned int 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  counter         1    5[COMMON] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2    0[COMMON] unsigned int 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4941 ;;      Params:         4       0       0       0       0
  4942 ;;      Locals:         1       0       0       0       0
  4943 ;;      Temps:          1       0       0       0       0
  4944 ;;      Totals:         6       0       0       0       0
  4945 ;;Total ram usage:        6 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_get_temp
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function ___lwmod
  4956  0B48                     ___lwmod:	
  4957  0B48                     l2606:	
  4958                           ;incstack = 0
  4959                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4960                           
  4961  0B48  0870               	movf	___lwmod@divisor,w
  4962  0B49  0471               	iorwf	___lwmod@divisor+1,w
  4963  0B4A  1903               	btfsc	3,2
  4964  0B4B  2B4D               	goto	u1531
  4965  0B4C  2B4E               	goto	u1530
  4966  0B4D                     u1531:	
  4967  0B4D  2B7D               	goto	l2624
  4968  0B4E                     u1530:	
  4969  0B4E                     l2608:	
  4970  0B4E  01F5               	clrf	___lwmod@counter
  4971  0B4F  0AF5               	incf	___lwmod@counter,f
  4972  0B50  2B5C               	goto	l2614
  4973  0B51                     l2610:	
  4974  0B51  3001               	movlw	1
  4975  0B52                     u1545:	
  4976  0B52  1003               	clrc
  4977  0B53  0DF0               	rlf	___lwmod@divisor,f
  4978  0B54  0DF1               	rlf	___lwmod@divisor+1,f
  4979  0B55  3EFF               	addlw	-1
  4980  0B56  1D03               	skipz
  4981  0B57  2B52               	goto	u1545
  4982  0B58                     l2612:	
  4983  0B58  3001               	movlw	1
  4984  0B59  00F4               	movwf	??___lwmod
  4985  0B5A  0874               	movf	??___lwmod,w
  4986  0B5B  07F5               	addwf	___lwmod@counter,f
  4987  0B5C                     l2614:	
  4988  0B5C  1FF1               	btfss	___lwmod@divisor+1,7
  4989  0B5D  2B5F               	goto	u1551
  4990  0B5E  2B60               	goto	u1550
  4991  0B5F                     u1551:	
  4992  0B5F  2B51               	goto	l2610
  4993  0B60                     u1550:	
  4994  0B60                     l2616:	
  4995  0B60  0871               	movf	___lwmod@divisor+1,w
  4996  0B61  0273               	subwf	___lwmod@dividend+1,w
  4997  0B62  1D03               	skipz
  4998  0B63  2B66               	goto	u1565
  4999  0B64  0870               	movf	___lwmod@divisor,w
  5000  0B65  0272               	subwf	___lwmod@dividend,w
  5001  0B66                     u1565:	
  5002  0B66  1C03               	skipc
  5003  0B67  2B69               	goto	u1561
  5004  0B68  2B6A               	goto	u1560
  5005  0B69                     u1561:	
  5006  0B69  2B70               	goto	l2620
  5007  0B6A                     u1560:	
  5008  0B6A                     l2618:	
  5009  0B6A  0870               	movf	___lwmod@divisor,w
  5010  0B6B  02F2               	subwf	___lwmod@dividend,f
  5011  0B6C  0871               	movf	___lwmod@divisor+1,w
  5012  0B6D  1C03               	skipc
  5013  0B6E  03F3               	decf	___lwmod@dividend+1,f
  5014  0B6F  02F3               	subwf	___lwmod@dividend+1,f
  5015  0B70                     l2620:	
  5016  0B70  3001               	movlw	1
  5017  0B71                     u1575:	
  5018  0B71  1003               	clrc
  5019  0B72  0CF1               	rrf	___lwmod@divisor+1,f
  5020  0B73  0CF0               	rrf	___lwmod@divisor,f
  5021  0B74  3EFF               	addlw	-1
  5022  0B75  1D03               	skipz
  5023  0B76  2B71               	goto	u1575
  5024  0B77                     l2622:	
  5025  0B77  3001               	movlw	1
  5026  0B78  02F5               	subwf	___lwmod@counter,f
  5027  0B79  1D03               	btfss	3,2
  5028  0B7A  2B7C               	goto	u1581
  5029  0B7B  2B7D               	goto	u1580
  5030  0B7C                     u1581:	
  5031  0B7C  2B60               	goto	l2616
  5032  0B7D                     u1580:	
  5033  0B7D                     l2624:	
  5034  0B7D  0873               	movf	___lwmod@dividend+1,w
  5035  0B7E  00F1               	movwf	?___lwmod+1
  5036  0B7F  0872               	movf	___lwmod@dividend,w
  5037  0B80  00F0               	movwf	?___lwmod
  5038  0B81                     l864:	
  5039  0B81  0008               	return
  5040  0B82                     __end_of___lwmod:	
  5041                           
  5042                           	psect	text21
  5043  0C31                     __ptext21:	
  5044 ;; *************** function ___lwdiv *****************
  5045 ;; Defined at:
  5046 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  divisor         2    6[COMMON] unsigned int 
  5049 ;;  dividend        2    8[COMMON] unsigned int 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  quotient        2   11[COMMON] unsigned int 
  5052 ;;  counter         1   13[COMMON] unsigned char 
  5053 ;; Return value:  Size  Location     Type
  5054 ;;                  2    6[COMMON] unsigned int 
  5055 ;; Registers used:
  5056 ;;		wreg, status,2, status,0
  5057 ;; Tracked objects:
  5058 ;;		On entry : 0/0
  5059 ;;		On exit  : 0/0
  5060 ;;		Unchanged: 0/0
  5061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5062 ;;      Params:         4       0       0       0       0
  5063 ;;      Locals:         3       0       0       0       0
  5064 ;;      Temps:          1       0       0       0       0
  5065 ;;      Totals:         8       0       0       0       0
  5066 ;;Total ram usage:        8 bytes
  5067 ;; Hardware stack levels used:    1
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_get_temp
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           
  5076                           ;psect for function ___lwdiv
  5077  0C31                     ___lwdiv:	
  5078  0C31                     l2580:	
  5079                           ;incstack = 0
  5080                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5081                           
  5082  0C31  01FB               	clrf	___lwdiv@quotient
  5083  0C32  01FC               	clrf	___lwdiv@quotient+1
  5084  0C33                     l2582:	
  5085  0C33  0876               	movf	___lwdiv@divisor,w
  5086  0C34  0477               	iorwf	___lwdiv@divisor+1,w
  5087  0C35  1903               	btfsc	3,2
  5088  0C36  2C38               	goto	u1461
  5089  0C37  2C39               	goto	u1460
  5090  0C38                     u1461:	
  5091  0C38  2C70               	goto	l2602
  5092  0C39                     u1460:	
  5093  0C39                     l2584:	
  5094  0C39  01FD               	clrf	___lwdiv@counter
  5095  0C3A  0AFD               	incf	___lwdiv@counter,f
  5096  0C3B  2C47               	goto	l2590
  5097  0C3C                     l2586:	
  5098  0C3C  3001               	movlw	1
  5099  0C3D                     u1475:	
  5100  0C3D  1003               	clrc
  5101  0C3E  0DF6               	rlf	___lwdiv@divisor,f
  5102  0C3F  0DF7               	rlf	___lwdiv@divisor+1,f
  5103  0C40  3EFF               	addlw	-1
  5104  0C41  1D03               	skipz
  5105  0C42  2C3D               	goto	u1475
  5106  0C43                     l2588:	
  5107  0C43  3001               	movlw	1
  5108  0C44  00FA               	movwf	??___lwdiv
  5109  0C45  087A               	movf	??___lwdiv,w
  5110  0C46  07FD               	addwf	___lwdiv@counter,f
  5111  0C47                     l2590:	
  5112  0C47  1FF7               	btfss	___lwdiv@divisor+1,7
  5113  0C48  2C4A               	goto	u1481
  5114  0C49  2C4B               	goto	u1480
  5115  0C4A                     u1481:	
  5116  0C4A  2C3C               	goto	l2586
  5117  0C4B                     u1480:	
  5118  0C4B                     l2592:	
  5119  0C4B  3001               	movlw	1
  5120  0C4C                     u1495:	
  5121  0C4C  1003               	clrc
  5122  0C4D  0DFB               	rlf	___lwdiv@quotient,f
  5123  0C4E  0DFC               	rlf	___lwdiv@quotient+1,f
  5124  0C4F  3EFF               	addlw	-1
  5125  0C50  1D03               	skipz
  5126  0C51  2C4C               	goto	u1495
  5127  0C52  0877               	movf	___lwdiv@divisor+1,w
  5128  0C53  0279               	subwf	___lwdiv@dividend+1,w
  5129  0C54  1D03               	skipz
  5130  0C55  2C58               	goto	u1505
  5131  0C56  0876               	movf	___lwdiv@divisor,w
  5132  0C57  0278               	subwf	___lwdiv@dividend,w
  5133  0C58                     u1505:	
  5134  0C58  1C03               	skipc
  5135  0C59  2C5B               	goto	u1501
  5136  0C5A  2C5C               	goto	u1500
  5137  0C5B                     u1501:	
  5138  0C5B  2C63               	goto	l2598
  5139  0C5C                     u1500:	
  5140  0C5C                     l2594:	
  5141  0C5C  0876               	movf	___lwdiv@divisor,w
  5142  0C5D  02F8               	subwf	___lwdiv@dividend,f
  5143  0C5E  0877               	movf	___lwdiv@divisor+1,w
  5144  0C5F  1C03               	skipc
  5145  0C60  03F9               	decf	___lwdiv@dividend+1,f
  5146  0C61  02F9               	subwf	___lwdiv@dividend+1,f
  5147  0C62                     l2596:	
  5148  0C62  147B               	bsf	___lwdiv@quotient,0
  5149  0C63                     l2598:	
  5150  0C63  3001               	movlw	1
  5151  0C64                     u1515:	
  5152  0C64  1003               	clrc
  5153  0C65  0CF7               	rrf	___lwdiv@divisor+1,f
  5154  0C66  0CF6               	rrf	___lwdiv@divisor,f
  5155  0C67  3EFF               	addlw	-1
  5156  0C68  1D03               	skipz
  5157  0C69  2C64               	goto	u1515
  5158  0C6A                     l2600:	
  5159  0C6A  3001               	movlw	1
  5160  0C6B  02FD               	subwf	___lwdiv@counter,f
  5161  0C6C  1D03               	btfss	3,2
  5162  0C6D  2C6F               	goto	u1521
  5163  0C6E  2C70               	goto	u1520
  5164  0C6F                     u1521:	
  5165  0C6F  2C4B               	goto	l2592
  5166  0C70                     u1520:	
  5167  0C70                     l2602:	
  5168  0C70  087C               	movf	___lwdiv@quotient+1,w
  5169  0C71  00F7               	movwf	?___lwdiv+1
  5170  0C72  087B               	movf	___lwdiv@quotient,w
  5171  0C73  00F6               	movwf	?___lwdiv
  5172  0C74                     l854:	
  5173  0C74  0008               	return
  5174  0C75                     __end_of___lwdiv:	
  5175                           
  5176                           	psect	text22
  5177  002B                     __ptext22:	
  5178 ;; *************** function ___awdiv *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  divisor         2    0[COMMON] int 
  5183 ;;  dividend        2    2[COMMON] int 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  quotient        2    7[COMMON] int 
  5186 ;;  sign            1    6[COMMON] unsigned char 
  5187 ;;  counter         1    5[COMMON] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  2    0[COMMON] int 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5197 ;;      Params:         4       0       0       0       0
  5198 ;;      Locals:         4       0       0       0       0
  5199 ;;      Temps:          1       0       0       0       0
  5200 ;;      Totals:         9       0       0       0       0
  5201 ;;Total ram usage:        9 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_get_temp
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           
  5210                           
  5211                           ;psect for function ___awdiv
  5212  002B                     ___awdiv:	
  5213  002B                     l2536:	
  5214                           ;incstack = 0
  5215                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5216                           
  5217  002B  01F6               	clrf	___awdiv@sign
  5218  002C                     l2538:	
  5219  002C  1FF1               	btfss	___awdiv@divisor+1,7
  5220  002D  282F               	goto	u1361
  5221  002E  2830               	goto	u1360
  5222  002F                     u1361:	
  5223  002F  2837               	goto	l2544
  5224  0030                     u1360:	
  5225  0030                     l2540:	
  5226  0030  09F0               	comf	___awdiv@divisor,f
  5227  0031  09F1               	comf	___awdiv@divisor+1,f
  5228  0032  0AF0               	incf	___awdiv@divisor,f
  5229  0033  1903               	skipnz
  5230  0034  0AF1               	incf	___awdiv@divisor+1,f
  5231  0035                     l2542:	
  5232  0035  01F6               	clrf	___awdiv@sign
  5233  0036  0AF6               	incf	___awdiv@sign,f
  5234  0037                     l2544:	
  5235  0037  1FF3               	btfss	___awdiv@dividend+1,7
  5236  0038  283A               	goto	u1371
  5237  0039  283B               	goto	u1370
  5238  003A                     u1371:	
  5239  003A  2844               	goto	l2550
  5240  003B                     u1370:	
  5241  003B                     l2546:	
  5242  003B  09F2               	comf	___awdiv@dividend,f
  5243  003C  09F3               	comf	___awdiv@dividend+1,f
  5244  003D  0AF2               	incf	___awdiv@dividend,f
  5245  003E  1903               	skipnz
  5246  003F  0AF3               	incf	___awdiv@dividend+1,f
  5247  0040                     l2548:	
  5248  0040  3001               	movlw	1
  5249  0041  00F4               	movwf	??___awdiv
  5250  0042  0874               	movf	??___awdiv,w
  5251  0043  06F6               	xorwf	___awdiv@sign,f
  5252  0044                     l2550:	
  5253  0044  01F7               	clrf	___awdiv@quotient
  5254  0045  01F8               	clrf	___awdiv@quotient+1
  5255  0046                     l2552:	
  5256  0046  0870               	movf	___awdiv@divisor,w
  5257  0047  0471               	iorwf	___awdiv@divisor+1,w
  5258  0048  1903               	btfsc	3,2
  5259  0049  284B               	goto	u1381
  5260  004A  284C               	goto	u1380
  5261  004B                     u1381:	
  5262  004B  2883               	goto	l2572
  5263  004C                     u1380:	
  5264  004C                     l2554:	
  5265  004C  01F5               	clrf	___awdiv@counter
  5266  004D  0AF5               	incf	___awdiv@counter,f
  5267  004E  285A               	goto	l2560
  5268  004F                     l2556:	
  5269  004F  3001               	movlw	1
  5270  0050                     u1395:	
  5271  0050  1003               	clrc
  5272  0051  0DF0               	rlf	___awdiv@divisor,f
  5273  0052  0DF1               	rlf	___awdiv@divisor+1,f
  5274  0053  3EFF               	addlw	-1
  5275  0054  1D03               	skipz
  5276  0055  2850               	goto	u1395
  5277  0056                     l2558:	
  5278  0056  3001               	movlw	1
  5279  0057  00F4               	movwf	??___awdiv
  5280  0058  0874               	movf	??___awdiv,w
  5281  0059  07F5               	addwf	___awdiv@counter,f
  5282  005A                     l2560:	
  5283  005A  1FF1               	btfss	___awdiv@divisor+1,7
  5284  005B  285D               	goto	u1401
  5285  005C  285E               	goto	u1400
  5286  005D                     u1401:	
  5287  005D  284F               	goto	l2556
  5288  005E                     u1400:	
  5289  005E                     l2562:	
  5290  005E  3001               	movlw	1
  5291  005F                     u1415:	
  5292  005F  1003               	clrc
  5293  0060  0DF7               	rlf	___awdiv@quotient,f
  5294  0061  0DF8               	rlf	___awdiv@quotient+1,f
  5295  0062  3EFF               	addlw	-1
  5296  0063  1D03               	skipz
  5297  0064  285F               	goto	u1415
  5298  0065  0871               	movf	___awdiv@divisor+1,w
  5299  0066  0273               	subwf	___awdiv@dividend+1,w
  5300  0067  1D03               	skipz
  5301  0068  286B               	goto	u1425
  5302  0069  0870               	movf	___awdiv@divisor,w
  5303  006A  0272               	subwf	___awdiv@dividend,w
  5304  006B                     u1425:	
  5305  006B  1C03               	skipc
  5306  006C  286E               	goto	u1421
  5307  006D  286F               	goto	u1420
  5308  006E                     u1421:	
  5309  006E  2876               	goto	l2568
  5310  006F                     u1420:	
  5311  006F                     l2564:	
  5312  006F  0870               	movf	___awdiv@divisor,w
  5313  0070  02F2               	subwf	___awdiv@dividend,f
  5314  0071  0871               	movf	___awdiv@divisor+1,w
  5315  0072  1C03               	skipc
  5316  0073  03F3               	decf	___awdiv@dividend+1,f
  5317  0074  02F3               	subwf	___awdiv@dividend+1,f
  5318  0075                     l2566:	
  5319  0075  1477               	bsf	___awdiv@quotient,0
  5320  0076                     l2568:	
  5321  0076  3001               	movlw	1
  5322  0077                     u1435:	
  5323  0077  1003               	clrc
  5324  0078  0CF1               	rrf	___awdiv@divisor+1,f
  5325  0079  0CF0               	rrf	___awdiv@divisor,f
  5326  007A  3EFF               	addlw	-1
  5327  007B  1D03               	skipz
  5328  007C  2877               	goto	u1435
  5329  007D                     l2570:	
  5330  007D  3001               	movlw	1
  5331  007E  02F5               	subwf	___awdiv@counter,f
  5332  007F  1D03               	btfss	3,2
  5333  0080  2882               	goto	u1441
  5334  0081  2883               	goto	u1440
  5335  0082                     u1441:	
  5336  0082  285E               	goto	l2562
  5337  0083                     u1440:	
  5338  0083                     l2572:	
  5339  0083  0876               	movf	___awdiv@sign,w
  5340  0084  1903               	btfsc	3,2
  5341  0085  2887               	goto	u1451
  5342  0086  2888               	goto	u1450
  5343  0087                     u1451:	
  5344  0087  288D               	goto	l2576
  5345  0088                     u1450:	
  5346  0088                     l2574:	
  5347  0088  09F7               	comf	___awdiv@quotient,f
  5348  0089  09F8               	comf	___awdiv@quotient+1,f
  5349  008A  0AF7               	incf	___awdiv@quotient,f
  5350  008B  1903               	skipnz
  5351  008C  0AF8               	incf	___awdiv@quotient+1,f
  5352  008D                     l2576:	
  5353  008D  0878               	movf	___awdiv@quotient+1,w
  5354  008E  00F1               	movwf	?___awdiv+1
  5355  008F  0877               	movf	___awdiv@quotient,w
  5356  0090  00F0               	movwf	?___awdiv
  5357  0091                     l735:	
  5358  0091  0008               	return
  5359  0092                     __end_of___awdiv:	
  5360                           
  5361                           	psect	text23
  5362  0948                     __ptext23:	
  5363 ;; *************** function _ds1302_init *****************
  5364 ;; Defined at:
  5365 ;;		line 6 in file "clock_src.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5379 ;;      Params:         0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0
  5382 ;;      Totals:         0       0       0       0       0
  5383 ;;Total ram usage:        0 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:    1
  5386 ;; This function calls:
  5387 ;;		_time_write_1
  5388 ;; This function is called by:
  5389 ;;		_main
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           
  5394                           ;psect for function _ds1302_init
  5395  0948                     _ds1302_init:	
  5396  0948                     l2628:	
  5397                           ;incstack = 0
  5398                           ; Regs used in _ds1302_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5399                           
  5400                           
  5401                           ;clock_src.c: 8:    RB0=0;
  5402  0948  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0949  1303               	bcf	3,6	;RP1=0, select bank0
  5404  094A  1006               	bcf	6,0	;volatile
  5405                           
  5406                           ;clock_src.c: 9:    RB5 =0;
  5407  094B  1286               	bcf	6,5	;volatile
  5408                           
  5409                           ;clock_src.c: 10:    RB5=1;
  5410  094C  1686               	bsf	6,5	;volatile
  5411  094D                     l2630:	
  5412                           
  5413                           ;clock_src.c: 11:    time_write_1(0x8e);
  5414  094D  308E               	movlw	142
  5415  094E  120A  158A  220B  120A  158A  	fcall	_time_write_1
  5416                           
  5417                           ;clock_src.c: 12:    time_write_1(0);
  5418  0953  3000               	movlw	0
  5419  0954  120A  158A  220B  120A  158A  	fcall	_time_write_1
  5420  0959                     l2632:	
  5421                           
  5422                           ;clock_src.c: 13:    RB5=0;
  5423  0959  1283               	bcf	3,5	;RP0=0, select bank0
  5424  095A  1303               	bcf	3,6	;RP1=0, select bank0
  5425  095B  1286               	bcf	6,5	;volatile
  5426  095C                     l267:	
  5427  095C  0008               	return
  5428  095D                     __end_of_ds1302_init:	
  5429                           
  5430                           	psect	text24
  5431  0A36                     __ptext24:	
  5432 ;; *************** function _display_temp *****************
  5433 ;; Defined at:
  5434 ;;		line 12 in file "Thermometer_src.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;		None
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;		None
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      void 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5448 ;;      Params:         0       0       0       0       0
  5449 ;;      Locals:         0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0
  5451 ;;      Totals:         0       0       0       0       0
  5452 ;;Total ram usage:        0 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    2
  5455 ;; This function calls:
  5456 ;;		_write_char
  5457 ;; This function is called by:
  5458 ;;		_main
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           
  5463                           ;psect for function _display_temp
  5464  0A36                     _display_temp:	
  5465  0A36                     l2734:	
  5466                           ;incstack = 0
  5467                           ; Regs used in _display_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5468                           
  5469                           
  5470                           ;Thermometer_src.c: 14:  write_char(shi + '0');
  5471  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  5472  0A37  1303               	bcf	3,6	;RP1=0, select bank0
  5473  0A38  083F               	movf	_shi,w
  5474  0A39  3E30               	addlw	48
  5475  0A3A  120A  158A  21B6  120A  158A  	fcall	_write_char
  5476                           
  5477                           ;Thermometer_src.c: 16:  write_char(ge + '0');
  5478  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  5479  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  5480  0A41  083E               	movf	_ge,w
  5481  0A42  3E30               	addlw	48
  5482  0A43  120A  158A  21B6  120A  158A  	fcall	_write_char
  5483                           
  5484                           ;Thermometer_src.c: 17:  write_char('.');
  5485  0A48  302E               	movlw	46
  5486  0A49  120A  158A  21B6  120A  158A  	fcall	_write_char
  5487                           
  5488                           ;Thermometer_src.c: 19:  write_char(shifen + '0');
  5489  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5490  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  5491  0A50  083D               	movf	_shifen,w
  5492  0A51  3E30               	addlw	48
  5493  0A52  120A  158A  21B6  120A  158A  	fcall	_write_char
  5494                           
  5495                           ;Thermometer_src.c: 21:  write_char(baifen + '0');
  5496  0A57  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0A58  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0A59  083C               	movf	_baifen,w
  5499  0A5A  3E30               	addlw	48
  5500  0A5B  120A  158A  21B6  120A  158A  	fcall	_write_char
  5501  0A60                     l202:	
  5502  0A60  0008               	return
  5503  0A61                     __end_of_display_temp:	
  5504                           
  5505                           	psect	text25
  5506  0CCE                     __ptext25:	
  5507 ;; *************** function _display_date *****************
  5508 ;; Defined at:
  5509 ;;		line 79 in file "clock_src.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;		None
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  i               2    5[COMMON] int 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      void 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5523 ;;      Params:         0       0       0       0       0
  5524 ;;      Locals:         2       0       0       0       0
  5525 ;;      Temps:          2       0       0       0       0
  5526 ;;      Totals:         4       0       0       0       0
  5527 ;;Total ram usage:        4 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    2
  5530 ;; This function calls:
  5531 ;;		_write_char
  5532 ;; This function is called by:
  5533 ;;		_main
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function _display_date
  5539  0CCE                     _display_date:	
  5540  0CCE                     l2736:	
  5541                           ;incstack = 0
  5542                           ; Regs used in _display_date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5543                           
  5544                           
  5545                           ;clock_src.c: 81:      int i;;clock_src.c: 82:      if(RB1==0)
  5546  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0CD0  1886               	btfsc	6,1	;volatile
  5549  0CD1  2CD3               	goto	u1671
  5550  0CD2  2CD4               	goto	u1670
  5551  0CD3                     u1671:	
  5552  0CD3  2CDC               	goto	l2740
  5553  0CD4                     u1670:	
  5554  0CD4                     l2738:	
  5555                           
  5556                           ;clock_src.c: 83:        {;clock_src.c: 84:           table1[0]=table1[3];
  5557  0CD4  0823               	movf	_table1+3,w
  5558  0CD5  00F3               	movwf	??_display_date
  5559  0CD6  0873               	movf	??_display_date,w
  5560  0CD7  00A0               	movwf	_table1
  5561                           
  5562                           ;clock_src.c: 85:           table1[1]=table1[4];
  5563  0CD8  0824               	movf	_table1+4,w
  5564  0CD9  00F3               	movwf	??_display_date
  5565  0CDA  0873               	movf	??_display_date,w
  5566  0CDB  00A1               	movwf	_table1+1
  5567  0CDC                     l2740:	
  5568                           
  5569                           ;clock_src.c: 87:      i=table1[3]&0xf0;
  5570  0CDC  0823               	movf	_table1+3,w
  5571  0CDD  39F0               	andlw	240
  5572  0CDE  00F3               	movwf	??_display_date
  5573  0CDF  01F4               	clrf	??_display_date+1
  5574  0CE0  0873               	movf	??_display_date,w
  5575  0CE1  00F5               	movwf	display_date@i
  5576  0CE2  0874               	movf	??_display_date+1,w
  5577  0CE3  00F6               	movwf	display_date@i+1
  5578  0CE4                     l2742:	
  5579                           
  5580                           ;clock_src.c: 88:      i=i>>4;
  5581  0CE4  0E75               	swapf	display_date@i,w
  5582  0CE5  390F               	andlw	15
  5583  0CE6  00F5               	movwf	display_date@i
  5584  0CE7  0E76               	swapf	display_date@i+1,w
  5585  0CE8  39F0               	andlw	240
  5586  0CE9  04F5               	iorwf	display_date@i,f
  5587  0CEA  0E76               	swapf	display_date@i+1,w
  5588  0CEB  390F               	andlw	15
  5589  0CEC  00F6               	movwf	display_date@i+1
  5590  0CED  30F0               	movlw	240
  5591  0CEE  1DF6               	btfss	display_date@i+1,3
  5592  0CEF  3000               	movlw	0
  5593  0CF0  04F6               	iorwf	display_date@i+1,f
  5594  0CF1                     l2744:	
  5595                           
  5596                           ;clock_src.c: 89:      write_char(i + '0');
  5597  0CF1  0875               	movf	display_date@i,w
  5598  0CF2  3E30               	addlw	48
  5599  0CF3  120A  158A  21B6  120A  158A  	fcall	_write_char
  5600  0CF8                     l2746:	
  5601                           
  5602                           ;clock_src.c: 91:      i=table1[3]&0x0f;
  5603  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  5605  0CFA  0823               	movf	_table1+3,w
  5606  0CFB  390F               	andlw	15
  5607  0CFC  00F3               	movwf	??_display_date
  5608  0CFD  01F4               	clrf	??_display_date+1
  5609  0CFE  0873               	movf	??_display_date,w
  5610  0CFF  00F5               	movwf	display_date@i
  5611  0D00  0874               	movf	??_display_date+1,w
  5612  0D01  00F6               	movwf	display_date@i+1
  5613  0D02                     l2748:	
  5614                           
  5615                           ;clock_src.c: 92:      write_char(i + '0');
  5616  0D02  0875               	movf	display_date@i,w
  5617  0D03  3E30               	addlw	48
  5618  0D04  120A  158A  21B6  120A  158A  	fcall	_write_char
  5619  0D09                     l2750:	
  5620                           
  5621                           ;clock_src.c: 93:      write_char('/');
  5622  0D09  302F               	movlw	47
  5623  0D0A  120A  158A  21B6  120A  158A  	fcall	_write_char
  5624  0D0F                     l2752:	
  5625                           
  5626                           ;clock_src.c: 97:      i=table1[4]&0xf0;
  5627  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5628  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  5629  0D11  0824               	movf	_table1+4,w
  5630  0D12  39F0               	andlw	240
  5631  0D13  00F3               	movwf	??_display_date
  5632  0D14  01F4               	clrf	??_display_date+1
  5633  0D15  0873               	movf	??_display_date,w
  5634  0D16  00F5               	movwf	display_date@i
  5635  0D17  0874               	movf	??_display_date+1,w
  5636  0D18  00F6               	movwf	display_date@i+1
  5637  0D19                     l2754:	
  5638                           
  5639                           ;clock_src.c: 98:      i=i>>4;
  5640  0D19  0E75               	swapf	display_date@i,w
  5641  0D1A  390F               	andlw	15
  5642  0D1B  00F5               	movwf	display_date@i
  5643  0D1C  0E76               	swapf	display_date@i+1,w
  5644  0D1D  39F0               	andlw	240
  5645  0D1E  04F5               	iorwf	display_date@i,f
  5646  0D1F  0E76               	swapf	display_date@i+1,w
  5647  0D20  390F               	andlw	15
  5648  0D21  00F6               	movwf	display_date@i+1
  5649  0D22  30F0               	movlw	240
  5650  0D23  1DF6               	btfss	display_date@i+1,3
  5651  0D24  3000               	movlw	0
  5652  0D25  04F6               	iorwf	display_date@i+1,f
  5653  0D26                     l2756:	
  5654                           
  5655                           ;clock_src.c: 99:      write_char(i + '0');
  5656  0D26  0875               	movf	display_date@i,w
  5657  0D27  3E30               	addlw	48
  5658  0D28  120A  158A  21B6  120A  158A  	fcall	_write_char
  5659  0D2D                     l2758:	
  5660                           
  5661                           ;clock_src.c: 101:      i=table1[4]&0x0f;
  5662  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  5663  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0D2F  0824               	movf	_table1+4,w
  5665  0D30  390F               	andlw	15
  5666  0D31  00F3               	movwf	??_display_date
  5667  0D32  01F4               	clrf	??_display_date+1
  5668  0D33  0873               	movf	??_display_date,w
  5669  0D34  00F5               	movwf	display_date@i
  5670  0D35  0874               	movf	??_display_date+1,w
  5671  0D36  00F6               	movwf	display_date@i+1
  5672  0D37                     l2760:	
  5673                           
  5674                           ;clock_src.c: 102:      write_char(i + '0');
  5675  0D37  0875               	movf	display_date@i,w
  5676  0D38  3E30               	addlw	48
  5677  0D39  120A  158A  21B6  120A  158A  	fcall	_write_char
  5678  0D3E                     l2762:	
  5679                           
  5680                           ;clock_src.c: 103:      write_char('/');
  5681  0D3E  302F               	movlw	47
  5682  0D3F  120A  158A  21B6  120A  158A  	fcall	_write_char
  5683  0D44                     l2764:	
  5684                           
  5685                           ;clock_src.c: 107:      i=table1[6]&0xf0;
  5686  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  5687  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  5688  0D46  0826               	movf	_table1+6,w
  5689  0D47  39F0               	andlw	240
  5690  0D48  00F3               	movwf	??_display_date
  5691  0D49  01F4               	clrf	??_display_date+1
  5692  0D4A  0873               	movf	??_display_date,w
  5693  0D4B  00F5               	movwf	display_date@i
  5694  0D4C  0874               	movf	??_display_date+1,w
  5695  0D4D  00F6               	movwf	display_date@i+1
  5696  0D4E                     l2766:	
  5697                           
  5698                           ;clock_src.c: 108:      write_char(i + '0');
  5699  0D4E  0875               	movf	display_date@i,w
  5700  0D4F  3E30               	addlw	48
  5701  0D50  120A  158A  21B6  120A  158A  	fcall	_write_char
  5702  0D55                     l2768:	
  5703                           
  5704                           ;clock_src.c: 110:      i=table1[6]&0x0f;
  5705  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  5706  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  5707  0D57  0826               	movf	_table1+6,w
  5708  0D58  390F               	andlw	15
  5709  0D59  00F3               	movwf	??_display_date
  5710  0D5A  01F4               	clrf	??_display_date+1
  5711  0D5B  0873               	movf	??_display_date,w
  5712  0D5C  00F5               	movwf	display_date@i
  5713  0D5D  0874               	movf	??_display_date+1,w
  5714  0D5E  00F6               	movwf	display_date@i+1
  5715  0D5F                     l2770:	
  5716                           
  5717                           ;clock_src.c: 111:      write_char(i + '0');
  5718  0D5F  0875               	movf	display_date@i,w
  5719  0D60  3E30               	addlw	48
  5720  0D61  120A  158A  21B6  120A  158A  	fcall	_write_char
  5721  0D66                     l285:	
  5722  0D66  0008               	return
  5723  0D67                     __end_of_display_date:	
  5724                           
  5725                           	psect	text26
  5726  0D67                     __ptext26:	
  5727 ;; *************** function _display_clock *****************
  5728 ;; Defined at:
  5729 ;;		line 37 in file "clock_src.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;		None
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  i               2    5[COMMON] int 
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  1    wreg      void 
  5736 ;; Registers used:
  5737 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5743 ;;      Params:         0       0       0       0       0
  5744 ;;      Locals:         2       0       0       0       0
  5745 ;;      Temps:          2       0       0       0       0
  5746 ;;      Totals:         4       0       0       0       0
  5747 ;;Total ram usage:        4 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    2
  5750 ;; This function calls:
  5751 ;;		_write_char
  5752 ;; This function is called by:
  5753 ;;		_main
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function _display_clock
  5759  0D67                     _display_clock:	
  5760  0D67                     l2772:	
  5761                           ;incstack = 0
  5762                           ; Regs used in _display_clock: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5763                           
  5764                           
  5765                           ;clock_src.c: 39:      int i;;clock_src.c: 40:      if(RB1==0)
  5766  0D67  1283               	bcf	3,5	;RP0=0, select bank0
  5767  0D68  1303               	bcf	3,6	;RP1=0, select bank0
  5768  0D69  1886               	btfsc	6,1	;volatile
  5769  0D6A  2D6C               	goto	u1681
  5770  0D6B  2D6D               	goto	u1680
  5771  0D6C                     u1681:	
  5772  0D6C  2D75               	goto	l2776
  5773  0D6D                     u1680:	
  5774  0D6D                     l2774:	
  5775                           
  5776                           ;clock_src.c: 41:        {;clock_src.c: 42:           table1[0]=table1[3];
  5777  0D6D  0823               	movf	_table1+3,w
  5778  0D6E  00F3               	movwf	??_display_clock
  5779  0D6F  0873               	movf	??_display_clock,w
  5780  0D70  00A0               	movwf	_table1
  5781                           
  5782                           ;clock_src.c: 43:           table1[1]=table1[4];
  5783  0D71  0824               	movf	_table1+4,w
  5784  0D72  00F3               	movwf	??_display_clock
  5785  0D73  0873               	movf	??_display_clock,w
  5786  0D74  00A1               	movwf	_table1+1
  5787  0D75                     l2776:	
  5788                           
  5789                           ;clock_src.c: 46:      i=table1[2]&0xf0;
  5790  0D75  0822               	movf	_table1+2,w
  5791  0D76  39F0               	andlw	240
  5792  0D77  00F3               	movwf	??_display_clock
  5793  0D78  01F4               	clrf	??_display_clock+1
  5794  0D79  0873               	movf	??_display_clock,w
  5795  0D7A  00F5               	movwf	display_clock@i
  5796  0D7B  0874               	movf	??_display_clock+1,w
  5797  0D7C  00F6               	movwf	display_clock@i+1
  5798  0D7D                     l2778:	
  5799                           
  5800                           ;clock_src.c: 47:      i=i>>4;
  5801  0D7D  0E75               	swapf	display_clock@i,w
  5802  0D7E  390F               	andlw	15
  5803  0D7F  00F5               	movwf	display_clock@i
  5804  0D80  0E76               	swapf	display_clock@i+1,w
  5805  0D81  39F0               	andlw	240
  5806  0D82  04F5               	iorwf	display_clock@i,f
  5807  0D83  0E76               	swapf	display_clock@i+1,w
  5808  0D84  390F               	andlw	15
  5809  0D85  00F6               	movwf	display_clock@i+1
  5810  0D86  30F0               	movlw	240
  5811  0D87  1DF6               	btfss	display_clock@i+1,3
  5812  0D88  3000               	movlw	0
  5813  0D89  04F6               	iorwf	display_clock@i+1,f
  5814  0D8A                     l2780:	
  5815                           
  5816                           ;clock_src.c: 48:      write_char(i + '0');
  5817  0D8A  0875               	movf	display_clock@i,w
  5818  0D8B  3E30               	addlw	48
  5819  0D8C  120A  158A  21B6  120A  158A  	fcall	_write_char
  5820  0D91                     l2782:	
  5821                           
  5822                           ;clock_src.c: 52:      i=table1[2]&0x0f;
  5823  0D91  1283               	bcf	3,5	;RP0=0, select bank0
  5824  0D92  1303               	bcf	3,6	;RP1=0, select bank0
  5825  0D93  0822               	movf	_table1+2,w
  5826  0D94  390F               	andlw	15
  5827  0D95  00F3               	movwf	??_display_clock
  5828  0D96  01F4               	clrf	??_display_clock+1
  5829  0D97  0873               	movf	??_display_clock,w
  5830  0D98  00F5               	movwf	display_clock@i
  5831  0D99  0874               	movf	??_display_clock+1,w
  5832  0D9A  00F6               	movwf	display_clock@i+1
  5833  0D9B                     l2784:	
  5834                           
  5835                           ;clock_src.c: 53:      write_char(i + '0');
  5836  0D9B  0875               	movf	display_clock@i,w
  5837  0D9C  3E30               	addlw	48
  5838  0D9D  120A  158A  21B6  120A  158A  	fcall	_write_char
  5839  0DA2                     l2786:	
  5840                           
  5841                           ;clock_src.c: 54:      write_char(':');
  5842  0DA2  303A               	movlw	58
  5843  0DA3  120A  158A  21B6  120A  158A  	fcall	_write_char
  5844  0DA8                     l2788:	
  5845                           
  5846                           ;clock_src.c: 58:      i=table1[1]&0xf0;
  5847  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  5848  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  5849  0DAA  0821               	movf	_table1+1,w
  5850  0DAB  39F0               	andlw	240
  5851  0DAC  00F3               	movwf	??_display_clock
  5852  0DAD  01F4               	clrf	??_display_clock+1
  5853  0DAE  0873               	movf	??_display_clock,w
  5854  0DAF  00F5               	movwf	display_clock@i
  5855  0DB0  0874               	movf	??_display_clock+1,w
  5856  0DB1  00F6               	movwf	display_clock@i+1
  5857  0DB2                     l2790:	
  5858                           
  5859                           ;clock_src.c: 59:      i=i>>4;
  5860  0DB2  0E75               	swapf	display_clock@i,w
  5861  0DB3  390F               	andlw	15
  5862  0DB4  00F5               	movwf	display_clock@i
  5863  0DB5  0E76               	swapf	display_clock@i+1,w
  5864  0DB6  39F0               	andlw	240
  5865  0DB7  04F5               	iorwf	display_clock@i,f
  5866  0DB8  0E76               	swapf	display_clock@i+1,w
  5867  0DB9  390F               	andlw	15
  5868  0DBA  00F6               	movwf	display_clock@i+1
  5869  0DBB  30F0               	movlw	240
  5870  0DBC  1DF6               	btfss	display_clock@i+1,3
  5871  0DBD  3000               	movlw	0
  5872  0DBE  04F6               	iorwf	display_clock@i+1,f
  5873  0DBF                     l2792:	
  5874                           
  5875                           ;clock_src.c: 60:      write_char(i + '0');
  5876  0DBF  0875               	movf	display_clock@i,w
  5877  0DC0  3E30               	addlw	48
  5878  0DC1  120A  158A  21B6  120A  158A  	fcall	_write_char
  5879  0DC6                     l2794:	
  5880                           
  5881                           ;clock_src.c: 63:      i=table1[1]&0x0f;
  5882  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  5883  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  5884  0DC8  0821               	movf	_table1+1,w
  5885  0DC9  390F               	andlw	15
  5886  0DCA  00F3               	movwf	??_display_clock
  5887  0DCB  01F4               	clrf	??_display_clock+1
  5888  0DCC  0873               	movf	??_display_clock,w
  5889  0DCD  00F5               	movwf	display_clock@i
  5890  0DCE  0874               	movf	??_display_clock+1,w
  5891  0DCF  00F6               	movwf	display_clock@i+1
  5892  0DD0                     l2796:	
  5893                           
  5894                           ;clock_src.c: 64:      write_char(i + '0');
  5895  0DD0  0875               	movf	display_clock@i,w
  5896  0DD1  3E30               	addlw	48
  5897  0DD2  120A  158A  21B6  120A  158A  	fcall	_write_char
  5898  0DD7                     l2798:	
  5899                           
  5900                           ;clock_src.c: 65:      write_char(':');
  5901  0DD7  303A               	movlw	58
  5902  0DD8  120A  158A  21B6  120A  158A  	fcall	_write_char
  5903  0DDD                     l2800:	
  5904                           
  5905                           ;clock_src.c: 68:      i=table1[0]&0xf0;
  5906  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  5907  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  5908  0DDF  0820               	movf	_table1,w
  5909  0DE0  39F0               	andlw	240
  5910  0DE1  00F3               	movwf	??_display_clock
  5911  0DE2  01F4               	clrf	??_display_clock+1
  5912  0DE3  0873               	movf	??_display_clock,w
  5913  0DE4  00F5               	movwf	display_clock@i
  5914  0DE5  0874               	movf	??_display_clock+1,w
  5915  0DE6  00F6               	movwf	display_clock@i+1
  5916  0DE7                     l2802:	
  5917                           
  5918                           ;clock_src.c: 69:      i=i>>4;
  5919  0DE7  0E75               	swapf	display_clock@i,w
  5920  0DE8  390F               	andlw	15
  5921  0DE9  00F5               	movwf	display_clock@i
  5922  0DEA  0E76               	swapf	display_clock@i+1,w
  5923  0DEB  39F0               	andlw	240
  5924  0DEC  04F5               	iorwf	display_clock@i,f
  5925  0DED  0E76               	swapf	display_clock@i+1,w
  5926  0DEE  390F               	andlw	15
  5927  0DEF  00F6               	movwf	display_clock@i+1
  5928  0DF0  30F0               	movlw	240
  5929  0DF1  1DF6               	btfss	display_clock@i+1,3
  5930  0DF2  3000               	movlw	0
  5931  0DF3  04F6               	iorwf	display_clock@i+1,f
  5932  0DF4                     l2804:	
  5933                           
  5934                           ;clock_src.c: 70:      write_char(i + '0');
  5935  0DF4  0875               	movf	display_clock@i,w
  5936  0DF5  3E30               	addlw	48
  5937  0DF6  120A  158A  21B6  120A  158A  	fcall	_write_char
  5938  0DFB                     l2806:	
  5939                           
  5940                           ;clock_src.c: 73:      i=table1[0]&0x0f;
  5941  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  5943  0DFD  0820               	movf	_table1,w
  5944  0DFE  390F               	andlw	15
  5945  0DFF  00F3               	movwf	??_display_clock
  5946  0E00  01F4               	clrf	??_display_clock+1
  5947  0E01  0873               	movf	??_display_clock,w
  5948  0E02  00F5               	movwf	display_clock@i
  5949  0E03  0874               	movf	??_display_clock+1,w
  5950  0E04  00F6               	movwf	display_clock@i+1
  5951  0E05                     l2808:	
  5952                           
  5953                           ;clock_src.c: 74:      write_char(i + '0');
  5954  0E05  0875               	movf	display_clock@i,w
  5955  0E06  3E30               	addlw	48
  5956  0E07  120A  158A  21B6  120A  158A  	fcall	_write_char
  5957  0E0C                     l281:	
  5958  0E0C  0008               	return
  5959  0E0D                     __end_of_display_clock:	
  5960                           
  5961                           	psect	text27
  5962  0092                     __ptext27:	
  5963 ;; *************** function _date_settings *****************
  5964 ;; Defined at:
  5965 ;;		line 326 in file "Button_src.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5979 ;;      Params:         0       0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0
  5981 ;;      Temps:          1       0       0       0       0
  5982 ;;      Totals:         1       0       0       0       0
  5983 ;;Total ram usage:        1 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:    2
  5986 ;; This function calls:
  5987 ;;		_button_delay
  5988 ;;		_modulus_func
  5989 ;;		_set_time
  5990 ;;		_write_char
  5991 ;;		_write_cmd
  5992 ;; This function is called by:
  5993 ;;		_main
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           
  5998                           ;psect for function _date_settings
  5999  0092                     _date_settings:	
  6000  0092                     l2950:	
  6001                           ;incstack = 0
  6002                           ; Regs used in _date_settings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6003                           
  6004                           
  6005                           ;Button_src.c: 327:  RC0 = 0;
  6006  0092  1283               	bcf	3,5	;RP0=0, select bank0
  6007  0093  1303               	bcf	3,6	;RP1=0, select bank0
  6008  0094  1007               	bcf	7,0	;volatile
  6009                           
  6010                           ;Button_src.c: 328:  RC1 = 1;
  6011  0095  1487               	bsf	7,1	;volatile
  6012                           
  6013                           ;Button_src.c: 329:  RC2 = 1;
  6014  0096  1507               	bsf	7,2	;volatile
  6015                           
  6016                           ;Button_src.c: 330:  RC3 = 1;
  6017  0097  1587               	bsf	7,3	;volatile
  6018                           
  6019                           ;Button_src.c: 331:   if (RC4 == 0){
  6020  0098  1A07               	btfsc	7,4	;volatile
  6021  0099  289B               	goto	u1771
  6022  009A  289C               	goto	u1770
  6023  009B                     u1771:	
  6024  009B  2A5B               	goto	l467
  6025  009C                     u1770:	
  6026  009C                     l2952:	
  6027                           
  6028                           ;Button_src.c: 332:       write_cmd(0x1);
  6029  009C  3001               	movlw	1
  6030  009D  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6031  00A2                     l460:	
  6032                           ;Button_src.c: 333:       for(;;){
  6033                           
  6034                           
  6035                           ;Button_src.c: 334:             write_cmd(0x80);
  6036  00A2  3080               	movlw	128
  6037  00A3  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6038                           
  6039                           ;Button_src.c: 335:             write_char('D');
  6040  00A8  3044               	movlw	68
  6041  00A9  120A  158A  21B6  120A  118A  	fcall	_write_char
  6042                           
  6043                           ;Button_src.c: 336:             write_char('a');
  6044  00AE  3061               	movlw	97
  6045  00AF  120A  158A  21B6  120A  118A  	fcall	_write_char
  6046                           
  6047                           ;Button_src.c: 337:             write_char('t');
  6048  00B4  3074               	movlw	116
  6049  00B5  120A  158A  21B6  120A  118A  	fcall	_write_char
  6050                           
  6051                           ;Button_src.c: 338:             write_char('e');
  6052  00BA  3065               	movlw	101
  6053  00BB  120A  158A  21B6  120A  118A  	fcall	_write_char
  6054                           
  6055                           ;Button_src.c: 339:             write_char('_');
  6056  00C0  305F               	movlw	95
  6057  00C1  120A  158A  21B6  120A  118A  	fcall	_write_char
  6058                           
  6059                           ;Button_src.c: 340:             write_char('S');
  6060  00C6  3053               	movlw	83
  6061  00C7  120A  158A  21B6  120A  118A  	fcall	_write_char
  6062                           
  6063                           ;Button_src.c: 341:             write_char('e');
  6064  00CC  3065               	movlw	101
  6065  00CD  120A  158A  21B6  120A  118A  	fcall	_write_char
  6066                           
  6067                           ;Button_src.c: 342:             write_char('t');
  6068  00D2  3074               	movlw	116
  6069  00D3  120A  158A  21B6  120A  118A  	fcall	_write_char
  6070                           
  6071                           ;Button_src.c: 343:             write_char('t');
  6072  00D8  3074               	movlw	116
  6073  00D9  120A  158A  21B6  120A  118A  	fcall	_write_char
  6074                           
  6075                           ;Button_src.c: 344:             write_char('i');
  6076  00DE  3069               	movlw	105
  6077  00DF  120A  158A  21B6  120A  118A  	fcall	_write_char
  6078                           
  6079                           ;Button_src.c: 345:             write_char('n');
  6080  00E4  306E               	movlw	110
  6081  00E5  120A  158A  21B6  120A  118A  	fcall	_write_char
  6082                           
  6083                           ;Button_src.c: 346:             write_char('g');
  6084  00EA  3067               	movlw	103
  6085  00EB  120A  158A  21B6  120A  118A  	fcall	_write_char
  6086                           
  6087                           ;Button_src.c: 347:             write_char('s');
  6088  00F0  3073               	movlw	115
  6089  00F1  120A  158A  21B6  120A  118A  	fcall	_write_char
  6090  00F6                     l2954:	
  6091                           
  6092                           ;Button_src.c: 348:             RC0 = 1;
  6093  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  6094  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  6095  00F8  1407               	bsf	7,0	;volatile
  6096  00F9                     l2956:	
  6097                           
  6098                           ;Button_src.c: 349:             RC1 = 0;
  6099  00F9  1087               	bcf	7,1	;volatile
  6100  00FA                     l2958:	
  6101                           
  6102                           ;Button_src.c: 350:             RC2 = 1;
  6103  00FA  1507               	bsf	7,2	;volatile
  6104  00FB                     l2960:	
  6105                           
  6106                           ;Button_src.c: 351:             RC3 = 1;
  6107  00FB  1587               	bsf	7,3	;volatile
  6108  00FC                     l2962:	
  6109                           
  6110                           ;Button_src.c: 353:             if(RC7 == 0 && b =='x'){
  6111  00FC  1B87               	btfsc	7,7	;volatile
  6112  00FD  28FF               	goto	u1781
  6113  00FE  2900               	goto	u1780
  6114  00FF                     u1781:	
  6115  00FF  2910               	goto	l461
  6116  0100                     u1780:	
  6117  0100                     l2964:	
  6118  0100  3078               	movlw	120
  6119  0101  0638               	xorwf	_b,w
  6120  0102  1D03               	btfss	3,2
  6121  0103  2905               	goto	u1791
  6122  0104  2906               	goto	u1790
  6123  0105                     u1791:	
  6124  0105  2910               	goto	l461
  6125  0106                     u1790:	
  6126  0106                     l2966:	
  6127                           
  6128                           ;Button_src.c: 354:                     a++;
  6129  0106  3001               	movlw	1
  6130  0107  00FB               	movwf	??_date_settings
  6131  0108  087B               	movf	??_date_settings,w
  6132  0109  07B9               	addwf	_a,f
  6133  010A                     l2968:	
  6134                           
  6135                           ;Button_src.c: 355:                     button_delay();
  6136  010A  120A  158A  215D  120A  118A  	fcall	_button_delay
  6137                           
  6138                           ;Button_src.c: 356:             }
  6139  010F  2926               	goto	l462
  6140  0110                     l461:	
  6141                           ;Button_src.c: 357:             else if(RC7==0 && b == 'y'){
  6142                           
  6143  0110  1B87               	btfsc	7,7	;volatile
  6144  0111  2913               	goto	u1801
  6145  0112  2914               	goto	u1800
  6146  0113                     u1801:	
  6147  0113  291B               	goto	l463
  6148  0114                     u1800:	
  6149  0114                     l2970:	
  6150  0114  3079               	movlw	121
  6151  0115  0638               	xorwf	_b,w
  6152  0116  1D03               	btfss	3,2
  6153  0117  2919               	goto	u1811
  6154  0118  291A               	goto	u1810
  6155  0119                     u1811:	
  6156  0119  291B               	goto	l463
  6157  011A                     u1810:	
  6158  011A  290A               	goto	l2968
  6159  011B                     l463:	
  6160                           ;Button_src.c: 361:             else if(RC7==0 && b == 'z'){
  6161                           
  6162  011B  1B87               	btfsc	7,7	;volatile
  6163  011C  291E               	goto	u1821
  6164  011D  291F               	goto	u1820
  6165  011E                     u1821:	
  6166  011E  2926               	goto	l462
  6167  011F                     u1820:	
  6168  011F                     l2974:	
  6169  011F  307A               	movlw	122
  6170  0120  0638               	xorwf	_b,w
  6171  0121  1D03               	btfss	3,2
  6172  0122  2924               	goto	u1831
  6173  0123  2925               	goto	u1830
  6174  0124                     u1831:	
  6175  0124  2926               	goto	l462
  6176  0125                     u1830:	
  6177  0125  290A               	goto	l2968
  6178  0126                     l462:	
  6179                           
  6180                           ;Button_src.c: 367:              write_cmd(0x88);
  6181  0126  3088               	movlw	136
  6182  0127  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6183  012C                     l2978:	
  6184                           
  6185                           ;Button_src.c: 369:                   RC0 = 0;
  6186  012C  1283               	bcf	3,5	;RP0=0, select bank0
  6187  012D  1303               	bcf	3,6	;RP1=0, select bank0
  6188  012E  1007               	bcf	7,0	;volatile
  6189  012F                     l2980:	
  6190                           
  6191                           ;Button_src.c: 370:                   RC1 = 1;
  6192  012F  1487               	bsf	7,1	;volatile
  6193  0130                     l2982:	
  6194                           
  6195                           ;Button_src.c: 371:                   RC2 = 1;
  6196  0130  1507               	bsf	7,2	;volatile
  6197  0131                     l2984:	
  6198                           
  6199                           ;Button_src.c: 372:                   RC3 = 1;
  6200  0131  1587               	bsf	7,3	;volatile
  6201  0132                     l2986:	
  6202                           
  6203                           ;Button_src.c: 373:                     if (RC6 == 0 ){
  6204  0132  1B07               	btfsc	7,6	;volatile
  6205  0133  2935               	goto	u1841
  6206  0134  2936               	goto	u1840
  6207  0135                     u1841:	
  6208  0135  2942               	goto	l466
  6209  0136                     u1840:	
  6210  0136                     l2988:	
  6211                           
  6212                           ;Button_src.c: 374:                           write_cmd(0x1);
  6213  0136  3001               	movlw	1
  6214  0137  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6215  013C                     l2990:	
  6216                           
  6217                           ;Button_src.c: 375:                           set_time();
  6218  013C  120A  158A  2261  120A  118A  	fcall	_set_time
  6219  0141  2A5B               	goto	l467
  6220  0142                     l466:	
  6221                           ;Button_src.c: 377:                             }
  6222                           
  6223                           
  6224                           ;Button_src.c: 378:                   RC0 = 0;
  6225  0142  1007               	bcf	7,0	;volatile
  6226                           
  6227                           ;Button_src.c: 379:                   RC1 = 1;
  6228  0143  1487               	bsf	7,1	;volatile
  6229                           
  6230                           ;Button_src.c: 380:                   RC2 = 1;
  6231  0144  1507               	bsf	7,2	;volatile
  6232                           
  6233                           ;Button_src.c: 381:                   RC3 = 1;
  6234  0145  1587               	bsf	7,3	;volatile
  6235  0146                     l2994:	
  6236                           
  6237                           ;Button_src.c: 382:                   z = modulus_func(z,3);
  6238  0146  0828               	movf	_z+1,w
  6239  0147  00F8               	movwf	modulus_func@x+1
  6240  0148  0827               	movf	_z,w
  6241  0149  00F7               	movwf	modulus_func@x
  6242  014A  3003               	movlw	3
  6243  014B  00F9               	movwf	modulus_func@y
  6244  014C  3000               	movlw	0
  6245  014D  00FA               	movwf	modulus_func@y+1
  6246  014E  120A  158A  20FF  120A  118A  	fcall	_modulus_func
  6247  0153  0878               	movf	?_modulus_func+1,w
  6248  0154  1283               	bcf	3,5	;RP0=0, select bank0
  6249  0155  1303               	bcf	3,6	;RP1=0, select bank0
  6250  0156  00A8               	movwf	_z+1
  6251  0157  0877               	movf	?_modulus_func,w
  6252  0158  00A7               	movwf	_z
  6253  0159                     l2996:	
  6254                           
  6255                           ;Button_src.c: 383:                   if(RC4 == 0 && z ==0){
  6256  0159  1A07               	btfsc	7,4	;volatile
  6257  015A  295C               	goto	u1851
  6258  015B  295D               	goto	u1850
  6259  015C                     u1851:	
  6260  015C  29A6               	goto	l3010
  6261  015D                     u1850:	
  6262  015D                     l2998:	
  6263  015D  0827               	movf	_z,w
  6264  015E  0428               	iorwf	_z+1,w
  6265  015F  1D03               	btfss	3,2
  6266  0160  2962               	goto	u1861
  6267  0161  2963               	goto	u1860
  6268  0162                     u1861:	
  6269  0162  29A6               	goto	l3010
  6270  0163                     u1860:	
  6271  0163                     l3000:	
  6272                           
  6273                           ;Button_src.c: 384:                       write_cmd(0x90);
  6274  0163  3090               	movlw	144
  6275  0164  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6276                           
  6277                           ;Button_src.c: 385:                       write_char('D');
  6278  0169  3044               	movlw	68
  6279  016A  120A  158A  21B6  120A  118A  	fcall	_write_char
  6280                           
  6281                           ;Button_src.c: 386:                       write_char('a');
  6282  016F  3061               	movlw	97
  6283  0170  120A  158A  21B6  120A  118A  	fcall	_write_char
  6284                           
  6285                           ;Button_src.c: 387:                       write_char('y');
  6286  0175  3079               	movlw	121
  6287  0176  120A  158A  21B6  120A  118A  	fcall	_write_char
  6288                           
  6289                           ;Button_src.c: 388:                       write_char(':');
  6290  017B  303A               	movlw	58
  6291  017C  120A  158A  21B6  120A  118A  	fcall	_write_char
  6292                           
  6293                           ;Button_src.c: 389:                       write_char(' ');
  6294  0181  3020               	movlw	32
  6295  0182  120A  158A  21B6  120A  118A  	fcall	_write_char
  6296                           
  6297                           ;Button_src.c: 390:                       write_char(' ');
  6298  0187  3020               	movlw	32
  6299  0188  120A  158A  21B6  120A  118A  	fcall	_write_char
  6300  018D                     l3002:	
  6301                           
  6302                           ;Button_src.c: 391:                       b = 'x';
  6303  018D  3078               	movlw	120
  6304  018E  00FB               	movwf	??_date_settings
  6305  018F  087B               	movf	??_date_settings,w
  6306  0190  1283               	bcf	3,5	;RP0=0, select bank0
  6307  0191  1303               	bcf	3,6	;RP1=0, select bank0
  6308  0192  00B8               	movwf	_b
  6309  0193                     l3004:	
  6310                           
  6311                           ;Button_src.c: 392:                       write_cmd(0x88);
  6312  0193  3088               	movlw	136
  6313  0194  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6314  0199                     l3006:	
  6315                           
  6316                           ;Button_src.c: 393:                       button_delay();
  6317  0199  120A  158A  215D  120A  118A  	fcall	_button_delay
  6318  019E                     l3008:	
  6319                           
  6320                           ;Button_src.c: 394:                       z++;
  6321  019E  3001               	movlw	1
  6322  019F  1283               	bcf	3,5	;RP0=0, select bank0
  6323  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  6324  01A1  07A7               	addwf	_z,f
  6325  01A2  1803               	skipnc
  6326  01A3  0AA8               	incf	_z+1,f
  6327  01A4  3000               	movlw	0
  6328  01A5  07A8               	addwf	_z+1,f
  6329  01A6                     l3010:	
  6330                           
  6331                           ;Button_src.c: 396:                   RC0 = 0;
  6332  01A6  1007               	bcf	7,0	;volatile
  6333  01A7                     l3012:	
  6334                           
  6335                           ;Button_src.c: 397:                   RC1 = 1;
  6336  01A7  1487               	bsf	7,1	;volatile
  6337  01A8                     l3014:	
  6338                           
  6339                           ;Button_src.c: 398:                   RC2 = 1;
  6340  01A8  1507               	bsf	7,2	;volatile
  6341  01A9                     l3016:	
  6342                           
  6343                           ;Button_src.c: 399:                   RC3 = 1;
  6344  01A9  1587               	bsf	7,3	;volatile
  6345  01AA                     l3018:	
  6346                           
  6347                           ;Button_src.c: 400:                   if(RC4 == 0&& z ==1){
  6348  01AA  1A07               	btfsc	7,4	;volatile
  6349  01AB  29AD               	goto	u1871
  6350  01AC  29AE               	goto	u1870
  6351  01AD                     u1871:	
  6352  01AD  29F5               	goto	l3042
  6353  01AE                     u1870:	
  6354  01AE                     l3020:	
  6355  01AE  0327               	decf	_z,w
  6356  01AF  0428               	iorwf	_z+1,w
  6357  01B0  1D03               	btfss	3,2
  6358  01B1  29B3               	goto	u1881
  6359  01B2  29B4               	goto	u1880
  6360  01B3                     u1881:	
  6361  01B3  29F5               	goto	l3042
  6362  01B4                     u1880:	
  6363  01B4                     l3022:	
  6364                           
  6365                           ;Button_src.c: 401:                       z++;
  6366  01B4  3001               	movlw	1
  6367  01B5  07A7               	addwf	_z,f
  6368  01B6  1803               	skipnc
  6369  01B7  0AA8               	incf	_z+1,f
  6370  01B8  3000               	movlw	0
  6371  01B9  07A8               	addwf	_z+1,f
  6372  01BA                     l3024:	
  6373                           
  6374                           ;Button_src.c: 402:                       button_delay();
  6375  01BA  120A  158A  215D  120A  118A  	fcall	_button_delay
  6376  01BF                     l3026:	
  6377                           
  6378                           ;Button_src.c: 404:                       write_cmd(0x90);
  6379  01BF  3090               	movlw	144
  6380  01C0  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6381  01C5                     l3028:	
  6382                           
  6383                           ;Button_src.c: 405:                       write_char('M');
  6384  01C5  304D               	movlw	77
  6385  01C6  120A  158A  21B6  120A  118A  	fcall	_write_char
  6386  01CB                     l3030:	
  6387                           
  6388                           ;Button_src.c: 406:                       write_char('o');
  6389  01CB  306F               	movlw	111
  6390  01CC  120A  158A  21B6  120A  118A  	fcall	_write_char
  6391  01D1                     l3032:	
  6392                           
  6393                           ;Button_src.c: 407:                       write_char('n');
  6394  01D1  306E               	movlw	110
  6395  01D2  120A  158A  21B6  120A  118A  	fcall	_write_char
  6396  01D7                     l3034:	
  6397                           
  6398                           ;Button_src.c: 408:                       write_char('t');
  6399  01D7  3074               	movlw	116
  6400  01D8  120A  158A  21B6  120A  118A  	fcall	_write_char
  6401  01DD                     l3036:	
  6402                           
  6403                           ;Button_src.c: 409:                       write_char('h');
  6404  01DD  3068               	movlw	104
  6405  01DE  120A  158A  21B6  120A  118A  	fcall	_write_char
  6406  01E3                     l3038:	
  6407                           
  6408                           ;Button_src.c: 410:                       write_char(':');
  6409  01E3  303A               	movlw	58
  6410  01E4  120A  158A  21B6  120A  118A  	fcall	_write_char
  6411                           
  6412                           ;Button_src.c: 411:                       b = 'y';
  6413  01E9  3079               	movlw	121
  6414  01EA  00FB               	movwf	??_date_settings
  6415  01EB  087B               	movf	??_date_settings,w
  6416  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6417  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  6418  01EE  00B8               	movwf	_b
  6419  01EF                     l3040:	
  6420                           
  6421                           ;Button_src.c: 412:                       write_cmd(0x88);
  6422  01EF  3088               	movlw	136
  6423  01F0  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6424  01F5                     l3042:	
  6425                           
  6426                           ;Button_src.c: 414:                   RC0 = 0;
  6427  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  6428  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  6429  01F7  1007               	bcf	7,0	;volatile
  6430  01F8                     l3044:	
  6431                           
  6432                           ;Button_src.c: 415:                   RC1 = 1;
  6433  01F8  1487               	bsf	7,1	;volatile
  6434  01F9                     l3046:	
  6435                           
  6436                           ;Button_src.c: 416:                   RC2 = 1;
  6437  01F9  1507               	bsf	7,2	;volatile
  6438  01FA                     l3048:	
  6439                           
  6440                           ;Button_src.c: 417:                   RC3 = 1;
  6441  01FA  1587               	bsf	7,3	;volatile
  6442  01FB                     l3050:	
  6443                           
  6444                           ;Button_src.c: 418:                   if(RC4 == 0&& z ==2){
  6445  01FB  1A07               	btfsc	7,4	;volatile
  6446  01FC  29FE               	goto	u1891
  6447  01FD  29FF               	goto	u1890
  6448  01FE                     u1891:	
  6449  01FE  2A49               	goto	l3074
  6450  01FF                     u1890:	
  6451  01FF                     l3052:	
  6452  01FF  3002               	movlw	2
  6453  0200  0627               	xorwf	_z,w
  6454  0201  0428               	iorwf	_z+1,w
  6455  0202  1D03               	btfss	3,2
  6456  0203  2A05               	goto	u1901
  6457  0204  2A06               	goto	u1900
  6458  0205                     u1901:	
  6459  0205  2A49               	goto	l3074
  6460  0206                     u1900:	
  6461  0206                     l3054:	
  6462                           
  6463                           ;Button_src.c: 419:                       button_delay();
  6464  0206  120A  158A  215D  120A  118A  	fcall	_button_delay
  6465  020B                     l3056:	
  6466                           
  6467                           ;Button_src.c: 420:                       z++;
  6468  020B  3001               	movlw	1
  6469  020C  1283               	bcf	3,5	;RP0=0, select bank0
  6470  020D  1303               	bcf	3,6	;RP1=0, select bank0
  6471  020E  07A7               	addwf	_z,f
  6472  020F  1803               	skipnc
  6473  0210  0AA8               	incf	_z+1,f
  6474  0211  3000               	movlw	0
  6475  0212  07A8               	addwf	_z+1,f
  6476  0213                     l3058:	
  6477                           
  6478                           ;Button_src.c: 422:                       write_cmd(0x90);
  6479  0213  3090               	movlw	144
  6480  0214  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6481  0219                     l3060:	
  6482                           
  6483                           ;Button_src.c: 423:                       write_char('Y');
  6484  0219  3059               	movlw	89
  6485  021A  120A  158A  21B6  120A  118A  	fcall	_write_char
  6486  021F                     l3062:	
  6487                           
  6488                           ;Button_src.c: 424:                       write_char('e');
  6489  021F  3065               	movlw	101
  6490  0220  120A  158A  21B6  120A  118A  	fcall	_write_char
  6491  0225                     l3064:	
  6492                           
  6493                           ;Button_src.c: 425:                       write_char('a');
  6494  0225  3061               	movlw	97
  6495  0226  120A  158A  21B6  120A  118A  	fcall	_write_char
  6496  022B                     l3066:	
  6497                           
  6498                           ;Button_src.c: 426:                       write_char('r');
  6499  022B  3072               	movlw	114
  6500  022C  120A  158A  21B6  120A  118A  	fcall	_write_char
  6501  0231                     l3068:	
  6502                           
  6503                           ;Button_src.c: 427:                       write_char(':');
  6504  0231  303A               	movlw	58
  6505  0232  120A  158A  21B6  120A  118A  	fcall	_write_char
  6506  0237                     l3070:	
  6507                           
  6508                           ;Button_src.c: 428:                       write_char(' ');
  6509  0237  3020               	movlw	32
  6510  0238  120A  158A  21B6  120A  118A  	fcall	_write_char
  6511                           
  6512                           ;Button_src.c: 429:                       b = 'z';
  6513  023D  307A               	movlw	122
  6514  023E  00FB               	movwf	??_date_settings
  6515  023F  087B               	movf	??_date_settings,w
  6516  0240  1283               	bcf	3,5	;RP0=0, select bank0
  6517  0241  1303               	bcf	3,6	;RP1=0, select bank0
  6518  0242  00B8               	movwf	_b
  6519  0243                     l3072:	
  6520                           
  6521                           ;Button_src.c: 430:                       write_cmd(0x88);
  6522  0243  3088               	movlw	136
  6523  0244  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6524  0249                     l3074:	
  6525                           
  6526                           ;Button_src.c: 433:             RC0 = 0;
  6527  0249  1283               	bcf	3,5	;RP0=0, select bank0
  6528  024A  1303               	bcf	3,6	;RP1=0, select bank0
  6529  024B  1007               	bcf	7,0	;volatile
  6530  024C                     l3076:	
  6531                           
  6532                           ;Button_src.c: 434:             RC1 = 1;
  6533  024C  1487               	bsf	7,1	;volatile
  6534  024D                     l3078:	
  6535                           
  6536                           ;Button_src.c: 435:             RC2 = 1;
  6537  024D  1507               	bsf	7,2	;volatile
  6538  024E                     l3080:	
  6539                           
  6540                           ;Button_src.c: 436:             RC3 = 1;
  6541  024E  1587               	bsf	7,3	;volatile
  6542  024F                     l3082:	
  6543                           
  6544                           ;Button_src.c: 437:             if (RC7 == 0 ){
  6545  024F  1B87               	btfsc	7,7	;volatile
  6546  0250  2A52               	goto	u1911
  6547  0251  2A53               	goto	u1910
  6548  0252                     u1911:	
  6549  0252  28A2               	goto	l460
  6550  0253                     u1910:	
  6551  0253                     l3084:	
  6552                           
  6553                           ;Button_src.c: 438:             a = 0x00;
  6554  0253  01B9               	clrf	_a
  6555                           
  6556                           ;Button_src.c: 439:             c = 0x00;
  6557  0254  01B7               	clrf	_c
  6558  0255                     l3086:	
  6559                           
  6560                           ;Button_src.c: 440:             write_cmd(0x1);
  6561  0255  3001               	movlw	1
  6562  0256  120A  158A  21CF  120A  118A  	fcall	_write_cmd
  6563  025B                     l467:	
  6564                           ;Button_src.c: 441:             break;
  6565                           
  6566  025B  0008               	return
  6567  025C                     __end_of_date_settings:	
  6568                           
  6569                           	psect	text28
  6570  09CF                     __ptext28:	
  6571 ;; *************** function _write_cmd *****************
  6572 ;; Defined at:
  6573 ;;		line 41 in file "LCD_src.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  x               1    wreg     unsigned char 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  x               1    2[COMMON] unsigned char 
  6578 ;;  i               2    0        int 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6588 ;;      Params:         0       0       0       0       0
  6589 ;;      Locals:         1       0       0       0       0
  6590 ;;      Temps:          0       0       0       0       0
  6591 ;;      Totals:         1       0       0       0       0
  6592 ;;Total ram usage:        1 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    1
  6595 ;; This function calls:
  6596 ;;		_delay_screen
  6597 ;; This function is called by:
  6598 ;;		_main
  6599 ;;		_lcd_init
  6600 ;;		_thermometer_threshhold_settings
  6601 ;;		_time_settings
  6602 ;;		_date_settings
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           
  6607                           ;psect for function _write_cmd
  6608  09CF                     _write_cmd:	
  6609                           
  6610                           ;incstack = 0
  6611                           ; Regs used in _write_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6612                           ;write_cmd@x stored from wreg
  6613  09CF  00F2               	movwf	write_cmd@x
  6614  09D0                     l2312:	
  6615                           
  6616                           ;LCD_src.c: 41: void write_cmd(char x);LCD_src.c: 42: {;LCD_src.c: 43:  int i;;LCD_src.c
      +                          : 44:  RA5=0;
  6617  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  6618  09D1  1303               	bcf	3,6	;RP1=0, select bank0
  6619  09D2  1285               	bcf	5,5	;volatile
  6620                           
  6621                           ;LCD_src.c: 45:  RA4=0;
  6622  09D3  1205               	bcf	5,4	;volatile
  6623                           
  6624                           ;LCD_src.c: 46:  RA3=0;
  6625  09D4  1185               	bcf	5,3	;volatile
  6626  09D5                     l2314:	
  6627                           
  6628                           ;LCD_src.c: 47:  delay_screen();
  6629  09D5  120A  158A  2173  120A  158A  	fcall	_delay_screen
  6630  09DA                     l2316:	
  6631                           
  6632                           ;LCD_src.c: 48:  RA3=1;
  6633  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  6634  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  6635  09DC  1585               	bsf	5,3	;volatile
  6636  09DD                     l2318:	
  6637                           
  6638                           ;LCD_src.c: 49:  PORTD=x;
  6639  09DD  0872               	movf	write_cmd@x,w
  6640  09DE  0088               	movwf	8	;volatile
  6641  09DF                     l2320:	
  6642                           
  6643                           ;LCD_src.c: 50:  delay_screen();
  6644  09DF  120A  158A  2173  120A  158A  	fcall	_delay_screen
  6645  09E4                     l2322:	
  6646                           
  6647                           ;LCD_src.c: 51:  RA3=0;
  6648  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  6649  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  6650  09E6  1185               	bcf	5,3	;volatile
  6651  09E7                     l126:	
  6652  09E7  0008               	return
  6653  09E8                     __end_of_write_cmd:	
  6654                           
  6655                           	psect	text29
  6656  09B6                     __ptext29:	
  6657 ;; *************** function _write_char *****************
  6658 ;; Defined at:
  6659 ;;		line 28 in file "LCD_src.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  x               1    wreg     unsigned char 
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;  x               1    2[COMMON] unsigned char 
  6664 ;;  i               2    0        int 
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6674 ;;      Params:         0       0       0       0       0
  6675 ;;      Locals:         1       0       0       0       0
  6676 ;;      Temps:          0       0       0       0       0
  6677 ;;      Totals:         1       0       0       0       0
  6678 ;;Total ram usage:        1 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    1
  6681 ;; This function calls:
  6682 ;;		_delay_screen
  6683 ;; This function is called by:
  6684 ;;		_main
  6685 ;;		_display_temp
  6686 ;;		_display_clock
  6687 ;;		_display_date
  6688 ;;		_thermometer_threshhold_settings
  6689 ;;		_time_settings
  6690 ;;		_date_settings
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           
  6695                           ;psect for function _write_char
  6696  09B6                     _write_char:	
  6697                           
  6698                           ;incstack = 0
  6699                           ; Regs used in _write_char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6700                           ;write_char@x stored from wreg
  6701  09B6  00F2               	movwf	write_char@x
  6702  09B7                     l2324:	
  6703                           
  6704                           ;LCD_src.c: 28: void write_char(char x);LCD_src.c: 29: {;LCD_src.c: 30:  int i;;LCD_src.
      +                          c: 31:  RA5=1;
  6705  09B7  1283               	bcf	3,5	;RP0=0, select bank0
  6706  09B8  1303               	bcf	3,6	;RP1=0, select bank0
  6707  09B9  1685               	bsf	5,5	;volatile
  6708                           
  6709                           ;LCD_src.c: 32:  RA4=0;
  6710  09BA  1205               	bcf	5,4	;volatile
  6711                           
  6712                           ;LCD_src.c: 33:  RA3=0;
  6713  09BB  1185               	bcf	5,3	;volatile
  6714  09BC                     l2326:	
  6715                           
  6716                           ;LCD_src.c: 34:  delay_screen();
  6717  09BC  120A  158A  2173  120A  158A  	fcall	_delay_screen
  6718  09C1                     l2328:	
  6719                           
  6720                           ;LCD_src.c: 35:  RA3=1;
  6721  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  6722  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  6723  09C3  1585               	bsf	5,3	;volatile
  6724  09C4                     l2330:	
  6725                           
  6726                           ;LCD_src.c: 36:  PORTD= x;
  6727  09C4  0872               	movf	write_char@x,w
  6728  09C5  0088               	movwf	8	;volatile
  6729  09C6                     l2332:	
  6730                           
  6731                           ;LCD_src.c: 37:  delay_screen();
  6732  09C6  120A  158A  2173  120A  158A  	fcall	_delay_screen
  6733  09CB                     l2334:	
  6734                           
  6735                           ;LCD_src.c: 38:  RA3=0;
  6736  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  6737  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  6738  09CD  1185               	bcf	5,3	;volatile
  6739  09CE                     l123:	
  6740  09CE  0008               	return
  6741  09CF                     __end_of_write_char:	
  6742                           
  6743                           	psect	text30
  6744  0973                     __ptext30:	
  6745 ;; *************** function _delay_screen *****************
  6746 ;; Defined at:
  6747 ;;		line 70 in file "LCD_src.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;		None
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  i               2    0[COMMON] int 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  1    wreg      void 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, btemp+1
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6761 ;;      Params:         0       0       0       0       0
  6762 ;;      Locals:         2       0       0       0       0
  6763 ;;      Temps:          0       0       0       0       0
  6764 ;;      Totals:         2       0       0       0       0
  6765 ;;Total ram usage:        2 bytes
  6766 ;; Hardware stack levels used:    1
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_lcd_init
  6771 ;;		_write_char
  6772 ;;		_write_cmd
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           
  6777                           ;psect for function _delay_screen
  6778  0973                     _delay_screen:	
  6779  0973                     l2258:	
  6780                           ;incstack = 0
  6781                           ; Regs used in _delay_screen: [wreg+status,2+btemp+1]
  6782                           
  6783                           
  6784                           ;LCD_src.c: 71:     int i;;LCD_src.c: 72:  for(i=0;i<5;i++);
  6785  0973  01F0               	clrf	delay_screen@i
  6786  0974  01F1               	clrf	delay_screen@i+1
  6787  0975                     l2264:	
  6788  0975  3001               	movlw	1
  6789  0976  07F0               	addwf	delay_screen@i,f
  6790  0977  1803               	skipnc
  6791  0978  0AF1               	incf	delay_screen@i+1,f
  6792  0979  3000               	movlw	0
  6793  097A  07F1               	addwf	delay_screen@i+1,f
  6794  097B                     l2266:	
  6795  097B  0871               	movf	delay_screen@i+1,w
  6796  097C  3A80               	xorlw	128
  6797  097D  00FF               	movwf	btemp+1
  6798  097E  3080               	movlw	128
  6799  097F  027F               	subwf	btemp+1,w
  6800  0980  1D03               	skipz
  6801  0981  2984               	goto	u1145
  6802  0982  3005               	movlw	5
  6803  0983  0270               	subwf	delay_screen@i,w
  6804  0984                     u1145:	
  6805  0984  1C03               	skipc
  6806  0985  2987               	goto	u1141
  6807  0986  2988               	goto	u1140
  6808  0987                     u1141:	
  6809  0987  2975               	goto	l2264
  6810  0988                     u1140:	
  6811  0988                     l136:	
  6812  0988  0008               	return
  6813  0989                     __end_of_delay_screen:	
  6814                           
  6815                           	psect	text31
  6816  0A61                     __ptext31:	
  6817 ;; *************** function _set_time *****************
  6818 ;; Defined at:
  6819 ;;		line 15 in file "clock_src.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;		None
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  i               2    5[COMMON] int 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6833 ;;      Params:         0       0       0       0       0
  6834 ;;      Locals:         2       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0
  6836 ;;      Totals:         2       0       0       0       0
  6837 ;;Total ram usage:        2 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    1
  6840 ;; This function calls:
  6841 ;;		_time_write_1
  6842 ;; This function is called by:
  6843 ;;		_main
  6844 ;;		_time_settings
  6845 ;;		_date_settings
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           
  6850                           ;psect for function _set_time
  6851  0A61                     _set_time:	
  6852  0A61                     l2296:	
  6853                           ;incstack = 0
  6854                           ; Regs used in _set_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6855                           
  6856                           
  6857                           ;clock_src.c: 17:    int i;;clock_src.c: 18:    RB5=1;
  6858  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  6859  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  6860  0A63  1686               	bsf	6,5	;volatile
  6861  0A64                     l2298:	
  6862                           
  6863                           ;clock_src.c: 19:    time_write_1(0xbe);
  6864  0A64  30BE               	movlw	190
  6865  0A65  120A  158A  220B  120A  158A  	fcall	_time_write_1
  6866  0A6A                     l2300:	
  6867                           
  6868                           ;clock_src.c: 20:    for(i=0;i<8;i++)
  6869  0A6A  01F5               	clrf	set_time@i
  6870  0A6B  01F6               	clrf	set_time@i+1
  6871  0A6C                     l2306:	
  6872                           
  6873                           ;clock_src.c: 21:      {;clock_src.c: 22:        time_write_1(table[i]);
  6874  0A6C  0875               	movf	set_time@i,w
  6875  0A6D  3E4E               	addlw	(low (_table| 0))& (0+255)
  6876  0A6E  0084               	movwf	4
  6877  0A6F  1383               	bcf	3,7	;select IRP bank0
  6878  0A70  0800               	movf	0,w
  6879  0A71  120A  158A  220B  120A  158A  	fcall	_time_write_1
  6880  0A76                     l2308:	
  6881                           
  6882                           ;clock_src.c: 23:      }
  6883  0A76  3001               	movlw	1
  6884  0A77  07F5               	addwf	set_time@i,f
  6885  0A78  1803               	skipnc
  6886  0A79  0AF6               	incf	set_time@i+1,f
  6887  0A7A  3000               	movlw	0
  6888  0A7B  07F6               	addwf	set_time@i+1,f
  6889  0A7C                     l2310:	
  6890  0A7C  0876               	movf	set_time@i+1,w
  6891  0A7D  3A80               	xorlw	128
  6892  0A7E  00FF               	movwf	btemp+1
  6893  0A7F  3080               	movlw	128
  6894  0A80  027F               	subwf	btemp+1,w
  6895  0A81  1D03               	skipz
  6896  0A82  2A85               	goto	u1195
  6897  0A83  3008               	movlw	8
  6898  0A84  0275               	subwf	set_time@i,w
  6899  0A85                     u1195:	
  6900  0A85  1C03               	skipc
  6901  0A86  2A88               	goto	u1191
  6902  0A87  2A89               	goto	u1190
  6903  0A88                     u1191:	
  6904  0A88  2A6C               	goto	l2306
  6905  0A89                     u1190:	
  6906  0A89                     l271:	
  6907                           
  6908                           ;clock_src.c: 24:    RB5=0;
  6909  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  6910  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  6911  0A8B  1286               	bcf	6,5	;volatile
  6912  0A8C                     l272:	
  6913  0A8C  0008               	return
  6914  0A8D                     __end_of_set_time:	
  6915                           
  6916                           	psect	text32
  6917  0A0B                     __ptext32:	
  6918 ;; *************** function _time_write_1 *****************
  6919 ;; Defined at:
  6920 ;;		line 115 in file "clock_src.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  time_tx         1    wreg     unsigned char 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  time_tx         1    4[COMMON] unsigned char 
  6925 ;;  j               2    2[COMMON] int 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, btemp+1
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6935 ;;      Params:         0       0       0       0       0
  6936 ;;      Locals:         3       0       0       0       0
  6937 ;;      Temps:          2       0       0       0       0
  6938 ;;      Totals:         5       0       0       0       0
  6939 ;;Total ram usage:        5 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_ds1302_init
  6945 ;;		_set_time
  6946 ;;		_get_time
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           
  6951                           ;psect for function _time_write_1
  6952  0A0B                     _time_write_1:	
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in _time_write_1: [wreg+status,2+status,0+btemp+1]
  6956                           ;time_write_1@time_tx stored from wreg
  6957  0A0B  00F4               	movwf	time_write_1@time_tx
  6958  0A0C                     l2274:	
  6959                           
  6960                           ;clock_src.c: 115: void time_write_1(unsigned char time_tx);clock_src.c: 116: {;clock_sr
      +                          c.c: 117:     int j;;clock_src.c: 118:     for(j=0;j<8;j++)
  6961  0A0C  01F2               	clrf	time_write_1@j
  6962  0A0D  01F3               	clrf	time_write_1@j+1
  6963  0A0E                     l288:	
  6964                           
  6965                           ;clock_src.c: 119:    {;clock_src.c: 120:         RB4=0;
  6966  0A0E  1283               	bcf	3,5	;RP0=0, select bank0
  6967  0A0F  1303               	bcf	3,6	;RP1=0, select bank0
  6968  0A10  1206               	bcf	6,4	;volatile
  6969                           
  6970                           ;clock_src.c: 121:         RB0=0;
  6971  0A11  1006               	bcf	6,0	;volatile
  6972                           
  6973                           ;clock_src.c: 122:         if(time_tx&0x01)
  6974  0A12  1C74               	btfss	time_write_1@time_tx,0
  6975  0A13  2A15               	goto	u1171
  6976  0A14  2A16               	goto	u1170
  6977  0A15                     u1171:	
  6978  0A15  2A17               	goto	l2282
  6979  0A16                     u1170:	
  6980  0A16                     l2280:	
  6981                           
  6982                           ;clock_src.c: 123:           {;clock_src.c: 124:             RB4=1;
  6983  0A16  1606               	bsf	6,4	;volatile
  6984  0A17                     l2282:	
  6985                           
  6986                           ;clock_src.c: 126:         time_tx=time_tx>>1;
  6987  0A17  0874               	movf	time_write_1@time_tx,w
  6988  0A18  00F0               	movwf	??_time_write_1
  6989  0A19  1003               	clrc
  6990  0A1A  0C70               	rrf	??_time_write_1,w
  6991  0A1B  00F1               	movwf	??_time_write_1+1
  6992  0A1C  0871               	movf	??_time_write_1+1,w
  6993  0A1D  00F4               	movwf	time_write_1@time_tx
  6994  0A1E                     l2284:	
  6995                           
  6996                           ;clock_src.c: 127:         RB0=1;
  6997  0A1E  1406               	bsf	6,0	;volatile
  6998  0A1F                     l2286:	
  6999                           
  7000                           ;clock_src.c: 128:     }
  7001  0A1F  3001               	movlw	1
  7002  0A20  07F2               	addwf	time_write_1@j,f
  7003  0A21  1803               	skipnc
  7004  0A22  0AF3               	incf	time_write_1@j+1,f
  7005  0A23  3000               	movlw	0
  7006  0A24  07F3               	addwf	time_write_1@j+1,f
  7007  0A25                     l2288:	
  7008  0A25  0873               	movf	time_write_1@j+1,w
  7009  0A26  3A80               	xorlw	128
  7010  0A27  00FF               	movwf	btemp+1
  7011  0A28  3080               	movlw	128
  7012  0A29  027F               	subwf	btemp+1,w
  7013  0A2A  1D03               	skipz
  7014  0A2B  2A2E               	goto	u1185
  7015  0A2C  3008               	movlw	8
  7016  0A2D  0272               	subwf	time_write_1@j,w
  7017  0A2E                     u1185:	
  7018  0A2E  1C03               	skipc
  7019  0A2F  2A31               	goto	u1181
  7020  0A30  2A32               	goto	u1180
  7021  0A31                     u1181:	
  7022  0A31  2A0E               	goto	l288
  7023  0A32                     u1180:	
  7024  0A32                     l289:	
  7025                           
  7026                           ;clock_src.c: 129:       RB0=0;
  7027  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0A33  1303               	bcf	3,6	;RP1=0, select bank0
  7029  0A34  1006               	bcf	6,0	;volatile
  7030  0A35                     l291:	
  7031  0A35  0008               	return
  7032  0A36                     __end_of_time_write_1:	
  7033                           
  7034                           	psect	text33
  7035  08FF                     __ptext33:	
  7036 ;; *************** function _modulus_func *****************
  7037 ;; Defined at:
  7038 ;;		line 5 in file "math_src.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  x               2    7[COMMON] int 
  7041 ;;  y               2    9[COMMON] int 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2    7[COMMON] int 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0, pclath, cstack
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7053 ;;      Params:         4       0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0
  7056 ;;      Totals:         4       0       0       0       0
  7057 ;;Total ram usage:        4 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    1
  7060 ;; This function calls:
  7061 ;;		___awmod
  7062 ;; This function is called by:
  7063 ;;		_thermometer_threshhold_settings
  7064 ;;		_time_settings
  7065 ;;		_date_settings
  7066 ;;		_incrementor
  7067 ;;		_decrementor
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           
  7072                           ;psect for function _modulus_func
  7073  08FF                     _modulus_func:	
  7074  08FF                     l2290:	
  7075                           ;incstack = 0
  7076                           ; Regs used in _modulus_func: [wreg+status,2+status,0+pclath+cstack]
  7077                           
  7078                           
  7079                           ;math_src.c: 6:     x = x % y;
  7080  08FF  087A               	movf	modulus_func@y+1,w
  7081  0900  00F1               	movwf	___awmod@divisor+1
  7082  0901  0879               	movf	modulus_func@y,w
  7083  0902  00F0               	movwf	___awmod@divisor
  7084  0903  0878               	movf	modulus_func@x+1,w
  7085  0904  00F3               	movwf	___awmod@dividend+1
  7086  0905  0877               	movf	modulus_func@x,w
  7087  0906  00F2               	movwf	___awmod@dividend
  7088  0907  120A  158A  2475  120A  158A  	fcall	___awmod
  7089  090C  0871               	movf	?___awmod+1,w
  7090  090D  00F8               	movwf	modulus_func@x+1
  7091  090E  0870               	movf	?___awmod,w
  7092  090F  00F7               	movwf	modulus_func@x
  7093  0910                     l2292:	
  7094  0910                     l480:	
  7095                           ;math_src.c: 7:     return x;
  7096                           
  7097  0910  0008               	return
  7098  0911                     __end_of_modulus_func:	
  7099                           
  7100                           	psect	text34
  7101  0C75                     __ptext34:	
  7102 ;; *************** function ___awmod *****************
  7103 ;; Defined at:
  7104 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  divisor         2    0[COMMON] int 
  7107 ;;  dividend        2    2[COMMON] int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  sign            1    6[COMMON] unsigned char 
  7110 ;;  counter         1    5[COMMON] unsigned char 
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  2    0[COMMON] int 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2, status,0
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7120 ;;      Params:         4       0       0       0       0
  7121 ;;      Locals:         2       0       0       0       0
  7122 ;;      Temps:          1       0       0       0       0
  7123 ;;      Totals:         7       0       0       0       0
  7124 ;;Total ram usage:        7 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_get_temp
  7130 ;;		_modulus_func
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           
  7135                           ;psect for function ___awmod
  7136  0C75                     ___awmod:	
  7137  0C75                     l2220:	
  7138                           ;incstack = 0
  7139                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7140                           
  7141  0C75  01F6               	clrf	___awmod@sign
  7142  0C76                     l2222:	
  7143  0C76  1FF3               	btfss	___awmod@dividend+1,7
  7144  0C77  2C79               	goto	u1051
  7145  0C78  2C7A               	goto	u1050
  7146  0C79                     u1051:	
  7147  0C79  2C81               	goto	l2228
  7148  0C7A                     u1050:	
  7149  0C7A                     l2224:	
  7150  0C7A  09F2               	comf	___awmod@dividend,f
  7151  0C7B  09F3               	comf	___awmod@dividend+1,f
  7152  0C7C  0AF2               	incf	___awmod@dividend,f
  7153  0C7D  1903               	skipnz
  7154  0C7E  0AF3               	incf	___awmod@dividend+1,f
  7155  0C7F                     l2226:	
  7156  0C7F  01F6               	clrf	___awmod@sign
  7157  0C80  0AF6               	incf	___awmod@sign,f
  7158  0C81                     l2228:	
  7159  0C81  1FF1               	btfss	___awmod@divisor+1,7
  7160  0C82  2C84               	goto	u1061
  7161  0C83  2C85               	goto	u1060
  7162  0C84                     u1061:	
  7163  0C84  2C8A               	goto	l2232
  7164  0C85                     u1060:	
  7165  0C85                     l2230:	
  7166  0C85  09F0               	comf	___awmod@divisor,f
  7167  0C86  09F1               	comf	___awmod@divisor+1,f
  7168  0C87  0AF0               	incf	___awmod@divisor,f
  7169  0C88  1903               	skipnz
  7170  0C89  0AF1               	incf	___awmod@divisor+1,f
  7171  0C8A                     l2232:	
  7172  0C8A  0870               	movf	___awmod@divisor,w
  7173  0C8B  0471               	iorwf	___awmod@divisor+1,w
  7174  0C8C  1903               	btfsc	3,2
  7175  0C8D  2C8F               	goto	u1071
  7176  0C8E  2C90               	goto	u1070
  7177  0C8F                     u1071:	
  7178  0C8F  2CBF               	goto	l2250
  7179  0C90                     u1070:	
  7180  0C90                     l2234:	
  7181  0C90  01F5               	clrf	___awmod@counter
  7182  0C91  0AF5               	incf	___awmod@counter,f
  7183  0C92  2C9E               	goto	l2240
  7184  0C93                     l2236:	
  7185  0C93  3001               	movlw	1
  7186  0C94                     u1085:	
  7187  0C94  1003               	clrc
  7188  0C95  0DF0               	rlf	___awmod@divisor,f
  7189  0C96  0DF1               	rlf	___awmod@divisor+1,f
  7190  0C97  3EFF               	addlw	-1
  7191  0C98  1D03               	skipz
  7192  0C99  2C94               	goto	u1085
  7193  0C9A                     l2238:	
  7194  0C9A  3001               	movlw	1
  7195  0C9B  00F4               	movwf	??___awmod
  7196  0C9C  0874               	movf	??___awmod,w
  7197  0C9D  07F5               	addwf	___awmod@counter,f
  7198  0C9E                     l2240:	
  7199  0C9E  1FF1               	btfss	___awmod@divisor+1,7
  7200  0C9F  2CA1               	goto	u1091
  7201  0CA0  2CA2               	goto	u1090
  7202  0CA1                     u1091:	
  7203  0CA1  2C93               	goto	l2236
  7204  0CA2                     u1090:	
  7205  0CA2                     l2242:	
  7206  0CA2  0871               	movf	___awmod@divisor+1,w
  7207  0CA3  0273               	subwf	___awmod@dividend+1,w
  7208  0CA4  1D03               	skipz
  7209  0CA5  2CA8               	goto	u1105
  7210  0CA6  0870               	movf	___awmod@divisor,w
  7211  0CA7  0272               	subwf	___awmod@dividend,w
  7212  0CA8                     u1105:	
  7213  0CA8  1C03               	skipc
  7214  0CA9  2CAB               	goto	u1101
  7215  0CAA  2CAC               	goto	u1100
  7216  0CAB                     u1101:	
  7217  0CAB  2CB2               	goto	l2246
  7218  0CAC                     u1100:	
  7219  0CAC                     l2244:	
  7220  0CAC  0870               	movf	___awmod@divisor,w
  7221  0CAD  02F2               	subwf	___awmod@dividend,f
  7222  0CAE  0871               	movf	___awmod@divisor+1,w
  7223  0CAF  1C03               	skipc
  7224  0CB0  03F3               	decf	___awmod@dividend+1,f
  7225  0CB1  02F3               	subwf	___awmod@dividend+1,f
  7226  0CB2                     l2246:	
  7227  0CB2  3001               	movlw	1
  7228  0CB3                     u1115:	
  7229  0CB3  1003               	clrc
  7230  0CB4  0CF1               	rrf	___awmod@divisor+1,f
  7231  0CB5  0CF0               	rrf	___awmod@divisor,f
  7232  0CB6  3EFF               	addlw	-1
  7233  0CB7  1D03               	skipz
  7234  0CB8  2CB3               	goto	u1115
  7235  0CB9                     l2248:	
  7236  0CB9  3001               	movlw	1
  7237  0CBA  02F5               	subwf	___awmod@counter,f
  7238  0CBB  1D03               	btfss	3,2
  7239  0CBC  2CBE               	goto	u1121
  7240  0CBD  2CBF               	goto	u1120
  7241  0CBE                     u1121:	
  7242  0CBE  2CA2               	goto	l2242
  7243  0CBF                     u1120:	
  7244  0CBF                     l2250:	
  7245  0CBF  0876               	movf	___awmod@sign,w
  7246  0CC0  1903               	btfsc	3,2
  7247  0CC1  2CC3               	goto	u1131
  7248  0CC2  2CC4               	goto	u1130
  7249  0CC3                     u1131:	
  7250  0CC3  2CC9               	goto	l2254
  7251  0CC4                     u1130:	
  7252  0CC4                     l2252:	
  7253  0CC4  09F2               	comf	___awmod@dividend,f
  7254  0CC5  09F3               	comf	___awmod@dividend+1,f
  7255  0CC6  0AF2               	incf	___awmod@dividend,f
  7256  0CC7  1903               	skipnz
  7257  0CC8  0AF3               	incf	___awmod@dividend+1,f
  7258  0CC9                     l2254:	
  7259  0CC9  0873               	movf	___awmod@dividend+1,w
  7260  0CCA  00F1               	movwf	?___awmod+1
  7261  0CCB  0872               	movf	___awmod@dividend,w
  7262  0CCC  00F0               	movwf	?___awmod
  7263  0CCD                     l748:	
  7264  0CCD  0008               	return
  7265  0CCE                     __end_of___awmod:	
  7266                           
  7267                           	psect	text35
  7268  095D                     __ptext35:	
  7269 ;; *************** function _button_delay *****************
  7270 ;; Defined at:
  7271 ;;		line 447 in file "Button_src.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;		None
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;  i               2    0[COMMON] int 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, btemp+1
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7285 ;;      Params:         0       0       0       0       0
  7286 ;;      Locals:         2       0       0       0       0
  7287 ;;      Temps:          0       0       0       0       0
  7288 ;;      Totals:         2       0       0       0       0
  7289 ;;Total ram usage:        2 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_thermometer_threshhold_settings
  7295 ;;		_time_settings
  7296 ;;		_date_settings
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           
  7301                           ;psect for function _button_delay
  7302  095D                     _button_delay:	
  7303  095D                     l2498:	
  7304                           ;incstack = 0
  7305                           ; Regs used in _button_delay: [wreg+status,2+btemp+1]
  7306                           
  7307                           
  7308                           ;Button_src.c: 448:     for(int i=0;i<10000;i++);
  7309  095D  01F0               	clrf	button_delay@i
  7310  095E  01F1               	clrf	button_delay@i+1
  7311  095F                     l2504:	
  7312  095F  3001               	movlw	1
  7313  0960  07F0               	addwf	button_delay@i,f
  7314  0961  1803               	skipnc
  7315  0962  0AF1               	incf	button_delay@i+1,f
  7316  0963  3000               	movlw	0
  7317  0964  07F1               	addwf	button_delay@i+1,f
  7318  0965                     l2506:	
  7319  0965  0871               	movf	button_delay@i+1,w
  7320  0966  3A80               	xorlw	128
  7321  0967  00FF               	movwf	btemp+1
  7322  0968  30A7               	movlw	167
  7323  0969  027F               	subwf	btemp+1,w
  7324  096A  1D03               	skipz
  7325  096B  296E               	goto	u1325
  7326  096C  3010               	movlw	16
  7327  096D  0270               	subwf	button_delay@i,w
  7328  096E                     u1325:	
  7329  096E  1C03               	skipc
  7330  096F  2971               	goto	u1321
  7331  0970  2972               	goto	u1320
  7332  0971                     u1321:	
  7333  0971  295F               	goto	l2504
  7334  0972                     u1320:	
  7335  0972                     l477:	
  7336  0972  0008               	return
  7337  0973                     __end_of_button_delay:	
  7338  007E                     btemp	set	126	;btemp
  7339  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor
    _incrementor->_modulus_func
    _decrementor->_modulus_func
    _lcd_init->_write_cmd
    _get_time->_time_read_1
    _get_time->_time_write_1
    _get_temp->___lwdiv
    _write_byte->_delay_temp
    _reset_temp->_delay_temp
    _read_byte->_delay_temp
    ___lwdiv->___lwmod
    _ds1302_init->_time_write_1
    _display_temp->_write_char
    _display_date->_write_char
    _display_clock->_write_char
    _date_settings->_modulus_func
    _write_cmd->_delay_screen
    _write_char->_delay_screen
    _set_time->_time_write_1
    _modulus_func->___awmod

Critical Paths under _main in BANK0

    _main->_thermometer_threshhold_settings
    _time_settings->_incrementor
    _thermometer_threshhold_settings->_decrementor
    _thermometer_threshhold_settings->_incrementor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20818
                      _date_settings
                      _display_clock
                       _display_date
                       _display_temp
                        _ds1302_init
                           _get_temp
                           _get_time
                               _init
                          _init_temp
                 _initialise_buttons
                           _lcd_init
                           _set_time
    _thermometer_threshhold_settings
                      _time_settings
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _time_settings                                        3     3      0    6178
                                              5 BANK0      3     3      0
                       _button_delay
                        _incrementor
                       _modulus_func
                           _set_time
                _time_date_delimiter
           _time_date_hex_terminator
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _time_date_hex_terminator                             4     3      1     143
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _time_date_delimiter                                  5     3      2    1154
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _thermometer_threshhold_settings                      5     5      0    7165
                                              5 BANK0      5     5      0
                       _button_delay
                        _decrementor
                        _incrementor
                       _modulus_func
                _set_beep_threshhold
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (2) _set_beep_threshhold                                  4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _incrementor                                          7     2      5    2657
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (2) _decrementor                                          7     2      5    2201
                                             11 COMMON     2     2      0
                                              0 BANK0      5     0      5
                       _modulus_func
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     114
                       _delay_screen
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _initialise_buttons                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_temp                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time                                             3     3      0     274
                                              5 COMMON     3     3      0
                        _time_read_1
                       _time_write_1
 ---------------------------------------------------------------------------------
 (2) _time_read_1                                          5     5      0     115
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _get_temp                                             6     6      0    3882
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                             _delay2
                          _read_byte
                         _reset_temp
                         _write_byte
 ---------------------------------------------------------------------------------
 (2) _write_byte                                           5     5      0     561
                                              4 COMMON     5     5      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _reset_temp                                           2     2      0     472
                                              4 COMMON     2     2      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (2) _read_byte                                            3     3      0     518
                                              4 COMMON     3     3      0
                         _delay_temp
 ---------------------------------------------------------------------------------
 (3) _delay_temp                                           4     3      1     447
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _delay2                                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _ds1302_init                                          0     0      0      91
                       _time_write_1
 ---------------------------------------------------------------------------------
 (1) _display_temp                                         0     0      0      68
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_date                                         4     4      0     252
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _display_clock                                        4     4      0     275
                                              3 COMMON     4     4      0
                         _write_char
 ---------------------------------------------------------------------------------
 (1) _date_settings                                        1     1      0    2224
                                             11 COMMON     1     1      0
                       _button_delay
                       _modulus_func
                           _set_time
                         _write_char
                          _write_cmd
 ---------------------------------------------------------------------------------
 (1) _write_cmd                                            3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (1) _write_char                                           3     3      0      68
                                              2 COMMON     1     1      0
                       _delay_screen
 ---------------------------------------------------------------------------------
 (2) _delay_screen                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_time                                             2     2      0     159
                                              5 COMMON     2     2      0
                       _time_write_1
 ---------------------------------------------------------------------------------
 (3) _time_write_1                                         5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _modulus_func                                         4     0      4    1883
                                              7 COMMON     4     0      4
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _button_delay                                         2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _date_settings
     _button_delay
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _display_clock
     _write_char
       _delay_screen
   _display_date
     _write_char
       _delay_screen
   _display_temp
     _write_char
       _delay_screen
   _ds1302_init
     _time_write_1
   _get_temp
     ___awdiv
     ___awmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _delay2
     _read_byte
       _delay_temp
     _reset_temp
       _delay_temp
     _write_byte
       _delay_temp
   _get_time
     _time_read_1
     _time_write_1
   _init
   _init_temp
   _initialise_buttons
   _lcd_init
     _delay_screen
     _write_cmd
       _delay_screen
   _set_time
     _time_write_1
   _thermometer_threshhold_settings
     _button_delay
     _decrementor
       _modulus_func
         ___awmod
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_beep_threshhold
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _time_settings
     _button_delay
     _incrementor
       _modulus_func
         ___awmod
     _modulus_func
       ___awmod
     _set_time
       _time_write_1
     _time_date_delimiter
     _time_date_hex_terminator
     _write_char
       _delay_screen
     _write_cmd
       _delay_screen
   _write_char
     _delay_screen
   _write_cmd
     _delay_screen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      44      12        0.0%
ABS                  0      0      44       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 02 09:59:26 2019

                                       _a 0039                                         _b 0038  
                                       _c 0037                                         _t 002F  
                                       _w 002D                                         _x 002B  
                                       _y 0029                                         _z 0027  
                                       pc 0002                                        _TX 0040  
                                      _TZ 0041                              ___awdiv@sign 0076  
                                      _ge 003E                                        _wd 0031  
                                      fsr 0004         __size_of_time_date_hex_terminator 0012  
               ?_time_date_hex_terminator 0070                       _set_beep_threshhold 09E8  
                           ?_display_date 0070                                       l120 002A  
                                     l202 0A60                                       l210 0BF5  
                                     l123 09CE                                       l117 08F0  
                                     l126 09E7                                       l206 0BBF  
                                     l136 0988                                       l224 0BBB  
                                     l216 0C30                                       l232 0FFF  
                                     l235 0912                                       l244 099E  
                                     l334 0A09                                       l271 0A89  
                                     l239 0922                                       l335 0A0A  
                                     l272 0A8C                                       l432 0425  
                                     l281 0E0C                                       l425 08FE  
                                     l291 0A35                                       l267 095C  
                                     l435 04F7                                       l451 06D6  
                                     l460 00A2                                       l276 0B0F  
                                     l452 07E5                                       l461 0110  
                                     l285 0D66                                       l277 0B12  
                                     l437 0496                                       l429 026C  
                                     l445 0508                                       l462 0126  
                                     l294 0B19                                       l438 04E9  
                                     l454 0771                                       l463 011B  
                                     l295 0B40                                       l199 08D7  
                                     l480 0910                                       l288 0A0E  
                                     l289 0A32                                       l297 0B47  
                                     l466 0142                                       l467 025B  
                                     l484 0AE4                                       l492 09B5  
                                     l477 0972                                       l735 0091  
                                     l488 0AB8                                       l496 0934  
                                     l748 0CCD                                       l854 0C74  
                                     l864 0B81                                       _RA0 0028  
                                     _RA2 002A                                       _RB0 0030  
                                     _RA3 002B                                       _RB1 0031  
                                     _RA4 002C                                       _RC0 0038  
                                     _RA5 002D                                       _RC1 0039  
                                     _RB4 0034                                       _RC2 003A  
                                     _RB5 0035                                       _RC3 003B  
                                     _RE0 0048                                       _RC4 003C  
                                     _RE1 0049                                       _RC6 003E  
                                     _RC7 003F                                       _THV 0042  
                           ?_display_temp 0070                                       _TLV 0043  
                                     _shi 003F                                       fsr0 0004  
                                     indf 0000                              ___awmod@sign 0076  
                            __CFG_FOSC$HS 0000                           ??_time_settings 0049  
                            __CFG_LVP$OFF 0000                                      l3000 0163  
                                    l3002 018D                                      l3010 01A6  
                                    l2220 0C75                                      l2300 0A6A  
                                    l3020 01AE                                      l3012 01A7  
                                    l3004 0193                                      l3100 0562  
                                    l2230 0C85                                      l2222 0C76  
                                    l2310 0A7C                                      l3030 01CB  
                                    l3022 01B4                                      l3014 01A8  
                                    l3006 0199                                      l1510 08EE  
                                    l3110 0589                                      l3102 0566  
                                    l2240 0C9E                                      l2232 0C8A  
                                    l2224 0C7A                                      l2320 09DF  
                                    l2312 09D0                                      l3040 01EF  
                                    l3032 01D1                                      l3024 01BA  
                                    l3016 01A9                                      l3008 019E  
                                    l2400 0B87                                      l1512 08EF  
                                    l1504 08E8                                      l3200 071B  
                                    l3120 05C3                                      l3112 05A2  
                                    l3104 056C                                      l2242 0CA2  
                                    l2234 0C90                                      l2250 0CBF  
                                    l2226 0C7F                                      l2306 0A6C  
                                    l2330 09C4                                      l2322 09E4  
                                    l2314 09D5                                      l3050 01FB  
                                    l3034 01D7                                      l3026 01BF  
                                    l3042 01F5                                      l3018 01AA  
                                    l2410 0B91                                      l2402 0B89  
                                    l1506 08EC                                      l3210 0731  
                                    l3202 0721                                      l3130 05DE  
                                    l3114 05B1                                      l3106 0570  
                                    l3122 05C8                                      l2252 0CC4  
                                    l2244 0CAC                                      l2236 0C93  
                                    l2228 0C81                                      l2308 0A76  
                                    l2332 09C6                                      l2324 09B7  
                                    l2316 09DA                                      l3060 0219  
                                    l3052 01FF                                      l3044 01F8  
                                    l3036 01DD                                      l3028 01C5  
                                    l2420 0B98                                      l2412 0B92  
                                    l2404 0B8C                                      l2340 0BCF  
                                    l1508 08ED                                      l3220 0747  
                                    l3212 0732                                      l3204 072E  
                                    l3140 0618                                      l3132 05F1  
                                    l3124 05CE                                      l3116 05B8  
                                    l3108 0576                                      l3300 0E85  
                                    l2254 0CC9                                      l2246 0CB2  
                                    l2238 0C9A                                      l2334 09CB  
                                    l2326 09BC                                      l2318 09DD  
                                    l3070 0237                                      l3062 021F  
                                    l3054 0206                                      l3046 01F9  
                                    l3038 01E3                                      l2270 0916  
                                    l2430 0B9D                                      l2422 0B99  
                                    l2414 0B93                                      l2406 0B8F  
                                    l2342 0BDC                                      l2350 0BF0  
                                    l2510 0A9E                                      l3230 0765  
                                    l3222 074D                                      l3214 0736  
                                    l3206 072F                                      l3150 0631  
                                    l3142 061C                                      l3134 060A  
                                    l3126 05D4                                      l3118 05BF  
                                    l3310 0EA2                                      l3302 0E8B  
                                    l2504 095F                                      l2248 0CB9  
                                    l2280 0A16                                      l2264 0975  
                                    l2328 09C1                                      l3080 024E  
                                    l3072 0243                                      l3064 0225  
                                    l3056 020B                                      l3048 01FA  
                                    l2600 0C6A                                      l2272 091C  
                                    l2440 0BB5                                      l2432 0BA3  
                                    l2424 0B9A                                      l2416 0B94  
                                    l2408 0B90                                      l2344 0BE2  
                                    l2336 0BBC                                      l2360 0C00  
                                    l2352 0BF7                                      l2512 0AA4  
                                    l2520 0932                                      l3240 077C  
                                    l3232 076B                                      l3224 0753  
                                    l3216 073C                                      l3208 0730  
                                    l3160 0690                                      l3152 0644  
                                    l3136 0610                                      l3128 05D8  
                                    l3144 0621                                      l3320 0EBF  
                                    l3312 0EA8                                      l3304 0E91  
                                    l2506 0965                                      l2290 08FF  
                                    l2282 0A17                                      l2274 0A0C  
                                    l2266 097B                                      l2258 0973  
                                    l3082 024F                                      l3066 022B  
                                    l3058 0213                                      l3074 0249  
                                    l2602 0C70                                      l2610 0B51  
                                    l2442 0BBA                                      l2434 0BA8  
                                    l2426 0B9B                                      l2418 0B95  
                                    l2346 0BE5                                      l2338 0BC5  
                                    l2370 0C09                                      l2362 0C03  
                                    l2514 0AB7                                      l2530 09B2  
                                    l2522 0933                                      l3250 07D1  
                                    l3242 07CB                                      l3234 0777  
                                    l3226 0759                                      l3218 0742  
                                    l3170 06B9                                      l3162 06A3  
                                    l3154 0657                                      l3146 0627  
                                    l3138 0611                                      l3090 0502  
                                    l3322 0EC4                                      l3314 0EAE  
                                    l3306 0E96                                      l2292 0910  
                                    l2284 0A1E                                      l3084 0253  
                                    l3076 024C                                      l3068 0231  
                                    l2540 0030                                      l2620 0B70  
                                    l2612 0B58                                      l2452 098B  
                                    l2268 0912                                      l2436 0BA9  
                                    l2428 0B9C                                      l2348 0BE6  
                                    l2380 0C1D                                      l2372 0C0A  
                                    l2364 0C06                                      l2700 0F80  
                                    l2508 0A8D                                      l2532 09B4  
                                    l3252 07D5                                      l3244 07CE  
                                    l3236 077A                                      l3228 075F  
                                    l3180 06C8                                      l3172 06BA  
                                    l3164 06B6                                      l3156 066A  
                                    l3148 062D                                      l3092 055C  
                                    l3324 0EC9                                      l3316 0EB4  
                                    l3308 0E9C                                      l3260 0E16  
                                    l2286 0A1F                                      l3086 0255  
                                    l3078 024D                                      l2630 094D  
                                    l2550 0044                                      l2542 0035  
                                    l2622 0B77                                      l2614 0B5C  
                                    l2606 0B48                                      l2454 0991  
                                    l2446 0989                                      l2438 0BB3  
                                    l2390 0C2B                                      l2382 0C20  
                                    l2374 0C0B                                      l2366 0C07  
                                    l2358 0BFB                                      l2710 0FAB  
                                    l2702 0F84                                      l2470 0B2C  
                                    l2526 09A0                                      l2518 0924  
                                    l3254 07DF                                      l3246 07CF  
                                    l3238 077B                                      l3182 06CA  
                                    l3174 06BE                                      l3166 06B7  
                                    l3158 067D                                      l3094 055F  
                                    l3318 0EBA                                      l3270 0E2F  
                                    l3262 0E1B                                      l2288 0A25  
                                    l2296 0A61                                      l2800 0DDD  
                                    l2632 0959                                      l2560 005A  
                                    l2552 0046                                      l2544 0037  
                                    l2536 002B                                      l2616 0B60  
                                    l2608 0B4E                                      l2624 0B7D  
                                    l2392 0B82                                      l2384 0C21  
                                    l2376 0C10                                      l2368 0C08  
                                    l2712 0FCB                                      l2704 0F8C  
                                    l2472 0B2D                                      l2464 0B1C  
                                    l2456 0B13                                      l2720 0AE8  
                                    l1496 08D1                                      l2640 000E  
                                    l2480 09E9                                      l2528 09AE  
                                    l3248 07D0                                      l3192 06DA  
                                    l3184 06CC                                      l3176 06C4  
                                    l3168 06B8                                      l3096 0560  
                                    l3088 04F8                                      l3280 0E4A  
                                    l3272 0E34                                      l3264 0E20  
                                    l3256 0E0D                                      l2298 0A64  
                                    l2802 0DE7                                      l2570 007D  
                                    l2562 005E                                      l2554 004C  
                                    l2546 003B                                      l2538 002C  
                                    l2618 0B6A                                      l2394 0B83  
                                    l2386 0C22                                      l2378 0C13  
                                    l2714 0FEB                                      l2706 0F90  
                                    l2474 0B33                                      l2466 0B23  
                                    l2458 0B14                                      l2730 0AFC  
                                    l2722 0AEE                                      l2650 0024  
                                    l2642 0011                                      l2634 0003  
                                    l2490 0ACA                                      l2482 09F9  
                                    l2810 025C                                      l3194 06ED  
                                    l3186 06CE                                      l3178 06C7  
                                    l3098 0561                                      l3290 0E67  
                                    l3282 0E50                                      l3274 0E39  
                                    l3266 0E25                                      l3258 0E11  
                                    l2804 0DF4                                      l2740 0CDC  
                                    l2628 0948                                      l2564 006F  
                                    l2556 004F                                      l2572 0083  
                                    l2548 0040                                      l2580 0C31  
                                    l2388 0C29                                      l2716 0FFE  
                                    l2708 0F98                                      l2476 0B46  
                                    l2468 0B27                                      l2732 0B02  
                                    l2660 08FC                                      l2652 08F1  
                                    l2644 0012                                      l2636 0006  
                                    l2492 0AD0                                      l2484 0A07  
                                    l2900 043B                                      l2820 0355  
                                    l2812 0266                                      l3196 06F1  
                                    l3188 06D0                                      l3292 0E6D  
                                    l3284 0E56                                      l3276 0E3E  
                                    l3268 0E2A                                      l2806 0DFB  
                                    l2750 0D09                                      l2742 0CE4  
                                    l2734 0A36                                      l2574 0088  
                                    l2566 0075                                      l2558 0056  
                                    l2590 0C47                                      l2582 0C33  
                                    l2670 0EEB                                      l2662 0ED2  
                                    l2718 0AE5                                      l2654 08F7  
                                    l2646 0018                                      l2638 0009  
                                    l2494 0AE3                                      l2910 0483  
                                    l2902 0442                                      l2830 035E  
                                    l2822 0356                                      l2814 0350  
                                    l3198 06F7                                      l3294 0E73  
                                    l3286 0E5C                                      l3278 0E44  
                                    l2808 0E05                                      l2760 0D37  
                                    l2752 0D0F                                      l2744 0CF1  
                                    l2736 0CCE                                      l2576 008D  
                                    l2568 0076                                      l2592 0C4B  
                                    l2584 0C39                                      l2680 0F10  
                                    l2672 0EF0                                      l2664 0ED5  
                                    l2728 0AF0                                      l2656 08FA  
                                    l2648 001E                                      l2488 0AB9  
                                    l2920 04A7                                      l2912 0492  
                                    l2904 0458                                      l2840 0364  
                                    l2832 0360                                      l2824 0358  
                                    l2816 0353                                      l3296 0E79  
                                    l3288 0E62                                      l2498 095D  
                                    l2770 0D5F                                      l2762 0D3E  
                                    l2754 0D19                                      l2746 0CF8  
                                    l2738 0CD4                                      l2594 0C5C  
                                    l2586 0C3C                                      l2690 0F66  
                                    l2682 0F13                                      l2674 0EF6  
                                    l2666 0EE0                                      l2658 08FB  
                                    l2930 04BF                                      l2922 04A8  
                                    l2914 049E                                      l2906 045F  
                                    l2850 0393                                      l2842 0368  
                                    l2834 0361                                      l2826 035A  
                                    l2818 0354                                      l3298 0E7F  
                                    l2780 0D8A                                      l2772 0D67  
                                    l2764 0D44                                      l2756 0D26  
                                    l2748 0D02                                      l2596 0C62  
                                    l2588 0C43                                      l2692 0F68  
                                    l2684 0F2D                                      l2676 0EFC  
                                    l2668 0EE5                                      l2940 04DD  
                                    l2932 04C5                                      l2924 04A9  
                                    l2908 0468                                      l2916 04A3  
                                    l2852 039A                                      l2844 036E  
                                    l2860 03CB                                      l2836 0362  
                                    l2828 035C                                      l2950 0092  
                                    l2790 0DB2                                      l2782 0D91  
                                    l2774 0D6D                                      l2766 0D4E  
                                    l2758 0D2D                                      l2598 0C63  
                                    l2694 0F6C                                      l2678 0F06  
                                    l2942 04E3                                      l2934 04CB  
                                    l2926 04AD                                      l2918 04A6  
                                    l2870 03D5                                      l2862 03CE  
                                    l2854 03A3                                      l2846 0376  
                                    l2838 0363                                      l2960 00FB  
                                    l2952 009C                                      l2792 0DBF  
                                    l2784 0D9B                                      l2776 0D75  
                                    l2768 0D55                                      l2696 0F74  
                                    l2688 0F3A                                      l2936 04D1  
                                    l2928 04B5                                      l2880 03F9  
                                    l2872 03DD                                      l2864 03CF  
                                    l2856 03BE                                      l2848 037D  
                                    l2970 0114                                      l2962 00FC  
                                    l2954 00F6                                      l2794 0DC6  
                                    l2786 0DA2                                      l2778 0D7D  
                                    l2698 0F78                                      l2946 04F1  
                                    l2938 04D7                                      l2882 03FF  
                                    l2874 03E7                                      l2866 03D0  
                                    l2858 03C2                                      l2980 012F  
                                    l2964 0100                                      l2956 00F9  
                                    l2796 0DD0                                      l2788 0DA8  
                                    l2892 040F                                      l2884 0405  
                                    l2876 03ED                                      l2868 03D1  
                                    l2990 013C                                      l2982 0130  
                                    l2974 011F                                      l2966 0106  
                                    l2958 00FA                                      l2798 0DD7  
                                    l2894 0417                                      l2886 040B  
                                    l2878 03F3                                      l2984 0131  
                                    l2968 010A                                      l2896 042D  
                                    l2994 0146                                      l2986 0132  
                                    l2978 012C                                      l2898 0433  
                                    l2996 0159                                      l2988 0136  
                                    l2998 015D                            ?_display_clock 0070  
                                    u1100 0CAC                                      u1101 0CAB  
                                    u1120 0CBF                                      u1200 0BE2  
                                    u2000 0618                                      u1121 0CBE  
                                    u1105 0CA8                                      u1201 0BE1  
                                    u2001 0617                                      u1130 0CC4  
                                    u1050 0C7A                                      u1210 0BF5  
                                    u2010 06BE                                      u1131 0CC3  
                                    u1115 0CB3                                      u1051 0C79  
                                    u1211 0BF4                                      u2011 06BD  
                                    u1060 0C85                                      u1140 0988  
                                    u1220 0C10                                      u1300 0A07  
                                    u2020 06F1                                      u1061 0C84  
                                    u1141 0987                                      u1221 0C0F  
                                    u1301 0A06                                      u2021 06F0  
                                    u1070 0C90                                      u1150 091C  
                                    u1230 0C30                                      u1310 0ACA  
                                    u2030 06F7                                      u1071 0C8F  
                                    u1151 091B                                      u1231 0C2F  
                                    u1311 0AC9                                      u2031 06F6  
                                    u1320 0972                                      u1400 005E  
                                    u1160 0922                                      u1240 0BA8  
                                    u2040 0736                                      u1321 0971  
                                    u1145 0984                                      u1401 005D  
                                    u1161 0921                                      u1241 0BA7  
                                    u2041 0735                                      u1090 0CA2  
                                    u1170 0A16                                      u1250 0BBA  
                                    u1330 0A9E                                      u2050 073C  
                                    u1091 0CA1                                      u1171 0A15  
                                    u1251 0BB9                                      u1331 0A9D  
                                    u2051 073B                                      u1180 0A32  
                                    u1420 006F                                      u1500 0C5C  
                                    u1260 099E                                      u1340 0932  
                                    u2060 07D5                                      u1325 096E  
                                    u1085 0C94                                      u1181 0A31  
                                    u1421 006E                                      u1501 0C5B  
                                    u1261 099D                                      u1341 0931  
                                    u2061 07D4                                      u1190 0A89  
                                    u1270 0B27                                      u1350 09AE  
                                    u1191 0A88                                      u1415 005F  
                                    u1271 0B26                                      u1351 09AD  
                                    u1440 0083                                      u1360 0030  
                                    u1520 0C70                                      u1280 0B40  
                                    u1185 0A2E                                      u1441 0082  
                                    u1425 006B                                      u1361 002F  
                                    u1521 0C6F                                      u1505 0C58  
                                    u1265 099A                                      u1281 0B3F  
                                    u1450 0088                                      u1370 003B  
                                    u1530 0B4E                                      u1290 09F9  
                                    u1195 0A85                                      u1451 0087  
                                    u1435 0077                                      u1371 003A  
                                    u1515 0C64                                      u1531 0B4D  
                                    u1291 09F8                                      u1380 004C  
                                    u1460 0C39                                      u1620 0F6C  
                                    u1700 0368                                      u1381 004B  
                                    u1461 0C38                                      u1621 0F6B  
                                    u1605 0F23                                      u1285 0B3C  
                                    u1701 0367                                      u1550 0B60  
                                    u1630 0F78                                      u1710 03D5  
                                    u1551 0B5F                                      u1631 0F77  
                                    u1615 0F30                                      u1711 03D4  
                                    u1800 0114                                      u1480 0C4B  
                                    u1560 0B6A                                      u1640 0F84  
                                    u1720 0424                                      u1801 0113  
                                    u1481 0C4A                                      u1561 0B69  
                                    u1545 0B52                                      u1641 0F83  
                                    u1721 0423                                      u1810 011A  
                                    u1650 0F90                                      u1730 042D  
                                    u1811 0119                                      u1395 0050  
                                    u1475 0C3D                                      u1651 0F8F  
                                    u1731 042C                                      u1900 0206  
                                    u1820 011F                                      u1580 0B7D  
                                    u1660 0B0F                                      u1740 0492  
                                    u1901 0205                                      u1821 011E  
                                    u1581 0B7C                                      u1565 0B66  
                                    u1661 0B0E                                      u1741 0491  
                                    u1725 0420                                      u1910 0253  
                                    u1830 0125                                      u1670 0CD4  
                                    u1750 04AD                                      u1911 0252  
                                    u1831 0124                                      u1671 0CD3  
                                    u1495 0C4C                                      u1575 0B71  
                                    u1751 04AC                                      u1840 0136  
                                    u1680 0D6D                                      u1760 04F1  
                                    u1920 0502                                      u1841 0135  
                                    u1681 0D6C                                      u1665 0B0B  
                                    u1761 04F0                                      u1921 0501  
                                    u1850 015D                                      u1770 009C  
                                    u1690 0266                                      u1930 0566  
                                    u1851 015C                                      u1771 009B  
                                    u1595 0F18                                      u1691 0265  
                                    u1931 0565                                      u1860 0163  
                                    u1780 0100                                      u1940 056C  
                                    u1861 0162                                      u1781 00FF  
                                    u1941 056B                                      u1870 01AE  
                                    u1790 0106                                      u1950 05B8  
                                    u1871 01AD                                      u1791 0105  
                                    u1951 05B7                                      u1880 01B4  
                                    u1960 05BF                                      u1881 01B3  
                                    u1961 05BE                                      u1890 01FF  
                                    u1970 05CE                                      u1891 01FE  
                                    u1971 05CD                                      u1980 05D4  
                                    u1981 05D3                                      u1990 0610  
                                    u1991 060F               time_date_hex_terminator@val 0073  
                    ?_set_beep_threshhold 0070                                      _main 0E0D  
                                    _init 08E8                                      _var1 0035  
                                    _var2 0034                                      btemp 007E  
         time_date_hex_terminator@limiter 0070                             write_byte@val 0077  
                                    start 0000                    time_date_delimiter@hex 0070  
                  time_date_delimiter@val 0074                              ?_incrementor 0044  
             __size_of_initialise_buttons 000E                            ??_display_date 0073  
                                   ?_main 0070                            ??_display_temp 0073  
                                   ?_init 0070                           __end_of___awdiv 0092  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0CCE  
                         ___awdiv@divisor 0070                      __end_of_delay_screen 0989  
                         __end_of___lwdiv 0C75                           __end_of___lwmod 0B82  
                         ___awdiv@counter 0075                                     _PORTD 0008  
                                   _PORTE 0009                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                                   _TRISD 0088                                     _TRISE 0089  
                           __CFG_PWRTE$ON 0000                                     _table 004E  
                          write_byte@temp 0076                            __CFG_BOREN$OFF 0000  
                                   pclath 000A                     ??_set_beep_threshhold 0071  
                                   status 0003                      __size_of_decrementor 002C  
                                   wtemp0 007E                             ??_ds1302_init 0075  
                         __initialization 07E6                              __end_of_main 0ED2  
                            __end_of_init 08F1                     __end_of_date_settings 025C  
                                  ??_main 007E                                    ??_init 0070  
                    incrementor@lower_val 0046                           ??_display_clock 0073  
                                  _ADCON1 009F                          ___awdiv@dividend 0072  
                                  _TRISA0 0428                                    _TRISB4 0434  
                                  _TRISE0 0448                             ?_button_delay 0070  
                    incrementor@upper_val 0044                          __end_of_lcd_init 002B  
                        __end_of_get_temp 1000                          __end_of_get_time 0B13  
                                  _baifen 003C                                 ??___awdiv 0074  
                               ??___awmod 0074                                    _delay2 0989  
                               ??___lwdiv 007A                                 ??___lwmod 0074  
                     __end_of_ds1302_init 095D                                    _table1 0020  
                        ___awdiv@quotient 0077                           ___awmod@divisor 0070  
                                  _shifen 003D                                    _wanfen 003A  
                         ___awmod@counter 0075                              ?_time_read_1 0070  
                     time_write_1@time_tx 0074                             display_date@i 0075  
                        __end_of_set_time 0A8D                        reset_temp@presence 0075  
                 __end_of__initialization 07FC                            ??_button_delay 0070  
            __size_of_time_date_delimiter 0017                      __end_of_display_date 0D67  
                    __end_of_display_temp 0A61                            __pcstackCOMMON 0070  
                            __pidataBANK0 08E0                     __size_of_delay_screen 0016  
                    __size_of_incrementor 002C                                __pbssBANK0 0020  
                            _delay_screen 0973                        __size_of_init_temp 0007  
                      __size_of_read_byte 003A                               _ds1302_init 0948  
                              _delay_temp 0911                                __pmaintext 0E0D  
                                 ?_delay2 0070                             ?_modulus_func 0077  
                      time_read_1@time_rx 0074                              incrementor@z 0048  
                               ?_lcd_init 0070                                 ?_get_temp 0070  
                   __end_of_time_settings 07E6                                 ?_get_time 0070  
                      __size_of_write_cmd 0019                                 ?_set_time 0070  
                          ??_modulus_func 007B                __end_of_initialise_buttons 08FF  
                _time_date_hex_terminator 0923                                   ___awdiv 002B  
                                 ___awmod 0C75                           __size_of_delay2 0016  
                                 ___lwdiv 0C31                                   ___lwmod 0B48  
                                 __ptext1 04F8                                   __ptext2 0923  
                                 __ptext3 099F                                   __ptext4 025C  
                                 __ptext5 09E8                                   __ptext6 0AB9  
                                 __ptext7 0A8D                                   __ptext8 0003  
                                 __ptext9 08F1                      __end_of_button_delay 0973  
                                 delay2@i 0070                         __end_of_init_temp 08D8  
                        ___awmod@dividend 0072                         __end_of_read_byte 0BBC  
                                 _qianfen 003B                      __size_of_time_read_1 0035  
             __end_of_set_beep_threshhold 0A0B                     __size_of_display_date 0099  
                                 clrloop0 08D9                                ??_lcd_init 0073  
                           ??_decrementor 007B                                ??_get_temp 0044  
                              ??_get_time 0075                     __size_of_display_temp 002B  
                    end_of_initialization 07FC                            display_clock@i 0075  
                           ?_time_write_1 0070                               ?_delay_temp 0070  
                              _reset_temp 0BBC                                ??_set_time 0075  
                     _time_date_delimiter 099F                      decrementor@lower_val 0044  
                            _display_date 0CCE                              _display_temp 0A36  
                       __end_of_write_cmd 09E8                             modulus_func@x 0077  
                           modulus_func@y 0079                     __end_of_display_clock 0E0D  
                  __size_of_date_settings 01CA                      ?_time_date_delimiter 0070  
                    decrementor@upper_val 0046                            ??_time_write_1 0070  
                     __end_of_decrementor 0AB9                            __end_of_delay2 099F  
                              _write_char 09B6                                _write_byte 0BF6  
                     start_initialization 07E6                             delay_screen@i 0070  
                     __size_of_delay_temp 0012                      __end_of_modulus_func 0911  
                   ??_time_date_delimiter 0072                              ?_ds1302_init 0070  
                             ?_reset_temp 0070                             ??_incrementor 007B  
                              init_fetch0 0935                                  ??_delay2 0070  
                   __size_of_button_delay 0016                             _date_settings 0092  
                             __pdataBANK0 004E                                read_byte@i 0076  
                              read_byte@j 0033                                 ___latbits 0002  
                           __pcstackBANK0 0044                               _decrementor 0A8D  
                    set_beep_threshhold@x 0073                      set_beep_threshhold@y 0070  
                       __size_of_lcd_init 0028                         __size_of_get_temp 012E  
                       __size_of_get_time 002E                ??_time_date_hex_terminator 0071  
                            _button_delay 095D                          ___lwdiv@dividend 0078  
                                ?___awdiv 0070                            ?_date_settings 0070  
                                ?___awmod 0070                                  ?___lwdiv 0076  
                                ?___lwmod 0070                         __size_of_set_time 002C  
                             ?_write_char 0070                               ?_write_byte 0070  
                     __end_of_incrementor 0AE5                      __end_of_time_write_1 0A36  
                      _initialise_buttons 08F1                       __size_of_reset_temp 003A  
                        ___lwdiv@quotient 007B                                 _init_temp 08D1  
                               _read_byte 0B82                              decrementor@z 0048  
                     ?_initialise_buttons 0070                                 clear_ram0 08D8  
                            ??_delay_temp 0071   __end_of_thermometer_threshhold_settings 04F8  
__size_of_thermometer_threshhold_settings 029C         ??_thermometer_threshhold_settings 0049  
        ?_thermometer_threshhold_settings 0070           _thermometer_threshhold_settings 025C  
                    ??_initialise_buttons 0070                    __size_of_time_settings 02EE  
        thermometer_threshhold_settings@i 004C                             ??_time_read_1 0070  
                             write_char@x 0072                     __size_of_modulus_func 0012  
                               get_time@i 0076                               write_byte@i 0078  
                      __end_of_delay_temp 0923                                 _write_cmd 09CF  
                              ?_init_temp 0070                                ?_read_byte 0070  
                     __size_of_write_char 0019              __size_of_set_beep_threshhold 0023  
                     __size_of_write_byte 003B                           ??_date_settings 007B  
                    __size_of_ds1302_init 0015                               _incrementor 0AB9  
                            _modulus_func 08FF                          __size_of___awdiv 0067  
                        __size_of___awmod 0059                          __size_of___lwdiv 0044  
                        __size_of___lwmod 003A                           ___lwdiv@divisor 0076  
                         ___lwdiv@counter 007D                                  __ptext10 08D1  
                                __ptext11 08E8                                  __ptext20 0B48  
                                __ptext12 0AE5                                  __ptext21 0C31  
                                __ptext13 0B13                                  __ptext30 0973  
                                __ptext22 002B                                  __ptext14 0ED2  
                                __ptext31 0A61                                  __ptext23 0948  
                                __ptext15 0BF6                                  __ptext32 0A0B  
                                __ptext24 0A36                                  __ptext16 0BBC  
                                __ptext33 08FF                                  __ptext25 0CCE  
                                __ptext17 0B82                                  __ptext34 0C75  
                                __ptext26 0D67                                  __ptext18 0911  
                                __ptext35 095D                                  __ptext27 0092  
                                __ptext19 0989                                  __ptext28 09CF  
                                __ptext29 09B6                       __end_of_time_read_1 0B48  
                              ?_write_cmd 0070                                  _lcd_init 0003  
                                _get_temp 0ED2                                  _get_time 0AE5  
                           _time_settings 04F8          __end_of_time_date_hex_terminator 0935  
                           __size_of_main 00C5                             __size_of_init 0009  
                           ?_delay_screen 0070                               _hrs_limiter 0036  
                               set_time@i 0075                              ??_reset_temp 0074  
                                _set_time 0A61                time_date_delimiter@limiter 0071  
                              write_cmd@x 0072                     __size_of_time_write_1 002B  
                  __size_of_display_clock 00A6                               delay_temp@x 0072  
                             delay_temp@y 0070                               delay_temp@z 0073  
                          read_byte@value 0075               __end_of_time_date_delimiter 09B6  
                                init_ram0 0939                             button_delay@i 0070  
                             ??_init_temp 0070                        __end_of_reset_temp 0BF6  
                             ??_read_byte 0074                            ?_time_settings 0070  
                            ?_decrementor 0044                          ___lwmod@dividend 0072  
                          ??_delay_screen 0070                              _time_write_1 0A0B  
                            ??_write_char 0072                              ??_write_byte 0074  
                              _OPTION_REG 0081                               _time_read_1 0B13  
                            time_read_1@j 0072                           ___lwmod@divisor 0070  
                         ___lwmod@counter 0075                               ??_write_cmd 0072  
                           _display_clock 0D67                             time_write_1@j 0072  
                      __end_of_write_char 09CF                        __end_of_write_byte 0C31  
